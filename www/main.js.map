{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_config/_animations/index.ts","webpack:///./src/app/_config/_const-general.ts","webpack:///./src/app/_config/_helpers.ts","webpack:///./src/app/_config/api.end-points.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/detail-adviser-admin/detail-adviser-admin.component.html","webpack:///./src/app/components/admin/detail-adviser-admin/detail-adviser-admin.component.scss","webpack:///./src/app/components/admin/detail-adviser-admin/detail-adviser-admin.component.ts","webpack:///./src/app/components/admin/detail-build-admin/detail-build-admin.component.html","webpack:///./src/app/components/admin/detail-build-admin/detail-build-admin.component.scss","webpack:///./src/app/components/admin/detail-build-admin/detail-build-admin.component.ts","webpack:///./src/app/components/admin/detail-buyer-admin/detail-buyer-admin.component.html","webpack:///./src/app/components/admin/detail-buyer-admin/detail-buyer-admin.component.scss","webpack:///./src/app/components/admin/detail-buyer-admin/detail-buyer-admin.component.ts","webpack:///./src/app/components/admin/detail-goal-admin/detail-goal-admin.component.html","webpack:///./src/app/components/admin/detail-goal-admin/detail-goal-admin.component.scss","webpack:///./src/app/components/admin/detail-goal-admin/detail-goal-admin.component.ts","webpack:///./src/app/components/admin/detail-prop-admin/detail-prop-admin.component.html","webpack:///./src/app/components/admin/detail-prop-admin/detail-prop-admin.component.scss","webpack:///./src/app/components/admin/detail-prop-admin/detail-prop-admin.component.ts","webpack:///./src/app/components/admin/detail-salesprop-admin/detail-salesprop-admin.component.html","webpack:///./src/app/components/admin/detail-salesprop-admin/detail-salesprop-admin.component.scss","webpack:///./src/app/components/admin/detail-salesprop-admin/detail-salesprop-admin.component.ts","webpack:///./src/app/components/admin/detail-seller-admin/detail-seller-admin.component.html","webpack:///./src/app/components/admin/detail-seller-admin/detail-seller-admin.component.scss","webpack:///./src/app/components/admin/detail-seller-admin/detail-seller-admin.component.ts","webpack:///./src/app/components/admin/list-adviser-admin/list-adviser-admin.component.html","webpack:///./src/app/components/admin/list-adviser-admin/list-adviser-admin.component.scss","webpack:///./src/app/components/admin/list-adviser-admin/list-adviser-admin.component.ts","webpack:///./src/app/components/admin/list-build-admin/list-build-admin.component.html","webpack:///./src/app/components/admin/list-build-admin/list-build-admin.component.scss","webpack:///./src/app/components/admin/list-build-admin/list-build-admin.component.ts","webpack:///./src/app/components/admin/list-buyer-admin/list-buyer-admin.component.html","webpack:///./src/app/components/admin/list-buyer-admin/list-buyer-admin.component.scss","webpack:///./src/app/components/admin/list-buyer-admin/list-buyer-admin.component.ts","webpack:///./src/app/components/admin/list-credit-admin/list-credit-admin.component.html","webpack:///./src/app/components/admin/list-credit-admin/list-credit-admin.component.scss","webpack:///./src/app/components/admin/list-credit-admin/list-credit-admin.component.ts","webpack:///./src/app/components/admin/list-goals/list-goals.component.html","webpack:///./src/app/components/admin/list-goals/list-goals.component.scss","webpack:///./src/app/components/admin/list-goals/list-goals.component.ts","webpack:///./src/app/components/admin/list-maker-admin/list-maker-admin.component.html","webpack:///./src/app/components/admin/list-maker-admin/list-maker-admin.component.scss","webpack:///./src/app/components/admin/list-maker-admin/list-maker-admin.component.ts","webpack:///./src/app/components/admin/list-oferts-admin/list-oferts-admin.component.html","webpack:///./src/app/components/admin/list-oferts-admin/list-oferts-admin.component.scss","webpack:///./src/app/components/admin/list-oferts-admin/list-oferts-admin.component.ts","webpack:///./src/app/components/admin/list-office-admin/list-office-admin.component.html","webpack:///./src/app/components/admin/list-office-admin/list-office-admin.component.scss","webpack:///./src/app/components/admin/list-office-admin/list-office-admin.component.ts","webpack:///./src/app/components/admin/list-prop-admin/list-prop-admin.component.html","webpack:///./src/app/components/admin/list-prop-admin/list-prop-admin.component.scss","webpack:///./src/app/components/admin/list-prop-admin/list-prop-admin.component.ts","webpack:///./src/app/components/admin/list-sales-admin/list-sales-admin.component.html","webpack:///./src/app/components/admin/list-sales-admin/list-sales-admin.component.scss","webpack:///./src/app/components/admin/list-sales-admin/list-sales-admin.component.ts","webpack:///./src/app/components/admin/list-salesprop-admin/list-salesprop-admin.component.html","webpack:///./src/app/components/admin/list-salesprop-admin/list-salesprop-admin.component.scss","webpack:///./src/app/components/admin/list-salesprop-admin/list-salesprop-admin.component.ts","webpack:///./src/app/components/admin/list-schedule-admin/list-schedule-admin.component.html","webpack:///./src/app/components/admin/list-schedule-admin/list-schedule-admin.component.scss","webpack:///./src/app/components/admin/list-schedule-admin/list-schedule-admin.component.ts","webpack:///./src/app/components/admin/list-seller-admin/list-seller-admin.component.html","webpack:///./src/app/components/admin/list-seller-admin/list-seller-admin.component.scss","webpack:///./src/app/components/admin/list-seller-admin/list-seller-admin.component.ts","webpack:///./src/app/components/admin/main-admin/main-admin.component.html","webpack:///./src/app/components/admin/main-admin/main-admin.component.scss","webpack:///./src/app/components/admin/main-admin/main-admin.component.ts","webpack:///./src/app/components/admin/simulate-search-admin/simulate-search-admin.component.html","webpack:///./src/app/components/admin/simulate-search-admin/simulate-search-admin.component.scss","webpack:///./src/app/components/admin/simulate-search-admin/simulate-search-admin.component.ts","webpack:///./src/app/components/adviser/new-edit-adviser/new-edit-adviser.component.html","webpack:///./src/app/components/adviser/new-edit-adviser/new-edit-adviser.component.scss","webpack:///./src/app/components/adviser/new-edit-adviser/new-edit-adviser.component.ts","webpack:///./src/app/components/build/new-edit-build/new-edit-build.component.html","webpack:///./src/app/components/build/new-edit-build/new-edit-build.component.scss","webpack:///./src/app/components/build/new-edit-build/new-edit-build.component.ts","webpack:///./src/app/components/buyer/calendar-buyer/calendar-buyer.component.html","webpack:///./src/app/components/buyer/calendar-buyer/calendar-buyer.component.scss","webpack:///./src/app/components/buyer/calendar-buyer/calendar-buyer.component.ts","webpack:///./src/app/components/buyer/credit-event-buyer/credit-event-buyer.component.html","webpack:///./src/app/components/buyer/credit-event-buyer/credit-event-buyer.component.scss","webpack:///./src/app/components/buyer/credit-event-buyer/credit-event-buyer.component.ts","webpack:///./src/app/components/buyer/detail-prop-buyer/detail-prop-buyer.component.html","webpack:///./src/app/components/buyer/detail-prop-buyer/detail-prop-buyer.component.scss","webpack:///./src/app/components/buyer/detail-prop-buyer/detail-prop-buyer.component.ts","webpack:///./src/app/components/buyer/event-detail-buyer/event-detail-buyer.component.html","webpack:///./src/app/components/buyer/event-detail-buyer/event-detail-buyer.component.scss","webpack:///./src/app/components/buyer/event-detail-buyer/event-detail-buyer.component.ts","webpack:///./src/app/components/buyer/inter-prop-buyer/inter-prop-buyer.component.html","webpack:///./src/app/components/buyer/inter-prop-buyer/inter-prop-buyer.component.scss","webpack:///./src/app/components/buyer/inter-prop-buyer/inter-prop-buyer.component.ts","webpack:///./src/app/components/buyer/list-prop-buyer/list-prop-buyer.component.html","webpack:///./src/app/components/buyer/list-prop-buyer/list-prop-buyer.component.scss","webpack:///./src/app/components/buyer/list-prop-buyer/list-prop-buyer.component.ts","webpack:///./src/app/components/buyer/new-buyer/new-buyer.component.html","webpack:///./src/app/components/buyer/new-buyer/new-buyer.component.scss","webpack:///./src/app/components/buyer/new-buyer/new-buyer.component.ts","webpack:///./src/app/components/buyer/ofert-buyer/ofert-buyer.component.html","webpack:///./src/app/components/buyer/ofert-buyer/ofert-buyer.component.scss","webpack:///./src/app/components/buyer/ofert-buyer/ofert-buyer.component.ts","webpack:///./src/app/components/credit/new-edit-credit/new-edit-credit.component.html","webpack:///./src/app/components/credit/new-edit-credit/new-edit-credit.component.scss","webpack:///./src/app/components/credit/new-edit-credit/new-edit-credit.component.ts","webpack:///./src/app/components/general/bar-line/bar-line.component.html","webpack:///./src/app/components/general/bar-line/bar-line.component.scss","webpack:///./src/app/components/general/bar-line/bar-line.component.ts","webpack:///./src/app/components/general/dialog-general/dialog-general.component.html","webpack:///./src/app/components/general/dialog-general/dialog-general.component.scss","webpack:///./src/app/components/general/dialog-general/dialog-general.component.ts","webpack:///./src/app/components/general/filter-adviser/filter-adviser.component.html","webpack:///./src/app/components/general/filter-adviser/filter-adviser.component.scss","webpack:///./src/app/components/general/filter-adviser/filter-adviser.component.ts","webpack:///./src/app/components/general/filter-build/filter-build.component.html","webpack:///./src/app/components/general/filter-build/filter-build.component.scss","webpack:///./src/app/components/general/filter-build/filter-build.component.ts","webpack:///./src/app/components/general/filter-maker/filter-maker.component.html","webpack:///./src/app/components/general/filter-maker/filter-maker.component.scss","webpack:///./src/app/components/general/filter-maker/filter-maker.component.ts","webpack:///./src/app/components/general/filter-seller/filter-seller.component.html","webpack:///./src/app/components/general/filter-seller/filter-seller.component.scss","webpack:///./src/app/components/general/filter-seller/filter-seller.component.ts","webpack:///./src/app/components/general/form-str-list/form-str-list.component.html","webpack:///./src/app/components/general/form-str-list/form-str-list.component.scss","webpack:///./src/app/components/general/form-str-list/form-str-list.component.ts","webpack:///./src/app/components/general/general-calendar/general-calendar.component.html","webpack:///./src/app/components/general/general-calendar/general-calendar.component.scss","webpack:///./src/app/components/general/general-calendar/general-calendar.component.ts","webpack:///./src/app/components/general/general-filter-buyer/general-filter-buyer.component.html","webpack:///./src/app/components/general/general-filter-buyer/general-filter-buyer.component.scss","webpack:///./src/app/components/general/general-filter-buyer/general-filter-buyer.component.ts","webpack:///./src/app/components/general/general-filters/general-filters.component.html","webpack:///./src/app/components/general/general-filters/general-filters.component.scss","webpack:///./src/app/components/general/general-filters/general-filters.component.ts","webpack:///./src/app/components/general/general-skeleton/general-skeleton.component.html","webpack:///./src/app/components/general/general-skeleton/general-skeleton.component.scss","webpack:///./src/app/components/general/general-skeleton/general-skeleton.component.ts","webpack:///./src/app/components/general/general-table/general-table.component.html","webpack:///./src/app/components/general/general-table/general-table.component.scss","webpack:///./src/app/components/general/general-table/general-table.component.ts","webpack:///./src/app/components/general/goal-progress/goal-progress.component.html","webpack:///./src/app/components/general/goal-progress/goal-progress.component.scss","webpack:///./src/app/components/general/goal-progress/goal-progress.component.ts","webpack:///./src/app/components/general/refre/refre.component.html","webpack:///./src/app/components/general/refre/refre.component.scss","webpack:///./src/app/components/general/refre/refre.component.ts","webpack:///./src/app/components/goals/new-edit-goal/new-edit-goal.component.html","webpack:///./src/app/components/goals/new-edit-goal/new-edit-goal.component.scss","webpack:///./src/app/components/goals/new-edit-goal/new-edit-goal.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/login/user-select/user-select.component.html","webpack:///./src/app/components/login/user-select/user-select.component.scss","webpack:///./src/app/components/login/user-select/user-select.component.ts","webpack:///./src/app/components/maker/new-edit-maker/new-edit-maker.component.html","webpack:///./src/app/components/maker/new-edit-maker/new-edit-maker.component.scss","webpack:///./src/app/components/maker/new-edit-maker/new-edit-maker.component.ts","webpack:///./src/app/components/oferts/new-edit-ofert/new-edit-ofert.component.html","webpack:///./src/app/components/oferts/new-edit-ofert/new-edit-ofert.component.scss","webpack:///./src/app/components/oferts/new-edit-ofert/new-edit-ofert.component.ts","webpack:///./src/app/components/office/new-edit-office/new-edit-office.component.html","webpack:///./src/app/components/office/new-edit-office/new-edit-office.component.scss","webpack:///./src/app/components/office/new-edit-office/new-edit-office.component.ts","webpack:///./src/app/components/prop/new-edit-prop/new-edit-prop.component.html","webpack:///./src/app/components/prop/new-edit-prop/new-edit-prop.component.scss","webpack:///./src/app/components/prop/new-edit-prop/new-edit-prop.component.ts","webpack:///./src/app/components/schedule/new-edit-schedule/new-edit-schedule.component.html","webpack:///./src/app/components/schedule/new-edit-schedule/new-edit-schedule.component.scss","webpack:///./src/app/components/schedule/new-edit-schedule/new-edit-schedule.component.ts","webpack:///./src/app/components/schedule/personal-schedule/personal-schedule.component.html","webpack:///./src/app/components/schedule/personal-schedule/personal-schedule.component.scss","webpack:///./src/app/components/schedule/personal-schedule/personal-schedule.component.ts","webpack:///./src/app/components/seller/new-edit-seller/new-edit-seller.component.html","webpack:///./src/app/components/seller/new-edit-seller/new-edit-seller.component.scss","webpack:///./src/app/components/seller/new-edit-seller/new-edit-seller.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/administrator.service.ts","webpack:///./src/app/services/adviser.service.ts","webpack:///./src/app/services/build.service.ts","webpack:///./src/app/services/buyer.service.ts","webpack:///./src/app/services/credit.service.ts","webpack:///./src/app/services/goal.service.ts","webpack:///./src/app/services/maker.service.ts","webpack:///./src/app/services/ofert.service.ts","webpack:///./src/app/services/office.service.ts","webpack:///./src/app/services/onesignal.service.ts","webpack:///./src/app/services/property.service.ts","webpack:///./src/app/services/sale.service.ts","webpack:///./src/app/services/schedule.service.ts","webpack:///./src/app/services/seller.service.ts","webpack:///./src/app/services/status-buyer-property.service.ts","webpack:///./src/app/services/user-session.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfiC;AACA;AACiB;AACT;AACS;AAEV;AACF;AACN;AAEV;AACS;AACY;AACd;AACF;AACiB;AACuC;AACN;AACF;AACW;AACH;AACH;AACd;AACN;AACM;AACc;AACM;AACvB;AACT;AACK;AA+BzD;AAC4C;AAC4B;AAChD;AACC;AACqD;AACG;AACW;AACR;AACA;AACT;AACK;AACJ;AACK;AACM;AACG;AAClB;AACS;AACb;AACO;AACM;AACL;AACK;AACR;AACW;AACG;AACtC;AACoC;AAChB;AACR;AACW;AACvC;AACgD;AACV;AACsB;AACf;AACA;AACN;AACA;AACH;AACA;AACe;AACM;AACM;AAClB;AACG;AACL;AACD;AA+HtG;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA7HrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAc;gBACd,mHAAsB;gBACtB,iHAAsB;gBACtB,yHAAwB;gBACxB,4HAAyB;gBACzB,yHAAwB;gBACxB,sHAAuB;gBACvB,wGAAmB;gBACnB,kGAAiB;gBACjB,wGAAmB;gBACnB,sHAAuB;gBACvB,4HAAyB;gBACzB,qGAAkB;gBAClB,iGAAgB;gBAChB,gHAAqB;gBACrB,sHAAuB;gBACvB,yHAAwB;gBACxB,oIAA2B;gBAC3B,4HAAyB;gBACzB,4HAAyB;gBACzB,mHAAsB;gBACtB,wHAAuB;gBACvB,oHAAsB;gBACtB,yHAAwB;gBACxB,+HAA0B;gBAC1B,kIAA2B;gBAC3B,gHAAqB;gBACrB,yHAAwB;gBACxB,4GAAoB;gBACpB,mHAAsB;gBACtB,yHAAwB;gBACxB,oHAAsB;gBACtB,yHAAwB;gBACxB,iHAAqB;gBACrB,4HAAwB;gBACxB,+HAA0B;gBAC1B,yFAAc;gBACd,6HAAyB;gBACzB,6GAAoB;gBACpB,qGAAkB;gBAClB,gHAAqB;gBACrB,yHAAwB;gBACxB,+GAAoB;gBACpB,qIAA4B;gBAC5B,sHAAuB;gBACvB,sHAAuB;gBACvB,gHAAqB;gBACrB,gHAAqB;gBACrB,6G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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {\r\n  sequence,\r\n  trigger,\r\n  animate,\r\n  style,\r\n  group,\r\n  query,\r\n  transition,\r\n  animateChild,\r\n  state,\r\n  animation,\r\n  useAnimation,\r\n  stagger,\r\n} from '@angular/animations';\r\n\r\nconst customAnimation = animation(\r\n  [\r\n    style({\r\n      opacity: '{{opacity}}',\r\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})',\r\n    }),\r\n    animate(\r\n      '{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n      style('*'),\r\n    ),\r\n  ],\r\n  {\r\n    params: {\r\n      duration: '200ms',\r\n      delay: '0ms',\r\n      opacity: '0',\r\n      scale: '1',\r\n      x: '0',\r\n      y: '0',\r\n      z: '0',\r\n    },\r\n  },\r\n);\r\n\r\nexport const fuseAnimations = [\r\n  trigger('animate', [\r\n    transition('void => *', [useAnimation(customAnimation)]),\r\n  ]),\r\n\r\n  trigger('animateStagger', [\r\n    state('50', style('*')),\r\n    state('100', style('*')),\r\n    state('200', style('*')),\r\n\r\n    transition(\r\n      'void => 50',\r\n      query('@*', [stagger('50ms', [animateChild()])], { optional: true }),\r\n    ),\r\n    transition(\r\n      'void => 100',\r\n      query('@*', [stagger('100ms', [animateChild()])], { optional: true }),\r\n    ),\r\n    transition(\r\n      'void => 200',\r\n      query('@*', [stagger('200ms', [animateChild()])], { optional: true }),\r\n    ),\r\n  ]),\r\n\r\n  trigger('fadeInOut', [\r\n    state(\r\n      '0',\r\n      style({\r\n        display: 'none',\r\n        opacity: 0,\r\n      }),\r\n    ),\r\n    state(\r\n      '1',\r\n      style({\r\n        display: 'block',\r\n        opacity: 1,\r\n      }),\r\n    ),\r\n    transition('1 => 0', animate('300ms ease-out')),\r\n    transition('0 => 1', animate('300ms ease-in')),\r\n  ]),\r\n\r\n  trigger('slideInOut', [\r\n    state(\r\n      '0',\r\n      style({\r\n        height: '0px',\r\n        display: 'none',\r\n      }),\r\n    ),\r\n    state(\r\n      '1',\r\n      style({\r\n        height: '*',\r\n        display: 'block',\r\n      }),\r\n    ),\r\n    transition('1 => 0', animate('300ms ease-out')),\r\n    transition('0 => 1', animate('300ms ease-in')),\r\n  ]),\r\n\r\n  trigger('slideIn', [\r\n    transition('void => left', [\r\n      style({\r\n        transform: 'translateX(100%)',\r\n      }),\r\n      animate(\r\n        '300ms ease-in',\r\n        style({\r\n          transform: 'translateX(0)',\r\n        }),\r\n      ),\r\n    ]),\r\n    transition('left => void', [\r\n      style({\r\n        transform: 'translateX(0)',\r\n      }),\r\n      animate(\r\n        '300ms ease-in',\r\n        style({\r\n          transform: 'translateX(-100%)',\r\n        }),\r\n      ),\r\n    ]),\r\n    transition('void => right', [\r\n      style({\r\n        transform: 'translateX(-100%)',\r\n      }),\r\n      animate(\r\n        '300ms ease-in',\r\n        style({\r\n          transform: 'translateX(0)',\r\n        }),\r\n      ),\r\n    ]),\r\n    transition('right => void', [\r\n      style({\r\n        transform: 'translateX(0)',\r\n      }),\r\n      animate(\r\n        '300ms ease-in',\r\n        style({\r\n          transform: 'translateX(100%)',\r\n        }),\r\n      ),\r\n    ]),\r\n  ]),\r\n\r\n  trigger('slideInLeft', [\r\n    state(\r\n      'void',\r\n      style({\r\n        transform: 'translateX(-100%)',\r\n        display: 'none',\r\n      }),\r\n    ),\r\n    state(\r\n      '*',\r\n      style({\r\n        transform: 'translateX(0)',\r\n        display: 'flex',\r\n      }),\r\n    ),\r\n    transition('void => *', animate('300ms')),\r\n    transition('* => void', animate('300ms')),\r\n  ]),\r\n\r\n  trigger('slideInRight', [\r\n    state(\r\n      'void',\r\n      style({\r\n        transform: 'translateX(100%)',\r\n        display: 'none',\r\n      }),\r\n    ),\r\n    state(\r\n      '*',\r\n      style({\r\n        transform: 'translateX(0)',\r\n        display: 'flex',\r\n      }),\r\n    ),\r\n    transition('void => *', animate('300ms')),\r\n    transition('* => void', animate('300ms')),\r\n  ]),\r\n\r\n  trigger('slideInTop', [\r\n    state(\r\n      'void',\r\n      style({\r\n        transform: 'translateY(-100%)',\r\n        display: 'none',\r\n      }),\r\n    ),\r\n    state(\r\n      '*',\r\n      style({\r\n        transform: 'translateY(0)',\r\n        display: 'flex',\r\n      }),\r\n    ),\r\n    transition('void => *', animate('300ms')),\r\n    transition('* => void', animate('300ms')),\r\n  ]),\r\n\r\n  trigger('slideInBottom', [\r\n    state(\r\n      'void',\r\n      style({\r\n        transform: 'translateY(100%)',\r\n        display: 'none',\r\n      }),\r\n    ),\r\n    state(\r\n      '*',\r\n      style({\r\n        transform: 'translateY(0)',\r\n        display: 'flex',\r\n      }),\r\n    ),\r\n    transition('void => *', animate('300ms')),\r\n    transition('* => void', animate('300ms')),\r\n  ]),\r\n\r\n  trigger('expandCollapse', [\r\n    state(\r\n      'void',\r\n      style({\r\n        height: '0px',\r\n      }),\r\n    ),\r\n    state(\r\n      '*',\r\n      style({\r\n        height: '*',\r\n      }),\r\n    ),\r\n    transition('void => *', animate('300ms ease-out')),\r\n    transition('* => void', animate('300ms ease-in')),\r\n  ]),\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  // @ Router animations\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  trigger('routerTransitionLeft', [\r\n    transition('* => *', [\r\n      query(\r\n        'content > :enter, content > :leave',\r\n        [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      query(\r\n        'content > :enter',\r\n        [\r\n          style({\r\n            transform: 'translateX(100%)',\r\n            opacity: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      sequence([\r\n        group([\r\n          query(\r\n            'content > :leave',\r\n            [\r\n              style({\r\n                transform: 'translateX(0)',\r\n                opacity: 1,\r\n              }),\r\n              animate(\r\n                '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n                style({\r\n                  transform: 'translateX(-100%)',\r\n                  opacity: 0,\r\n                }),\r\n              ),\r\n            ],\r\n            { optional: true },\r\n          ),\r\n          query(\r\n            'content > :enter',\r\n            [\r\n              style({ transform: 'translateX(100%)' }),\r\n              animate(\r\n                '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n                style({\r\n                  transform: 'translateX(0%)',\r\n                  opacity: 1,\r\n                }),\r\n              ),\r\n            ],\r\n            { optional: true },\r\n          ),\r\n        ]),\r\n        query('content > :leave', animateChild(), { optional: true }),\r\n        query('content > :enter', animateChild(), { optional: true }),\r\n      ]),\r\n    ]),\r\n  ]),\r\n\r\n  trigger('routerTransitionRight', [\r\n    transition('* => *', [\r\n      query(\r\n        'content > :enter, content > :leave',\r\n        [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      query(\r\n        'content > :enter',\r\n        [\r\n          style({\r\n            transform: 'translateX(-100%)',\r\n            opacity: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      sequence([\r\n        group([\r\n          query(\r\n            'content > :leave',\r\n            [\r\n              style({\r\n                transform: 'translateX(0)',\r\n                opacity: 1,\r\n              }),\r\n              animate(\r\n                '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n                style({\r\n                  transform: 'translateX(100%)',\r\n                  opacity: 0,\r\n                }),\r\n              ),\r\n            ],\r\n            { optional: true },\r\n          ),\r\n          query(\r\n            'content > :enter',\r\n            [\r\n              style({ transform: 'translateX(-100%)' }),\r\n              animate(\r\n                '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n                style({\r\n                  transform: 'translateX(0%)',\r\n                  opacity: 1,\r\n                }),\r\n              ),\r\n            ],\r\n            { optional: true },\r\n          ),\r\n        ]),\r\n        query('content > :leave', animateChild(), { optional: true }),\r\n        query('content > :enter', animateChild(), { optional: true }),\r\n      ]),\r\n    ]),\r\n  ]),\r\n\r\n  trigger('routerTransitionUp', [\r\n    transition('* => *', [\r\n      query(\r\n        'content > :enter, content > :leave',\r\n        [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      query(\r\n        'content > :enter',\r\n        [\r\n          style({\r\n            transform: 'translateY(100%)',\r\n            opacity: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      group([\r\n        query(\r\n          'content > :leave',\r\n          [\r\n            style({\r\n              transform: 'translateY(0)',\r\n              opacity: 1,\r\n            }),\r\n            animate(\r\n              '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n              style({\r\n                transform: 'translateY(-100%)',\r\n                opacity: 0,\r\n              }),\r\n            ),\r\n          ],\r\n          { optional: true },\r\n        ),\r\n        query(\r\n          'content > :enter',\r\n          [\r\n            style({ transform: 'translateY(100%)' }),\r\n            animate(\r\n              '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n              style({\r\n                transform: 'translateY(0%)',\r\n                opacity: 1,\r\n              }),\r\n            ),\r\n          ],\r\n          { optional: true },\r\n        ),\r\n      ]),\r\n      query('content > :leave', animateChild(), { optional: true }),\r\n      query('content > :enter', animateChild(), { optional: true }),\r\n    ]),\r\n  ]),\r\n\r\n  trigger('routerTransitionDown', [\r\n    transition('* => *', [\r\n      query(\r\n        'content > :enter, content > :leave',\r\n        [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      query(\r\n        'content > :enter',\r\n        [\r\n          style({\r\n            transform: 'translateY(-100%)',\r\n            opacity: 0,\r\n          }),\r\n        ],\r\n        { optional: true },\r\n      ),\r\n      sequence([\r\n        group([\r\n          query(\r\n            'content > :leave',\r\n            [\r\n              style({\r\n                transform: 'translateY(0)',\r\n                opacity: 1,\r\n              }),\r\n              animate(\r\n                '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n                style({\r\n                  transform: 'translateY(100%)',\r\n                  opacity: 0,\r\n                }),\r\n              ),\r\n            ],\r\n            { optional: true },\r\n          ),\r\n          query(\r\n            'content > :enter',\r\n            [\r\n              style({ transform: 'translateY(-100%)' }),\r\n              animate(\r\n                '600ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n                style({\r\n                  transform: 'translateY(0%)',\r\n                  opacity: 1,\r\n                }),\r\n              ),\r\n            ],\r\n            { optional: true },\r\n          ),\r\n        ]),\r\n        query('content > :leave', animateChild(), { optional: true }),\r\n        query('content > :enter', animateChild(), { optional: true }),\r\n      ]),\r\n    ]),\r\n  ]),\r\n\r\n  trigger('routerTransitionFade', [\r\n    transition(\r\n      '* => *',\r\n      group([\r\n        query(\r\n          'content > :enter, content > :leave ',\r\n          [\r\n            style({\r\n              position: 'absolute',\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n            }),\r\n          ],\r\n          { optional: true },\r\n        ),\r\n\r\n        query(\r\n          'content > :enter',\r\n          [\r\n            style({\r\n              opacity: 0,\r\n            }),\r\n          ],\r\n          { optional: true },\r\n        ),\r\n        query(\r\n          'content > :leave',\r\n          [\r\n            style({\r\n              opacity: 1,\r\n            }),\r\n            animate(\r\n              '300ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n              style({\r\n                opacity: 0,\r\n              }),\r\n            ),\r\n          ],\r\n          { optional: true },\r\n        ),\r\n        query(\r\n          'content > :enter',\r\n          [\r\n            style({\r\n              opacity: 0,\r\n            }),\r\n            animate(\r\n              '300ms cubic-bezier(0.0, 0.0, 0.2, 1)',\r\n              style({\r\n                opacity: 1,\r\n              }),\r\n            ),\r\n          ],\r\n          { optional: true },\r\n        ),\r\n        query('content > :enter', animateChild(), { optional: true }),\r\n        query('content > :leave', animateChild(), { optional: true }),\r\n      ]),\r\n    ),\r\n  ]),\r\n];\r\n","export const CONST_GENERAL = Object.freeze({\r\n  ONESIGNAL_APP_ID: '03441d74-5974-4324-8dce-c7cd5c9dcfd9',\r\n  REST_API_KEY: 'N2RmZjk5OGItZDNhNS00ZThlLTljZTItYmNiNWQ1M2I2Yzhl',\r\n  googleProjectNumber: '409059103026',\r\n});\r\n","import { IBuyer } from '../models/buyer.model';\r\nimport { IProperty } from '../models/property.model';\r\nimport { IBuild } from '../models/build.model';\r\n\r\n// filtro prop match\r\n/**\r\n *\r\n * @param buyer comprador\r\n * @param properties propiedades\r\n * @param percentage % minimo\r\n */\r\nexport function CalcPercentage(\r\n  buyer: IBuyer,\r\n  properties: IProperty[],\r\n  percentage: number,\r\n) {\r\n  const propertiesMatch: IProperty[] = [];\r\n  properties.forEach(property => {\r\n    let sumTotal = 0;\r\n    let items = 17;\r\n    if (buyer.isRenter === property.isRent) {\r\n      sumTotal++;\r\n    }\r\n    if (\r\n      buyer.typeOfProperty.toLocaleLowerCase().trim() ===\r\n      property.typeOfProperty.toLocaleLowerCase().trim()\r\n    ) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.space <= property.space) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.dateToBuy === property.dateToBuy) {\r\n      sumTotal++;\r\n    }\r\n    if (\r\n      buyer.zone.toLocaleLowerCase().trim() ===\r\n      property.zone.toLocaleLowerCase().trim()\r\n    ) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.minPrice >= property.minPrice) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.maxPrice >= property.maxPrice) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.numRooms === property.numRooms) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.numCars <= property.numCars) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.isOld === property.isOld) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.isClose === property.isClose) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.numBathrooms <= property.numBathrooms) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.hasGarden === property.hasGarden) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.isLowLevel === property.isLowLevel) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.hasElevator === property.hasElevator) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.allServices === property.allServices) {\r\n      sumTotal++;\r\n    }\r\n    if (\r\n      buyer.wayToBuy.toLocaleLowerCase().trim() ===\r\n      property.wayToBuy.toLocaleLowerCase().trim()\r\n    ) {\r\n      sumTotal++;\r\n    }\r\n    if (buyer.tag.length !== 0 && property.tag.length !== 0) {\r\n      buyer.tag.forEach(tag => {\r\n        items++;\r\n        const isFind = property.tag.find(\r\n          t => t.toLocaleLowerCase().trim() === tag.toLocaleLowerCase().trim(),\r\n        );\r\n        if (isFind) {\r\n          sumTotal++;\r\n        }\r\n      });\r\n    }\r\n    const avr = (sumTotal / items) * 100;\r\n    if (avr >= percentage) {\r\n      // add % avr\r\n      property['percentage'] = avr;\r\n      propertiesMatch.push(property);\r\n    }\r\n  });\r\n  properties.sort((a, b) => {\r\n    return b.percentage - a.percentage;\r\n  });\r\n  return properties;\r\n}\r\n\r\n// filtro buyers\r\nexport function BuyersFilters(\r\n  buyer: IBuyer,\r\n  filtersApply: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    status: string;\r\n  },\r\n) {\r\n  let isOK = true;\r\n  const buyerDate = new Date(buyer.timestamp);\r\n  // si existe\r\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\r\n    if (buyerDate.getDate() !== filtersApply.day) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\r\n    if (buyerDate.getMonth() !== filtersApply.month) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\r\n    if (buyerDate.getFullYear() !== filtersApply.year) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.status !== undefined && filtersApply.status !== null) {\r\n    if (buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0) {\r\n      const isFinded = buyer.statusBuyerProperty.findIndex(\r\n        sbp => sbp.status === filtersApply.status,\r\n      );\r\n      if (isFinded === -1) {\r\n        isOK = false;\r\n      }\r\n    } else {\r\n      if (filtersApply.status !== 'gris') {\r\n        isOK = false;\r\n      }\r\n    }\r\n  }\r\n  // end filters\r\n  return isOK;\r\n}\r\n\r\n// filtro dates\r\nexport function OnlyDates(\r\n  some: any,\r\n  filtersApply: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n  },\r\n) {\r\n  let isOK = true;\r\n  const buyerDate = new Date(some.timestamp);\r\n  // si existe\r\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\r\n    if (buyerDate.getDate() !== filtersApply.day) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\r\n    if (buyerDate.getMonth() !== filtersApply.month) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\r\n    if (buyerDate.getFullYear() !== filtersApply.year) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // end filters\r\n  return isOK;\r\n}\r\n\r\n// filtro dates\r\nexport function SellerFilter(\r\n  some: any,\r\n  filtersApply: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    isRenter: boolean;\r\n  },\r\n) {\r\n  let isOK = true;\r\n  const buyerDate = new Date(some.timestamp);\r\n  // si existe\r\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\r\n    if (buyerDate.getDate() !== filtersApply.day) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\r\n    if (buyerDate.getMonth() !== filtersApply.month) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\r\n    if (buyerDate.getFullYear() !== filtersApply.year) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.isRenter !== undefined && filtersApply.isRenter !== null) {\r\n    if (some.isRenter !== filtersApply.isRenter) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // end filters\r\n  return isOK;\r\n}\r\nexport function PropertyFilter(hopeProperty: IProperty, prop: IProperty) {\r\n  const propRes: IProperty[] = [];\r\n  let numFilters = 0;\r\n  let num = 0;\r\n  numFilters = 0;\r\n  let isHope = true;\r\n  // condiciones ve si existe\r\n  if (hopeProperty.wayToBuy) {\r\n    numFilters++;\r\n    // ve si coincide\r\n    if (hopeProperty.wayToBuy !== prop.wayToBuy) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.zone) {\r\n    numFilters++;\r\n    // ve si coincide\r\n    if (hopeProperty.zone !== prop.zone) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.typeOfProperty) {\r\n    numFilters++;\r\n    // ve si coincide\r\n    if (hopeProperty.typeOfProperty !== prop.typeOfProperty) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  // solo ve si coincide\r\n  if (hopeProperty.allServices !== undefined) {\r\n    numFilters++;\r\n    if (hopeProperty.allServices !== prop.allServices) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.hasElevator !== undefined) {\r\n    numFilters++;\r\n    if (hopeProperty.hasElevator !== prop.hasElevator) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.isLowLevel !== undefined) {\r\n    numFilters++;\r\n    if (hopeProperty.isLowLevel !== prop.isLowLevel) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.hasGarden !== undefined) {\r\n    numFilters++;\r\n    if (hopeProperty.hasGarden !== prop.hasGarden) {\r\n      isHope = false;\r\n    }\r\n  }\r\n\r\n  if (prop.numBathrooms < hopeProperty.numBathrooms) {\r\n    isHope = false;\r\n  }\r\n  if (hopeProperty.numBathrooms > 0) {\r\n    numFilters++;\r\n  }\r\n  if (hopeProperty.isClose !== undefined) {\r\n    numFilters++;\r\n    if (prop.isClose !== hopeProperty.isClose) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.isOld !== undefined) {\r\n    numFilters++;\r\n    if (prop.isOld !== hopeProperty.isOld) {\r\n      isHope = false;\r\n    }\r\n  }\r\n\r\n  if (prop.numCars < hopeProperty.numCars) {\r\n    numFilters++;\r\n    isHope = false;\r\n  }\r\n  if (hopeProperty.numCars > 0) {\r\n    numFilters++;\r\n  }\r\n  if (prop.numRooms < hopeProperty.numRooms) {\r\n    isHope = false;\r\n  }\r\n  if (hopeProperty.numRooms > 0) {\r\n    numFilters++;\r\n  }\r\n  if (prop.space < hopeProperty.space) {\r\n    isHope = false;\r\n  }\r\n  if (hopeProperty.space > 0) {\r\n    numFilters++;\r\n  }\r\n  if (hopeProperty.isRent !== undefined) {\r\n    numFilters++;\r\n    if (prop.isRent !== hopeProperty.isRent) {\r\n      isHope = false;\r\n    }\r\n  }\r\n\r\n  if (hopeProperty.maxPrice) {\r\n    numFilters++;\r\n    if (prop.maxPrice > hopeProperty.maxPrice) {\r\n      isHope = false;\r\n    }\r\n  }\r\n  if (hopeProperty.minPrice > prop.minPrice) {\r\n    isHope = false;\r\n  }\r\n  if (hopeProperty.minPrice > 0) {\r\n    numFilters++;\r\n  }\r\n  // end condiciones\r\n  // ve si sigue siendo true\r\n  if (isHope) {\r\n    num = numFilters;\r\n    propRes.push(prop);\r\n  }\r\n  // end for\r\n  console.log(numFilters);\r\n  return { isHope: isHope, numOfFilters: numFilters };\r\n}\r\nexport function FormatDatesFront(dateInput: Date): string {\r\n  const day: string = new Date(dateInput).getDate().toString();\r\n  const month: string = (new Date(dateInput).getMonth() + 1).toString();\r\n  const year: string = new Date(dateInput).getFullYear().toString();\r\n  const date = day + '/' + month + '/' + year;\r\n  return date;\r\n}\r\nexport function FormatHoursFront(hours: number, minutes: number) {\r\n  let strFormat, strMin, strHour, strState;\r\n  if (minutes === 0 || minutes === undefined || minutes === null) {\r\n    strMin = '00';\r\n  } else if (minutes < 10) {\r\n    strMin = `0${minutes}`;\r\n  } else if (minutes >= 10) {\r\n    strMin = minutes.toString();\r\n  }\r\n  if (hours > 12) {\r\n    strHour = `${hours - 12}`;\r\n    strState = 'PM';\r\n  } else if (hours < 12) {\r\n    strHour = hours.toString();\r\n    strState = 'AM';\r\n  } else if (hours === 12) {\r\n    strHour = hours.toString();\r\n    strState = 'PM';\r\n  }\r\n  strFormat = `${strHour}:${strMin} ${strState}`;\r\n  return strFormat;\r\n}\r\nexport function GetPercentGoal(\r\n  goals: [\r\n    {\r\n      nameGoal: string;\r\n      isComplete: boolean;\r\n    }\r\n  ],\r\n): number {\r\n  let numOfComplete = 0;\r\n  goals.forEach(goal => {\r\n    if (goal.isComplete) {\r\n      numOfComplete++;\r\n    }\r\n  });\r\n  return +((numOfComplete * 100) / goals.length).toFixed(2);\r\n}\r\nexport function FilerBuild(\r\n  build: IBuild,\r\n  filtersApply: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    day2: number;\r\n    month2: number;\r\n    year2: number;\r\n    isComplete: boolean;\r\n  },\r\n) {\r\n  let isOK = true;\r\n  let buildDateEnd;\r\n  const buildDateStart = new Date(build.timestamp);\r\n  if (build.timeLine) {\r\n    const lastIndex = build.timeLine.length - 1;\r\n    if (build.timeLine.length > 0) {\r\n      const lastPhase = build.timeLine[lastIndex];\r\n      buildDateEnd = new Date(\r\n        lastPhase.yearToEnd,\r\n        lastPhase.monthToEnd,\r\n        lastPhase.dayToEnd,\r\n      );\r\n    }\r\n  }\r\n  let isComplete = true;\r\n  const isFinded = build.timeLine.find(t => t.isComplete === false);\r\n  if (isFinded) {\r\n    isComplete = false;\r\n  }\r\n  // inicio\r\n  // si existe\r\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\r\n    if (buildDateStart.getDate() !== filtersApply.day) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\r\n    if (buildDateStart.getMonth() !== filtersApply.month) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\r\n    if (buildDateStart.getFullYear() !== filtersApply.year) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // fin\r\n  // si existe\r\n  if (filtersApply.day2 !== undefined && filtersApply.day2 !== null) {\r\n    if (buildDateEnd.getDate() !== filtersApply.day2) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.month2 !== undefined && filtersApply.month2 !== null) {\r\n    if (buildDateEnd.getMonth() !== filtersApply.month2) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (filtersApply.year2 !== undefined && filtersApply.year2 !== null) {\r\n    if (buildDateEnd.getFullYear() !== filtersApply.year2) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // si existe\r\n  if (\r\n    filtersApply.isComplete !== undefined &&\r\n    filtersApply.isComplete !== null\r\n  ) {\r\n    if (isComplete !== filtersApply.isComplete) {\r\n      isOK = false;\r\n    }\r\n  }\r\n  // end filters\r\n  return isOK;\r\n}\r\nexport function DiffDays(dateToDiference: Date) {\r\n  const date1 = new Date(dateToDiference);\r\n  const date2 = new Date();\r\n  const timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n  const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n  return diffDays;\r\n}\r\n","// const ip = 'https://cobianback.herokuapp.com/';\r\n// const ip = 'http://localhost:3004/';\r\nconst ip = 'http://31.220.52.51:3004/';\r\n\r\nconst apiUrl = ip + 'api/v1/';\r\nconst userSession = 'usersession/';\r\nconst buyer = 'buyer/';\r\nconst buyerId = 'bybuyerid/';\r\nconst property = 'property/';\r\nconst propertyAll = 'all/';\r\nconst bypropertyid = 'bypropertyid/';\r\nconst checkbuyer = 'checkbuyer/';\r\nconst propertybyBuyer = 'matchsearchbybuyer/';\r\nconst properySimulate = 'matchsearchbydemo/';\r\nconst statusBuyerProperty = 'status/';\r\nconst credit = 'credit/';\r\nconst schedule = 'schedule/';\r\nconst scheduleId = 'byscheduleid/';\r\nconst scheduleCheck = 'checkschedule/';\r\nconst upgradeStatus = 'upgradelevelbyid/';\r\nconst ofert = 'ofert/';\r\nconst ofertId = 'byofertid/';\r\nconst administrator = 'administrator/';\r\nconst adviser = 'adviser/';\r\nconst adviserId = 'byadviserid/';\r\nconst seller = 'seller/';\r\nconst sellerId = 'bysellerid/';\r\nconst creditById = 'bycreditid/';\r\nconst sbpbypropertybuyer = 'bybuyerpropid/';\r\nconst goal = 'goal/';\r\nconst goalId = 'bygoalid/';\r\nconst build = 'build/';\r\nconst buildupdatephase = 'updatephase/';\r\nconst buildbybuildid = 'bybuildid/';\r\nconst uploadImg = 'uploadImg';\r\nconst maker = 'maker/';\r\nconst makerbymakerid = 'bymakerid/';\r\nconst deleteFile = 'deleteFile/';\r\nconst bystatusid = 'bystatusid/';\r\nconst sale = 'sale/';\r\nconst bysaleid = 'bysaleid/';\r\nconst byadviserid = 'byadviserid/';\r\nconst office = 'office/';\r\nconst byofficeid = 'byofficeid/';\r\nconst notification = 'notification/';\r\nconst notificatiosSearch = 'search/';\r\nconst onesignal = 'https://onesignal.com/api/v1/notifications';\r\n\r\nexport const END_POINT = {\r\n  IP: ip,\r\n  //   session\r\n  USER_SESSION: apiUrl + userSession,\r\n  // buyer\r\n  BUYER_ID: apiUrl + buyer + buyerId,\r\n  BUYER: apiUrl + buyer,\r\n  BUYER_CHECK: apiUrl + buyer + checkbuyer,\r\n  // properties\r\n  PROPERTY_MATCH_SEARCH: apiUrl + property + propertybyBuyer,\r\n  PROPERTY_BY_ID: apiUrl + property + bypropertyid,\r\n  PROPERTY: apiUrl + property,\r\n  PROPERTY_ALL: apiUrl + property + propertyAll,\r\n  PROPERTY_SIMULATE: apiUrl + property + properySimulate,\r\n  // status buyer property\r\n  STATUS_BP: apiUrl + statusBuyerProperty,\r\n  STATUS_UPGRADE: apiUrl + statusBuyerProperty + upgradeStatus,\r\n  STATUS_SEARCH: apiUrl + statusBuyerProperty + sbpbypropertybuyer,\r\n  STATUS_ID: apiUrl + statusBuyerProperty + bystatusid,\r\n  // credit\r\n  CREDIT: apiUrl + credit,\r\n  CREDIT_ID: apiUrl + credit + creditById,\r\n  // schedule\r\n  SCHEDULE: apiUrl + schedule,\r\n  SCHEDULE_CHECK: apiUrl + schedule + scheduleCheck,\r\n  SCHEDULE_ID: apiUrl + schedule + scheduleId,\r\n  // ofert\r\n  OFERT: apiUrl + ofert,\r\n  OFERT_ID: apiUrl + ofert + ofertId,\r\n  // admin\r\n  ADMINISTRATOR: apiUrl + administrator,\r\n  // adviser\r\n  ADVISER: apiUrl + adviser,\r\n  ADVISER_ID: apiUrl + adviser + adviserId,\r\n  // seller\r\n  SELLER: apiUrl + seller,\r\n  SELLER_ID: apiUrl + seller + sellerId,\r\n  // goal\r\n  GOAL: apiUrl + goal,\r\n  GOAL_ID: apiUrl + goal + goalId,\r\n  // building\r\n  BUILD: apiUrl + build,\r\n  BUILD_ID: apiUrl + build + buildbybuildid,\r\n  BUILD_UPDATE_PHASE: apiUrl + build + buildupdatephase,\r\n  BUILD_UPLOAD_IMG: apiUrl + build + uploadImg,\r\n  BUILD_DELETE_IMG: apiUrl + build + deleteFile,\r\n  // maker\r\n  MAKER: apiUrl + maker,\r\n  MAKER_ID: apiUrl + maker + makerbymakerid,\r\n  // Sales\r\n  SALE: apiUrl + sale,\r\n  SALE_ID: apiUrl + sale + bysaleid,\r\n  SALE_ADV_ID: apiUrl + sale + byadviserid,\r\n  // Oficinista\r\n  OFFICE: apiUrl + office,\r\n  OFFICE_ID: apiUrl + office + byofficeid,\r\n  // Notifi\r\n  NOTIFICATION: apiUrl + notification,\r\n  NOTIFICATION_SEARCH: apiUrl + notification + notificatiosSearch,\r\n  // OneSignal\r\n  ONESIGNAL: onesignal,\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ListPropBuyerComponent } from './components/buyer/list-prop-buyer/list-prop-buyer.component';\r\nimport { CalendarBuyerComponent } from './components/buyer/calendar-buyer/calendar-buyer.component';\r\nimport { EventDetailBuyerComponent } from './components/buyer/event-detail-buyer/event-detail-buyer.component';\r\nimport { DetailPropBuyerComponent } from './components/buyer/detail-prop-buyer/detail-prop-buyer.component';\r\nimport { UserSelectComponent } from './components/login/user-select/user-select.component';\r\nimport { NewBuyerComponent } from './components/buyer/new-buyer/new-buyer.component';\r\nimport { InterPropBuyerComponent } from './components/buyer/inter-prop-buyer/inter-prop-buyer.component';\r\nimport { CreditEventBuyerComponent } from './components/buyer/credit-event-buyer/credit-event-buyer.component';\r\nimport { OfertBuyerComponent } from './components/buyer/ofert-buyer/ofert-buyer.component';\r\nimport { MainAdminComponent } from './components/admin/main-admin/main-admin.component';\r\nimport { ListBuyerAdminComponent } from './components/admin/list-buyer-admin/list-buyer-admin.component';\r\nimport { DetailBuyerAdminComponent } from './components/admin/detail-buyer-admin/detail-buyer-admin.component';\r\nimport { ListAdviserAdminComponent } from './components/admin/list-adviser-admin/list-adviser-admin.component';\r\nimport { NewEditAdviserComponent } from './components/adviser/new-edit-adviser/new-edit-adviser.component';\r\nimport { DetailAdviserAdminComponent } from './components/admin/detail-adviser-admin/detail-adviser-admin.component';\r\nimport { ListSellerAdminComponent } from './components/admin/list-seller-admin/list-seller-admin.component';\r\nimport { DetailSellerAdminComponent } from './components/admin/detail-seller-admin/detail-seller-admin.component';\r\nimport { NewEditSellerComponent } from './components/seller/new-edit-seller/new-edit-seller.component';\r\nimport { NewEditPropComponent } from './components/prop/new-edit-prop/new-edit-prop.component';\r\nimport { ListPropAdminComponent } from './components/admin/list-prop-admin/list-prop-admin.component';\r\nimport { DetailPropAdminComponent } from './components/admin/detail-prop-admin/detail-prop-admin.component';\r\nimport { ListCreditAdminComponent } from './components/admin/list-credit-admin/list-credit-admin.component';\r\nimport { NewEditCreditComponent } from './components/credit/new-edit-credit/new-edit-credit.component';\r\nimport { ListOfertsAdminComponent } from './components/admin/list-oferts-admin/list-oferts-admin.component';\r\nimport { NewEditOfertComponent } from './components/oferts/new-edit-ofert/new-edit-ofert.component';\r\nimport { ListScheduleAdminComponent } from './components/admin/list-schedule-admin/list-schedule-admin.component';\r\nimport { NewEditScheduleComponent } from './components/schedule/new-edit-schedule/new-edit-schedule.component';\r\nimport { RefreComponent } from './components/general/refre/refre.component';\r\nimport { PersonalScheduleComponent } from './components/schedule/personal-schedule/personal-schedule.component';\r\nimport { ListGoalsComponent } from './components/admin/list-goals/list-goals.component';\r\nimport { NewEditGoalComponent } from './components/goals/new-edit-goal/new-edit-goal.component';\r\nimport { DetailGoalAdminComponent } from './components/admin/detail-goal-admin/detail-goal-admin.component';\r\nimport { SimulateSearchAdminComponent } from './components/admin/simulate-search-admin/simulate-search-admin.component';\r\nimport { ListBuildAdminComponent } from './components/admin/list-build-admin/list-build-admin.component';\r\nimport { NewEditBuildComponent } from './components/build/new-edit-build/new-edit-build.component';\r\nimport { ListMakerAdminComponent } from './components/admin/list-maker-admin/list-maker-admin.component';\r\nimport { NewEditMakerComponent } from './components/maker/new-edit-maker/new-edit-maker.component';\r\nimport { DetailBuildAdminComponent } from './components/admin/detail-build-admin/detail-build-admin.component';\r\nimport { ListSalespropAdminComponent } from './components/admin/list-salesprop-admin/list-salesprop-admin.component';\r\nimport { DetailSalespropAdminComponent } from './components/admin/detail-salesprop-admin/detail-salesprop-admin.component';\r\nimport { ListSalesAdminComponent } from './components/admin/list-sales-admin/list-sales-admin.component';\r\nimport { ListOfficeAdminComponent } from './components/admin/list-office-admin/list-office-admin.component';\r\nimport { NewEditOfficeComponent } from './components/office/new-edit-office/new-edit-office.component';\r\n\r\nconst routes: Routes = [\r\n  // Rutas\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'list-prop-buyer', component: ListPropBuyerComponent },\r\n  { path: 'calendar-buyer', component: CalendarBuyerComponent },\r\n  { path: 'event-detail-buyer', component: EventDetailBuyerComponent },\r\n  { path: 'buyer-property-detail', component: DetailPropBuyerComponent },\r\n  { path: 'login-select-user', component: UserSelectComponent },\r\n  { path: 'new-buyer', component: NewBuyerComponent },\r\n  { path: 'inter-prop-buyer', component: InterPropBuyerComponent },\r\n  { path: 'credit-event-buyer', component: CreditEventBuyerComponent },\r\n  { path: 'ofert-buyer', component: OfertBuyerComponent },\r\n  { path: 'main-admin', component: MainAdminComponent },\r\n  { path: 'list-buyer-admin', component: ListBuyerAdminComponent },\r\n  { path: 'detail-buyer-admin', component: DetailBuyerAdminComponent },\r\n  { path: 'list-adviser-admin', component: ListAdviserAdminComponent },\r\n  { path: 'new-edit-adviser', component: NewEditAdviserComponent },\r\n  { path: 'detail-adviser-admin', component: DetailAdviserAdminComponent },\r\n  { path: 'list-seller-admin', component: ListSellerAdminComponent },\r\n  { path: 'detail-seller-admin', component: DetailSellerAdminComponent },\r\n  { path: 'new-edit-seller', component: NewEditSellerComponent },\r\n  { path: 'list-prop-admin', component: ListPropAdminComponent },\r\n  { path: 'new-edit-prop', component: NewEditPropComponent },\r\n  { path: 'detail-prop-admin', component: DetailPropAdminComponent },\r\n  { path: 'list-credit-admin', component: ListCreditAdminComponent },\r\n  { path: 'new-edit-credit', component: NewEditCreditComponent },\r\n  { path: 'list-ofert-admin', component: ListOfertsAdminComponent },\r\n  { path: 'new-edit-ofert', component: NewEditOfertComponent },\r\n  { path: 'new-edit-schedule', component: NewEditScheduleComponent },\r\n  { path: 'list-schedule-admin', component: ListScheduleAdminComponent },\r\n  { path: 'personal-schedule', component: PersonalScheduleComponent },\r\n  { path: 'RefrshComponent', component: RefreComponent },\r\n  { path: 'list-goals-admin', component: ListGoalsComponent },\r\n  { path: 'new-edit-goal', component: NewEditGoalComponent },\r\n  { path: 'detail-goal-admin', component: DetailGoalAdminComponent },\r\n  { path: 'simulate-search-admin', component: SimulateSearchAdminComponent },\r\n  { path: 'list-build-admin', component: ListBuildAdminComponent },\r\n  { path: 'new-edit-build', component: NewEditBuildComponent },\r\n  { path: 'list-maker-admin', component: ListMakerAdminComponent },\r\n  { path: 'new-edit-maker', component: NewEditMakerComponent },\r\n  { path: 'detail-build-admin', component: DetailBuildAdminComponent },\r\n  { path: 'list-salesprop-admin', component: ListSalespropAdminComponent },\r\n  { path: 'detail-salesprop-admin', component: DetailSalespropAdminComponent },\r\n  { path: 'list-sales-admin', component: ListSalesAdminComponent },\r\n  { path: 'list-office-admin', component: ListOfficeAdminComponent },\r\n  { path: 'new-edit-office', component: NewEditOfficeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<ion-app>\\r\\n  <ion-split-pane>\\r\\n    <ion-menu [hidden]=\\\"!isLoggin\\\" class=\\\"menu-desktop \\\" type=\\\"overlay\\\">\\r\\n      <ion-header>\\r\\n        <ion-toolbar color=\\\"primary\\\">\\r\\n          <ion-title>Menu</ion-title>\\r\\n        </ion-toolbar>\\r\\n      </ion-header>\\r\\n      <ion-content>\\r\\n        <ion-list>\\r\\n          <ion-menu-toggle auto-hide=\\\"false\\\">\\r\\n            <span *ngFor=\\\"let p of appPages\\\">\\r\\n              <ion-item [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"[p.url]\\\" *ngIf=\\\"user && user.type === p.userType \\\">\\r\\n                <ion-icon slot=\\\"start\\\" [name]=\\\"p.icon\\\"></ion-icon>\\r\\n                <ion-label>\\r\\n                  {{p.title}}\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n            </span>\\r\\n\\r\\n            <ion-item (click)=\\\"logout()\\\" [routerDirection]=\\\"'root'\\\" routerLink=\\\"/login\\\">\\r\\n              <!-- <ion-item (click)=\\\"logout()\\\"> -->\\r\\n              <ion-icon slot=\\\"start\\\" name=\\\"log-out\\\"></ion-icon>\\r\\n              <ion-label>\\r\\n                Cerrar Sesión\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <!-- <ion-item>\\r\\n              <ion-label>\\r\\n                {{typeDevice}}\\r\\n              </ion-label>\\r\\n            </ion-item> -->\\r\\n          </ion-menu-toggle>\\r\\n        </ion-list>\\r\\n      </ion-content>\\r\\n    </ion-menu>\\r\\n\\r\\n\\r\\n    <ion-router-outlet main></ion-router-outlet>\\r\\n  </ion-split-pane>\\r\\n</ion-app>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Platform, NavController } from '@ionic/angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { Storage } from '@ionic/storage';\r\nimport { UserSessionService } from './services/user-session.service';\r\nimport { Router } from '@angular/router';\r\nimport { IUserSession } from './models/userSession.model';\r\nimport { CONST_GENERAL } from './_config/_const-general';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n  public appPages = [\r\n    // buyer\r\n    {\r\n      title: 'Propiedades',\r\n      url: '/list-prop-buyer',\r\n      icon: 'business',\r\n      userType: 'buyer'\r\n    },\r\n    {\r\n      title: 'Calendario',\r\n      url: '/calendar-buyer',\r\n      icon: 'calendar',\r\n      userType: 'buyer'\r\n    },\r\n    {\r\n      title: 'Lista de deseos',\r\n      url: '/inter-prop-buyer',\r\n      icon: 'heart',\r\n      userType: 'buyer'\r\n    },\r\n    {\r\n      title: 'Ofertas',\r\n      url: '/ofert-buyer',\r\n      icon: 'clipboard',\r\n      userType: 'buyer'\r\n    },\r\n    {\r\n      title: 'Editar Perfil',\r\n      url: '/new-buyer',\r\n      icon: 'contact',\r\n      userType: 'buyer'\r\n    },\r\n    // admin\r\n    {\r\n      title: 'Principal',\r\n      url: '/main-admin',\r\n      icon: 'home',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Consumidores',\r\n      url: '/list-buyer-admin',\r\n      icon: 'clipboard',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Asesores',\r\n      url: '/list-adviser-admin',\r\n      icon: 'people',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Vendedores',\r\n      url: '/list-seller-admin',\r\n      icon: 'cash',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Oficinistas',\r\n      url: '/list-office-admin',\r\n      icon: 'desktop',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Propiedades',\r\n      url: '/list-prop-admin',\r\n      icon: 'business',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Créditos',\r\n      url: '/list-credit-admin',\r\n      icon: 'document',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Ofertas',\r\n      url: '/list-ofert-admin',\r\n      icon: 'card',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Obras',\r\n      url: '/list-build-admin',\r\n      icon: 'construct',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Constructores',\r\n      url: '/list-maker-admin',\r\n      icon: 'walk',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Eventos',\r\n      url: '/list-schedule-admin',\r\n      icon: 'calendar',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Metas',\r\n      url: '/list-goals-admin',\r\n      icon: 'stats',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Simulador Match',\r\n      url: '/simulate-search-admin',\r\n      icon: 'heart-empty',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Propiedades Apartadas',\r\n      url: '/list-salesprop-admin',\r\n      icon: 'timer',\r\n      userType: 'administrator'\r\n    },\r\n    {\r\n      title: 'Propiedades Aquiridas',\r\n      url: '/list-sales-admin',\r\n      icon: 'trending-up',\r\n      userType: 'administrator'\r\n    },\r\n    // asesores\r\n    {\r\n      title: 'Consumidores',\r\n      url: '/list-buyer-admin',\r\n      icon: 'clipboard',\r\n      userType: 'adviser'\r\n    },\r\n    {\r\n      title: 'Propiedades',\r\n      url: '/list-prop-admin',\r\n      icon: 'business',\r\n      userType: 'adviser'\r\n    },\r\n    {\r\n      title: 'Eventos',\r\n      url: '/list-schedule-admin',\r\n      icon: 'calendar',\r\n      userType: 'adviser'\r\n    },\r\n    {\r\n      title: 'Metas',\r\n      url: '/list-goals-admin',\r\n      icon: 'stats',\r\n      userType: 'adviser'\r\n    },\r\n    {\r\n      title: 'Perfil',\r\n      url: '/new-edit-adviser',\r\n      icon: 'contact',\r\n      userType: 'adviser'\r\n    },\r\n    {\r\n      title: 'Simulador Match',\r\n      url: '/simulate-search-admin',\r\n      icon: 'heart-empty',\r\n      userType: 'adviser'\r\n    },\r\n    // Seller\r\n    {\r\n      title: 'Consumidores',\r\n      url: '/list-buyer-admin',\r\n      icon: 'clipboard',\r\n      userType: 'seller'\r\n    },\r\n    {\r\n      title: 'Propiedades',\r\n      url: '/list-prop-admin',\r\n      icon: 'business',\r\n      userType: 'seller'\r\n    },\r\n    {\r\n      title: 'Eventos',\r\n      url: '/list-schedule-admin',\r\n      icon: 'calendar',\r\n      userType: 'seller'\r\n    },\r\n    {\r\n      title: 'Perfil',\r\n      url: '/new-edit-seller',\r\n      icon: 'contact',\r\n      userType: 'seller'\r\n    },\r\n    {\r\n      title: 'Simulador Match',\r\n      url: '/simulate-search-admin',\r\n      icon: 'heart-empty',\r\n      userType: 'seller'\r\n    },\r\n    // office\r\n    {\r\n      title: 'Consumidores',\r\n      url: '/list-buyer-admin',\r\n      icon: 'clipboard',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Asesores',\r\n      url: '/list-adviser-admin',\r\n      icon: 'people',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Vendedores',\r\n      url: '/list-seller-admin',\r\n      icon: 'cash',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Propiedades',\r\n      url: '/list-prop-admin',\r\n      icon: 'business',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Créditos',\r\n      url: '/list-credit-admin',\r\n      icon: 'document',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Ofertas',\r\n      url: '/list-ofert-admin',\r\n      icon: 'card',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Obras',\r\n      url: '/list-build-admin',\r\n      icon: 'construct',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Constructores',\r\n      url: '/list-maker-admin',\r\n      icon: 'walk',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Eventos',\r\n      url: '/list-schedule-admin',\r\n      icon: 'calendar',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Metas',\r\n      url: '/list-goals-admin',\r\n      icon: 'stats',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Simulador Match',\r\n      url: '/simulate-search-admin',\r\n      icon: 'heart-empty',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Propiedades Apartadas',\r\n      url: '/list-salesprop-admin',\r\n      icon: 'timer',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Propiedades Aquiridas',\r\n      url: '/list-sales-admin',\r\n      icon: 'trending-up',\r\n      userType: 'office'\r\n    },\r\n    {\r\n      title: 'Perfil',\r\n      url: '/new-edit-office',\r\n      icon: 'contact',\r\n      userType: 'office'\r\n    }\r\n  ];\r\n\r\n  isDevice: boolean;\r\n  isLoggin = false;\r\n  user: IUserSession;\r\n  typeDevice: string;\r\n  constructor(\r\n    private platform: Platform,\r\n    private splashScreen: SplashScreen,\r\n    private statusBar: StatusBar,\r\n    private storage: Storage,\r\n    private userSessionService: UserSessionService,\r\n    private router: Router,\r\n    private navController: NavController\r\n  ) {\r\n    this.initializeApp();\r\n    userSessionService.userSession.subscribe(user => {\r\n      if (user.name) {\r\n        this.isLoggin = true;\r\n        this.user = user;\r\n        // no hay en local manda a login\r\n      } else {\r\n        this.isLoggin = false;\r\n        this.user = undefined;\r\n        this.navController.navigateRoot('login', false);\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n    });\r\n  }\r\n  logout() {\r\n    this.storage.remove('userSession').then(() => {\r\n      this.navController.navigateRoot('login', false);\r\n      /* this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['login'])); */\r\n    });\r\n  }\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, RouteReuseStrategy, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AppMaterialModule } from './material.module';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { UserSessionService } from './services/user-session.service';\r\nimport { GeneralCalendarComponent } from './components/general/general-calendar/general-calendar.component';\r\nimport { ListPropBuyerComponent } from './components/buyer/list-prop-buyer/list-prop-buyer.component';\r\nimport { CalendarBuyerComponent } from './components/buyer/calendar-buyer/calendar-buyer.component';\r\nimport { EventDetailBuyerComponent } from './components/buyer/event-detail-buyer/event-detail-buyer.component';\r\nimport { DetailPropBuyerComponent } from './components/buyer/detail-prop-buyer/detail-prop-buyer.component';\r\nimport { GeneralFiltersComponent } from './components/general/general-filters/general-filters.component';\r\nimport { UserSelectComponent } from './components/login/user-select/user-select.component';\r\nimport { NewBuyerComponent } from './components/buyer/new-buyer/new-buyer.component';\r\nimport { OfertBuyerComponent } from './components/buyer/ofert-buyer/ofert-buyer.component';\r\nimport { InterPropBuyerComponent } from './components/buyer/inter-prop-buyer/inter-prop-buyer.component';\r\nimport { CreditEventBuyerComponent } from './components/buyer/credit-event-buyer/credit-event-buyer.component';\r\nimport { MainAdminComponent } from './components/admin/main-admin/main-admin.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BarLineComponent } from './components/general/bar-line/bar-line.component';\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatGridListModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatTooltipModule,\r\n  MatButtonToggleModule,\r\n  MatChipsModule,\r\n  MatBottomSheetModule,\r\n  MatSnackBarModule,\r\n  MatAutocompleteModule,\r\n  MatExpansionModule,\r\n  MatDialogModule,\r\n  MatRadioModule,\r\n  MatTabsModule,\r\n  MatProgressSpinnerModule,\r\n  MatDividerModule,\r\n  MatDatepickerModule,\r\n  NativeDateModule,\r\n  MAT_DATE_LOCALE,\r\n} from '@angular/material';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { GeneralTableComponent } from './components/general/general-table/general-table.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { ListBuyerAdminComponent } from './components/admin/list-buyer-admin/list-buyer-admin.component';\r\nimport { GeneralSkeletonComponent } from './components/general/general-skeleton/general-skeleton.component';\r\nimport { GeneralFilterBuyerComponent } from './components/general/general-filter-buyer/general-filter-buyer.component';\r\nimport { DetailBuyerAdminComponent } from './components/admin/detail-buyer-admin/detail-buyer-admin.component';\r\nimport { ListAdviserAdminComponent } from './components/admin/list-adviser-admin/list-adviser-admin.component';\r\nimport { FilterAdviserComponent } from './components/general/filter-adviser/filter-adviser.component';\r\nimport { NewEditAdviserComponent } from './components/adviser/new-edit-adviser/new-edit-adviser.component';\r\nimport { NewEditSellerComponent } from './components/seller/new-edit-seller/new-edit-seller.component';\r\nimport { ListSellerAdminComponent } from './components/admin/list-seller-admin/list-seller-admin.component';\r\nimport { DetailSellerAdminComponent } from './components/admin/detail-seller-admin/detail-seller-admin.component';\r\nimport { DetailAdviserAdminComponent } from './components/admin/detail-adviser-admin/detail-adviser-admin.component';\r\nimport { FilterSellerComponent } from './components/general/filter-seller/filter-seller.component';\r\nimport { DetailPropAdminComponent } from './components/admin/detail-prop-admin/detail-prop-admin.component';\r\nimport { NewEditPropComponent } from './components/prop/new-edit-prop/new-edit-prop.component';\r\nimport { ListPropAdminComponent } from './components/admin/list-prop-admin/list-prop-admin.component';\r\nimport { ListCreditAdminComponent } from './components/admin/list-credit-admin/list-credit-admin.component';\r\nimport { NewEditCreditComponent } from './components/credit/new-edit-credit/new-edit-credit.component';\r\nimport { ListOfertsAdminComponent } from './components/admin/list-oferts-admin/list-oferts-admin.component';\r\nimport { NewEditOfertComponent } from './components/oferts/new-edit-ofert/new-edit-ofert.component';\r\nimport { NewEditScheduleComponent } from './components/schedule/new-edit-schedule/new-edit-schedule.component';\r\nimport { ListScheduleAdminComponent } from './components/admin/list-schedule-admin/list-schedule-admin.component';\r\nimport { RefreComponent } from './components/general/refre/refre.component';\r\nimport { PersonalScheduleComponent } from './components/schedule/personal-schedule/personal-schedule.component';\r\nimport { NewEditGoalComponent } from './components/goals/new-edit-goal/new-edit-goal.component';\r\nimport { ListGoalsComponent } from './components/admin/list-goals/list-goals.component';\r\nimport { GoalProgressComponent } from './components/general/goal-progress/goal-progress.component';\r\nimport { NgCircleProgressModule } from 'ng-circle-progress';\r\nimport { DetailGoalAdminComponent } from './components/admin/detail-goal-admin/detail-goal-admin.component';\r\nimport { FormStrListComponent } from './components/general/form-str-list/form-str-list.component';\r\nimport { SimulateSearchAdminComponent } from './components/admin/simulate-search-admin/simulate-search-admin.component';\r\nimport { ListBuildAdminComponent } from './components/admin/list-build-admin/list-build-admin.component';\r\nimport { ListMakerAdminComponent } from './components/admin/list-maker-admin/list-maker-admin.component';\r\nimport { NewEditMakerComponent } from './components/maker/new-edit-maker/new-edit-maker.component';\r\nimport { NewEditBuildComponent } from './components/build/new-edit-build/new-edit-build.component';\r\nimport { FilterBuildComponent } from './components/general/filter-build/filter-build.component';\r\nimport { FilterMakerComponent } from './components/general/filter-maker/filter-maker.component';\r\nimport { DetailBuildAdminComponent } from './components/admin/detail-build-admin/detail-build-admin.component';\r\nimport { ListSalespropAdminComponent } from './components/admin/list-salesprop-admin/list-salesprop-admin.component';\r\nimport { DetailSalespropAdminComponent } from './components/admin/detail-salesprop-admin/detail-salesprop-admin.component';\r\nimport { ListSalesAdminComponent } from './components/admin/list-sales-admin/list-sales-admin.component';\r\nimport { ListOfficeAdminComponent } from './components/admin/list-office-admin/list-office-admin.component';\r\nimport { NewEditOfficeComponent } from './components/office/new-edit-office/new-edit-office.component';\r\nimport { DialogGeneralComponent } from './components/general/dialog-general/dialog-general.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ListPropBuyerComponent,\r\n    CalendarBuyerComponent,\r\n    GeneralCalendarComponent,\r\n    EventDetailBuyerComponent,\r\n    DetailPropBuyerComponent,\r\n    GeneralFiltersComponent,\r\n    UserSelectComponent,\r\n    NewBuyerComponent,\r\n    OfertBuyerComponent,\r\n    InterPropBuyerComponent,\r\n    CreditEventBuyerComponent,\r\n    MainAdminComponent,\r\n    BarLineComponent,\r\n    GeneralTableComponent,\r\n    ListBuyerAdminComponent,\r\n    GeneralSkeletonComponent,\r\n    GeneralFilterBuyerComponent,\r\n    DetailBuyerAdminComponent,\r\n    ListAdviserAdminComponent,\r\n    FilterAdviserComponent,\r\n    NewEditAdviserComponent,\r\n    NewEditSellerComponent,\r\n    ListSellerAdminComponent,\r\n    DetailSellerAdminComponent,\r\n    DetailAdviserAdminComponent,\r\n    FilterSellerComponent,\r\n    DetailPropAdminComponent,\r\n    NewEditPropComponent,\r\n    ListPropAdminComponent,\r\n    ListCreditAdminComponent,\r\n    NewEditCreditComponent,\r\n    ListOfertsAdminComponent,\r\n    NewEditOfertComponent,\r\n    NewEditScheduleComponent,\r\n    ListScheduleAdminComponent,\r\n    RefreComponent,\r\n    PersonalScheduleComponent,\r\n    NewEditGoalComponent,\r\n    ListGoalsComponent,\r\n    GoalProgressComponent,\r\n    DetailGoalAdminComponent,\r\n    FormStrListComponent,\r\n    SimulateSearchAdminComponent,\r\n    ListBuildAdminComponent,\r\n    ListMakerAdminComponent,\r\n    NewEditMakerComponent,\r\n    NewEditBuildComponent,\r\n    FilterBuildComponent,\r\n    FilterMakerComponent,\r\n    DetailBuildAdminComponent,\r\n    ListSalespropAdminComponent,\r\n    DetailSalespropAdminComponent,\r\n    ListSalesAdminComponent,\r\n    ListOfficeAdminComponent,\r\n    NewEditOfficeComponent,\r\n    DialogGeneralComponent,\r\n  ],\r\n  entryComponents: [DialogGeneralComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    // IonicModule.forRoot({ mode: 'ios' }),\r\n    IonicModule.forRoot({ backButtonText: '' }),\r\n    IonicStorageModule.forRoot(),\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    AppMaterialModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatBottomSheetModule,\r\n    MatSnackBarModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    MatDividerModule,\r\n    CdkTableModule,\r\n    MatDatepickerModule,\r\n    NativeDateModule,\r\n    MatMomentDateModule,\r\n    NgCircleProgressModule.forRoot({\r\n      showInnerStroke: false,\r\n      responsive: true,\r\n    }),\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (check: UserSessionService) => () =>\r\n        check.checkValidSession(),\r\n      deps: [UserSessionService],\r\n      multi: true,\r\n    },\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <h1> Detalles de Asessor </h1>\\r\\n\\r\\n      <ion-card>\\r\\n\\r\\n\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle> {{adviser.name}} {{adviser.lastName}} </ion-card-subtitle>\\r\\n          <ion-card-title> {{adviser.name}} </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-item>\\r\\n          <ion-label>Email: {{adviser.email}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Hora inicio {{adviser.hourStart}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Hora fin {{adviser.hourEnd}}</ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n      </ion-card>\\r\\n      <!-- buyers -->\\r\\n      <h1 *ngIf=\\\"adviser.buyer && adviser.buyer.length > 0\\\"> Consumidores Asignados </h1>\\r\\n      <ion-card *ngFor=\\\"let buyer  of adviser.buyer \\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Consumidor {{buyer.name}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n      <!-- schedule -->\\r\\n      <h1 *ngIf=\\\"adviser.schedule && adviser.schedule.length > 0\\\"> Citas </h1>\\r\\n      <ion-card *ngFor=\\\"let schedule  of adviser.schedule \\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\r\\n    'state-amarillo': schedule.status === 'amarillo',\\r\\n    'state-rojo': schedule.status === 'rojo',\\r\\n    'state-azul': schedule.status === 'azul' }\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Propiedad {{schedule.property.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item text-wrap>Hora: {{formatHours(schedule.hour,schedule.minute)}}</ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>Lugar {{schedule.address}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n      <!-- Goals -->\\r\\n      <h1 *ngIf=\\\"adviser.goal && adviser.goal.length > 0\\\"> Metas Asignadas </h1>\\r\\n      <ion-card *ngFor=\\\"let goal  of adviser.goal \\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Meta {{goal.title}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Completado {{getPercentage(goal.goals)}}%</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n      <!-- Adquiridas -->\\r\\n      <h1 *ngIf=\\\" sales.length > 0\\\"> Propiedades Vendidas y Rentadas </h1>\\r\\n      <ion-card class=\\\"state-azul\\\" *ngFor=\\\"let sale  of sales \\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Propiedad {{sale.property.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Consumidor {{sale.buyer.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Cantidad ${{sale.price}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha {{formatDates(sale.timestamp)}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\r\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\r\\n\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { FormatHoursFront, GetPercentGoal } from '../../../_config/_helpers';\r\nimport { SaleService } from '../../../services/sale.service';\r\nimport { ISale } from '../../../models/sale.model';\r\n\r\n@Component({\r\n  selector: 'app-detail-adviser-admin',\r\n  templateUrl: './detail-adviser-admin.component.html',\r\n  styleUrls: ['./detail-adviser-admin.component.scss'],\r\n})\r\nexport class DetailAdviserAdminComponent implements OnInit {\r\n  isLoad = false;\r\n  isLiked = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  adviser: IAdviser;\r\n  sales: ISale[];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private adviserService: AdviserService,\r\n    private salesService: SaleService,\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params.id);\r\n      if (params.id) {\r\n        this.getAdviserById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getAdviserById(id: string) {\r\n    this.isLoad = false;\r\n    this.adviserService.getAdviserById(id).subscribe(adv => {\r\n      this.adviser = adv;\r\n      this.salesService.getSaleByIdAdv(id).subscribe(sales => {\r\n        console.log(this.adviser);\r\n        this.sales = sales;\r\n        this.isLoad = true;\r\n      });\r\n\r\n      if (adv.buyer && adv.buyer.length > 0) {\r\n      }\r\n    });\r\n  }\r\n  getPercentage(goals) {\r\n    return GetPercentGoal(goals);\r\n  }\r\n  formatDates(dateInput: Date): string {\r\n    const day: string = new Date(dateInput).getDate().toString();\r\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\r\n    const year: string = new Date(dateInput).getFullYear().toString();\r\n    const date = day + '/' + month + '/' + year;\r\n    return date;\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Obra\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then Load; else NoLoad\\\"></ng-container>\\r\\n    <ng-template #Load>\\r\\n      <h1>Detalles de: {{build.name}}</h1>\\r\\n      <ion-row>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <!-- [ngClass]=\\\"{'desktop-card': isDesktop }\\\" -->\\r\\n            <ion-card-header>\\r\\n              <ion-card-title>\\r\\n                Progreso\\r\\n              </ion-card-title>\\r\\n              <ion-card-content>\\r\\n                <app-goal-progress subtitle=\\\"Progreso\\\" [percent]=\\\"percent\\\"></app-goal-progress>\\r\\n                <ion-list lines=\\\"none\\\">\\r\\n                  <ion-list-header>Constructores de la Obra</ion-list-header>\\r\\n                  <ion-item lines=\\\"none\\\" *ngFor=\\\"let adv of build.maker\\\">\\r\\n                    {{adv.name}} {{adv.lastName}}\\r\\n                  </ion-item>\\r\\n                </ion-list>\\r\\n              </ion-card-content>\\r\\n            </ion-card-header>\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <ion-card-header>\\r\\n              <ion-card-title>\\r\\n                Lista de Fases\\r\\n              </ion-card-title>\\r\\n              <ion-card-subtitle *ngIf=\\\"checkAdminRol(user.type)\\\">Seleccione una fase para completar</ion-card-subtitle>\\r\\n\\r\\n            </ion-card-header>\\r\\n            <div *ngIf=\\\"checkAdminRol(user.type)\\\" class=\\\"flex-container\\\">\\r\\n              <mat-checkbox (change)=\\\"changeGoal()\\\" *ngFor=\\\"let item of build.timeLine; let i=index\\\" [(ngModel)]=\\\"item.isComplete\\\">\\r\\n                <h3>\\r\\n                  {{item.namePhase}}\\r\\n                </h3>\\r\\n                <div>\\r\\n                  {{item.notes}}\\r\\n                </div>\\r\\n                <div>\\r\\n                  Inicio: {{formatDates(item.yearToStart,item.monthToStart, item.dayToStart)}}\\r\\n                </div>\\r\\n                <div>\\r\\n                  Fin: {{formatDates(item.yearToEnd,item.monthToEnd, item.dayToEnd)}}\\r\\n                </div>\\r\\n              </mat-checkbox>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"!checkAdminRol(user.type)\\\">\\r\\n              <mat-list *ngFor=\\\"let item of build.timeLine; let i=index\\\">\\r\\n                <h3 matSubheader>\\r\\n                  <b>\\r\\n                    {{item.namePhase}}\\r\\n                  </b>\\r\\n                </h3>\\r\\n                <mat-list-item>\\r\\n                  <mat-icon [ngClass]=\\\"{'color-complete': item.isComplete, 'color-incomplete':!item.isComplete}\\\"\\r\\n                    matListIcon>{{item.isComplete ? 'assignment_turned_in':'assignment_late'}}</mat-icon>\\r\\n                  <h4 matLine>\\r\\n                    <b>\\r\\n                      {{item.isComplete ? 'Completada':'Sin Completar'}}\\r\\n                    </b>\\r\\n                  </h4>\\r\\n                  <p matLine> Inicio: {{formatDates(item.yearToStart,item.monthToStart, item.dayToStart)}} </p>\\r\\n                  <p matLine> Fin: {{formatDates(item.yearToEnd,item.monthToEnd, item.dayToEnd)}} </p>\\r\\n                  <p matLine> {{item.notes}} </p>\\r\\n                </mat-list-item>\\r\\n              </mat-list>\\r\\n            </span>\\r\\n\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <!-- Options grid -->\\r\\n      <div class=\\\"conteiner-buttons\\\">\\r\\n        <p style=\\\"text-align: left;\\\">Fotos de Fases</p>\\r\\n        <mat-button-toggle-group (change)=\\\"changeGrid($event)\\\">\\r\\n          <mat-button-toggle [checked]=\\\"!isList\\\" value=\\\"column\\\">\\r\\n            <mat-icon color=\\\"accent\\\">view_column</mat-icon>\\r\\n          </mat-button-toggle>\\r\\n          <mat-button-toggle [checked]=\\\"isList\\\" color=\\\"primary\\\" value=\\\"list\\\">\\r\\n            <mat-icon color=\\\"accent\\\">view_list</mat-icon>\\r\\n          </mat-button-toggle>\\r\\n        </mat-button-toggle-group>\\r\\n      </div>\\r\\n      <ng-container *ngIf=\\\"isList; then List; else Column\\\"></ng-container>\\r\\n      <ng-template #List>\\r\\n\\r\\n        <!-- Contenedor List -->\\r\\n        <ion-list style=\\\"margin-top: 1%\\\" *ngFor=\\\"let item of  build.timeLine; let i=index\\\">\\r\\n          <ion-list-header>\\r\\n            {{item.namePhase}}\\r\\n          </ion-list-header>\\r\\n          <!-- img -->\\r\\n          <ion-item *ngFor=\\\"let imgData of item.imagesData; let imgNumber=index\\\">\\r\\n            <ion-thumbnail slot=\\\"start\\\">\\r\\n              <ion-img [src]=\\\"imgData.url\\\"></ion-img>\\r\\n            </ion-thumbnail>\\r\\n            <ion-label text-wrap>\\r\\n              <h3>{{item.namePhase}}</h3>\\r\\n              <p><b>Notas: </b>{{imgData.notes}}</p>\\r\\n              <p><b>Fecha de Subida: </b>{{formatDates2(imgData.date)}}</p>\\r\\n            </ion-label>\\r\\n            <ion-button (click)=\\\"presentAlertConfirm(imgData.url,i,imgNumber)\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"danger\\\">\\r\\n              <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\r\\n              Borrar\\r\\n            </ion-button>\\r\\n          </ion-item>\\r\\n          <!-- img antes de subir -->\\r\\n          <span *ngFor=\\\"let prev of imgToUpload;  let ii=index\\\">\\r\\n            <ion-item *ngIf=\\\"prev.numPhase === i\\\">\\r\\n              <span>\\r\\n                <ion-thumbnail slot=\\\"start\\\">\\r\\n                  <ion-img [src]=\\\"prev.srcPrev\\\"></ion-img>\\r\\n                </ion-thumbnail>\\r\\n                <ion-label>\\r\\n                  <h3>Subir Foto</h3>\\r\\n                  <p></p>\\r\\n                </ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"prev.notes\\\" placeholder=\\\"Escribe algo referente\\\"></ion-input>\\r\\n                <ion-button shape=\\\"round\\\" fill=\\\"outline\\\" (click)=\\\"uploadImg(prev, ii, prev.notes)\\\" color=\\\"success\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n                  Subir\\r\\n                </ion-button>\\r\\n                <ion-button (click)=\\\"discartImg(ii)\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"danger\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\r\\n                  Descartar\\r\\n                </ion-button>\\r\\n              </span>\\r\\n\\r\\n            </ion-item>\\r\\n          </span>\\r\\n\\r\\n          <input id=\\\"imagen1\\\" accept=\\\"image/*\\\" name=\\\"imagen1\\\" type=\\\"file\\\" hidden (change)=\\\"fileChangeEvent($event)\\\">\\r\\n          <ion-button (click)=\\\"link(i)\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"secondary\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\r\\n            Agregar\\r\\n          </ion-button>\\r\\n        </ion-list>\\r\\n\\r\\n      </ng-template>\\r\\n      <ng-template #Column>\\r\\n        <!-- Contenedor de fases -->\\r\\n        <div class=\\\"conteiner-phases\\\" *ngFor=\\\"let phase of build.timeLine\\\">\\r\\n\\r\\n          <!-- fase titulo -->\\r\\n          <h2>{{phase.namePhase}}</h2>\\r\\n          <!-- contenedor imagenes -->\\r\\n          <div class=\\\"flex-img\\\">\\r\\n            <img *ngFor=\\\"let img of phase.imagesData\\\" [src]=\\\"img.url\\\" alt=\\\"\\\">\\r\\n          </div>\\r\\n          <!--  <button style=\\\"margin-left: 1%;\\\" mat-stroked-button color=\\\"accent\\\">\\r\\n            <mat-icon color=\\\"accent\\\">add</mat-icon>\\r\\n            Agregar\\r\\n          </button> -->\\r\\n          <!-- /contenedor imagenes -->\\r\\n        </div>\\r\\n\\r\\n        <!-- /Contenedor de fases -->\\r\\n      </ng-template>\\r\\n    </ng-template>\\r\\n    <ng-template #NoLoad>\\r\\n      <app-general-skeleton></app-general-skeleton>\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.flex-img {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.flex-img > * {\\n  padding: 1%;\\n  width: 300px;\\n  height: 300px; }\\n\\n.conteiner-buttons {\\n  padding: 3% 3% 0% 3%;\\n  text-align: right;\\n  margin-top: 8%; }\\n\\n/* .conteiner-buttons>* {\\r\\n    // background-color: var(--ion-color-primary);\\r\\n\\r\\n} */\\n\\n.conteiner-phases {\\n  padding: 1%; }\\n\\n.flex-img > .item {\\n  align-self: flex-end; }\\n\\n.color-complete {\\n  color: var(--ion-color-success); }\\n\\n.color-incomplete {\\n  color: var(--ion-color-warning); }\\n\\n@media (max-width: 900px) {\\n  .flex-img > * {\\n    padding: 1%;\\n    width: 100%;\\n    height: unset; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IBuild } from '../../../models/build.model';\r\nimport { BuildService } from '../../../services/build.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { ToastController, Platform, AlertController } from '@ionic/angular';\r\nimport { FormatDatesFront, FormatHoursFront } from '../../../_config/_helpers';\r\nimport { END_POINT } from '../../../_config/api.end-points';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-detail-build-admin',\r\n  templateUrl: './detail-build-admin.component.html',\r\n  styleUrls: ['./detail-build-admin.component.scss'],\r\n})\r\nexport class DetailBuildAdminComponent implements OnInit {\r\n  percent = 1;\r\n  isLoad = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  build: IBuild;\r\n  isDesktop = true;\r\n  isList = false;\r\n  formData: FormData;\r\n  imgName = '';\r\n  imgToUpload: {\r\n    numPhase: number;\r\n    srcPrev: string;\r\n    srcBlob: Blob;\r\n    name: string;\r\n    notes?: string;\r\n  }[] = [];\r\n  numItem;\r\n  // notas por img\r\n  notes: string[] = [];\r\n  user: IUserSession;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private buildService: BuildService,\r\n    private userSessionService: UserSessionService,\r\n    public toastController: ToastController,\r\n    private platform: Platform,\r\n    private alertController: AlertController,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.user = userSessionService.userSession.value;\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params.id) {\r\n        this.getGoalById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  checkAdminRol(userType: string): boolean {\r\n    if (userType === 'maker') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  getGoalById(id: string) {\r\n    this.isLoad = false;\r\n    this.buildService.getBuildById(id).subscribe(build => {\r\n      this.build = build;\r\n      console.log(build);\r\n      this.getPercent(build.timeLine);\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  getPercent(timeLine) {\r\n    let numOfComplete = 0;\r\n    timeLine.forEach(tl => {\r\n      if (tl.isComplete) {\r\n        numOfComplete++;\r\n      }\r\n    });\r\n    this.percent = (numOfComplete * 100) / timeLine.length;\r\n  }\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n  changeGoal() {\r\n    this.buildService.putBuild(this.build).subscribe(() => {\r\n      let m;\r\n      this.getPercent(this.build.timeLine);\r\n      if (this.percent === 100) {\r\n        this.presentToast('Se ha completado una Obra');\r\n        m = 'Se ha completado una Obra';\r\n      } else {\r\n        this.presentToast('Se ha modificado una Fase');\r\n        m = 'Se ha modificado una Fase';\r\n      }\r\n      this.notification(\r\n        m,\r\n        `Actualizacion de ${this.build.name}`,\r\n        'amarillo',\r\n        'build',\r\n        undefined,\r\n        this.build.maker.map(maker => maker._id),\r\n      );\r\n    });\r\n  }\r\n  changeGrid(value) {\r\n    this.isList = !this.isList;\r\n  }\r\n  formatDates(year, month, day): string {\r\n    const date = new Date(year, month, day);\r\n    return FormatDatesFront(date);\r\n  }\r\n  formatDates2(date: Date): string {\r\n    return FormatDatesFront(date);\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n  link(i) {\r\n    this.numItem = i;\r\n    const input = document.getElementById('imagen1').click();\r\n  }\r\n  // subir foto\r\n  fileChangeEvent(fileInput) {\r\n    const imgToUpload = <File>fileInput.target.files[0];\r\n    /*  if (imgToUpload.size > 200000) {\r\n      this.presentAlertImg(\r\n        'La imagen excede el límite de tamaño',\r\n        'Imagen no válida',\r\n      );\r\n    } else {\r\n      // img name\r\n      this.imgName = imgToUpload.name.slice(0, imgToUpload.name.indexOf('.'));\r\n      // preview\r\n      const reader = new FileReader();\r\n      reader.onload = r => {\r\n        this.render(reader.result);\r\n      };\r\n      reader.readAsDataURL(imgToUpload);\r\n    } */\r\n    // img name\r\n    this.imgName = imgToUpload.name.slice(0, imgToUpload.name.indexOf('.'));\r\n    // preview\r\n    const reader = new FileReader();\r\n    reader.onload = r => {\r\n      this.render(reader.result);\r\n    };\r\n    reader.readAsDataURL(imgToUpload);\r\n  }\r\n  render(src) {\r\n    const MAX_HEIGHT = 400;\r\n    const image = new Image();\r\n    image.onload = r => {\r\n      const canvas = document.createElement('canvas');\r\n      if (image.height > MAX_HEIGHT) {\r\n        image.width *= MAX_HEIGHT / image.height;\r\n        image.height = MAX_HEIGHT;\r\n      }\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n      ctx.drawImage(image, 0, 0, image.width, image.height);\r\n      canvas.toBlob(c => {\r\n        console.log(c);\r\n        if (c.size > 200000) {\r\n          this.presentAlertImg(\r\n            'La imagen excede el límite de tamaño',\r\n            'Imagen no válida',\r\n          );\r\n        } else {\r\n          this.imgToUpload.push({\r\n            numPhase: this.numItem,\r\n            srcPrev: src,\r\n            name: this.imgName,\r\n            srcBlob: c,\r\n          });\r\n        }\r\n      });\r\n    };\r\n    image.src = src;\r\n  }\r\n  /**\r\n   * Subir imagen Confirmado\r\n   * @param imgToUp imagen subir\r\n   * @param index index del prev\r\n   * @param notes notas\r\n   */\r\n  uploadImg(\r\n    imgToUp: {\r\n      numPhase: number;\r\n      srcPrev: string;\r\n      srcBlob: Blob;\r\n      name: string;\r\n    },\r\n    index,\r\n    notes: string,\r\n  ) {\r\n    // subir\r\n    // construir archivo\r\n    const file = new File([imgToUp.srcBlob], imgToUp.name + '.png', {\r\n      type: imgToUp.srcBlob.type,\r\n      lastModified: Date.now(),\r\n    });\r\n    // construir form\r\n    const formData = new FormData();\r\n    formData.append('imagen1', file);\r\n    // subir al server\r\n    this.buildService.uploadImg(formData).subscribe(arrStr => {\r\n      // espera respuesta\r\n      if (arrStr) {\r\n        // elimina del  arr prev\r\n        this.imgToUpload.splice(index, 1);\r\n        this.build.timeLine[imgToUp.numPhase].imagesData.push({\r\n          date: new Date(),\r\n          notes: notes,\r\n          url: END_POINT.IP + imgToUp.name + '.png',\r\n        });\r\n        // put al build\r\n        this.buildService.putBuild(this.build).subscribe(() => {\r\n          // noti\r\n          if (this.user.type === 'maker') {\r\n            this.notification(\r\n              'Nueva Foto',\r\n              `El constructor ${\r\n                this.user.name\r\n              } ha subido una foto de la construcción ${this.build.name}`,\r\n              'amarillo',\r\n              'build',\r\n              ['office'],\r\n              this.build.maker.map(m => m._id),\r\n            );\r\n          } else {\r\n            this.notification(\r\n              'Nueva Foto',\r\n              `Se ha subido una foto de la construcción ${this.build.name}`,\r\n              'amarillo',\r\n              'build',\r\n              undefined,\r\n              this.build.maker.map(m => m._id),\r\n            );\r\n          }\r\n\r\n          this.presentToast('Imagen Subida');\r\n        });\r\n      }\r\n    });\r\n  }\r\n  discartImg(index: number) {\r\n    this.imgToUpload.splice(index, 1);\r\n  }\r\n  deletedImg(imgURL: string, phase, index) {\r\n    console.log(imgURL);\r\n    const imgName = imgURL.slice(imgURL.lastIndexOf('/') + 1, imgURL.length);\r\n    console.log(imgName);\r\n    this.buildService.deletedImg(imgName).subscribe(() => {\r\n      this.build.timeLine[phase].imagesData.splice(index, 1);\r\n      this.buildService.putBuild(this.build).subscribe(() => {\r\n        this.presentToast('Imagen Borrada');\r\n      });\r\n    });\r\n  }\r\n  async presentAlertConfirm(url: string, phase, index) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Imagen',\r\n      message: `¿Desea eliminar imagen?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deletedImg(url, phase, index);\r\n      }\r\n    });\r\n  }\r\n  async presentAlertImg(message, header) {\r\n    const alert = await this.alertController.create({\r\n      header: header,\r\n      message: message,\r\n      buttons: [\r\n        {\r\n          text: 'Ok',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <h1> Detalles de Consumidor </h1>\\r\\n\\r\\n      <ion-card>\\r\\n\\r\\n\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle> {{buyer.name}} {{buyer.fatherLastName}} </ion-card-subtitle>\\r\\n          <ion-card-subtitle> Edad {{buyer.years}} </ion-card-subtitle>\\r\\n          <ion-card-title> {{buyer.name}} </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <!-- Principales -->\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <!-- Renta/venta -->\\r\\n              <ion-chip *ngIf=\\\"buyer.isRenter\\\" style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\r\\n                <ion-label>Renta</ion-label>\\r\\n              </ion-chip>\\r\\n              <ion-chip *ngIf=\\\"!buyer.isRenter\\\" style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\r\\n                <ion-label>Venta</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"expand\\\"></ion-chip-icon>\\r\\n                <ion-label><b>{{buyer.space}}</b> Espacio </ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\r\\n                <ion-label>Fecha <b>{{buyer.dateToBuy}}</b></ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"water\\\"></ion-chip-icon>\\r\\n                <ion-label><b>{{buyer.numBathrooms}}</b> Baños </ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\r\\n                <ion-label>Max <b>${{buyer.maxPrice}}</b></ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\r\\n                <ion-label>Min <b> ${{buyer.minPrice}}</b></ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"car\\\"></ion-chip-icon>\\r\\n                <ion-label><b>{{buyer.numCars}}</b> Estacionamiento </ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"bed\\\"></ion-chip-icon>\\r\\n                <ion-label><b>{{buyer.numRooms}}</b> Cuartos </ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n        <!-- otros -->\\r\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Otras</ion-card-subtitle>\\r\\n        <div class=\\\"container-details-buyer\\\">\\r\\n          <ion-item *ngIf=\\\"buyer.allServices\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Todos los servicios</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!buyer.allServices\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin los servicios</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.hasElevator\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Elevador</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!buyer.hasElevator\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin Elevador</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.hasGarden\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Jardin</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!buyer.hasGarden\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin Jardin</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.isClose\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Fraccionamineto Cerrado</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!buyer.isClose\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin Fraccionamineto Cerrado</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!buyer.isOld\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Nuevo</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.isOld\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Usado</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.isLowLevel\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Planta Baja</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!buyer.isLowLevel\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Cualquier num de piso</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.wayToBuy\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap> Forma de Compra: {{buyer.wayToBuy}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.zone\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap>Zona: {{buyer.zone}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.typeOfProperty\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap>Tipo de Propiedad: {{buyer.typeOfProperty}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.email\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap>Email: {{buyer.email}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"buyer.city\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap>Ciudad: {{buyer.city}}</ion-label>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n\\r\\n        <!-- tag -->\\r\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Etiquetas</ion-card-subtitle>\\r\\n        <div class=\\\"container-details-buyer\\\">\\r\\n          <div *ngFor=\\\"let tag of buyer.tag\\\">\\r\\n            # {{tag }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </ion-card>\\r\\n      <h1 *ngIf=\\\"buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0\\\"> Propiedades que le interesan </h1>\\r\\n      <ion-card *ngFor=\\\"let sbp  of buyer.statusBuyerProperty \\\" [ngClass]=\\\"{'state-verde': sbp.status === 'verde', \\r\\n        'state-amarillo': sbp.status === 'amarillo',\\r\\n        'state-rojo': sbp.status === 'rojo',\\r\\n        'state-azul': sbp.status === 'azul' }\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Fecha {{formatDates(sbp.timestamp)}}</ion-card-subtitle>\\r\\n          <ion-card-title>{{sbp.property.name}}</ion-card-title>\\r\\n        </ion-card-header>\\r\\n      </ion-card>\\r\\n      <!-- citas -->\\r\\n      <h1 *ngIf=\\\"buyer.schedule && buyer.schedule.length > 0\\\"> Citas </h1>\\r\\n      <ion-card *ngFor=\\\"let schedule  of buyer.schedule \\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\r\\n        'state-amarillo': schedule.status === 'amarillo',\\r\\n        'state-rojo': schedule.status === 'rojo',\\r\\n        'state-azul': schedule.status === 'azul' }\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Propiedad {{schedule.property.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}}</ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Lugar {{schedule.address}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n      <!-- Ofertas -->\\r\\n      <h1 *ngIf=\\\"buyer.ofert && buyer.ofert.length > 0\\\"> Ofertas </h1>\\r\\n      <ion-card *ngFor=\\\"let ofert  of buyer.ofert \\\" [ngClass]=\\\"{'state-verde': ofert.status === 'verde', \\r\\n         'state-amarillo': ofert.status === 'amarillo',\\r\\n         'state-rojo': ofert.status === 'rojo',\\r\\n         'state-azul': ofert.status === 'azul' }\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Propiedad {{ofert.property.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha {{formatDates(ofert.timestamp)}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Precio {{ofert.ofertPrice}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-card-content>\\r\\n          Notas {{ofert.notes}}\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n      <!-- credito -->\\r\\n      <h1 *ngIf=\\\"credits && credits.length > 0\\\"> Crédito </h1>\\r\\n      <ion-card *ngFor=\\\"let credit  of credits \\\" [ngClass]=\\\"{'state-verde': credit.status === 'verde', \\r\\n          'state-amarillo': credit.status === 'amarillo',\\r\\n          'state-rojo': credit.status === 'rojo',\\r\\n          'state-azul': credit.status === 'azul',\\r\\n            'state-secondary': !credit.status }\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Propiedad {{credit.property.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha {{formatDates(credit.timestamp)}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-card-content>\\r\\n          Notas {{credit.notes}}\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\r\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\r\\n\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".container-details-buyer {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 0% 10% 3% 10%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { IStatusBuyerProperty } from '../../../models/statusBuyerProperty.model';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { ICreditGet } from '../../../models/credit.model';\r\nimport { FormatHoursFront } from '../../../_config/_helpers';\r\n\r\n@Component({\r\n  selector: 'app-detail-buyer-admin',\r\n  templateUrl: './detail-buyer-admin.component.html',\r\n  styleUrls: ['./detail-buyer-admin.component.scss'],\r\n})\r\nexport class DetailBuyerAdminComponent implements OnInit {\r\n  isLoad = false;\r\n  isLiked = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  buyer: IBuyer;\r\n  credits: ICreditGet[] = [];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    public toastController: ToastController,\r\n    private statusBPService: StatusBuyerPropertyService,\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params.id);\r\n      if (params.id) {\r\n        this.getBuyerById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getBuyerById(id: string) {\r\n    this.isLoad = false;\r\n    this.buyerService.getBuyerById(id).subscribe(b => {\r\n      this.buyer = b;\r\n      this.credits = <any>b.credit;\r\n\r\n      console.log(this.buyer);\r\n\r\n      if (b.statusBuyerProperty && b.statusBuyerProperty.length > 0) {\r\n        this.arrSBP = b.statusBuyerProperty.map(\r\n          buyerProperty => buyerProperty._id,\r\n        );\r\n        this.arrPropLikes = b.statusBuyerProperty.map(\r\n          buyerProperty => buyerProperty.property._id,\r\n        );\r\n        console.log(this.arrSBP);\r\n      }\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n  formatDates(dateInput: Date): string {\r\n    const day: string = new Date(dateInput).getDate().toString();\r\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\r\n    const year: string = new Date(dateInput).getFullYear().toString();\r\n    const date = day + '/' + month + '/' + year;\r\n    return date;\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Objetivo\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then Load; else NoLoad\\\"></ng-container>\\r\\n    <ng-template #Load>\\r\\n      <h1>Detalles de: {{goal.title}}</h1>\\r\\n      <ion-row>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <!-- [ngClass]=\\\"{'desktop-card': isDesktop }\\\" -->\\r\\n            <ion-card-header>\\r\\n              <ion-card-title>\\r\\n                Progreso\\r\\n              </ion-card-title>\\r\\n              <ion-card-content>\\r\\n                <app-goal-progress subtitle=\\\"Progreso\\\" [percent]=\\\"percent\\\"></app-goal-progress>\\r\\n                <ion-list lines=\\\"none\\\">\\r\\n                  <ion-list-header>Asesores del Objetivo</ion-list-header>\\r\\n                  <ion-item lines=\\\"none\\\" *ngFor=\\\"let adv of goal.adviser\\\">\\r\\n                    {{adv.name}} {{adv.lastName}}\\r\\n                  </ion-item>\\r\\n                </ion-list>\\r\\n              </ion-card-content>\\r\\n            </ion-card-header>\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <ion-card-header>\\r\\n              <ion-card-title>\\r\\n                Lista de Objetivos\\r\\n              </ion-card-title>\\r\\n\\r\\n            </ion-card-header>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <mat-checkbox [disabled]=\\\"user.type === 'adviser' && goal.isByManagement\\\" (change)=\\\"changeGoal()\\\" *ngFor=\\\"let item of goal.goals; let i=index\\\"\\r\\n                [(ngModel)]=\\\"goal.goals[i].isComplete\\\">{{item.nameGoal}}</mat-checkbox>\\r\\n            </div>\\r\\n            <ion-list style=\\\"padding: 5%;\\\" lines=\\\"none\\\">\\r\\n              <ion-list-header>Otros Datos</ion-list-header>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label>\\r\\n                  <p><b>Contenido</b></p>\\r\\n                  <p>{{goal.content}}</p>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label>\\r\\n                  <p><b>Estatus</b></p>\\r\\n                  <p *ngIf=\\\"goal.status === 'verde'\\\">Bajo</p>\\r\\n                  <p *ngIf=\\\"goal.status === 'gris'\\\">Inicial</p>\\r\\n                  <p *ngIf=\\\"goal.status === 'amarillo'\\\">Medio</p>\\r\\n                  <p *ngIf=\\\"goal.status === 'rojo'\\\">Urgente</p>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label>\\r\\n                  <p><b>Fecha Inicio</b></p>\\r\\n                  <p>{{formatDates(goal.timestamp)}}</p>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label>\\r\\n                  <p><b>Fecha Fin</b></p>\\r\\n                  <p>{{fortmatDate2(goal.year, goal.month, goal.day)}}</p>\\r\\n                </ion-label>\\r\\n              </ion-item>\\r\\n\\r\\n            </ion-list>\\r\\n\\r\\n\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ng-template>\\r\\n    <ng-template #NoLoad>\\r\\n      <app-general-skeleton></app-general-skeleton>\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IGoal } from '../../../models/goal.model';\r\nimport { GoalService } from '../../../services/goal.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { ToastController, Platform } from '@ionic/angular';\r\nimport { FormatHoursFront, FormatDatesFront } from '../../../_config/_helpers';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\n\r\n@Component({\r\n  selector: 'app-detail-goal-admin',\r\n  templateUrl: './detail-goal-admin.component.html',\r\n  styleUrls: ['./detail-goal-admin.component.scss'],\r\n})\r\nexport class DetailGoalAdminComponent implements OnInit {\r\n  percent = 1;\r\n  isLoad = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  goal: IGoal;\r\n  isDesktop = true;\r\n  user: IUserSession;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private goalService: GoalService,\r\n    private userSessionService: UserSessionService,\r\n    public toastController: ToastController,\r\n    private platform: Platform,\r\n    private userSession: UserSessionService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params.id) {\r\n        this.getGoalById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getGoalById(id: string) {\r\n    this.isLoad = false;\r\n    this.goalService.getGoaltById(id).subscribe(goal => {\r\n      console.log(goal);\r\n      this.goal = goal;\r\n      this.getPercent(goal.goals);\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  getPercent(\r\n    goals: [\r\n      {\r\n        nameGoal: string;\r\n        isComplete: boolean;\r\n      }\r\n    ],\r\n  ) {\r\n    let numOfComplete = 0;\r\n    goals.forEach(goal => {\r\n      if (goal.isComplete) {\r\n        numOfComplete++;\r\n      }\r\n    });\r\n    this.percent = (numOfComplete * 100) / goals.length;\r\n  }\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n  changeGoal() {\r\n    this.goal.isComplete = false;\r\n    this.goalService.putGoal(this.goal).subscribe(() => {\r\n      this.getPercent(this.goal.goals);\r\n      if (this.percent === 100) {\r\n        this.goal.isComplete = true;\r\n        this.goalService.putGoal(this.goal).subscribe(() => {\r\n          this.presentToast('Se ha completado un objetivo');\r\n        });\r\n      }\r\n      this.presentToast('Se ha modificado una meta');\r\n    });\r\n  }\r\n  formatDates(dateInput: Date): string {\r\n    return FormatDatesFront(dateInput);\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n  fortmatDate2(year, montn, day) {\r\n    const date = new Date(year, montn, day);\r\n    return this.formatDates(date);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <h1> Característica </h1>\\r\\n\\r\\n      <ion-card>\\r\\n\\r\\n        <ion-card-header>\\r\\n          <ion-card-title> {{property.name}} </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <!-- Principales -->\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <!-- Renta/venta -->\\r\\n              <ion-chip *ngIf=\\\"property.isRent\\\" style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\r\\n                <ion-label>Renta</ion-label>\\r\\n              </ion-chip>\\r\\n              <ion-chip *ngIf=\\\"!property.isRent\\\" style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\r\\n                <ion-label>Venta</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"expand\\\"></ion-chip-icon>\\r\\n                <ion-label>Espacio {{property.space}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\r\\n                <ion-label>Fecha {{property.dateToBuy}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"water\\\"></ion-chip-icon>\\r\\n                <ion-label>Baños {{property.numBathrooms}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\r\\n                <ion-label>Max ${{property.maxPrice}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\r\\n                <ion-label>Min ${{property.minPrice}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"car\\\"></ion-chip-icon>\\r\\n                <ion-label>Estacionamiento {{property.numCars}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"bed\\\"></ion-chip-icon>\\r\\n                <ion-label>Cuartos {{property.numRooms}}</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n        <!-- otros -->\\r\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Otras</ion-card-subtitle>\\r\\n        <div class=\\\"container-details-property\\\">\\r\\n          <ion-item *ngIf=\\\"property.allServices\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Todos los servicios</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!property.allServices\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin los servicios</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.hasElevator\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Elevador</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!property.hasElevator\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin Elevador</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.hasGarden\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Jardin</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!property.hasGarden\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin Jardin</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.isClose\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Fraccionamineto Cerrado</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!property.isClose\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Sin Fraccionamineto Cerrado</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!property.isOld\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Nuevo</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.isOld\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Usado</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.isLowLevel\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Planta Baja</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!property.isLowLevel\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label>Cualquier num de piso</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.wayToBuy\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap> Forma de Compra: {{property.wayToBuy}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.zone\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap>Zona: {{property.zone}}</ion-label>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"property.typeOfProperty\\\">\\r\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n            <ion-label text-wrap>Tipo de Propiedad: {{property.typeOfProperty}}</ion-label>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n        <!-- files -->\\r\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Documentos</ion-card-subtitle>\\r\\n        <div class=\\\"container-details-property\\\">\\r\\n          <div *ngFor=\\\"let doc of property.files\\\">\\r\\n            <p>{{doc }}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- tag -->\\r\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Etiquetas</ion-card-subtitle>\\r\\n        <div class=\\\"container-details-property\\\">\\r\\n          <div *ngFor=\\\"let tag of property.tag\\\">\\r\\n            # {{tag }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </ion-card>\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\r\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\r\\n\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab *ngIf=\\\"isLoad && !property.isBuy\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"presentAlertCheckbox()\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"person-add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".container-details-property {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 0% 10% 3% 10%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { ToastController, AlertController } from '@ionic/angular';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { IStatusBuyerProperty } from '../../../models/statusBuyerProperty.model';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { AlertInput } from '@ionic/core';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-detail-prop-admin',\r\n  templateUrl: './detail-prop-admin.component.html',\r\n  styleUrls: ['./detail-prop-admin.component.scss'],\r\n})\r\nexport class DetailPropAdminComponent implements OnInit {\r\n  property: IProperty;\r\n  isLoad = false;\r\n  isLiked = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private propertyService: PropertyService,\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    public toastController: ToastController,\r\n    private statusBPService: StatusBuyerPropertyService,\r\n    public alertController: AlertController,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params.id);\r\n      if (params.id) {\r\n        this.getPropertyById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getPropertyById(id: string) {\r\n    this.propertyService.getPropertyById(id).subscribe(property => {\r\n      this.property = property;\r\n      console.log(this.property);\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  setPropToBuyer(data: string[]) {\r\n    data.forEach(buyerId => {\r\n      if (buyerId !== '') {\r\n        // noti\r\n        this.notification(\r\n          'Sugerencia de Propiedad',\r\n          `Se ha sugerido la propiedad ${this.property.name}`,\r\n          'gris',\r\n          'property',\r\n          buyerId,\r\n        );\r\n        this.buyerService.getBuyerById(buyerId).subscribe(b => {\r\n          b.property.push(<any>this.property._id);\r\n          this.buyerService.putBuyer(b).subscribe(() => {\r\n            this.presentToast('Propiedad Agregada a Cliente');\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n  async getBuyers() {\r\n    return await this.buyerService.getBuyerAll().toPromise();\r\n  }\r\n  async presentAlertCheckbox() {\r\n    const buyers = await this.getBuyers();\r\n    const inputsBuyer: AlertInput[] = [];\r\n    buyers.forEach(b => {\r\n      const findIndex = b.property.findIndex(p => p._id === this.property._id);\r\n      if (findIndex !== -1) {\r\n        inputsBuyer.push({\r\n          name: b.name,\r\n          type: 'checkbox',\r\n          label: b.name,\r\n          checked: true,\r\n          disabled: true,\r\n        });\r\n      } else {\r\n        inputsBuyer.push({\r\n          name: b.name,\r\n          type: 'checkbox',\r\n          label: b.name,\r\n          value: b._id,\r\n        });\r\n      }\r\n    });\r\n    const alert = await this.alertController.create({\r\n      header: 'Sugerir a Clientes',\r\n      inputs: inputsBuyer,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('');\r\n          },\r\n        },\r\n        {\r\n          text: 'Ok',\r\n          role: 'ok',\r\n          handler: () => {\r\n            console.log('');\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.setPropToBuyer(res.data.values);\r\n      }\r\n    });\r\n  }\r\n  // noti\r\n  private notification(title, message, status, type, receiversId: string) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      receiversId: [receiversId],\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, undefined, [receiversId])\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles de Apartado\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <h2>Propiedad apartada: {{sBP.property.name}}</h2>\\r\\n      <ion-row>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <ion-card-header>\\r\\n              <ion-card-title>Detalles del Apartado</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <ion-list lines=\\\"none\\\">\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Cliente:</b> </p>\\r\\n                    <p>{{sBP.buyer.name}}\\r\\n                    </p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>La propiedad fue apartado por:</b></p>\\r\\n                    <p> {{isCredit ? 'Crédito':'Oferta'}}</p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Fecha de apartado:</b> </p>\\r\\n                    <p>{{formatDates(sBP.timestamp)}}</p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n              </ion-list>\\r\\n            </ion-card-content>\\r\\n            <ion-card-content></ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\r\\n          <ion-card *ngIf=\\\"dayRest\\\" [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <ion-card-header>\\r\\n              <ion-card-title text-wrap>Tiempo Restante: {{dayRest}} dias</ion-card-title>\\r\\n              <ion-card-content>\\r\\n                <app-goal-progress [outerStrokeColor]=\\\"outerStrokeColor\\\" subtitle=\\\"Tiempo de espera\\\" [percent]=\\\"percent\\\"></app-goal-progress>\\r\\n\\r\\n              </ion-card-content>\\r\\n            </ion-card-header>\\r\\n          </ion-card>\\r\\n          <ion-card *ngIf=\\\"!dayRest\\\" [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <div class=\\\"alert\\r\\n            alert-danger\\\">\\r\\n              Se ha agotado el tiempo de espera\\r\\n            </div>\\r\\n            <ion-card-content>\\r\\n              <h3>El tiempo de espera es de 15 dias, la propiedad ya no esta en estado de apartada </h3>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!-- Credito / oferta -->\\r\\n      <ion-row>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let credit of getCredits(sBP)\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <ion-card-header>\\r\\n              <div style=\\\"text-align: right; margin-right: 2%\\\">\\r\\n                <ion-button slot=\\\"end\\\" [disabled]=\\\"!dayRest\\\" (click)=\\\"presentAlertPrompt('Crédito')\\\" color=\\\"danger\\\"\\r\\n                  fill=\\\"outline\\\">Firmar</ion-button>\\r\\n              </div>\\r\\n              <ion-card-title>Detalles del Crédito</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <ion-list lines=\\\"none\\\">\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Notas:</b> </p>\\r\\n                    <p>{{credit.notes}}\\r\\n                    </p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"document\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Documentos:</b> </p>\\r\\n                    <p *ngFor=\\\"let file of credit.files\\\">{{file}}</p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n              </ion-list>\\r\\n            </ion-card-content>\\r\\n            <ion-card-content></ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let ofert of getOferts(sBP)\\\">\\r\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n            <ion-card-header>\\r\\n              <div style=\\\"text-align: right; margin-right: 2%\\\">\\r\\n                <ion-button [disabled]=\\\"!dayRest\\\" (click)=\\\"presentAlertPrompt('Oferta', ofert.ofertPrice)\\\" slot=\\\"end\\\"\\r\\n                  color=\\\"danger\\\" fill=\\\"outline\\\">Firmar</ion-button>\\r\\n              </div>\\r\\n              <ion-card-title text-wrap>Detalles de la Oferta</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <ion-list lines=\\\"none\\\">\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Precio:</b> </p>\\r\\n                    <p>{{ofert.ofertPrice}}\\r\\n                    </p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Notas:</b></p>\\r\\n                    <p> {{ofert.notes}}</p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"document\\\"></ion-icon>\\r\\n                  <ion-label text-wrap>\\r\\n                    <p><b>Documentos:</b> </p>\\r\\n                    <p *ngFor=\\\"let file of ofert.files\\\">{{file}}</p>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n              </ion-list>\\r\\n            </ion-card-content>\\r\\n            <ion-card-content></ion-card-content>\\r\\n\\r\\n          </ion-card>\\r\\n        </ion-col>\\r\\n\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate>\\r\\n      <app-general-skeleton></app-general-skeleton>\\r\\n    </ng-template>\\r\\n\\r\\n  </ion-grid>\\r\\n  <!-- <button (click)=\\\"presentAlertCheckbox()\\\" class=\\\"mdc-fab mdc-fab--extended app-fab--absolute\\\">\\r\\n    <span class=\\\"material-icons mdc-fab__icon\\\">done</span>\\r\\n    <span class=\\\"mdc-fab__label\\\">Frimar</span>\\r\\n  </button> -->\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.alert {\\n  position: relative;\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 1rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem; }\\n\\n.alert-danger {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb; }\\n\\n.app-fab--absolute {\\n  position: fixed !important;\\n  bottom: 1rem;\\n  right: 1rem; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { Platform, ToastController, AlertController } from '@ionic/angular';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport {\r\n  IStatusBuyerProperty,\r\n  IStatusBuyerPropertyGet,\r\n} from '../../../models/statusBuyerProperty.model';\r\nimport { FormatDatesFront } from '../../../_config/_helpers';\r\nimport { AlertInput } from '@ionic/core';\r\nimport { IOfert } from '../../../models/ofert.model';\r\nimport { ICredit } from '../../../models/credit.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { SaleService } from '../../../services/sale.service';\r\nimport { ISale } from '../../../models/sale.model';\r\n\r\n@Component({\r\n  selector: 'app-detail-salesprop-admin',\r\n  templateUrl: './detail-salesprop-admin.component.html',\r\n  styleUrls: ['./detail-salesprop-admin.component.scss'],\r\n})\r\nexport class DetailSalespropAdminComponent implements OnInit {\r\n  isLoad = false;\r\n  isDesktop = false;\r\n  sBP: IStatusBuyerPropertyGet;\r\n  isOfert: boolean;\r\n  isCredit: boolean;\r\n  percent: number;\r\n  dayRest: number;\r\n  outerStrokeColor = '#f5811e';\r\n  constructor(\r\n    private statusBPService: StatusBuyerPropertyService,\r\n    private userSession: UserSessionService,\r\n    private propertyService: PropertyService,\r\n    private platform: Platform,\r\n    public toastController: ToastController,\r\n    public alertController: AlertController,\r\n    public route: ActivatedRoute,\r\n    public byuerService: BuyerService,\r\n    public saleService: SaleService,\r\n    private router: Router,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        if (params['ofert'] === 'false') {\r\n          this.isOfert = false;\r\n        } else {\r\n          this.isOfert = true;\r\n        }\r\n        if (params['credit'] === 'false') {\r\n          this.isCredit = false;\r\n        } else {\r\n          this.isCredit = true;\r\n        }\r\n\r\n        this.getSBPById(params['id']);\r\n      }\r\n    });\r\n  }\r\n  getSBPById(id: string) {\r\n    this.statusBPService.getStatusBuyerPropertyById(id).subscribe(sBP => {\r\n      this.isLoad = true;\r\n      console.log(sBP);\r\n      // 15 dias - 100%\r\n      const diffDays = 15 - this.deDiffDays(sBP.timestamp);\r\n      if (diffDays > 0) {\r\n        this.dayRest = diffDays;\r\n        this.percent = (diffDays * 100) / 15;\r\n      }\r\n      this.sBP = <any>sBP;\r\n    });\r\n  }\r\n  private deDiffDays(dateToDiference: Date) {\r\n    const date1 = new Date(dateToDiference);\r\n    const date2 = new Date();\r\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n  getOferts(sBP: IStatusBuyerPropertyGet): IOfert[] {\r\n    // rojo por oferta\r\n    return sBP.buyer.ofert.filter(\r\n      ofert => ofert.status === 'rojo' && ofert.property === sBP.property._id,\r\n    );\r\n  }\r\n  getCredits(sBP: IStatusBuyerPropertyGet): ICredit[] {\r\n    // rojo por credito\r\n    return sBP.buyer.credit.filter(\r\n      credit =>\r\n        credit.status === 'rojo' && credit.property === sBP.property._id,\r\n    );\r\n  }\r\n  async getAdv() {\r\n    return await this.byuerService\r\n      .getBuyerById(this.sBP.buyer._id)\r\n      .pipe(map(data => data.adviser))\r\n      .toPromise();\r\n  }\r\n\r\n  async presentAlertPrompt(str, oferPrice?) {\r\n    const propInput: AlertInput[] = [\r\n      {\r\n        name: 'price',\r\n        type: 'number',\r\n        value: this.isOfert ? oferPrice : this.sBP.property.maxPrice.toString(),\r\n        label: 'Costo Final',\r\n        placeholder: 'Costo Final',\r\n      },\r\n      {\r\n        name: 'note',\r\n        type: 'text',\r\n        placeholder: 'Notas',\r\n        value: str,\r\n      },\r\n      {\r\n        name: 'property',\r\n        type: 'text',\r\n        id: 'property-id',\r\n        value: this.sBP.property.name,\r\n        disabled: true,\r\n      },\r\n      {\r\n        name: 'buyer',\r\n        type: 'text',\r\n        value: this.sBP.buyer.name + this.sBP.buyer.fatherLastName,\r\n        placeholder: 'Consumidor',\r\n        disabled: true,\r\n      },\r\n    ];\r\n    const alert = await this.alertController.create({\r\n      header: 'Firmar',\r\n      subHeader: 'Llene los campos',\r\n      message: 'Al momento de aceptar la propiedad cambiará de estado',\r\n      inputs: propInput,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('');\r\n          },\r\n        },\r\n        {\r\n          text: 'Aceptar',\r\n          role: 'ok',\r\n          handler: () => {\r\n            console.log('');\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    await alert.onWillDismiss().then(res => {\r\n      console.log(res);\r\n      if (res.role === 'ok') {\r\n        console.log(res);\r\n        this.presentAlertCheckbox(res.data.values.price, res.data.values.note);\r\n      }\r\n    });\r\n  }\r\n  // asigna adv\r\n  async presentAlertCheckbox(price, note) {\r\n    const advInput: AlertInput[] = [];\r\n    const advisers: IAdviser[] = await this.getAdv();\r\n    advisers.forEach(adv => {\r\n      advInput.push({\r\n        name: 'adviser',\r\n        type: 'radio',\r\n        label: adv.name,\r\n        value: adv._id,\r\n      });\r\n    });\r\n    const alert = await this.alertController.create({\r\n      header: 'Asesor',\r\n      subHeader: 'Seleccione Asesor de renta/compra',\r\n      inputs: advInput,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('');\r\n          },\r\n        },\r\n        {\r\n          text: 'Firmar',\r\n          role: 'ok',\r\n          handler: () => {\r\n            console.log('');\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    await alert.onWillDismiss().then(res => {\r\n      console.log(res);\r\n      if (res.role === 'ok') {\r\n        this.changeStatus(res.data.values, note, price);\r\n      }\r\n    });\r\n  }\r\n  // cambiar status\r\n  changeStatus(adv, note, price) {\r\n    const Sale = {\r\n      adviser: adv,\r\n      isRent: this.sBP.property.isRent,\r\n      buyer: this.sBP.buyer._id,\r\n      property: this.sBP.property._id,\r\n      note: note,\r\n      price: +price,\r\n    };\r\n    console.log(Sale);\r\n    this.statusBPService.upgradeStatus(this.sBP._id, 'azul').subscribe(() => {\r\n      this.saleService.newSale(<any>Sale).subscribe(sale => {\r\n        const prop = { _id: this.sBP.property._id, isBuy: true };\r\n        this.propertyService.putProperty(prop).subscribe(() => {\r\n          console.log(sale);\r\n          const toast: NavigationExtras = {\r\n            queryParams: { res: 'Venta Concretada' },\r\n          };\r\n          this.router\r\n            .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n            .then(() => this.router.navigate(['list-salesprop-admin'], toast));\r\n        });\r\n      });\r\n    });\r\n  }\r\n  formatDates(date: Date) {\r\n    return FormatDatesFront(date);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <h1> Detalles de Propietario </h1>\\r\\n\\r\\n      <ion-card>\\r\\n\\r\\n\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle> {{seller.name}} {{seller.lastName}} </ion-card-subtitle>\\r\\n          <ion-card-title> {{seller.name}} </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-item>\\r\\n          <ion-label>Ciudad: {{seller.city}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label *ngIf=\\\"!seller.isRenter\\\">Tipo: Vendedor</ion-label>\\r\\n          <ion-label *ngIf=\\\"seller.isRenter\\\">Tipo: Renta</ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n      </ion-card>\\r\\n      <!-- prop -->\\r\\n      <h1 *ngIf=\\\"seller.property && seller.property.length > 0\\\">Propiedades </h1>\\r\\n      <ion-card *ngFor=\\\"let prop  of seller.property \\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Nombre {{prop.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Zona {{prop.zone}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n      <!-- schedule -->\\r\\n      <!--   <h1 *ngIf=\\\"adviser.schedule && adviser.schedule.length > 0\\\"> Citas </h1>\\r\\n      <ion-card *ngFor=\\\"let schedule  of adviser.schedule \\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\r\\n      'state-amarillo': schedule.status === 'amarillo',\\r\\n      'state-rojo': schedule.status === 'rojo',\\r\\n      'state-azul': schedule.status === 'azul' }\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Propiedad {{schedule.property.name}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha {{schedule.day}}/{{schedule.month}}/{{schedule.year}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"schedule.minute < 10\\\" text-wrap>Hora:\\r\\n          {{schedule.hour}}:0{{schedule.minute}}</ion-item>\\r\\n        <ion-item *ngIf=\\\"schedule.minute >= 10\\\" text-wrap>Hora:\\r\\n          {{schedule.hour}}:{{schedule.minute}}</ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Lugar {{schedule.address}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card> -->\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\r\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\r\\n\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ISeller } from '../../../models/seller.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { SellerService } from '../../../services/seller.service';\r\n\r\n@Component({\r\n  selector: 'app-detail-seller-admin',\r\n  templateUrl: './detail-seller-admin.component.html',\r\n  styleUrls: ['./detail-seller-admin.component.scss'],\r\n})\r\nexport class DetailSellerAdminComponent implements OnInit {\r\n  isLoad = false;\r\n  isLiked = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  seller: ISeller;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sellerService: SellerService,\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params.id);\r\n      if (params.id) {\r\n        this.getAdviserById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getAdviserById(id: string) {\r\n    this.isLoad = false;\r\n    this.sellerService.getSellerById(id).subscribe(seller => {\r\n      this.seller = seller;\r\n\r\n      console.log(this.seller);\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  formatDates(dateInput: Date): string {\r\n    const day: string = new Date(dateInput).getDate().toString();\r\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\r\n    const year: string = new Date(dateInput).getFullYear().toString();\r\n    const date = day + '/' + month + '/' + year;\r\n    return date;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Asesores\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-filter-adviser (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getAdviserAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-adviser>\\r\\n      </mat-drawer>\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Asesores </h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailAdv($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  TableColumsModel,\r\n  TableStatusChips,\r\n} from '../../../models/tableColums.model';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport {\r\n  Platform,\r\n  MenuController,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { OnlyDates } from '../../../_config/_helpers';\r\nimport { SaleService } from '../../../services/sale.service';\r\nimport { ISale } from '../../../models/sale.model';\r\n\r\n@Component({\r\n  selector: 'app-list-adviser-admin',\r\n  templateUrl: './list-adviser-admin.component.html',\r\n  styleUrls: ['./list-adviser-admin.component.scss'],\r\n})\r\nexport class ListAdviserAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // buyers\r\n  adviser: IAdviser[] = [];\r\n  realData: IAdviser[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private adviserService: AdviserService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n    private salesService: SaleService,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Apellido',\r\n        prop: 'lastName',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Fecha Alta',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: '# De Consumidores',\r\n        prop: 'numOfBuyers',\r\n        type: 'normal',\r\n      },\r\n      /* {\r\n        name: '# Renta/Venta',\r\n        prop: 'numOfSale',\r\n        type: 'normal',\r\n      }, */\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    this.getAdviserAll();\r\n  }\r\n  getAdviserAll() {\r\n    this.numOfFilters = 0;\r\n    this.adviserService.getAdviserAll().subscribe(adv => {\r\n      this.realData = adv;\r\n      this.adviser = adv;\r\n      this.setRows(this.realData);\r\n    });\r\n  }\r\n  async setRows(advisers: IAdviser[]) {\r\n    const rows = [];\r\n\r\n    advisers.forEach((adviser, i) => {\r\n      let numOfBuyers = 0;\r\n      if (adviser.buyer) {\r\n        numOfBuyers = adviser.buyer.length;\r\n      }\r\n      rows.push({\r\n        _id: adviser._id,\r\n        name: adviser.name,\r\n        lastName: adviser.lastName,\r\n        timestamp: adviser.timestamp,\r\n        numOfBuyers: numOfBuyers,\r\n        // numOfSale: arr[i],\r\n      });\r\n      this.rows = rows;\r\n      this.isLoading = true;\r\n    });\r\n  }\r\n  getNumOfSales(advisers: IAdviser[]) {\r\n    const arrNum: number[] = [];\r\n    advisers.forEach(async adviser => {\r\n      const sale = await this.salesService\r\n        .getSaleByIdAdv(adviser._id)\r\n        .toPromise();\r\n      arrNum.push(sale.length);\r\n    });\r\n    return arrNum;\r\n  }\r\n  newBuyer() {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: 'new' },\r\n    };\r\n    this.router.navigate(['new-edit-adviser']);\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-adviser'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(adviser: IAdviser) {\r\n    this.adviserService\r\n      .deletedAdviserById(adviser._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getAdviserAll();\r\n      });\r\n  }\r\n  detailAdv(buyer: IAdviser) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: buyer._id },\r\n    };\r\n    this.router.navigate(['detail-adviser-admin'], data);\r\n  }\r\n  async presentAlertConfirm(adviser: IAdviser) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Usuario',\r\n      message: `¿Desea eliminar usuario: <strong>${adviser.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(adviser);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    status: string;\r\n  }) {\r\n    const advFinded = this.adviser.filter(adv => OnlyDates(adv, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.status) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Obras\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer2 class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-filter-build (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getBuildAll()\\\" (closeMenu)=\\\"drawer2.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-build>\\r\\n      </mat-drawer>\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer2.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer2.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer2.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Obras </h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailBuild($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuild()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { IBuild } from '../../../models/build.model';\r\nimport { BuildService } from '../../../services/build.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { FilerBuild } from '../../../_config/_helpers';\r\n\r\n@Component({\r\n  selector: 'app-list-build-admin',\r\n  templateUrl: './list-build-admin.component.html',\r\n  styleUrls: ['./list-build-admin.component.scss'],\r\n})\r\nexport class ListBuildAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // buildings\r\n  buildings: IBuild[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private buildService: BuildService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: '#Constructores',\r\n        prop: 'maker',\r\n        type: 'number',\r\n      },\r\n      {\r\n        name: 'Ciudad',\r\n        prop: 'city',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Fecha Inicio',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Fecha Fin',\r\n        prop: 'dateToEnd',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Completado',\r\n        prop: 'isComplete',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'notas',\r\n        prop: 'notes',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    this.getBuildAll();\r\n  }\r\n  getBuildAll() {\r\n    this.numOfFilters = 0;\r\n    this.buildService.getBuildAll().subscribe(buildings => {\r\n      this.buildings = buildings;\r\n      console.log(buildings);\r\n      this.setRows(this.buildings);\r\n    });\r\n  }\r\n  setRows(buildings: IBuild[]) {\r\n    const rows = [];\r\n\r\n    buildings.forEach(build => {\r\n      let dateToEnd = new Date();\r\n      let isComplete = true;\r\n      if (build.timeLine) {\r\n        const lastIndex = build.timeLine.length - 1;\r\n        if (build.timeLine.length > 0) {\r\n          build.timeLine.forEach(tl => {\r\n            if (tl.isComplete === false || tl.isComplete === undefined) {\r\n              isComplete = false;\r\n            }\r\n          });\r\n          const lastPhase = build.timeLine[lastIndex];\r\n          dateToEnd = new Date(\r\n            lastPhase.yearToEnd,\r\n            lastPhase.monthToEnd,\r\n            lastPhase.dayToEnd,\r\n          );\r\n        }\r\n      }\r\n      rows.push({\r\n        _id: build._id,\r\n        name: build.name,\r\n        maker: build.maker.length,\r\n        city: build.city,\r\n        notes: build.notes,\r\n        timestamp: build.timestamp,\r\n        dateToEnd: dateToEnd,\r\n        isComplete: isComplete,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  newBuild() {\r\n    this.router.navigate(['new-edit-build']);\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-build'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(prop: IBuild) {\r\n    this.buildService\r\n      .deltedBuildById(prop._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getBuildAll();\r\n      });\r\n  }\r\n  detailBuild(prop: IBuild) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: prop._id },\r\n    };\r\n    this.router.navigate(['detail-build-admin'], data);\r\n  }\r\n  async presentAlertConfirm(prop: IBuild) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Obra',\r\n      message: `¿Desea eliminar obra: <strong>${prop.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(prop);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getFilters(filters) {\r\n    console.log(filters);\r\n    const advFinded = this.buildings.filter(b => FilerBuild(b, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isComplete !== undefined || filters.isComplete !== null) {\r\n      numFilters++;\r\n    }\r\n    if (filters.day2) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month2) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year2) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Clientes\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-general-filter-buyer (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getBuyerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-general-filter-buyer>\\r\\n      </mat-drawer>\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Clientes </h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailBuyer($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab *ngIf=\\\"user.type !== 'seller'\\\" vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\\r\\n<ion-footer *ngIf=\\\"(user.type === 'adviser' || user.type === 'seller') && sales\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"sendToTotalSales()\\\" fill=\\\"solid\\\" color=\\\"secondary\\\">\\r\\n        Ventas<ion-badge color=\\\"dark\\\" style=\\\" margin-left: 2%;\\\">{{sales.length}}</ion-badge>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\\n.toast-adv {\\n  --background: #f5bd8d;\\n  --color: black;\\n  font-size: 15px; }\\n\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  TableColumsModel,\r\n  TableStatusChips,\r\n} from '../../../models/tableColums.model';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport {\r\n  Platform,\r\n  MenuController,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { BuyersFilters } from '../../../_config/_helpers';\r\nimport { MatDrawer } from '@angular/material';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { SaleService } from '../../../services/sale.service';\r\nimport { ISale } from '../../../models/sale.model';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { ISeller } from '../../../models/seller.model';\r\n\r\n@Component({\r\n  selector: 'app-list-buyer-admin',\r\n  templateUrl: './list-buyer-admin.component.html',\r\n  styleUrls: ['./list-buyer-admin.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ListBuyerAdminComponent implements OnInit {\r\n  drawer: MatDrawer;\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  rows$: Observable<IBuyer[]>;\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // buyers\r\n  buyers: IBuyer[] = [];\r\n  realData: IBuyer[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n  user: IUserSession;\r\n  sales: ISale[];\r\n  constructor(\r\n    private buyerService: BuyerService,\r\n    private sBPService: StatusBuyerPropertyService,\r\n    private platform: Platform,\r\n    public menuCtr: MenuController,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    private userSession: UserSessionService,\r\n    private storage: Storage,\r\n    private saleService: SaleService,\r\n    private sellerService: SellerService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Apellido',\r\n        prop: 'fatherLastName',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Fecha Alta',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Teléfono',\r\n        prop: 'phone',\r\n        type: 'phone',\r\n      },\r\n      {\r\n        name: 'Estado',\r\n        prop: 'properties',\r\n        type: 'status',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted:\r\n          this.user.type === 'administrator' || this.user.type === 'office'\r\n            ? true\r\n            : false,\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    this.getBuyerAll();\r\n  }\r\n  getBuyerAll() {\r\n    this.numOfFilters = 0;\r\n    if (this.user.type === 'administrator' || this.user.type === 'office') {\r\n      // si es admin\r\n      this.buyerService.getBuyerAll().subscribe(buyers => {\r\n        this.realData = buyers;\r\n        this.buyers = buyers;\r\n        this.setRows(this.realData);\r\n      });\r\n    } else if (this.user.type === 'adviser') {\r\n      // si es adviser\r\n      this.toastPresent(`Bienvenido ${this.user.name}`);\r\n      this.buyerService.getBuyerAll().subscribe(buyers => {\r\n        // filtra por id en buyer !!!\r\n        const buyerFilter = buyers.filter(b => {\r\n          return !!b.adviser.find(adv => adv._id === this.user.id);\r\n        });\r\n        this.realData = buyerFilter;\r\n        this.buyers = buyerFilter;\r\n        this.setRows(this.realData);\r\n        this.getTotalSales();\r\n      });\r\n    } else if (this.user.type === 'seller') {\r\n      // si es seller\r\n      this.toastPresent(`Bienvenido ${this.user.name}`);\r\n      this.buyerService.getBuyerAll().subscribe(buyers => {\r\n        this.sellerService.getSellerById(this.user.id).subscribe(seller => {\r\n          console.log(buyers);\r\n          console.log(seller);\r\n          // todos lo que le dieron me guta a las propiedades del seller\r\n          const buyerFilter = buyers.filter(b => {\r\n            return !!b.statusBuyerProperty.find(sbp => {\r\n              return !!seller.property.find(p => p._id === sbp.property._id);\r\n            });\r\n          });\r\n          console.log(buyerFilter);\r\n          this.setRows(buyerFilter);\r\n          this.getTotalSalesBySeller(seller);\r\n        });\r\n      });\r\n    }\r\n  }\r\n  setRows(buyers: IBuyer[]) {\r\n    /* this.rows = [];\r\n    this.rows.length = 0; */\r\n    const rows = [];\r\n\r\n    buyers.forEach(buyer => {\r\n      const properties: TableStatusChips[] = [];\r\n      if (buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0) {\r\n        buyer.statusBuyerProperty.forEach(sBP => {\r\n          properties.push({\r\n            name: sBP.property.name,\r\n            status: sBP.status,\r\n          });\r\n        });\r\n      } else {\r\n        properties.push({\r\n          name: 'Sin interés',\r\n          status: 'gris',\r\n        });\r\n      }\r\n      rows.push({\r\n        _id: buyer._id,\r\n        name: buyer.name,\r\n        fatherLastName: buyer.fatherLastName,\r\n        timestamp: buyer.timestamp,\r\n        phone: buyer.phone,\r\n        properties: properties,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  newBuyer() {\r\n    /* this.router.navigate(['new-buyer']);\r\n    this.rows.length = 0; */\r\n    this.router.navigate(['new-buyer']);\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-buyer'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(buyer: IBuyer) {\r\n    this.buyerService\r\n      .deletedBuyer(buyer)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getBuyerAll();\r\n      });\r\n  }\r\n  detailBuyer(buyer: IBuyer) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: buyer._id },\r\n    };\r\n    this.router.navigate(['detail-buyer-admin'], data);\r\n  }\r\n  getTotalSales() {\r\n    this.saleService.getSaleByIdAdv(this.user.id).subscribe(sales => {\r\n      this.sales = sales;\r\n    });\r\n  }\r\n  getTotalSalesBySeller(seller: ISeller) {\r\n    this.saleService.getSale().subscribe(sales => {\r\n      this.sales = sales.filter(s => {\r\n        return !!seller.property.find(p => p._id === s.property._id);\r\n      });\r\n    });\r\n  }\r\n  sendToTotalSales() {\r\n    if (this.sales.length > 0) {\r\n      this.router.navigate(['list-sales-admin']);\r\n    }\r\n  }\r\n  async presentAlertConfirm(buyer: IBuyer) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Usuario',\r\n      message: `¿Desea eliminar usuario: <strong>${buyer.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {},\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(buyer);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    status: string;\r\n  }) {\r\n    const buyersFinded = this.buyers.filter(buyer =>\r\n      BuyersFilters(buyer, filters),\r\n    );\r\n    //  setea buyers\r\n    this.setRows(buyersFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.status) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  }\r\n  async toastPresent(m = 'Eventos pendientes hoy') {\r\n    const isPresent = await this.storage.get('alert-adv');\r\n    if (+isPresent !== new Date().getDate()) {\r\n      const toast = await this.toastController.create(<any>{\r\n        message: m,\r\n        position: 'bottom',\r\n        showCloseButton: false,\r\n        cssClass: 'toast-adv',\r\n        duration: 4000,\r\n      });\r\n      toast.present();\r\n      toast.onWillDismiss().then(() => {\r\n        this.storage.set('alert-adv', new Date().getDate());\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Créditos\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\r\\n      </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Créditos</h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab> -->\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  TableColumsModel,\r\n  TableStatusChips,\r\n} from '../../../models/tableColums.model';\r\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\r\nimport { CreditService } from '../../../services/credit.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { ISeller } from '../../../models/seller.model';\r\nimport { SellerFilter } from '../../../_config/_helpers';\r\n\r\n@Component({\r\n  selector: 'app-list-credit-admin',\r\n  templateUrl: './list-credit-admin.component.html',\r\n  styleUrls: ['./list-credit-admin.component.scss'],\r\n})\r\nexport class ListCreditAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // credit\r\n  credits: ICreditGet[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private creditService: CreditService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre Consumidor',\r\n        prop: 'buyerName',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Nombre Prop',\r\n        prop: 'propertyName',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Notas',\r\n        prop: 'notes',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Modificado',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Estado',\r\n        prop: 'properties',\r\n        type: 'status',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n      },\r\n    ];\r\n    this.getCreditAll();\r\n  }\r\n  getCreditAll() {\r\n    this.numOfFilters = 0;\r\n    this.creditService.getCredit().subscribe(credits => {\r\n      this.credits = <any>credits;\r\n      console.log(credits);\r\n      this.setRows(this.credits);\r\n    });\r\n  }\r\n  setRows(credits: ICreditGet[]) {\r\n    const rows = [];\r\n\r\n    credits.forEach(credit => {\r\n      const properties: TableStatusChips[] = [];\r\n      if (credit.status) {\r\n        if (credit.status === 'verde') {\r\n          properties.push({\r\n            name: 'Interés',\r\n            status: credit.status,\r\n          });\r\n        } else if (credit.status === 'amarillo') {\r\n          properties.push({\r\n            name: 'Negociación',\r\n            status: credit.status,\r\n          });\r\n        } else if (credit.status === 'rojo') {\r\n          properties.push({\r\n            name: 'Respuesta',\r\n            status: credit.status,\r\n          });\r\n        } else if (credit.status === 'azul') {\r\n          properties.push({\r\n            name: 'Post Venta',\r\n            status: credit.status,\r\n          });\r\n        }\r\n      }\r\n      rows.push({\r\n        _id: credit._id,\r\n        buyerName: credit.buyer.name,\r\n        propertyName: credit.property.name,\r\n        notes: credit.notes,\r\n        timestamp: credit.timestamp,\r\n        properties: properties,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  edit(item) {\r\n    console.log(item);\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-credit'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(c: ICredit) {\r\n    this.creditService\r\n      .deleteCredit(c._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getCreditAll();\r\n      });\r\n  }\r\n  async presentAlertConfirm(c) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Credito',\r\n      message: `¿Desea eliminar credito ?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(c);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  /*   getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    isRenter: boolean;\r\n  }) {\r\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isRenter) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  } */\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Objetivos\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n            [opened]=\\\"openMenu\\\">\\r\\n            <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n              [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\r\\n          </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n            </ion-button>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n            </ion-button>\\r\\n          </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Objetivos</h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detail($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newOfert()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  TableColumsModel,\r\n  TableStatusChips,\r\n} from '../../../models/tableColums.model';\r\nimport { IGoal } from '../../../models/goal.model';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { ToastController, AlertController, Platform } from '@ionic/angular';\r\nimport { OfertService } from '../../../services/ofert.service';\r\nimport { IOfert } from '../../../models/ofert.model';\r\nimport { GoalService } from '../../../services/goal.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\n\r\n@Component({\r\n  selector: 'app-list-goals',\r\n  templateUrl: './list-goals.component.html',\r\n  styleUrls: ['./list-goals.component.scss'],\r\n})\r\nexport class ListGoalsComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // goals\r\n  goals: IGoal[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n  user: IUserSession;\r\n  constructor(\r\n    private goalService: GoalService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public route: ActivatedRoute,\r\n    private userSession: UserSessionService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Titulo Objetivo',\r\n        prop: 'title',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Número de Asesores',\r\n        prop: 'adviser',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Grupal',\r\n        prop: 'isByManagement',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'Inicio',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Fin',\r\n        prop: 'dateToFinish',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Contenido',\r\n        prop: 'content',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Estado',\r\n        prop: 'status',\r\n        type: 'status',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    this.getGoalAll();\r\n  }\r\n  getGoalAll() {\r\n    this.isLoading = false;\r\n    this.numOfFilters = 0;\r\n    if (this.user.type === 'adviser') {\r\n      this.goalService.getGoal().subscribe(goal => {\r\n        this.goals = goal.filter(g => {\r\n          return !!g.adviser.find(adv => adv._id === this.user.id);\r\n        });\r\n        this.setRows(this.goals);\r\n      });\r\n    } else {\r\n      this.goalService.getGoal().subscribe(goal => {\r\n        this.goals = goal;\r\n        this.setRows(this.goals);\r\n      });\r\n    }\r\n  }\r\n  newOfert() {\r\n    this.router.navigate(['new-edit-goal']);\r\n  }\r\n  setRows(goals: IGoal[]) {\r\n    const rows = [];\r\n\r\n    goals.forEach(goal => {\r\n      const properties: TableStatusChips[] = [];\r\n      if (goal.status) {\r\n        if (goal.status === 'amarillo') {\r\n          properties.push({\r\n            name: 'Media',\r\n            status: goal.status,\r\n          });\r\n        } else if (goal.status === 'gris') {\r\n          properties.push({\r\n            name: 'En Espera',\r\n            status: goal.status,\r\n          });\r\n        } else if (goal.status === 'verde') {\r\n          properties.push({\r\n            name: 'Baja',\r\n            status: goal.status,\r\n          });\r\n        } else if (goal.status === 'rojo') {\r\n          properties.push({\r\n            name: 'Urgente',\r\n            status: goal.status,\r\n          });\r\n        } else if (goal.status === 'azul') {\r\n          properties.push({\r\n            name: 'Cumplida',\r\n            status: goal.status,\r\n          });\r\n        }\r\n      }\r\n      console.log(properties);\r\n      rows.push({\r\n        _id: goal._id,\r\n        adviser: goal.adviser.length,\r\n        isByManagement: goal.isByManagement,\r\n        title: goal.title,\r\n        content: goal.content,\r\n        timestamp: goal.timestamp,\r\n        dateToFinish: new Date(goal.year, goal.month, goal.day),\r\n        status: properties,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  edit(item) {\r\n    console.log(item);\r\n    if (item.isByManagement && this.user.type !== 'adviser') {\r\n      const data: NavigationExtras = {\r\n        queryParams: { id: item._id },\r\n      };\r\n      this.router.navigate(['new-edit-goal'], data);\r\n    } else if (this.user.type === 'adviser') {\r\n      this.presentToast('Acceso denegado');\r\n    }\r\n    if (!item.isByManagement) {\r\n      const data: NavigationExtras = {\r\n        queryParams: { id: item._id },\r\n      };\r\n      this.router.navigate(['new-edit-goal'], data);\r\n    }\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(c: IGoal) {\r\n    this.goalService\r\n      .deleteGoal(c._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getGoalAll();\r\n      });\r\n  }\r\n  detail(item: IGoal) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['detail-goal-admin'], data);\r\n  }\r\n  async presentAlertConfirm(c) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Meta',\r\n      message: `¿Desea eliminar meta ?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(c);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  /*   getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    isRenter: boolean;\r\n  }) {\r\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isRenter) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  } */\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Constructores\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\r\\n      </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Constructores</h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuild()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { IMaker } from '../../../models/maker.model';\r\nimport { MakerService } from '../../../services/maker.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list-maker-admin',\r\n  templateUrl: './list-maker-admin.component.html',\r\n  styleUrls: ['./list-maker-admin.component.scss'],\r\n})\r\nexport class ListMakerAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // makers\r\n  makers: IMaker[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private makerService: MakerService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Apellido',\r\n        prop: 'lastName',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Obra',\r\n        prop: 'build',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Fecha Alta',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Ciudad',\r\n        prop: 'city',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Correo',\r\n        prop: 'email',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Teléfono',\r\n        prop: 'phone',\r\n        type: 'phone',\r\n      },\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n      },\r\n    ];\r\n    this.getMakerAll();\r\n  }\r\n  getMakerAll() {\r\n    this.isLoading = false;\r\n    this.numOfFilters = 0;\r\n    this.makerService.getMakerAll().subscribe(makers => {\r\n      this.makers = makers;\r\n      console.log(makers);\r\n      this.setRows(this.makers);\r\n    });\r\n  }\r\n  setRows(makers: IMaker[]) {\r\n    const rows = [];\r\n\r\n    makers.forEach(maker => {\r\n      let nameBuild;\r\n      if (maker.build && maker.build.name) {\r\n        nameBuild = maker.build.name;\r\n      } else {\r\n        nameBuild = 'Sin Obra Asignada';\r\n      }\r\n      rows.push({\r\n        _id: maker._id,\r\n        name: maker.name,\r\n        lastName: maker.lastName,\r\n        build: nameBuild,\r\n        city: maker.city,\r\n        email: maker.email,\r\n        phone: maker.phone,\r\n        timestamp: maker.timestamp,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  newBuild() {\r\n    this.router.navigate(['new-edit-maker']);\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-maker'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(prop: IMaker) {\r\n    this.makerService\r\n      .deltedMakerById(prop._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getMakerAll();\r\n      });\r\n  }\r\n  detailBuild(prop: IMaker) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: prop._id },\r\n    };\r\n    this.router.navigate(['detail-build-admin'], data);\r\n  }\r\n  async presentAlertConfirm(prop: IMaker) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Constructor',\r\n      message: `¿Desea eliminar constructor: <strong>${prop.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(prop);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  /*  getFilters(filters) {\r\n    console.log(filters);\r\n    const advFinded = this.buildings.filter(b => FilerBuild(b, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isComplete !== undefined || filters.isComplete !== null) {\r\n      numFilters++;\r\n    }\r\n    if (filters.day2) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month2) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year2) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  } */\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Ofertas\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n          [opened]=\\\"openMenu\\\">\\r\\n          <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n            [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\r\\n        </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n          </ion-button>\\r\\n        </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Ofertas</h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newOfert()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  TableColumsModel,\r\n  TableStatusChips,\r\n} from '../../../models/tableColums.model';\r\nimport { IOfert } from '../../../models/ofert.model';\r\nimport { OfertService } from '../../../services/ofert.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { ICreditGet, ICredit } from '../../../models/credit.model';\r\n\r\n@Component({\r\n  selector: 'app-list-oferts-admin',\r\n  templateUrl: './list-oferts-admin.component.html',\r\n  styleUrls: ['./list-oferts-admin.component.scss'],\r\n})\r\nexport class ListOfertsAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // ofert\r\n  oferts: IOfert[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private ofertService: OfertService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre Consumidor',\r\n        prop: 'buyer',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Nombre Prop',\r\n        prop: 'property',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Notas',\r\n        prop: 'notes',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Modificado',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Estado',\r\n        prop: 'properties',\r\n        type: 'status',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n      },\r\n    ];\r\n    this.getOfertAll();\r\n  }\r\n  getOfertAll() {\r\n    this.numOfFilters = 0;\r\n    this.ofertService.getOfert().subscribe(oferts => {\r\n      this.oferts = oferts;\r\n      console.log(oferts);\r\n      this.setRows(this.oferts);\r\n    });\r\n  }\r\n  newOfert() {\r\n    this.navCtr.navigateRoot('new-edit-ofert');\r\n  }\r\n  setRows(oferts: IOfert[]) {\r\n    const rows = [];\r\n\r\n    oferts.forEach(ofert => {\r\n      const properties: TableStatusChips[] = [];\r\n      if (ofert.status) {\r\n        if (ofert.status === 'amarillo') {\r\n          properties.push({\r\n            name: 'Negociación',\r\n            status: ofert.status,\r\n          });\r\n        } else if (ofert.status === 'rojo') {\r\n          properties.push({\r\n            name: 'Respuesta',\r\n            status: ofert.status,\r\n          });\r\n        }\r\n      }\r\n      rows.push({\r\n        _id: ofert._id,\r\n        buyer: ofert.buyer.name,\r\n        property: ofert.property.name,\r\n        notes: ofert.notes,\r\n        timestamp: ofert.timestamp,\r\n        properties: properties,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  edit(item) {\r\n    console.log(item);\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-ofert'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(c: IOfert) {\r\n    this.ofertService\r\n      .deleteOfertById(c._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getOfertAll();\r\n      });\r\n  }\r\n  async presentAlertConfirm(c) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Oferta',\r\n      message: `¿Desea eliminar oferta ?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(c);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  /*   getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    isRenter: boolean;\r\n  }) {\r\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isRenter) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  } */\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Oficinista\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n          [opened]=\\\"openMenu\\\">\\r\\n          <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n            [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\r\\n        </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n          </ion-button>\\r\\n        </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Oficinistas</h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newOffice()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  TableColumsModel,\r\n  TableStatusChips,\r\n} from '../../../models/tableColums.model';\r\nimport { IOffice } from '../../../models/office.model';\r\nimport { OfficeService } from '../../../services/office.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list-office-admin',\r\n  templateUrl: './list-office-admin.component.html',\r\n  styleUrls: ['./list-office-admin.component.scss'],\r\n})\r\nexport class ListOfficeAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // office\r\n  office: IOffice[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private officeService: OfficeService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Teléfono',\r\n        prop: 'phone',\r\n        type: 'phone',\r\n      },\r\n      {\r\n        name: 'Correo',\r\n        prop: 'email',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Fecha Alta',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n      },\r\n    ];\r\n    this.getOfficeAll();\r\n  }\r\n  getOfficeAll() {\r\n    this.isLoading = false;\r\n    this.numOfFilters = 0;\r\n    this.officeService.getOffice().subscribe(officies => {\r\n      this.office = officies;\r\n      this.setRows(this.office);\r\n    });\r\n  }\r\n  newOffice() {\r\n    this.navCtr.navigateRoot('new-edit-office');\r\n  }\r\n  setRows(offices: IOffice[]) {\r\n    const rows = [];\r\n    offices.forEach(office => {\r\n      rows.push({\r\n        _id: office._id,\r\n        name: office.name,\r\n        email: office.email,\r\n        phone: office.phone,\r\n        timestamp: office.timestamp,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-office'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(c: IOffice) {\r\n    this.officeService\r\n      .deleteOfficeById(c._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getOfficeAll();\r\n      });\r\n  }\r\n  async presentAlertConfirm(c) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Oficinista',\r\n      message: `¿Desea eliminar oficinista?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {},\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(c);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  /*   getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    isRenter: boolean;\r\n  }) {\r\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isRenter) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  } */\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propiedades\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getPropAll()\\\" (closeMenuMaterial)=\\\"drawer.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-general-filters>\\r\\n      </mat-drawer>\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Propiedades </h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailProp($event)\\\" [isIcon]=\\\"!isDesktop\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { PropertyFilter } from '../../../_config/_helpers';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { SellerService } from '../../../services/seller.service';\r\n\r\n@Component({\r\n  selector: 'app-list-prop-admin',\r\n  templateUrl: './list-prop-admin.component.html',\r\n  styleUrls: ['./list-prop-admin.component.scss'],\r\n})\r\nexport class ListPropAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // prop\r\n  properties: IProperty[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n  user: IUserSession;\r\n\r\n  constructor(\r\n    private propertyService: PropertyService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n    private userSession: UserSessionService,\r\n    private sellerService: SellerService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Precio Max',\r\n        prop: 'maxPrice',\r\n        type: 'money',\r\n      },\r\n      {\r\n        name: 'Precio Min',\r\n        prop: 'minPrice',\r\n        type: 'money',\r\n      },\r\n      {\r\n        name: 'Fecha Alta',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Nuevo',\r\n        prop: 'isOld',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'Tipo',\r\n        prop: 'typePop',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Adquirida',\r\n        prop: 'isBuy',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    this.getPropAll();\r\n  }\r\n  getPropAll() {\r\n    if (this.user.type === 'seller') {\r\n      this.numOfFilters = 0;\r\n      this.propertyService.getAllSpecial().subscribe(prop => {\r\n        this.sellerService.getSellerById(this.user.id).subscribe(seller => {\r\n          this.properties = prop.filter(p => {\r\n            return !!seller.property.find(ps => ps._id === p._id);\r\n          });\r\n          this.setRows(this.properties);\r\n        });\r\n      });\r\n    } else {\r\n      this.numOfFilters = 0;\r\n      this.propertyService.getAllSpecial().subscribe(prop => {\r\n        this.properties = prop;\r\n        console.log(prop);\r\n        this.setRows(prop);\r\n      });\r\n    }\r\n  }\r\n  setRows(properties: IProperty[]) {\r\n    const rows = [];\r\n\r\n    properties.forEach(property => {\r\n      let typePop = 'Vende';\r\n      let iconName;\r\n      if (property.isRent) {\r\n        typePop = 'Renta';\r\n      }\r\n      if (property.typeOfProperty === 'departamento') {\r\n        iconName = 'business';\r\n      }\r\n      if (property.typeOfProperty === 'casa') {\r\n        iconName = 'home';\r\n      }\r\n      rows.push({\r\n        _id: property._id,\r\n        name: property.name,\r\n        maxPrice: property.maxPrice,\r\n        minPrice: property.minPrice,\r\n        isOld: !property.isOld,\r\n        timestamp: property.timestamp,\r\n        typePop: typePop,\r\n        isBuy: property.isBuy,\r\n        iconName: iconName,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  newBuyer() {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: 'new' },\r\n    };\r\n    this.navCtr.navigateRoot('new-edit-prop');\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-prop'], data);\r\n    // this.navCtr.navigateRoot('new-buyer', false, data);\r\n  }\r\n  deleted(prop: IProperty) {\r\n    this.propertyService\r\n      .deletedById(prop._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getPropAll();\r\n      });\r\n  }\r\n  detailProp(prop: IProperty) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: prop._id },\r\n    };\r\n    this.router.navigate(['detail-prop-admin'], data);\r\n  }\r\n  async presentAlertConfirm(prop: IProperty) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Usuario',\r\n      message: `¿Desea eliminar propiedad: <strong>${prop.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(prop);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getFilters(filters: IProperty) {\r\n    console.log(filters);\r\n    const advFinded = this.properties.filter(prop => {\r\n      const temp = PropertyFilter(filters, prop);\r\n      this.numOfFilters = temp.numOfFilters;\r\n      return temp.isHope;\r\n    });\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propiedades Adquiridas\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!--  <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n            [opened]=\\\"openMenu\\\">\\r\\n            <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getPropAll()\\\" (closeMenuMaterial)=\\\"drawer.close()\\\"\\r\\n              [isDesktop]=\\\"isDesktop\\\"></app-general-filters>\\r\\n          </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n            </ion-button>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n            </ion-button>\\r\\n          </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Propiedades Adquiridas </h2>\\r\\n      <p>Se muestan las propiedades que estan en estado \\\"Azul\\\" y estan compradas/rentadas </p>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n      <!-- Resumen -->\\r\\n      <mat-card [class.mat-elevation-z0]=\\\"true\\\" class=\\\"border-sumary\\\">\\r\\n        <mat-card-title>\\r\\n          Resumen\\r\\n        </mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <mat-chip-list>\\r\\n            <mat-chip class=\\\"background-secondary\\\">Total de Propiedades Adquiridas: {{totalSales}}</mat-chip>\\r\\n            <mat-chip class=\\\"background-secondary\\\">Total de Propiedades Rentadas: {{totalSalesOfRent}}</mat-chip>\\r\\n            <mat-chip class=\\\"background-secondary\\\">Total de Propiedades Vendidas: {{totalSalesOfBuy}}</mat-chip>\\r\\n            <mat-chip class=\\\"background-secondary\\\">Costo Total: ${{totalCost}}</mat-chip>\\r\\n            <mat-chip *ngIf=\\\"user.type !== 'adviser'\\\" class=\\\"background-secondary\\\">Asesor Mayor Ventas: {{advTop.name}}</mat-chip>\\r\\n          </mat-chip-list>\\r\\n        </mat-card-content>\\r\\n\\r\\n      </mat-card>\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab> -->\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { IStatusBuyerPropertyGet } from '../../../models/statusBuyerProperty.model';\r\nimport { PropertyFilter } from '../../../_config/_helpers';\r\nimport { SaleService } from '../../../services/sale.service';\r\nimport { ISale } from '../../../models/sale.model';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { SellerService } from '../../../services/seller.service';\r\n\r\n@Component({\r\n  selector: 'app-list-sales-admin',\r\n  templateUrl: './list-sales-admin.component.html',\r\n  styleUrls: ['./list-sales-admin.component.scss'],\r\n})\r\nexport class ListSalesAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n  sales: ISale[] = [];\r\n  advTop: IAdviser;\r\n  totalSales: number;\r\n  totalSalesOfRent: number;\r\n  totalSalesOfBuy: number;\r\n  totalCost: number;\r\n  user: IUserSession;\r\n  constructor(\r\n    private propertyService: PropertyService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n    private salesService: SaleService,\r\n    private userSession: UserSessionService,\r\n    private sellerService: SellerService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Consumidor',\r\n        prop: 'buyer',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Propiedad',\r\n        prop: 'property',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Asesor',\r\n        prop: 'adviser',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Notas',\r\n        prop: 'note',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Renta',\r\n        prop: 'isRent',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'Costo',\r\n        prop: 'price',\r\n        type: 'money',\r\n      },\r\n      {\r\n        name: 'Fecha Adquisición',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n\r\n      /*  {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonDetails: true,\r\n      }, */\r\n    ];\r\n    this.getSales();\r\n  }\r\n  getSales() {\r\n    this.isLoading = false;\r\n    if (this.user.type === 'adviser') {\r\n      this.salesService.getSaleByIdAdv(this.user.id).subscribe(sales => {\r\n        this.sales = sales;\r\n        this.setRows(sales);\r\n        this.getSumary(sales);\r\n      });\r\n    } else if (this.user.type === 'seller') {\r\n      this.salesService.getSale().subscribe(sales => {\r\n        this.sellerService.getSellerById(this.user.id).subscribe(seller => {\r\n          this.sales = sales.filter(s => {\r\n            return !!seller.property.find(p => p._id === s.property._id);\r\n          });\r\n          this.setRows(this.sales);\r\n          this.getSumary(this.sales);\r\n        });\r\n      });\r\n    } else {\r\n      this.salesService.getSale().subscribe(sales => {\r\n        this.sales = sales;\r\n        this.setRows(sales);\r\n        this.getSumary(sales);\r\n      });\r\n    }\r\n  }\r\n  setRows(sales: ISale[]) {\r\n    const rows = [];\r\n    sales.forEach(sale => {\r\n      rows.push({\r\n        _id: sale._id,\r\n        buyer: sale.buyer.name,\r\n        property: sale.property.name,\r\n        adviser: sale.adviser.name,\r\n        isRent: sale.isRent,\r\n        price: sale.price,\r\n        note: sale.note,\r\n        timestamp: sale.timestamp,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  /*  detailProp(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id, credit: item.credit, ofert: item.ofert },\r\n    };\r\n    this.router.navigate(['detail-salesprop-admin'], data);\r\n  } */\r\n  async presentAlertConfirm(prop: IProperty) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Usuario',\r\n      message: `¿Desea eliminar propiedad: <strong>${prop.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      /*  if (res.role === 'ok') {\r\n        this.deleted(prop);\r\n      } */\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getSumary(sales: ISale[]) {\r\n    const add = (a, b) => a + b;\r\n    this.totalSales = sales.length;\r\n    this.totalSalesOfRent = sales.filter(s => s.isRent).length;\r\n    this.totalSalesOfBuy = sales.filter(s => !s.isRent).length;\r\n    this.totalCost = sales.map(s => s.price).reduce(add);\r\n    // adv number\r\n    let numMax = 0;\r\n    sales.map(s => s.adviser).forEach(adv => {\r\n      const num = sales.filter(s => s.adviser._id === adv._id).length;\r\n      if (num > numMax) {\r\n        numMax = num;\r\n        this.advTop = adv;\r\n      }\r\n    });\r\n  }\r\n  /*   getFilters(filters: IProperty) {\r\n    console.log(filters);\r\n    const advFinded = this.properties.filter(prop => {\r\n      const temp = PropertyFilter(filters, prop);\r\n      this.numOfFilters = temp.numOfFilters;\r\n      return temp.isHope;\r\n    });\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n  } */\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propiedades\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <!--  <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n          [opened]=\\\"openMenu\\\">\\r\\n          <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getPropAll()\\\" (closeMenuMaterial)=\\\"drawer.close()\\\"\\r\\n            [isDesktop]=\\\"isDesktop\\\"></app-general-filters>\\r\\n        </mat-drawer> -->\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n          </ion-button>\\r\\n        </ion-item> -->\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Propiedades Apartadas </h2>\\r\\n      <p>Se muestan las propiedades en estado \\\"Cerrado\\\" o \\\"Rojo\\\" debido a una oferta y/o crédito </p>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"true\\\" (deletedButton)=\\\"presentAlertConfirm($event)\\\"\\r\\n        (detailsButton)=\\\"detailProp($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab> -->\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { PropertyFilter } from '../../../_config/_helpers';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport {\r\n  IStatusBuyerProperty,\r\n  IStatusBuyerPropertyGet,\r\n} from '../../../models/statusBuyerProperty.model';\r\n\r\n@Component({\r\n  selector: 'app-list-salesprop-admin',\r\n  templateUrl: './list-salesprop-admin.component.html',\r\n  styleUrls: ['./list-salesprop-admin.component.scss'],\r\n})\r\nexport class ListSalespropAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // prop\r\n  properties: IProperty[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private propertyService: PropertyService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n    private statusBPService: StatusBuyerPropertyService,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Consumidor',\r\n        prop: 'buyer',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Propiedad',\r\n        prop: 'property',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Ofertas',\r\n        prop: 'ofert',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'Creditos',\r\n        prop: 'credit',\r\n        type: 'boolean',\r\n      },\r\n      {\r\n        name: 'Fecha Actualización',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    // this.getPropAll();\r\n    this.getSBP();\r\n  }\r\n  /*   getPropAll() {\r\n    this.numOfFilters = 0;\r\n    this.propertyService.getAll().subscribe(prop => {\r\n      this.properties = prop;\r\n      console.log(prop);\r\n      this.setRows(prop);\r\n    });\r\n  } */\r\n  getSBP() {\r\n    this.isLoading = false;\r\n    this.statusBPService.getStatusBuyerProperty().subscribe(sBPs => {\r\n      this.setRows(<any>sBPs);\r\n    });\r\n  }\r\n  setRows(sBPs: IStatusBuyerPropertyGet[]) {\r\n    const rows = [];\r\n    // CAMBIAR !!! --------------------------\r\n    sBPs.filter(s => s.status === 'rojo').forEach(sBP => {\r\n      // rojo por credito\r\n      const isCredidRed = sBP.buyer.credit.find(\r\n        credit =>\r\n          credit.status === 'rojo' &&\r\n          credit.property === sBP.property._id &&\r\n          credit.isAccept,\r\n      );\r\n      // rojo por oferta\r\n      const isOfertRed = sBP.buyer.ofert.find(\r\n        ofert =>\r\n          ofert.status === 'rojo' &&\r\n          ofert.property === sBP.property._id &&\r\n          ofert.isAccept,\r\n      );\r\n      if (isOfertRed || isCredidRed) {\r\n        rows.push({\r\n          _id: sBP._id,\r\n          buyer: sBP.buyer.name,\r\n          property: sBP.property.name,\r\n          credit: !!isCredidRed,\r\n          ofert: !!isOfertRed,\r\n          timestamp: sBP.timestamp,\r\n        });\r\n      }\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  detailProp(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id, credit: item.credit, ofert: item.ofert },\r\n    };\r\n    this.router.navigate(['detail-salesprop-admin'], data);\r\n  }\r\n  async presentAlertConfirm(prop: IProperty) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Usuario',\r\n      message: `¿Desea eliminar propiedad: <strong>${prop.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      /*  if (res.role === 'ok') {\r\n        this.deleted(prop);\r\n      } */\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getFilters(filters: IProperty) {\r\n    console.log(filters);\r\n    const advFinded = this.properties.filter(prop => {\r\n      const temp = PropertyFilter(filters, prop);\r\n      this.numOfFilters = temp.numOfFilters;\r\n      return temp.isHope;\r\n    });\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar translucent color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Calendario\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-header>\\r\\n  <ion-toolbar color=\\\"secondary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button *ngIf=\\\"showFullCalendar\\\" (click)=\\\"backOne()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title *ngIf=\\\"showFullCalendar\\\" style=\\\"text-align: center\\\">{{month[monthNumber]}} {{year}}</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"showFullCalendar = !showFullCalendar; getEvents(); \\\" slot=\\\"end\\\">{{showFullCalendar ? '' :\\r\\n        'Ver calendario'}}\\r\\n        <ion-icon slot=\\\"icon-only\\\" [name]=\\\"showFullCalendar ? 'clipboard' : 'calendar'\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button *ngIf=\\\"showFullCalendar\\\" (click)=\\\"fowardOne()\\\" slot=\\\"end\\\">\\r\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed style=\\\"height: 100%;\\\">\\r\\n    <span *ngIf=\\\"isLoad\\\">\\r\\n      <ng-container *ngIf=\\\"showFullCalendar; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n      <ng-template #thenTemplate>\\r\\n        <!-- calendario general -->\\r\\n        <app-general-calendar [year]=\\\"year\\\" [month]=\\\"monthNumber\\\" [schedules]=\\\"schedule\\\" (calendarSelect)=\\\"calendarSelect($event)\\\"\\r\\n          (alertOfToday)=\\\"toastPresent()\\\"></app-general-calendar>\\r\\n      </ng-template>\\r\\n      <ng-template #elseTemplate>\\r\\n        <h2 *ngIf=\\\"isAll\\\">Todos los Eventos</h2>\\r\\n        <h2 *ngIf=\\\"!isAll\\\">Mostrando Eventos del {{dateDaySelect}}</h2>\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-button *ngIf=\\\"!isAll\\\" shape=\\\"round\\\" color=\\\"secondary\\\" (click)=\\\"getEvents(); isAll=true; \\\">Mostrar todos</ion-button>\\r\\n          <ion-button *ngIf=\\\"!isAll\\\" shape=\\\"round\\\" (click)=\\\"newEventByDate(dayItem)\\\">Crear Evento este\\r\\n            dia</ion-button>\\r\\n          <ion-button *ngIf=\\\"isAll\\\" shape=\\\"round\\\" (click)=\\\"newEventByDate()\\\">Crear Evento Nuevo</ion-button>\\r\\n        </ion-item>\\r\\n        <ion-card *ngFor=\\\"let item of schedule\\\" [ngClass]=\\\"{'state-verde': item.status === 'verde', \\r\\n          'state-amarillo':  item.status === 'amarillo',\\r\\n          'state-rojo':  item.status === 'rojo',\\r\\n          'state-gris': item.status === 'gris',\\r\\n          'state-azul':  item.status === 'azul',\\r\\n          'desktop-card': isDesktop    }\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>\\r\\n              fecha Modificación: {{formatDate(item.timestamp)}}\\r\\n            </ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>\\r\\n              Evento: {{formatState(item.status)}}\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.buyer\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Cliente:</b> </p>\\r\\n                <p>{{item.buyer.name}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.adviser\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Asesor:</b> </p>\\r\\n                <p>{{item.adviser.name}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.seller\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Propietario:</b> </p>\\r\\n                <p>{{item.seller.name}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.property\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Propiedad:</b> </p>\\r\\n                <p>{{item.property.name}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.address\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"pin\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Lugar:</b> </p>\\r\\n                <p>{{item.address}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.day\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Fecha del Evento:</b> </p>\\r\\n                <p>{{item.day}}/{{item.month + 1}}/{{item.year}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" *ngIf=\\\"item.day\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"time\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Hora del Evento:</b> </p>\\r\\n                <p>{{formatHours(item.hour,item.minute)}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <!-- <ion-item lines=\\\"none\\\" *ngIf=\\\"item.status\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Estado:</b> </p>\\r\\n                <p *ngIf=\\\"item.status === 'gris'\\\">Cita Generada</p>\\r\\n                <p *ngIf=\\\"item.status === 'verde'\\\">Propuesta Cita</p>\\r\\n                <p *ngIf=\\\"item.status === 'amarillo'\\\">Esperando Visita</p>\\r\\n                <p *ngIf=\\\"item.status === 'rojo'\\\">Visitada</p>\\r\\n              </ion-label>\\r\\n            </ion-item> -->\\r\\n            <ion-item *ngIf=\\\"item.note\\\" lines=\\\"none\\\">\\r\\n              <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n              <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                <p><b>Notas:</b> </p>\\r\\n                <p>{{item.note}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"item.scoreByAdviser\\\" lines=\\\"none\\\">\\r\\n              <ion-chip [ngClass]=\\\"\\r\\n                {\\r\\n                'background-verde': item.scoreByAdviser === 'verde', \\r\\n                'background-amarillo':  item.scoreByAdviser === 'amarillo',\\r\\n                'background-rojo':  item.scoreByAdviser === 'rojo',\\r\\n                'background-gris': item.scoreByAdviser === 'gris',\\r\\n                'background-azul':  item.scoreByAdviser === 'azul'\\r\\n              }\\\">\\r\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"eye\\\"></ion-chip-icon>\\r\\n                <ion-label *ngIf=\\\"item.scoreByAdviser ===  'verde'\\\">Poco interés</ion-label>\\r\\n                <ion-label *ngIf=\\\"item.scoreByAdviser ===  'amarillo'\\\">Oportunidad de venta</ion-label>\\r\\n                <ion-label *ngIf=\\\"item.scoreByAdviser ===  'rojo'\\\">Venta muy probable</ion-label>\\r\\n                <ion-label *ngIf=\\\"item.scoreByAdviser ===  'gris'\\\">No hay interés</ion-label>\\r\\n                <ion-label *ngIf=\\\"item.scoreByAdviser ===  'azul'\\\">Muy bien</ion-label>\\r\\n              </ion-chip>\\r\\n            </ion-item>\\r\\n          </ion-card-content>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-button *ngIf=\\\"!item.administrator && !item.personal && user.type === 'adviser' && item.status === 'amarillo' && comparateDate(item.year, item.month, item.day) \\\"\\r\\n              (click)=\\\"presentAlertVisit(item)\\\" color=\\\"warning\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Calificar <ion-icon name=\\\"clipboard\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"!item.administrator && !item.personal\\\" (click)=\\\"newEventById(item._id)\\\" color=\\\"success\\\"\\r\\n              fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Editar <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"item.administrator || item.personal \\\" (click)=\\\"editEventPersonalById(item._id)\\\" color=\\\"success\\\"\\r\\n              fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Editar Evento Personal <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button (click)=\\\"presentAlertConfirm(item._id)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Borrar <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n          </ion-item>\\r\\n        </ion-card>\\r\\n      </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n    </span>\\r\\n    <span *ngIf=\\\"!isLoad\\\">\\r\\n      <app-general-skeleton></app-general-skeleton>\\r\\n    </span>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \"/* .toast-alert {\\r\\n    .toast-container {\\r\\n        background-color: #ffcdcd;\\r\\n        border-left: 5px solid red;\\r\\n        color: black\\r\\n    }\\r\\n\\r\\n    .toast-button {\\r\\n        color: black\\r\\n    }\\r\\n} */\\n.icon-chip-detail {\\n  border-radius: 50%;\\n  background-color: black;\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ISchedule } from '../../../models/schedule.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport {\r\n  NavController,\r\n  AlertController,\r\n  ToastController,\r\n} from '@ionic/angular';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { ScheduleService } from '../../../services/schedule.service';\r\nimport { FormatDatesFront, FormatHoursFront } from '../../../_config/_helpers';\r\nimport { Storage } from '@ionic/storage';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-list-schedule-admin',\r\n  templateUrl: './list-schedule-admin.component.html',\r\n  styleUrls: ['./list-schedule-admin.component.scss'],\r\n})\r\nexport class ListScheduleAdminComponent implements OnInit {\r\n  month = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  year: number;\r\n  monthNumber: number;\r\n  schedule: ISchedule[];\r\n  isLoad = false;\r\n  showFullCalendar = true;\r\n  dateDaySelect;\r\n  isAll: boolean;\r\n  dayItem;\r\n  user: IUserSession;\r\n  constructor(\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    private navController: NavController,\r\n    private router: Router,\r\n    private scheduleService: ScheduleService,\r\n    public alertController: AlertController,\r\n    private userService: UserSessionService,\r\n    private toastController: ToastController,\r\n    private storage: Storage,\r\n    public route: ActivatedRoute,\r\n    private oneSignalService: OnesignalService,\r\n    private sellerService: SellerService,\r\n  ) {\r\n    this.user = userService.userSession.value;\r\n    this.monthNumber = new Date().getMonth();\r\n    this.year = new Date().getFullYear();\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.getEvents();\r\n    this.isAll = true;\r\n  }\r\n  ngOnInit() {\r\n    /* const buyer = this.userSessionService.userSession.value;\r\n    this.buyerService.getBuyerById(buyer.id).subscribe(b => {\r\n      this.schedule = b.schedule;\r\n      this.isLoad = true;\r\n    }); */\r\n  }\r\n  calendarSelect(item: { year: number; month: number; day: number }) {\r\n    if (item.day !== 0) {\r\n      const isFinded = this.schedule.filter(\r\n        s =>\r\n          s.day === item.day && s.month === item.month && s.year === item.year,\r\n      );\r\n      if (isFinded.length > 0) {\r\n        this.dateDaySelect = FormatDatesFront(\r\n          new Date(item.year, item.month, item.day),\r\n        );\r\n        this.schedule = isFinded;\r\n        this.showFullCalendar = false;\r\n        this.isAll = false;\r\n        this.dayItem = item;\r\n      } else {\r\n        this.newEventByDate(item);\r\n      }\r\n    }\r\n  }\r\n  getEvents() {\r\n    this.isLoad = false;\r\n\r\n    this.isAll = true;\r\n    this.scheduleService.getSchedule().subscribe(schedules => {\r\n      const user = this.userService.userSession.value;\r\n      console.table(this.schedule);\r\n      if (user.type === 'administrator') {\r\n        this.schedule = schedules.filter(s => !s.personal);\r\n      } else if (user.type === 'adviser') {\r\n        this.schedule = schedules.filter(\r\n          s =>\r\n            (s.adviser && s.adviser._id === user.id) ||\r\n            (s.personal && s.personal === user.id),\r\n        );\r\n      } else if (user.type === 'office') {\r\n        this.schedule = schedules.filter(\r\n          s => !s.administrator || (s.personal && s.personal === user.id),\r\n        );\r\n      } else if (user.type === 'seller') {\r\n        this.schedule = schedules.filter(\r\n          s =>\r\n            (s.seller && s.seller._id === user.id) ||\r\n            (s.personal && s.personal === user.id),\r\n        );\r\n      }\r\n      this.schedule.sort((a, b) => {\r\n        // Turn your strings into dates, and then subtract them\r\n        // to get a value that is either negative, positive, or zero.\r\n        return <any>new Date(b.timestamp) - <any>new Date(a.timestamp);\r\n      });\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  newEventByDate(date?: { year: number; month: number; day: number }) {\r\n    if (date) {\r\n      const data: NavigationExtras = {\r\n        queryParams: { day: date.day, month: date.month, year: date.year },\r\n      };\r\n      this.router.navigate(['new-edit-schedule'], data);\r\n    } else {\r\n      this.router.navigate(['new-edit-schedule']);\r\n    }\r\n  }\r\n  newEventById(id: string) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: id },\r\n    };\r\n    this.router.navigate(['new-edit-schedule'], data);\r\n  }\r\n  editEventPersonalById(id: string) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: id },\r\n    };\r\n    this.router.navigate(['personal-schedule'], data);\r\n  }\r\n  deleteEvent(id) {\r\n    this.scheduleService\r\n      .deltedScheduleById(id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getEvents();\r\n      });\r\n  }\r\n  // dialogs\r\n  async presentAlertConfirm(id) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar evento',\r\n      message: `¿Desea eliminar evento ?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleteEvent(id);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Calificar visita\r\n   */\r\n  async presentAlertVisit(schedule: ISchedule) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Calificar',\r\n      subHeader: 'Califica la visita realizada',\r\n      inputs: [\r\n        {\r\n          name: 'radio2',\r\n          type: 'radio',\r\n          label: 'No hay interés',\r\n          value: 'gris',\r\n        },\r\n        {\r\n          name: 'radio3',\r\n          type: 'radio',\r\n          label: 'Poco interés',\r\n          value: 'verde',\r\n        },\r\n        {\r\n          name: 'radio4',\r\n          type: 'radio',\r\n          label: 'Oportunidad de venta',\r\n          value: 'amarillo',\r\n        },\r\n        {\r\n          name: 'radio5',\r\n          type: 'radio',\r\n          label: 'Venta muy probable',\r\n          value: 'rojo',\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('Confirm Cancel');\r\n          },\r\n        },\r\n        {\r\n          text: 'Ok',\r\n          role: 'ok',\r\n          handler: () => {\r\n            console.log('Confirm Ok');\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        schedule.scoreByAdviser = res.data.values;\r\n        schedule.status = 'rojo';\r\n        this.putEvent(schedule);\r\n      }\r\n    });\r\n  }\r\n  async getSellerOfProperty(propId) {\r\n    return await this.sellerService\r\n      .getSellerAll()\r\n      .pipe(\r\n        map(sellers =>\r\n          sellers.find(s => !!s.property.find(p => p._id === propId)),\r\n        ),\r\n      )\r\n      .toPromise();\r\n  }\r\n  // end dialogs\r\n  async putEvent(schedule: ISchedule) {\r\n    const seller = await this.getSellerOfProperty(schedule.property._id);\r\n    this.notification(\r\n      'Calificación de Visita',\r\n      `El asesor ${\r\n        this.userSessionService.userSession.value.name\r\n      } calificó como \"${\r\n        schedule.scoreByAdviser === 'rojo'\r\n          ? 'Venta muy probable'\r\n          : schedule.scoreByAdviser === 'amarillo'\r\n            ? 'Oportunidad de venta'\r\n            : schedule.scoreByAdviser === 'verde'\r\n              ? 'Poco interés'\r\n              : 'Sin interés'\r\n      }\" la visita a la propiedad ${schedule.property.name} con el comprador ${\r\n        schedule.buyer.name\r\n      }`,\r\n      'rojo',\r\n      'schedule',\r\n      ['administrator', 'office'],\r\n      seller === undefined ? undefined : [seller._id],\r\n    );\r\n    this.scheduleService\r\n      .putSchedule(schedule)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getEvents();\r\n      });\r\n  }\r\n  async toastPresent(m = 'Eventos pendientes hoy') {\r\n    const isPresent = await this.storage.get('alert-today');\r\n    console.log(isPresent);\r\n    if (+isPresent !== new Date().getDate()) {\r\n      const toast = await this.toastController.create({\r\n        message: m,\r\n        showCloseButton: true,\r\n        position: 'bottom',\r\n        closeButtonText: 'OK',\r\n        cssClass: 'toast-alert',\r\n        duration: 50000,\r\n      });\r\n      toast.present();\r\n      toast.onWillDismiss().then(() => {\r\n        this.storage.set('alert-today', new Date().getDate());\r\n      });\r\n    }\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  // _helpers\r\n  backOne() {\r\n    if (this.monthNumber === 0) {\r\n      this.year--;\r\n      this.monthNumber = 11;\r\n    } else {\r\n      this.monthNumber--;\r\n    }\r\n  }\r\n  fowardOne() {\r\n    if (this.monthNumber === 11) {\r\n      this.year++;\r\n      this.monthNumber = 0;\r\n    } else {\r\n      this.monthNumber++;\r\n    }\r\n  }\r\n  formatDate(item) {\r\n    return FormatDatesFront(item);\r\n  }\r\n  formatState(state: string) {\r\n    if (state === 'verde') {\r\n      return 'En espera de confirmación';\r\n    } else if (state === 'amarillo') {\r\n      return 'Confirmada en espera de asistencia';\r\n    } else if (state === 'rojo') {\r\n      return 'Cita pasada';\r\n    } else if (state === 'azul') {\r\n    }\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n  comparateDate(year, month, day): boolean {\r\n    const today = new Date().getTime();\r\n    const date = new Date(year, month, day).getTime();\r\n    return date < today;\r\n  }\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propietarios\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\r\\n  <!-- contenido -->\\r\\n\\r\\n  <ng-template #Load class=\\\"my-contenet\\\">\\r\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\r\\n      <!-- contenido de filtros -->\\r\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\r\\n        [opened]=\\\"openMenu\\\">\\r\\n        <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\r\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\r\\n      </mat-drawer>\\r\\n      <!-- /contenido de filtros -->\\r\\n      <!-- filtros boton -->\\r\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\r\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\r\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n\\r\\n      <!-- /filtros boton -->\\r\\n\\r\\n      <!-- Table  -->\\r\\n      <h2>Lista de Vendedores </h2>\\r\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\r\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailSeller($event)\\\"></app-general-table>\\r\\n      <!-- /Table -->\\r\\n    </mat-drawer-container>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- /contenido -->\\r\\n\\r\\n  <!-- Skeleton -->\\r\\n  <ng-template #noLoad>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ISeller } from '../../../models/seller.model';\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport {\r\n  Platform,\r\n  AlertController,\r\n  ToastController,\r\n  NavController,\r\n} from '@ionic/angular';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { OnlyDates, SellerFilter } from '../../../_config/_helpers';\r\n\r\n@Component({\r\n  selector: 'app-list-seller-admin',\r\n  templateUrl: './list-seller-admin.component.html',\r\n  styleUrls: ['./list-seller-admin.component.scss'],\r\n})\r\nexport class ListSellerAdminComponent implements OnInit {\r\n  isLoading = false;\r\n  columns: TableColumsModel[];\r\n  rows: any[] = [];\r\n  isDesktop = false;\r\n  openMenu: boolean;\r\n  // sellers\r\n  seller: ISeller[] = [];\r\n  // numofFilters\r\n  numOfFilters = 0;\r\n\r\n  constructor(\r\n    private sellerService: SellerService,\r\n    private platform: Platform,\r\n    private router: Router,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController,\r\n    public navCtr: NavController,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    console.log('init');\r\n    this.isDesktop = platform.is('desktop');\r\n    if (this.isDesktop) {\r\n      this.openMenu = true;\r\n    } else {\r\n      this.openMenu = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['res']) {\r\n        this.presentToast(params['res']);\r\n      }\r\n    });\r\n    this.columns = [\r\n      {\r\n        name: 'Nombre',\r\n        prop: 'name',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Apellido',\r\n        prop: 'lastName',\r\n        type: 'normal',\r\n      },\r\n      {\r\n        name: 'Fecha Alta',\r\n        prop: 'timestamp',\r\n        type: 'date',\r\n      },\r\n      {\r\n        name: 'Tipo',\r\n        prop: 'typeSeller',\r\n        type: 'normal',\r\n      },\r\n\r\n      {\r\n        name: 'Acciones',\r\n        prop: 'acction',\r\n        type: 'buttons',\r\n        buttonEdit: true,\r\n        buttonDeleted: true,\r\n        buttonDetails: true,\r\n      },\r\n    ];\r\n    this.getSellerAll();\r\n  }\r\n  getSellerAll() {\r\n    this.isLoading = false;\r\n    this.numOfFilters = 0;\r\n    this.sellerService.getSellerAll().subscribe(seller => {\r\n      this.seller = seller;\r\n      console.log(seller);\r\n      this.setRows(seller);\r\n    });\r\n  }\r\n  setRows(sellers: ISeller[]) {\r\n    const rows = [];\r\n\r\n    sellers.forEach(seller => {\r\n      let typeSeller = 'Vende';\r\n      if (seller.isRenter) {\r\n        typeSeller = 'Renta';\r\n      }\r\n      rows.push({\r\n        _id: seller._id,\r\n        name: seller.name,\r\n        lastName: seller.lastName,\r\n        timestamp: seller.timestamp,\r\n        typeSeller: typeSeller,\r\n      });\r\n    });\r\n    this.rows = rows;\r\n    this.isLoading = true;\r\n  }\r\n  newBuyer() {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: 'new' },\r\n    };\r\n    // this.navCtr.navigateRoot('new-edit-seller');\r\n    this.router.navigate(['new-edit-seller']);\r\n  }\r\n  edit(item) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id },\r\n    };\r\n    this.router.navigate(['new-edit-seller'], data);\r\n    // this.router\r\n    //   .navigateByUrl('/list-seller-admin', { skipLocationChange: true })\r\n    //   .then(() => this.router.navigate(['new-edit-seller'], data));\r\n    // this.isLoading = false;\r\n\r\n    // this.navCtr.navigateRoot('new-edit-seller', false, data);\r\n  }\r\n  deleted(seller: ISeller) {\r\n    this.sellerService\r\n      .deletedSellerById(seller._id)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.getSellerAll();\r\n      });\r\n  }\r\n  detailSeller(buyer: ISeller) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: buyer._id },\r\n    };\r\n    this.router.navigate(['detail-seller-admin'], data);\r\n  }\r\n  async presentAlertConfirm(seller: ISeller) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Eliminar Usuario',\r\n      message: `¿Desea eliminar usuario: <strong>${seller.name}</strong>?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: blah => {\r\n            console.log('Confirm Cancel: blah');\r\n          },\r\n        },\r\n        {\r\n          text: 'Sí',\r\n          role: 'ok',\r\n          handler: () => {\r\n            /* this.deleted(buyer);\r\n            this.getBuyerAll(); */\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    await alert.present();\r\n    // IMPORTANTE ASYNC !!!!!\r\n    await alert.onWillDismiss().then(res => {\r\n      if (res.role === 'ok') {\r\n        this.deleted(seller);\r\n      }\r\n    });\r\n  }\r\n  async presentToast(message) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n  getFilters(filters: {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    isRenter: boolean;\r\n  }) {\r\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\r\n    //  setea buyers\r\n    this.setRows(advFinded);\r\n    // num filters\r\n    let numFilters = 0;\r\n    if (filters.day) {\r\n      numFilters++;\r\n    }\r\n    if (filters.month) {\r\n      numFilters++;\r\n    }\r\n    if (filters.year) {\r\n      numFilters++;\r\n    }\r\n    if (filters.isRenter) {\r\n      numFilters++;\r\n    }\r\n    this.numOfFilters = numFilters;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Administrador\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar [ngClass]=\\\"{'desktop-tabs': isDesktop}\\\" color=\\\"primary\\\">\\r\\n    <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\r\\n      <ion-segment-button checked value=\\\"movementsSegment\\\">\\r\\n        Movimientos\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"eventsSegment\\\">\\r\\n        Eventos\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <!-- <ion-grid [ngClass]=\\\"{'desktop-grid': isDesktop}\\\"> -->\\r\\n  <ion-grid>\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenLoad; else elseLoad\\\"></ng-container>\\r\\n    <!-- cargado -->\\r\\n    <ng-template #thenLoad>\\r\\n\\r\\n\\r\\n      <span [ngSwitch]=\\\"segment\\\">\\r\\n        <!-- movementsSegment -->\\r\\n        <span *ngSwitchCase=\\\"'movementsSegment'\\\">\\r\\n          <!-- filtros -->\\r\\n          <div class=\\\"filters-buttons-conteiner   \\\">\\r\\n            <mat-button-toggle-group style=\\\"flex-wrap: wrap\\\" (change)=\\\"getByType($event.value)\\\">\\r\\n              <mat-button-toggle value=\\\"schedule\\\">Eventos</mat-button-toggle>\\r\\n              <mat-button-toggle value=\\\"ofert\\\">Ofertas</mat-button-toggle>\\r\\n              <mat-button-toggle value=\\\"sbp\\\">Estados</mat-button-toggle>\\r\\n              <mat-button-toggle value=\\\"credit\\\">Créditos</mat-button-toggle>\\r\\n              <mat-button-toggle checked value=\\\"all\\\">Todos</mat-button-toggle>\\r\\n            </mat-button-toggle-group>\\r\\n          </div>\\r\\n\\r\\n          <h2>Movimientos en el sistema </h2>\\r\\n          <p>Se muestra cada acción realizada en el sistema con su estado</p>\\r\\n          <!-- <ion-row justify-content-around> -->\\r\\n          <ion-row>\\r\\n            <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let item of allData\\\">\\r\\n              <!-- \\r\\n              decide que carta\\r\\n              ofert\\r\\n              schedule\\r\\n              credit\\r\\n              sbp\\r\\n            -->\\r\\n              <span [ngSwitch]=\\\"item.type\\\">\\r\\n                <span *ngSwitchCase=\\\"'ofert'\\\">\\r\\n                  <ion-card [ngClass]=\\\"{'state-verde': item.data.oferts.status === 'verde', \\r\\n            'state-amarillo':  item.data.oferts.status === 'amarillo',\\r\\n            'state-rojo':  item.data.oferts.status === 'rojo',\\r\\n            'state-gris': item.data.oferts.status === 'gris',\\r\\n            'state-azul':  item.data.oferts.status === 'azul',\\r\\n            'desktop-card': isDesktop }\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-card-subtitle>\\r\\n                        fecha: {{formatDates(item.time)}}\\r\\n                      </ion-card-subtitle>\\r\\n                      <ion-card-title>\\r\\n                        Oferta\\r\\n                      </ion-card-title>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      <ion-item lines=\\\"none\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Notas:</b> </p>\\r\\n                          <p>{{item.data.oferts.notes}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Precio:</b> </p>\\r\\n                          <p>${{item.data.oferts.ofertPrice}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Cliente:</b> </p>\\r\\n                          <p>{{item.data.oferts.buyer.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Propiedad:</b> </p>\\r\\n                          <p>{{item.data.oferts.property.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </span>\\r\\n                <span *ngSwitchCase=\\\"'schedule'\\\">\\r\\n\\r\\n                  <ion-card [ngClass]=\\\"{'state-verde': item.data.schedules.status === 'verde', \\r\\n                      'state-amarillo':  item.data.schedules.status === 'amarillo',\\r\\n                      'state-rojo':  item.data.schedules.status === 'rojo',\\r\\n                      'state-gris': item.data.schedules.status === 'gris',\\r\\n                      'state-azul':  item.data.schedules.status === 'azul',\\r\\n                      'desktop-card': isDesktop    }\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-card-subtitle>\\r\\n                        fecha: {{formatDates(item.time)}}\\r\\n                      </ion-card-subtitle>\\r\\n                      <ion-card-title>\\r\\n                        Evento\\r\\n                      </ion-card-title>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.buyer\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Cliente:</b> </p>\\r\\n                          <p>{{item.data.schedules.buyer.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.adviser\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Asesor:</b> </p>\\r\\n                          <p>{{item.data.schedules.adviser.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.seller\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Vendedor:</b> </p>\\r\\n                          <p>{{item.data.schedules.seller.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.property\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Propiedad:</b> </p>\\r\\n                          <p>{{item.data.schedules.property.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.address\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"pin\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Lugar:</b> </p>\\r\\n                          <p>{{item.data.schedules.address}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.day\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Fecha del Evento:</b> </p>\\r\\n                          <p>{{item.data.schedules.day}}/{{item.data.schedules.month + 1}}/{{item.data.schedules.year}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.hour\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"time\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Hora del Evento:</b> </p>\\r\\n                          <p> {{formatHours(item.data.schedules.hour,item.data.schedules.minute)}} </p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.status\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Estado:</b> </p>\\r\\n                          <p *ngIf=\\\"item.data.schedules.status === 'gris'\\\">Cita Generada</p>\\r\\n                          <p *ngIf=\\\"item.data.schedules.status === 'verde'\\\">Propuesta Cita</p>\\r\\n                          <p *ngIf=\\\"item.data.schedules.status === 'amarillo'\\\">Esperando Visita</p>\\r\\n                          <p *ngIf=\\\"item.data.schedules.status === 'rojo'\\\">Visitada</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item *ngIf=\\\"item.data.schedules.note\\\" lines=\\\"none\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Notas:</b> </p>\\r\\n                          <p>{{item.data.schedules.note}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n\\r\\n\\r\\n                </span>\\r\\n                <span *ngSwitchCase=\\\"'credit'\\\">\\r\\n                  <ion-card [ngClass]=\\\"{'state-verde': item.data.credits.status === 'verde', \\r\\n                    'state-amarillo':  item.data.credits.status === 'amarillo',\\r\\n                    'state-rojo':  item.data.credits.status === 'rojo',\\r\\n                    'state-gris': item.data.credits.status === 'gris',\\r\\n                    'state-azul':  item.data.credits.status === 'azul',\\r\\n                    'desktop-card': isDesktop  }\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-card-subtitle>\\r\\n                        fecha: {{formatDates(item.time)}}\\r\\n                      </ion-card-subtitle>\\r\\n                      <ion-card-title>\\r\\n                        Crédito\\r\\n                      </ion-card-title>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.credits.buyer\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Cliente:</b> </p>\\r\\n                          <p>{{item.data.credits.buyer.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.credits.property\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Propiedad:</b> </p>\\r\\n                          <p>{{item.data.credits.property.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <p><b>Notas:</b> </p>\\r\\n                      <ion-label text-wrap>\\r\\n                        {{item.data.credits.notes}}\\r\\n                      </ion-label>\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n\\r\\n                </span>\\r\\n                <span *ngSwitchCase=\\\"'sbp'\\\">\\r\\n                  <ion-card [ngClass]=\\\"{'state-verde': item.data.sbps.status === 'verde', \\r\\n                    'state-amarillo':  item.data.sbps.status === 'amarillo',\\r\\n                    'state-rojo':  item.data.sbps.status === 'rojo',\\r\\n                    'state-gris': item.data.sbps.status === 'gris',\\r\\n                    'state-azul':  item.data.sbps.status === 'azul',\\r\\n                    'desktop-card': isDesktop  }\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-card-subtitle>\\r\\n                        fecha: {{formatDates(item.time)}}\\r\\n                      </ion-card-subtitle>\\r\\n                      <ion-card-title text-wrap>\\r\\n                        Propiedad-Cliente\\r\\n                      </ion-card-title>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.sbps.buyer\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Cliente:</b> </p>\\r\\n                          <p>{{item.data.sbps.buyer.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.sbps.property\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\r\\n                        <ion-label slot=\\\"start\\\" text-wrap>\\r\\n                          <p><b>Propiedad:</b> </p>\\r\\n                          <p>{{item.data.sbps.property.name}}</p>\\r\\n                        </ion-label>\\r\\n                      </ion-item>\\r\\n                      <!-- Progreso -->\\r\\n                      <p><b>Progreso:</b> </p>\\r\\n                      <div class=\\\"container\\\">\\r\\n                        <ul class=\\\"progressbar\\\">\\r\\n                          <li class=\\\"item \\\" [ngClass]=\\\"\\r\\n                          {'active-verde': item.data.sbps.status === 'verde', \\r\\n                    'active-amarillo':  item.data.sbps.status === 'amarillo',\\r\\n                    'active-rojo':  item.data.sbps.status === 'rojo',\\r\\n                    'active-azul':  item.data.sbps.status === 'azul' }\\\">Información</li>\\r\\n                          <li class=\\\"item\\\" [ngClass]=\\\"\\r\\n                          { \\r\\n                    'active-amarillo':  item.data.sbps.status === 'amarillo',\\r\\n                    'active-rojo':  item.data.sbps.status === 'rojo',\\r\\n                    'active-azul':  item.data.sbps.status === 'azul' }\\\">Seguimiento</li>\\r\\n                          <li class=\\\"item\\\" [ngClass]=\\\"\\r\\n                          {\\r\\n                    'active-rojo':  item.data.sbps.status === 'rojo',\\r\\n                    'active-azul':  item.data.sbps.status === 'azul' }\\\">Cierre</li>\\r\\n                          <li class=\\\"item\\\" [ngClass]=\\\"\\r\\n                          {\\r\\n                    'active-azul':  item.data.sbps.status === 'azul' }\\\">PostVenta</li>\\r\\n                        </ul>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                    </ion-card-content>\\r\\n\\r\\n                  </ion-card>\\r\\n\\r\\n\\r\\n                </span>\\r\\n              </span>\\r\\n\\r\\n            </ion-col>\\r\\n\\r\\n\\r\\n          </ion-row>\\r\\n\\r\\n\\r\\n        </span>\\r\\n        <!-- eventsSegment -->\\r\\n        <span *ngSwitchCase=\\\"'eventsSegment'\\\">\\r\\n          <!-- Toggles in a List -->\\r\\n          <ng-container *ngIf=\\\"scheduleToShow.length !== 0; then showSchedule; else noShow\\\"></ng-container>\\r\\n          <ng-template #showSchedule>\\r\\n            <h2>Eventos Personales </h2>\\r\\n\\r\\n            <ion-list lines=\\\"none\\\" *ngIf=\\\"!isOne\\\">\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-button (click)=\\\"isAll = !isAll;getAllSchedule(); \\\">{{isAll ? 'Mostrar eventos de hoy':'Mostrar\\r\\n                  todos'}}</ion-button>\\r\\n              </ion-item>\\r\\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"!isAll\\\">\\r\\n                <ion-chip color=\\\"secondary\\\">\\r\\n                  <ion-label>Mostrando eventos de hoy\\r\\n                  </ion-label>\\r\\n                </ion-chip>\\r\\n              </ion-item>\\r\\n\\r\\n            </ion-list>\\r\\n            <ion-grid>\\r\\n              <ion-row>\\r\\n                <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let schedule of scheduleToShow\\\">\\r\\n                  <ion-card [ngClass]=\\\"{\\r\\n                'desktop-card': isDesktop  }\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-card-subtitle text-wrap>Fecha del Evento:\\r\\n                        {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-card-subtitle>\\r\\n                      <ion-card-subtitle>Hora: {{formatHours(schedule.hour,schedule.minute)}} </ion-card-subtitle>\\r\\n\\r\\n                      <ion-card-title text-wrap>{{schedule.title}}</ion-card-title>\\r\\n                    </ion-card-header>\\r\\n                    <ion-card-content text-wrap>\\r\\n                      <ion-label text-wrap><b>Detalles del evento:</b></ion-label>\\r\\n                      <ion-label text-wrap>{{schedule.note}}</ion-label>\\r\\n                      <ion-label text-wrap><b>Dirección: </b></ion-label>\\r\\n                      <ion-label text-wrap>{{schedule.address}}</ion-label>\\r\\n\\r\\n                    </ion-card-content>\\r\\n                  </ion-card>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n\\r\\n          </ng-template>\\r\\n          <ng-template #noShow>\\r\\n            <ion-list lines=\\\"none\\\" *ngIf=\\\"!isOne\\\">\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-button (click)=\\\"isAll = !isAll;getAllSchedule(); \\\">Mostrar Todos</ion-button>\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-card>\\r\\n              <ion-card-header>\\r\\n                <ion-card-title> No hay eventos hoy</ion-card-title>\\r\\n              </ion-card-header>\\r\\n            </ion-card>\\r\\n          </ng-template>\\r\\n        </span>\\r\\n        <!-- /event -->\\r\\n      </span>\\r\\n    </ng-template>\\r\\n    <!-- nocargado -->\\r\\n    <ng-template #elseLoad>\\r\\n      <ion-skeleton-text width=40px></ion-skeleton-text>\\r\\n      <ion-skeleton-text width=200px></ion-skeleton-text>\\r\\n      <ion-skeleton-text width=600px></ion-skeleton-text>\\r\\n      <ion-skeleton-text width=100px></ion-skeleton-text>\\r\\n      <ion-skeleton-text width=80px></ion-skeleton-text>\\r\\n    </ng-template>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button [routerLink]=\\\"['/personal-schedule']\\\" *ngIf=\\\"segment === 'eventsSegment'\\\" color=\\\"secondary\\\">\\r\\n    <ion-icon name=\\\"calendar\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".filters-buttons-conteiner {\\n  display: flex;\\n  justify-content: flex-end;\\n  flex-wrap: wrap;\\n  margin: 1% 3% 0% 0%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.desktop-tabs {\\n  padding: 0% 30% 0% 30%; }\\n\\n.desktop-grid {\\n  padding: 0% 20% 0% 20%; }\\n\\n.container {\\n  width: 100%;\\n  position: -webkit-sticky;\\n  position: sticky; }\\n\\n.progressbar {\\n  counter-reset: step; }\\n\\n.progressbar .item {\\n  position: relative;\\n  float: left;\\n  width: 20.33%;\\n  list-style: none;\\n  text-align: center;\\n  font-size: smaller; }\\n\\n.progressbar .item:before {\\n  content: counter(step);\\n  counter-increment: step;\\n  display: block;\\n  width: 30px;\\n  height: 30px;\\n  margin: 0 auto 10px auto;\\n  border: 1px solid #ddd;\\n  border-radius: 50%;\\n  background-color: #fff;\\n  text-align: center;\\n  line-height: 30px; }\\n\\n.progressbar .item:after {\\n  content: '';\\n  position: absolute;\\n  /*width: 80%;*/\\n  width: 100%;\\n  height: 1px;\\n  top: 15px;\\n  /*left: -40%;*/\\n  left: -50%;\\n  z-index: -1;\\n  background-color: #ddd; }\\n\\n.progressbar .item:first-child:after {\\n  content: none; }\\n\\n.progressbar .item.active {\\n  color: green; }\\n\\n.progressbar .item.active:before {\\n  border-color: green; }\\n\\n.progressbar .item.active + .item:after {\\n  background-color: green; }\\n\\n.progressbar .item.active-verde {\\n  color: var(--ion-color-success); }\\n\\n.progressbar .item.active-verde:before {\\n  border-color: var(--ion-color-success); }\\n\\n.progressbar .item.active-verde + .item:after {\\n  background-color: var(--ion-color-success); }\\n\\n.progressbar .item.active-amarillo {\\n  color: var(--ion-color-warning); }\\n\\n.progressbar .item.active-amarillo:before {\\n  border-color: var(--ion-color-warning); }\\n\\n.progressbar .item.active-amarillo + .item:after {\\n  background-color: var(--ion-color-warning); }\\n\\n.progressbar .item.active-rojo {\\n  color: var(--ion-color-danger); }\\n\\n.progressbar .item.active-rojo:before {\\n  border-color: var(--ion-color-danger); }\\n\\n.progressbar .item.active-rojo + .item:after {\\n  background-color: var(--ion-color-danger); }\\n\\n.progressbar .item.active-azul {\\n  color: var(--ion-color-blue); }\\n\\n.progressbar .item.active-azul:before {\\n  border-color: var(--ion-color-blue); }\\n\\n.progressbar .item.active-azul + .item:after {\\n  background-color: var(--ion-color-blue); }\\n\\n/* ol.progtrckr {\\r\\n    // margin: 0;\\r\\n    padding: 0;\\r\\n    list-style-type: none;\\r\\n}\\r\\n\\r\\nol.progtrckr li {\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    line-height: 3em;\\r\\n}\\r\\n\\r\\nol.progtrckr li.progtrckr-done {\\r\\n    color: black;\\r\\n    border-bottom: 4px solid yellowgreen;\\r\\n}\\r\\n\\r\\nol.progtrckr li.progtrckr-todo {\\r\\n    color: silver;\\r\\n    border-bottom: 4px solid silver;\\r\\n}\\r\\n\\r\\nol.progtrckr li:after {\\r\\n    content: \\\"\\\\00a0\\\\00a0\\\";\\r\\n}\\r\\n\\r\\nol.progtrckr li:before {\\r\\n    position: relative;\\r\\n    bottom: -2.5em;\\r\\n    float: left;\\r\\n    left: 50%;\\r\\n    line-height: 1em;\\r\\n}\\r\\n\\r\\nol.progtrckr li.progtrckr-done:before {\\r\\n    content: \\\"\\\\2713\\\";\\r\\n    color: white;\\r\\n    background-color: yellowgreen;\\r\\n    height: 1.2em;\\r\\n    width: 1.2em;\\r\\n    line-height: 1.2em;\\r\\n    border: none;\\r\\n    border-radius: 1.2em;\\r\\n}\\r\\n\\r\\nol.progtrckr li.progtrckr-todo:before {\\r\\n    content: \\\"\\\\039F\\\";\\r\\n    color: silver;\\r\\n    background-color: white;\\r\\n    font-size: 1.5em;\\r\\n    bottom: -1.6em;\\r\\n}\\r\\n */\\n\\n/* .progressbar {\\r\\n    margin-bottom: 30px;\\r\\n    margin-top: 10px;\\r\\n    counter-reset: step;\\r\\n    clear: both;\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.progressbar li {\\r\\n    font-size: 12px;\\r\\n    width: 24%;\\r\\n    float: left;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.progressbar li:before {\\r\\n    content: counter(step);\\r\\n    counter-increment: step;\\r\\n    width: 25px;\\r\\n    line-height: 25px;\\r\\n    display: block;\\r\\n    font-size: 12px;\\r\\n    color: transparent;\\r\\n    border: 6px solid #ececec;\\r\\n    background: #27ae60;\\r\\n    border-radius: 19px;\\r\\n    margin: 0 auto 4px;\\r\\n}\\r\\n\\r\\n.progressbar li:after {\\r\\n    content: '';\\r\\n    width: 85%;\\r\\n    height: 3px;\\r\\n    background: #B9B9B9;\\r\\n    position: absolute;\\r\\n    left: -42%;\\r\\n    top: 17px;\\r\\n    z-index: 0;\\r\\n}\\r\\n\\r\\n.progressbar li:first-child:after {\\r\\n    content: none;\\r\\n}\\r\\n\\r\\n.progress-payment li {\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.progressbar li.active:after,\\r\\n.progressbar li.active:before {\\r\\n    background: #27ae60;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.progressbar li.complete:after {\\r\\n    background: #27ae60;\\r\\n}\\r\\n\\r\\n.progressbar li.half-complete:after {\\r\\n    background: linear-gradient(to right, #27ae60 50%, #B9B9B9 50%);\\r\\n    color: white;\\r\\n} */\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { fuseAnimations } from '../../../_config/_animations';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { AdministratorService } from '../../../services/administrator.service';\r\nimport { ISchedule } from '../../../models/schedule.model';\r\nimport { OfertService } from '../../../services/ofert.service';\r\nimport { CreditService } from '../../../services/credit.service';\r\nimport { ScheduleService } from '../../../services/schedule.service';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { IOfert } from '../../../models/ofert.model';\r\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\r\nimport {\r\n  IStatusBuyerProperty,\r\n  IStatusBuyerPropertyGet,\r\n} from '../../../models/statusBuyerProperty.model';\r\nimport { Platform } from '@ionic/angular';\r\nimport { FormatHoursFront } from '../../../_config/_helpers';\r\n\r\n@Component({\r\n  selector: 'app-main-admin',\r\n  templateUrl: './main-admin.component.html',\r\n  styleUrls: ['./main-admin.component.scss'],\r\n  animations: fuseAnimations,\r\n})\r\nexport class MainAdminComponent implements OnInit {\r\n  segment = 'movementsSegment';\r\n  isLoad = false;\r\n  schedule: ISchedule[];\r\n  scheduleToShow: ISchedule[] = [];\r\n  isAll: boolean;\r\n  allData: {\r\n    data: {\r\n      oferts?: IOfert;\r\n      credits?: ICreditGet;\r\n      schedules?: ISchedule;\r\n      sbps?: IStatusBuyerPropertyGet;\r\n    };\r\n    type: string;\r\n    time: any;\r\n  }[] = [];\r\n  allDataBackUp: {\r\n    data: {\r\n      oferts?: IOfert;\r\n      credits?: ICreditGet;\r\n      schedules?: ISchedule;\r\n      sbps?: IStatusBuyerPropertyGet;\r\n    };\r\n    type: string;\r\n    time: any;\r\n  }[] = [];\r\n  isDesktop = false;\r\n\r\n  constructor(\r\n    private userSessionService: UserSessionService,\r\n    private adminService: AdministratorService,\r\n    private ofertService: OfertService,\r\n    private creditService: CreditService,\r\n    private scheduleService: ScheduleService,\r\n    private sbpService: StatusBuyerPropertyService,\r\n    private platform: Platform,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n    console.log(this.isDesktop);\r\n    //  schedule de hoy y vincularlo a calendario general\r\n    this.getScheduleToday();\r\n\r\n    // historial de movimientos\r\n    this.getOfert();\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getOfert() {\r\n    this.ofertService.getOfert().subscribe(oferts => {\r\n      this.creditService.getCredit().subscribe(credits => {\r\n        this.scheduleService.getSchedule().subscribe(s => {\r\n          this.sbpService.getStatusBuyerProperty().subscribe(sbps => {\r\n            this.allData = <any>this.getMerge(oferts, credits, s, sbps);\r\n            this.allDataBackUp = this.allData;\r\n            this.isLoad = true;\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  getMerge(\r\n    oferts: IOfert[],\r\n    credits: ICredit[],\r\n    schedules: ISchedule[],\r\n    sbps: IStatusBuyerProperty[],\r\n  ) {\r\n    const allData: {\r\n      data: {\r\n        oferts?: IOfert;\r\n        credits?: ICredit;\r\n        schedules?: ISchedule;\r\n        sbps?: IStatusBuyerProperty;\r\n      };\r\n      type: string;\r\n      time: any;\r\n    }[] = [];\r\n    oferts.forEach(ofert => {\r\n      allData.push({\r\n        type: 'ofert',\r\n        time: ofert.timestamp,\r\n        data: { oferts: ofert },\r\n      });\r\n    });\r\n    schedules.forEach(schedule => {\r\n      if (!schedule.administrator && !schedule.personal) {\r\n        allData.push({\r\n          type: 'schedule',\r\n          time: schedule.timestamp.toString(),\r\n          data: { schedules: schedule },\r\n        });\r\n      }\r\n    });\r\n    credits.forEach(credit => {\r\n      allData.push({\r\n        type: 'credit',\r\n        time: credit.timestamp.toString(),\r\n        data: { credits: credit },\r\n      });\r\n    });\r\n    sbps.forEach(sbp => {\r\n      allData.push({\r\n        type: 'sbp',\r\n        time: sbp.timestamp.toString(),\r\n        data: { sbps: sbp },\r\n      });\r\n    });\r\n    allData.sort((a, b) => {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return <any>new Date(b.time) - <any>new Date(a.time);\r\n    });\r\n    console.log(allData);\r\n    return allData;\r\n  }\r\n  // filters\r\n  getByType(type: 'ofert' | 'schedule' | 'credit' | 'sbp' | 'all') {\r\n    this.allData = this.allDataBackUp;\r\n    if (type === 'all') {\r\n      this.allData = this.allDataBackUp;\r\n    } else {\r\n      const filter = this.allData.filter(data => data.type === type);\r\n      this.allData = filter;\r\n    }\r\n  }\r\n  formatDates(dateInput: Date): string {\r\n    const day: string = new Date(dateInput).getDate().toString();\r\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\r\n    const year: string = new Date(dateInput).getFullYear().toString();\r\n    const date = day + '/' + month + '/' + year;\r\n    return date;\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n  segmentChanged(segment) {\r\n    this.segment = segment.detail.value;\r\n  }\r\n  getScheduleToday() {\r\n    const adminId = this.userSessionService.userSession.value.id;\r\n    this.adminService.getBuyerById(adminId).subscribe(admin => {\r\n      this.schedule = admin.schedule;\r\n      const dateToday = new Date();\r\n      this.getByDay(\r\n        dateToday.getFullYear(),\r\n        dateToday.getMonth(),\r\n        dateToday.getDate(),\r\n      );\r\n    });\r\n  }\r\n  getByDay(year: number, month: number, day: number) {\r\n    const isFinded = this.schedule.filter(\r\n      s => s.day === day && s.month === month && s.year === year,\r\n    );\r\n    this.scheduleToShow = isFinded;\r\n  }\r\n  getAllSchedule() {\r\n    if (this.isAll === true) {\r\n      this.scheduleToShow = this.schedule;\r\n    } else {\r\n      const dateToday = new Date();\r\n      this.getByDay(\r\n        dateToday.getFullYear(),\r\n        dateToday.getMonth(),\r\n        dateToday.getDate(),\r\n      );\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Simulador\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isSimulate; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <h1>Propiedades Sugeridas</h1>\\r\\n      <ion-label>Se muestran las coincidencias con tu perfil</ion-label>\\r\\n      <ion-list lines=\\\"full\\\">\\r\\n        <ion-item lines=\\\"inset\\\" *ngFor=\\\"let property of propertiesMatch\\\">\\r\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'departamento'\\\" style=\\\"color: #F5811E\\\" name=\\\"business\\\" slot=\\\"start\\\"></ion-icon>\\r\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'casa'\\\" style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\r\\n          <ion-label text-wrap>\\r\\n            <h2>{{property.name}}</h2>\\r\\n            <p>{{property.zone}}</p>\\r\\n            <ion-chip *ngIf=\\\"property.percentage > 60\\\" class=\\\"high\\\">\\r\\n              <ion-label>Alta coincidencia</ion-label>\\r\\n            </ion-chip>\\r\\n            <ion-chip *ngIf=\\\"property.percentage <= 60 && property.percentage > 30 \\\" class=\\\"medium\\\">\\r\\n              <ion-label>Media coincidencia</ion-label>\\r\\n            </ion-chip>\\r\\n            <ion-chip *ngIf=\\\"property.percentage <= 30\\\" class=\\\"low\\\">\\r\\n              <ion-label>Baja coincidencia</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate>\\r\\n      <h1>Simulador de Búsqueda Match</h1>\\r\\n      <p>Llene los campos para encontrar propiedades de acuerdo al perfil</p>\\r\\n\\r\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n        <form #newUserForm=\\\"ngForm\\\">\\r\\n          <mat-card>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <!-- isRent  -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Venta o Renta</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.isRent\\\" #isRent=\\\"ngModel\\\" id=\\\"isRent\\\" name=\\\"isRent\\\" required>\\r\\n                  <mat-option [value]=true>\\r\\n                    Renta\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=false>\\r\\n                    Venta\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"isRent.dirty || isRent.touched\\\">Selecciona una</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- typeOfProperty -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Tipo de Vivienda</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.typeOfProperty\\\" #typeOfProperty=\\\"ngModel\\\" id=\\\"typeOfProperty\\\" name=\\\"typeOfProperty\\\"\\r\\n                  required>\\r\\n                  <mat-option value=\\\"casa\\\">Casa\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"departamento\\\">Departamento\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"nave industrial\\\">Nave Industrial\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"terreno\\\">Terreno\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"typeOfProperty.dirty || typeOfProperty.touched\\\">Anotar Correo</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- space-->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Espacio</mat-label>\\r\\n                <input matInput type=\\\"number\\\" [(ngModel)]=\\\"property.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"\\r\\n                  required>\\r\\n                <mat-error *ngIf=\\\"space.dirty || space.touched\\\">Anotar Espacio</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- Fecha a comprar -->\\r\\n              <!-- Fecha -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Fecha para ser adquirido</mat-label>\\r\\n                <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\"\\r\\n                  placeholder=\\\"Selecciona Fecha\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <!-- zone -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Zona</mat-label>\\r\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"property.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\"\\r\\n                  required>\\r\\n                <mat-error *ngIf=\\\"zone.dirty || zone.touched\\\">Anotar Zona</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- minPrice -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Precio Minimo</mat-label>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\"\\r\\n                  name=\\\"minPrice\\\" required>\\r\\n                <mat-error *ngIf=\\\"minPrice.dirty || minPrice.touched\\\">Anotar Numero</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- max -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Precio Maximo</mat-label>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\"\\r\\n                  name=\\\"maxPrice\\\" required>\\r\\n                <mat-error *ngIf=\\\"maxPrice.dirty || maxPrice.touched\\\">Anotar Numero</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- numRooms -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Numero de Cuartos</mat-label>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numRooms\\\" #numRooms=\\\"ngModel\\\" id=\\\"numRooms\\\"\\r\\n                  name=\\\"numRooms\\\" required>\\r\\n                <mat-error *ngIf=\\\"numRooms.dirty || numRooms.touched\\\">Anotar Numero</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- numBathrooms -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Numero de Baños</mat-label>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\"\\r\\n                  id=\\\"numBathrooms\\\" name=\\\"numBathrooms\\\" required>\\r\\n                <mat-error *ngIf=\\\"numBathrooms.dirty || numBathrooms.touched\\\">Anotar Numero</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- numCars -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Lugares Estacionamiento</mat-label>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numCars\\\" #numCars=\\\"ngModel\\\" id=\\\"numCars\\\"\\r\\n                  name=\\\"numCars\\\" required>\\r\\n                <mat-error *ngIf=\\\"numCars.dirty || numCars.touched\\\">Anotar Numero</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- isOld -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Estado</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.isOld\\\" #isOld=\\\"ngModel\\\" id=\\\"isOld\\\" name=\\\"isOld\\\" required>\\r\\n                  <mat-option [value]=false>Nuevo\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=true>Usado\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"isOld.dirty || isOld.touched\\\">Selecciona uno</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- isClose -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Tipo Fraccionamiento</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.isClose\\\" #isClose=\\\"ngModel\\\" id=\\\"isClose\\\" name=\\\"isClose\\\" required>\\r\\n                  <mat-option [value]=false>Abierto\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=true>Cerrado\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"isClose.dirty || isClose.touched\\\">Selecciona uno</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- hasGarden -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Con Jardin</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.hasGarden\\\" #hasGarden=\\\"ngModel\\\" id=\\\"hasGarden\\\" name=\\\"hasGarden\\\"\\r\\n                  required>\\r\\n                  <mat-option [value]=true>Sí\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=false>No\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"hasGarden.dirty || hasGarden.touched\\\">Selecciona uno</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- isLowLevel -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Planta Baja</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.isLowLevel\\\" #isLowLevel=\\\"ngModel\\\" id=\\\"isLowLevel\\\" name=\\\"isLowLevel\\\"\\r\\n                  required>\\r\\n                  <mat-option [value]=true>Sí\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=false>No\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"isLowLevel.dirty || isLowLevel.touched\\\">Selecciona uno</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- hasElevator -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Con Elevador</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.hasElevator\\\" #hasElevator=\\\"ngModel\\\" id=\\\"hasElevator\\\" name=\\\"hasElevator\\\"\\r\\n                  required>\\r\\n                  <mat-option [value]=true>Sí\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=false>No\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"hasElevator.dirty || hasElevator.touched\\\">Selecciona uno</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- allServices -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Todos los Servicios </mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.allServices\\\" #allServices=\\\"ngModel\\\" id=\\\"allServices\\\" name=\\\"allServices\\\"\\r\\n                  required>\\r\\n                  <mat-option [value]=true>Sí\\r\\n                  </mat-option>\\r\\n                  <mat-option [value]=false>No\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"allServices.dirty || allServices.touched\\\">Selecciona uno</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- wayToBuy FOVISSTE, IMSS, contado, PEMEX, Infonavit, aliados, otros -->\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Forma de Venta/Renta </mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"property.wayToBuy\\\" #wayToBuy=\\\"ngModel\\\" id=\\\"wayToBuy\\\" name=\\\"wayToBuy\\\" required\\r\\n                  placeholder=\\\"Selecciona\\\">\\r\\n                  <mat-option value=\\\"FOVISSTE\\\">FOVISSTE</mat-option>\\r\\n                  <mat-option value=\\\"IMSS\\\">IMSS</mat-option>\\r\\n                  <mat-option value=\\\"contado\\\">contado</mat-option>\\r\\n                  <mat-option value=\\\"PEMEX\\\">Pemex</mat-option>\\r\\n                  <mat-option value=\\\"infonavit\\\">Infonavit</mat-option>\\r\\n                  <mat-option value=\\\"infonavit\\\">Aliados</mat-option>\\r\\n                  <mat-option value=\\\"otros\\\">Otros</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <!-- tag -->\\r\\n            <app-form-str-list nameTitle=\\\"Lista Etiquetas\\\" nameItems=\\\"Etiqueta\\\" [arrStr]=\\\"property.tag\\\" (arrList)=\\\"property.tag = $event\\\">\\r\\n            </app-form-str-list>\\r\\n            <mat-card-actions align=\\\"end\\\">\\r\\n              <div style=\\\"margin: 3%\\\">\\r\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                  <ion-button shape=\\\"round\\\" style=\\\"margin: 3%\\\" id=\\\"submitUser\\\" color=\\\"primary\\\" (click)=\\\"startSimulate()\\\"\\r\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Simular Búsqueda</ion-button>\\r\\n                </span>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </mat-card-actions>\\r\\n\\r\\n          </mat-card>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\\r\\n<!-- fab placed to the bottom end -->\\r\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n  <ion-fab-button *ngIf=\\\"isSimulate\\\" color=\\\"secondary\\\" (click)=\\\"isSimulate = false\\\">\\r\\n    <ion-icon name=\\\"refresh\\\"></ion-icon>\\r\\n  </ion-fab-button>\\r\\n</ion-fab>\"","module.exports = \".flex-container {\\n  /* display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { CalcPercentage } from '../../../_config/_helpers';\r\n\r\n@Component({\r\n  selector: 'app-simulate-search-admin',\r\n  templateUrl: './simulate-search-admin.component.html',\r\n  styleUrls: ['./simulate-search-admin.component.scss'],\r\n})\r\nexport class SimulateSearchAdminComponent implements OnInit {\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  property: IProperty = {};\r\n  words: string;\r\n  files: string;\r\n  daySelect: any;\r\n  monthSelect: any;\r\n  yearSelect: any;\r\n  isSimulate = false;\r\n  propertiesMatch: IProperty[] = [];\r\n  percentage = 10;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private propertyService: PropertyService,\r\n  ) {\r\n    const arrStr = [''];\r\n    this.property.tag = arrStr;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.propertyService.getPropertyById(params['id']).subscribe(prop => {\r\n          console.log(prop);\r\n          this.property = prop;\r\n          this.words = '';\r\n          this.property.tag.forEach((word, i) => {\r\n            if (this.property.tag.length === i + 1) {\r\n              this.words += word;\r\n            } else {\r\n              this.words += word + ',';\r\n            }\r\n          });\r\n          this.files = '';\r\n          this.property.files.forEach((f, i) => {\r\n            if (this.property.files.length === i + 1) {\r\n              this.files += f;\r\n            } else {\r\n              this.files += f + ',';\r\n            }\r\n          });\r\n          const date = this.property.dateToBuy.split('/');\r\n          this.daySelect = +date[0];\r\n          this.monthSelect = +date[1];\r\n          this.yearSelect = +date[2];\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n      }\r\n    });\r\n  }\r\n  startSimulate() {\r\n    this.isSimulate = false;\r\n    console.log(this.property);\r\n    this.property.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\r\n      this.yearSelect\r\n    }`;\r\n    console.log(this.property);\r\n    this.propertyService\r\n      .getPropertySimulate(this.property, this.percentage)\r\n      .subscribe(properties => {\r\n        this.propertiesMatch = CalcPercentage(\r\n          this.property,\r\n          properties,\r\n          this.percentage,\r\n        );\r\n        this.isSimulate = true;\r\n      });\r\n  }\r\n  reset() {\r\n    this.isSimulate = false;\r\n  }\r\n  dateSelect(event) {\r\n    if (event) {\r\n      this.daySelect = event.value._i.date;\r\n      this.monthSelect = event.value._i.month;\r\n      this.yearSelect = event.value._i.year;\r\n    }\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Asesor\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>Complete los campos</mat-card-title>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n            <!-- name -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Nombre</mat-label>\\r\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"adviser.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- lastname -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Apellido</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"adviser.lastName\\\" #lastName=\\\"ngModel\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" required>\\r\\n              <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\">Anotar Apellido</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- email -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Correo</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"adviser.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\r\\n              <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- hora inicio -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Hora de Inicio (24Hrs)</mat-label>\\r\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"adviser.hourStart\\\" #hourStart=\\\"ngModel\\\" id=\\\"hourStart\\\" name=\\\"hourStart\\\"\\r\\n                required>\\r\\n              <mat-error *ngIf=\\\"hourStart.dirty || hourStart.touched\\\">Anotar Horas</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- hora fin -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Hora Fin (24Hrs)</mat-label>\\r\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"adviser.hourEnd\\\" #hourEnd=\\\"ngModel\\\" id=\\\"hourEnd\\\" name=\\\"hourEnd\\\"\\r\\n                required>\\r\\n              <mat-error *ngIf=\\\"hourEnd.dirty || hourEnd.touched\\\">Anotar Horas</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- city -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Ciudad</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"adviser.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\r\\n                <mat-option value=\\\"puebla\\\">\\r\\n                  Puebla\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"mexico\\\">\\r\\n                  México\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- pass -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Contraseña</mat-label>\\r\\n              <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"adviser.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\"\\r\\n                name=\\\"password\\\" required>\\r\\n              <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <!-- buyers -->\\r\\n            <div *ngIf=\\\"user.type !== 'adviser'\\\" class=\\\"flex-container2\\\">\\r\\n              <div *ngIf=\\\"adviser.buyer && adviser.buyer.length > 0\\\">\\r\\n                <mat-list role=\\\"list\\\">\\r\\n                  <h3 mat-subheader>Clientes del Asesor</h3>\\r\\n                  <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let buyer of adviser.buyer\\\">\\r\\n                    {{buyer.name}}\\r\\n                    <!-- <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"schedule.adviser=undefined\\\"></button> -->\\r\\n                    <button mat-icon-button (click)=\\\"deleteBuyer(buyer._id)\\\">\\r\\n                      <mat-icon color=\\\"warn\\\">clear</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-list-item>\\r\\n                </mat-list>\\r\\n              </div>\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Asignar Clientes</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"buyerInput\\\" #b=\\\"ngModel\\\" id=\\\"b\\\" name=\\\"b\\\" multiple>\\r\\n                  <mat-option *ngFor=\\\"let buyer of buyers$ | async\\\" [value]=\\\"buyer\\\">\\r\\n                    {{buyer.name}} {{buyer.fatherLastName}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\r\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editCustomer()\\\">Editar</button>\\r\\n              </span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { NavComponent } from '@ionic/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-adviser',\r\n  templateUrl: './new-edit-adviser.component.html',\r\n  styleUrls: ['./new-edit-adviser.component.scss'],\r\n})\r\nexport class NewEditAdviserComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  adviser: IAdviser = {};\r\n  buyers$: Observable<IBuyer[]>;\r\n  buyerSelect$: Observable<IBuyer>;\r\n  buyerInput: IBuyer[] = [];\r\n  user: IUserSession;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private adviserService: AdviserService,\r\n    private buyerService: BuyerService,\r\n    private navCtr: NavController,\r\n    private userSession: UserSessionService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getBuyers();\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.adviserService.getAdviserById(params['id']).subscribe(adv => {\r\n          console.log(adv);\r\n          this.adviser = adv;\r\n        });\r\n        this.isNew = false;\r\n      } else if (this.user.type === 'adviser') {\r\n        this.adviserService.getAdviserById(this.user.id).subscribe(adv => {\r\n          console.log(adv);\r\n          this.adviser = adv;\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n      }\r\n    });\r\n  }\r\n  getBuyers() {\r\n    this.buyers$ = this.buyerService.getBuyerAll();\r\n  }\r\n  newCustomer() {\r\n    this.adviser.buyer = <any>this.buyerInput;\r\n    this.adviserService.newAdviser(this.adviser).subscribe(adv => {\r\n      this.buyerInput.forEach(buyer => {\r\n        const indexFinded = buyer.adviser.findIndex(ad => ad._id === adv._id);\r\n        if (indexFinded === -1) {\r\n          const arr = buyer.adviser.map(ad => ad._id);\r\n          arr.push(adv._id);\r\n          buyer.adviser = <any>arr;\r\n          // noti\r\n          this.notification(\r\n            'Nuevo Cliente Asignado',\r\n            `Se le ha asignado el cliente: ${buyer.name}`,\r\n            'verde',\r\n            'buyer',\r\n            undefined,\r\n            [adv._id],\r\n          );\r\n          this.buyerService.putBuyer(buyer).subscribe(() => {});\r\n        }\r\n      });\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Nuevo Asesor Agregado' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-adviser-admin'], toast));\r\n    });\r\n  }\r\n  deleteBuyer(buyerId) {\r\n    console.log(buyerId);\r\n    // buyer\r\n    this.buyerService.getBuyerById(buyerId).subscribe(b => {\r\n      const indexAdvBuyer = b.adviser.findIndex(\r\n        ab => ab._id === this.adviser._id,\r\n      );\r\n      console.log(indexAdvBuyer);\r\n      b.adviser.splice(indexAdvBuyer, 1);\r\n      console.log(b);\r\n      this.buyerService.putBuyer(b).subscribe(() => {\r\n        // adviser\r\n        this.adviserService.getAdviserById(this.adviser._id).subscribe(adv => {\r\n          const indexBA = adv.buyer.findIndex(bu => bu._id === buyerId);\r\n          console.log(indexBA);\r\n          adv.buyer.splice(indexBA, 1);\r\n          this.adviserService.putAdviser(adv).subscribe(() => {\r\n            this.adviser.buyer = adv.buyer;\r\n            console.log(this.adviser);\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  editCustomer() {\r\n    if (this.buyerInput && this.buyerInput.length > 0) {\r\n      this.buyerInput.forEach(b => {\r\n        const index = this.adviser.buyer.findIndex(ab => ab._id === b._id);\r\n        if (index === -1) {\r\n          this.adviser.buyer.push(<any>b._id);\r\n        }\r\n        this.newAdviserToBuyer(b, this.adviser._id);\r\n      });\r\n    }\r\n\r\n    console.log(this.adviser);\r\n    this.adviserService.putAdviser(this.adviser).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Asesor Editado' },\r\n      };\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      if (this.user.type === 'adviser') {\r\n        this.router.navigate(['list-buyer-admin'], toast);\r\n      } else {\r\n        this.router\r\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n          .then(() => this.router.navigate(['list-adviser-admin'], toast));\r\n      }\r\n    });\r\n  }\r\n  newAdviserToBuyer(buyer: IBuyer, adviserId: string) {\r\n    const indexFinded = buyer.adviser.findIndex(adv => adv._id === adviserId);\r\n    if (indexFinded === -1) {\r\n      const arr = buyer.adviser.map(adv => adv._id);\r\n      arr.push(adviserId);\r\n      buyer.adviser = <any>arr;\r\n      // noti\r\n      this.notification(\r\n        'Nuevo Cliente Asignado',\r\n        `Se le ha asignado el cliente: ${buyer.name}`,\r\n        'verde',\r\n        'buyer',\r\n        undefined,\r\n        [adviserId],\r\n      );\r\n      this.buyerService.putBuyer(buyer).subscribe(() => console.log('act'));\r\n    }\r\n  }\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSession.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Obra\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <h1 *ngIf=\\\"isNew\\\">Nueva Obra</h1>\\r\\n    <h1 *ngIf=\\\"!isNew\\\">Editar Obra</h1>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>Complete los campos</mat-card-title>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n            <!-- makers -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Constructores de la obra</mat-label>\\r\\n              <mat-select [(value)]=\\\"maker\\\" [(ngModel)]=\\\"maker\\\" #property=\\\"ngModel\\\" id=\\\"property\\\" name=\\\"property\\\"\\r\\n                multiple>\\r\\n                <mat-option [disabled]=\\\"prop.build\\\" *ngFor=\\\"let prop of makers\\\" [value]=\\\"prop._id\\\">\\r\\n                  {{prop.name}} <small *ngIf=\\\"prop.build\\\">Pertenece a: {{prop.build.name}} </small>\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"property.dirty || property.touched\\\">Selcciona</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- name -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Nombre</mat-label>\\r\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"build.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- city -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Ciudad</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"build.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\r\\n                <mat-option value=\\\"puebla\\\">\\r\\n                  Puebla\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"mexico\\\">\\r\\n                  México\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- notas -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Notas</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"build.notes\\\" #notes=\\\"ngModel\\\" id=\\\"notes\\\" name=\\\"notes\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <!--  faeses List -->\\r\\n          <app-form-str-list [forms]=\\\"forms\\\" nameTitle=\\\"Fases de la Obra\\\" nameItems=\\\"Fase\\\" nameItems2=\\\"Notas\\\"\\r\\n            (arrOutput)=\\\"getPhases($event)\\\" [arrStr]=\\\"arrStr\\\" [arrStr2]=\\\"arrStr2\\\" [arrDate]=\\\"arrDate\\\" [arrDate2]=\\\"arrDate2\\\"\\r\\n            [numOfItems]=\\\"isNew ? 2 : arrStr.length\\\" [isDesktop]=\\\"isDesktop\\\" [isRequired]=\\\"true\\\"></app-form-str-list>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\r\\n                  [disabled]=\\\"!newUserForm.form.valid || !isPhasesValid\\\">Crear</button>\\r\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid || !isPhasesValid\\\"\\r\\n                  (click)=\\\"editCustomer()\\\">Editar</button>\\r\\n              </span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  /* display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IBuild } from '../../../models/build.model';\r\nimport { IMaker } from '../../../models/maker.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { NavController, Platform } from '@ionic/angular';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { BuildService } from '../../../services/build.service';\r\nimport { MakerService } from '../../../services/maker.service';\r\nimport { FormStr } from '../../general/form-str-list/form-str-list.component';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-build',\r\n  templateUrl: './new-edit-build.component.html',\r\n  styleUrls: ['./new-edit-build.component.scss'],\r\n})\r\nexport class NewEditBuildComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  build: IBuild = {};\r\n  makers: IMaker[];\r\n  maker;\r\n  forms = {\r\n    arrStr: true,\r\n    arrStr2: true,\r\n    arrDate: true,\r\n    arrDate2: true,\r\n  };\r\n  arrStr = [];\r\n  arrStr2 = [];\r\n  arrDate = [];\r\n  arrDate2 = [];\r\n  isDesktop: any;\r\n  isPhasesValid = false;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private buildService: BuildService,\r\n    private makerService: MakerService,\r\n    private platform: Platform,\r\n    private userSessionService: UserSessionService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.isDesktop = platform.is('desktop');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMakers();\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.buildService.getBuildById(params['id']).subscribe(build => {\r\n          this.maker = build.maker.map(m => m._id);\r\n          this.build = build;\r\n          console.log(build);\r\n          // generar arr inputs\r\n          // arrStr\r\n          this.arrStr = build.timeLine.map(tl => tl.namePhase);\r\n          this.arrStr2 = build.timeLine.map(tl => tl.notes);\r\n          this.arrDate = build.timeLine.map(\r\n            tl => new Date(tl.yearToStart, tl.monthToStart, tl.dayToStart),\r\n          );\r\n          this.arrDate2 = build.timeLine.map(\r\n            tl => new Date(tl.yearToEnd, tl.monthToEnd, tl.dayToEnd),\r\n          );\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.build.timeLine = [{}];\r\n        this.isNew = true;\r\n      }\r\n    });\r\n  }\r\n  getMakers() {\r\n    this.makerService.getMakerAll().subscribe(m => {\r\n      console.log(m);\r\n      this.makers = m;\r\n    });\r\n  }\r\n  getPhases(phases: FormStr) {\r\n    this.isPhasesValid = phases.isValid;\r\n    phases.arrStr.forEach((str, i) => {\r\n      const phaseObj = {\r\n        namePhase: str,\r\n        notes: phases.arrStr2[i],\r\n        dayToStart: phases.arrDate[i] ? phases.arrDate[i].getDate() : undefined,\r\n        monthToStart: phases.arrDate[i]\r\n          ? phases.arrDate[i].getMonth()\r\n          : undefined,\r\n        yearToStart: phases.arrDate[i]\r\n          ? phases.arrDate[i].getFullYear()\r\n          : undefined,\r\n        dayToEnd: phases.arrDate2[i] ? phases.arrDate2[i].getDate() : undefined,\r\n        monthToEnd: phases.arrDate2[i]\r\n          ? phases.arrDate2[i].getMonth()\r\n          : undefined,\r\n        yearToEnd: phases.arrDate2[i]\r\n          ? phases.arrDate2[i].getFullYear()\r\n          : undefined,\r\n      };\r\n      if (this.build && this.build.timeLine && this.build.timeLine[i]) {\r\n        this.build.timeLine[i] = phaseObj;\r\n      } else {\r\n        this.build.timeLine.push(phaseObj);\r\n      }\r\n    });\r\n  }\r\n  newCustomer() {\r\n    this.build.maker = this.maker;\r\n    this.buildService.newBuild(this.build).subscribe(b => {\r\n      this.notification(\r\n        'Nueva Obra',\r\n        `Se le ha asignado: ${this.build.name}`,\r\n        'verde',\r\n        'build',\r\n        undefined,\r\n        <any>b.maker,\r\n      );\r\n\r\n      b.maker.forEach(m => {\r\n        console.log(m);\r\n        const maker = { _id: m, build: b };\r\n        this.makerService.putMaker(<any>maker).subscribe(() => {});\r\n      });\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Nuevo Obra Agregada' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-build-admin'], toast));\r\n    });\r\n  }\r\n  editCustomer() {\r\n    this.setMakers();\r\n    // this.build.maker = this.maker;\r\n    this.buildService.putBuild(this.build).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Obra Editada' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-build-admin'], toast));\r\n    });\r\n  }\r\n  setMakers() {\r\n    // noti\r\n    this.notification(\r\n      'Asignación de Obra',\r\n      `Se le ha asignado: ${this.build.name}`,\r\n      'verde',\r\n      'build',\r\n      undefined,\r\n      <any>this.maker,\r\n    );\r\n    this.maker.forEach(element => {\r\n      const indexFinded = this.build.maker.findIndex(m => m._id === element);\r\n      if (indexFinded === -1) {\r\n        this.build.maker.push(element);\r\n        const maker = { _id: element, build: this.build };\r\n        this.makerService.putMaker(maker).subscribe(() => console.log('add'));\r\n      }\r\n    });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar translucent color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Calendario\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-header>\\r\\n  <ion-toolbar color=\\\"secondary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"backOne()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title style=\\\"text-align: center\\\">{{month[monthNumber]}} {{year}}</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"getEvents()\\\" slot=\\\"end\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button (click)=\\\"fowardOne()\\\" slot=\\\"end\\\">\\r\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed style=\\\"height: 100%;\\\">\\r\\n    <span *ngIf=\\\"isLoad\\\">\\r\\n      <app-general-calendar [year]=\\\"year\\\" [month]=\\\"monthNumber\\\" [schedules]=\\\"schedule\\\" (calendarSelect)=\\\"calendarSelect($event)\\\"\\r\\n        (alertOfToday)=\\\"toastPresent()\\\"></app-general-calendar>\\r\\n    </span>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \"/* .cal_calendar {\\r\\n    border: 1px solid black;\\r\\n    padding: 1px;\\r\\n    background-color: #4594ff;\\r\\n    width: 300px;\\r\\n    margin: auto;\\r\\n    height: 246px;\\r\\n    background-image: url('http://www.webestools.com/ftp/ybouane/scripts_tutorials/javascript/calendar/bak-300-250.gif');\\r\\n}\\r\\n\\r\\n.cal_calendar th {\\r\\n    border: 1px solid black;\\r\\n    background-color: #ffffff;\\r\\n    width: 36px;\\r\\n}\\r\\n\\r\\n.cal_calendar td {\\r\\n    border: 1px solid black;\\r\\n    background-color: #ffffff;\\r\\n    text-align: center;\\r\\n    width: 36px;\\r\\n    height: 36px;\\r\\n}\\r\\n\\r\\n.cal_today {\\r\\n    color: #ff0000;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.cal_days_bef_aft {\\r\\n    color: #5a779e;\\r\\n} */\\n/* .currentmonth {\\r\\n    color: blue;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.currentday {\\r\\n    border: 1px solid black;\\r\\n    color: #00FF00;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ntable.calendar {\\r\\n    margin: 1em 1em 2em 1em;\\r\\n}\\r\\n\\r\\ntable.calendar td,\\r\\ntable.calendar th {\\r\\n    padding: 0.5em;\\r\\n}\\r\\n\\r\\ntable.calendar {\\r\\n    display: inline-block;\\r\\n    *display: inline;\\r\\n    zoom: 1;\\r\\n    vertical-align: top;\\r\\n} */\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ISchedule } from '../../../models/schedule.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'app-calendar-buyer',\r\n  templateUrl: './calendar-buyer.component.html',\r\n  styleUrls: ['./calendar-buyer.component.scss'],\r\n})\r\nexport class CalendarBuyerComponent implements OnInit {\r\n  month = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  year: number;\r\n  monthNumber: number;\r\n  schedule: ISchedule[];\r\n  isLoad = false;\r\n  constructor(\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    private navController: NavController,\r\n    private router: Router,\r\n    private adviserService: AdviserService,\r\n    private storage: Storage,\r\n    private toastController: ToastController,\r\n  ) {\r\n    this.monthNumber = new Date().getMonth();\r\n    this.year = new Date().getFullYear();\r\n  }\r\n  ngOnInit() {\r\n    const user = this.userSessionService.userSession.value;\r\n    if (user.type === 'buyer') {\r\n      // buyer\r\n      this.buyerService.getBuyerById(user.id).subscribe(b => {\r\n        this.schedule = b.schedule;\r\n        this.isLoad = true;\r\n      });\r\n    } else if ((user.type = 'adviser')) {\r\n      // adv\r\n      this.adviserService.getAdviserById(user.id).subscribe(b => {\r\n        this.schedule = b.schedule;\r\n        this.isLoad = true;\r\n      });\r\n    }\r\n  }\r\n  calendarSelect(item: { year: number; month: number; day: number }) {\r\n    if (item.day !== 0) {\r\n      const isFinded = this.schedule.filter(\r\n        s =>\r\n          s.day === item.day && s.month === item.month && s.year === item.year,\r\n      );\r\n      if (isFinded.length > 0) {\r\n        const data: NavigationExtras = { queryParams: item };\r\n        this.router.navigate(['event-detail-buyer'], data);\r\n      }\r\n    }\r\n  }\r\n  getEvents() {\r\n    this.router.navigate(['event-detail-buyer']);\r\n  }\r\n  backOne() {\r\n    if (this.monthNumber === 0) {\r\n      this.year--;\r\n      this.monthNumber = 11;\r\n    } else {\r\n      this.monthNumber--;\r\n    }\r\n  }\r\n  fowardOne() {\r\n    if (this.monthNumber === 11) {\r\n      this.year++;\r\n      this.monthNumber = 0;\r\n    } else {\r\n      this.monthNumber++;\r\n    }\r\n  }\r\n  async toastPresent(m = 'Eventos pendientes hoy') {\r\n    const isPresent = await this.storage.get('alert-today');\r\n    if (+isPresent !== new Date().getDate()) {\r\n      const toast = await this.toastController.create({\r\n        message: m,\r\n        showCloseButton: true,\r\n        position: 'bottom',\r\n        closeButtonText: 'OK',\r\n        cssClass: 'toast-alert',\r\n        duration: 50000,\r\n      });\r\n      toast.present();\r\n      toast.onWillDismiss().then(() => {\r\n        this.storage.set('alert-today', new Date().getDate());\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <!-- cargar -->\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <!-- si cargado -->\\r\\n  <ng-template #thenTemplate>\\r\\n    <!-- credito -->\\r\\n    <ng-container *ngIf=\\\"hasCredit; then Credit; else noCredit\\\"></ng-container>\\r\\n    <ng-template #Credit>\\r\\n\\r\\n      <ion-card [ngClass]=\\\"{'state-verde': credit.status === 'verde', \\r\\n        'state-amarillo': credit.status === 'amarillo',\\r\\n        'state-rojo': credit.status === 'rojo',\\r\\n        'state-azul': credit.status === 'azul' }\\\">\\r\\n\\r\\n        <span *ngIf=\\\"credit.status === 'verde'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Interés</ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>En espera</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content text-wrap>\\r\\n            En poco tiempo recibirá respuesta de la solicitud\\r\\n          </ion-card-content>\\r\\n\\r\\n        </span>\\r\\n\\r\\n        <span *ngIf=\\\"credit.status === 'amarillo'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Negociación</ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content text-wrap>\\r\\n            <ion-label text-wrap>Detalles de la oferta : {{credit.notes}}</ion-label>\\r\\n            <ion-list lines=\\\"none\\\">\\r\\n              <ion-list-header text-wrap> Documentos Requeridos:</ion-list-header>\\r\\n              <ion-item lines=\\\"none\\\" *ngFor=\\\"let doc of credit.files\\\">{{doc}}</ion-item>\\r\\n            </ion-list>\\r\\n          </ion-card-content>\\r\\n          <!-- Poner en notes Aceptado o Denagado -->\\r\\n\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"respondOfert('Aceptado', true)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button (click)=\\\"respondOfert('Denagado', false)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n          </ion-item>\\r\\n\\r\\n        </span>\\r\\n\\r\\n        <span *ngIf=\\\"credit.status === 'rojo'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Respuesta de Crédito</ion-card-subtitle>\\r\\n            <!-- Poner en notes Aceptado o Denagado -->\\r\\n            <ion-card-title text-wrap> Crédito: {{credit.notes}}</ion-card-title>\\r\\n            <ion-card-content text-wrap>\\r\\n            </ion-card-content>\\r\\n          </ion-card-header>\\r\\n        </span>\\r\\n\\r\\n      </ion-card>\\r\\n    </ng-template>\\r\\n    <ng-template #noCredit>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title style=\\\"display: flex; align-items: center;\\\">\\r\\n            <ion-icon name=\\\"paper\\\"></ion-icon> Solicitar Crédito\\r\\n          </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-label text-wrap><b>Aún no cuentas con algún credito para esta propiedad</b></ion-label>\\r\\n          <ion-label text-wrap>Solicita uno de manera gratuita presionando en el botón:</ion-label>\\r\\n        </ion-card-content>\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"createCredit()\\\" color=\\\"secondary\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n            Solicitar Crédito <ion-icon name=\\\"send\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n    </ng-template>\\r\\n    <!-- /credito -->\\r\\n    <!-- schedule -->\\r\\n    <ng-container *ngIf=\\\"hasSchedule; then Schedule; else noSchedule\\\"></ng-container>\\r\\n    <ng-template #Schedule>\\r\\n      <ion-card [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\r\\n        'state-amarillo': schedule.status === 'amarillo',\\r\\n        'state-rojo': schedule.status === 'rojo',\\r\\n        'state-gris': schedule.status === 'gris',\\r\\n        'state-azul': schedule.status === 'azul' }\\\">\\r\\n        <span *ngIf=\\\"schedule.status === 'gris'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Cita Generada</ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>En espera</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content text-wrap>\\r\\n            En poco tiempo recibirá respuesta de la cita solicitada\\r\\n          </ion-card-content>\\r\\n\\r\\n        </span>\\r\\n\\r\\n        <span *ngIf=\\\"schedule.status === 'verde'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Propuesta Cita</ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content text-wrap>\\r\\n            <ion-label text-wrap>Detalles de la cita : {{schedule.note}}</ion-label>\\r\\n            <ion-list lines=\\\"none\\\">\\r\\n              <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-item>\\r\\n              <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}}</ion-item>\\r\\n            </ion-list>\\r\\n          </ion-card-content>\\r\\n          <!-- Poner en notes Aceptado o Denagado -->\\r\\n\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"respondSchedule('Aceptado')\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button (click)=\\\"respondSchedule('Denagado')\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n          </ion-item>\\r\\n\\r\\n        </span>\\r\\n\\r\\n\\r\\n        <span *ngIf=\\\"schedule.status === 'amarillo'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Cita Agendada</ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>Favor de asistir</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content text-wrap>\\r\\n            <ion-label text-wrap>Detalles de la cita : {{schedule.note}}</ion-label>\\r\\n            <ion-list lines=\\\"none\\\">\\r\\n              <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-item>\\r\\n              <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}} </ion-item>\\r\\n            </ion-list>\\r\\n          </ion-card-content>\\r\\n          <!-- Poner en notes Aceptado o Denagado -->\\r\\n\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-button [routerLink]=\\\"['/calendar-buyer']\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Ver agenda <ion-icon name=\\\"calendar\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n          </ion-item>\\r\\n\\r\\n        </span>\\r\\n\\r\\n        <span *ngIf=\\\"schedule.status === 'rojo'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Visita</ion-card-subtitle>\\r\\n            <!-- Poner en notes Visitada o No Visitada -->\\r\\n            <ion-card-title text-wrap> Asistencia: {{schedule.note}}</ion-card-title>\\r\\n            <ion-card-content text-wrap>\\r\\n            </ion-card-content>\\r\\n          </ion-card-header>\\r\\n        </span>\\r\\n\\r\\n      </ion-card>\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template #noSchedule>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title style=\\\"display: flex; align-items: center;\\\">\\r\\n            <ion-icon name=\\\"calendar\\\"></ion-icon> Solicitar Visita\\r\\n          </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <!-- form -->\\r\\n        <form #loginForm2=\\\"ngForm\\\">\\r\\n          <ion-card-content>\\r\\n            <ion-label text-wrap><b>Aún no cuentas con alguna cita para esta propiedad</b></ion-label>\\r\\n            <ion-label text-wrap>Solicita una de manera gratuita anotando la posible fecha y presionando en el botón:</ion-label>\\r\\n            <!-- fecha -->\\r\\n            <mat-form-field>\\r\\n              <input matInput (dateChange)=\\\"dateSelect($event)\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\"\\r\\n                placeholder=\\\"Fecha\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker touchUi #picker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <!-- day -->\\r\\n            <!-- <mdc-text-field label=\\\"Dia\\\" type=\\\"number\\\" [(ngModel)]=\\\"daySelect\\\" #d=\\\"ngModel\\\" id=\\\"d\\\" name=\\\"d\\\" required\\r\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n              <span *ngIf=\\\"d.dirty || d.touched\\\">Anota Dia</span>\\r\\n            </mdc-text-field-helper-text> -->\\r\\n            <!-- mm -->\\r\\n            <!--  <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\" style=\\\"    margin-right: 10%;\\\">\\r\\n              <ion-label>Mes</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"monthSelect\\\" #me=\\\"ngModel\\\" id=\\\"me\\\" name=\\\"me\\\" required>\\r\\n                <ion-select-option *ngFor=\\\"let m of months; let i = index\\\" [value]=\\\"i\\\">{{m}}</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item> -->\\r\\n            <!-- aa -->\\r\\n            <!-- <mdc-text-field label=\\\"Año\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearSelect\\\" #y=\\\"ngModel\\\" id=\\\"y\\\" name=\\\"y\\\" required\\r\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n              <span *ngIf=\\\"y.dirty || y.touched\\\">Anota Año</span>\\r\\n            </mdc-text-field-helper-text> -->\\r\\n            <!-- hh -->\\r\\n            <mdc-text-field label=\\\"Hora (formato 24hrs)\\\" type=\\\"number\\\" [(ngModel)]=\\\"hourSelect\\\" #h=\\\"ngModel\\\" id=\\\"h\\\"\\r\\n              name=\\\"h\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n              <span *ngIf=\\\"h.dirty || h.touched\\\">Anota Hora</span>\\r\\n            </mdc-text-field-helper-text>\\r\\n\\r\\n\\r\\n          </ion-card-content>\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-button [disabled]=\\\"!hourSelect && !yearSelect\\\" (click)=\\\"createSchedule()\\\" color=\\\"secondary\\\" fill=\\\"outline\\\"\\r\\n              slot=\\\"end\\\">\\r\\n              Solicitar Cita <ion-icon name=\\\"send\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-item>\\r\\n        </form>\\r\\n      </ion-card>\\r\\n    </ng-template>\\r\\n    <!-- /Schedule -->\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- no cargado -->\\r\\n  <ng-template #elseTemplate>\\r\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\r\\n  </ng-template>\\r\\n  <!-- /cargar -->\\r\\n</ion-content>\"","module.exports = \".state-verde {\\n  border-left: 4px solid var(--ion-color-success); }\\n\\n.state-amarillo {\\n  border-left: 4px solid var(--ion-color-warning); }\\n\\n.state-rojo {\\n  border-left: 4px solid var(--ion-color-danger); }\\n\\n.state-azul {\\n  border-left: 4px solid var(--ion-color-blue); }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { CreditService } from '../../../services/credit.service';\r\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { ScheduleService } from '../../../services/schedule.service';\r\nimport { ISchedule } from '../../../models/schedule.model';\r\nimport { FormatHoursFront } from '../../../_config/_helpers';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-credit-event-buyer',\r\n  templateUrl: './credit-event-buyer.component.html',\r\n  styleUrls: ['./credit-event-buyer.component.scss'],\r\n})\r\nexport class CreditEventBuyerComponent implements OnInit {\r\n  propertyId: string;\r\n  isLoad = false;\r\n  hasCredit = false;\r\n  hasSchedule = false;\r\n  credit: ICredit;\r\n  statusBuyerPropertyId;\r\n  daySelect: number;\r\n  monthSelect: number;\r\n  yearSelect: number;\r\n  hourSelect: number;\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  schedule: ISchedule;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private propertyService: PropertyService,\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    private creditService: CreditService,\r\n    public toastController: ToastController,\r\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\r\n    private scheduleService: ScheduleService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params.id) {\r\n        this.propertyId = params.id;\r\n        this.statusBuyerPropertyId = params.statusId;\r\n        this.getBuyerById(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  /**\r\n   *\r\n   * @param propertyId id de propiedad\r\n   */\r\n  getBuyerById(propertyId) {\r\n    const buyerId = this.userSessionService.userSession.value.id;\r\n    this.buyerService.getBuyerById(buyerId).subscribe(buyer => {\r\n      const buyerGet = <any>buyer;\r\n      const isCreditFinded = buyerGet.credit.find(\r\n        credit => credit.property._id === propertyId,\r\n      );\r\n      // cambiar a filters si tine varias\r\n      const isScheduleFinded = buyer.schedule.find(\r\n        s => s.property._id === propertyId,\r\n      );\r\n      if (isCreditFinded) {\r\n        this.credit = isCreditFinded;\r\n        this.hasCredit = true;\r\n      }\r\n      if (isScheduleFinded) {\r\n        this.schedule = isScheduleFinded;\r\n        console.log(this.schedule);\r\n        this.hasSchedule = true;\r\n      }\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  createCredit() {\r\n    this.propertyService\r\n      .getPropertyById(this.propertyId)\r\n      .subscribe(property => {\r\n        const buyerId = this.userSessionService.userSession.value.id;\r\n        const buyerName = this.userSessionService.userSession.value.name;\r\n        const credit: ICredit = {\r\n          buyer: buyerId,\r\n          property: this.propertyId,\r\n          status: 'verde',\r\n          notes: `El cliente \"${buyerName}\" requiere info. para adquirir un crédito para la propiedad: \"${\r\n            property.name\r\n          }\"`,\r\n        };\r\n        // Crear notif\r\n        this.notification(\r\n          'Solicitud de crédito',\r\n          credit.notes,\r\n          credit.status,\r\n          'credit',\r\n          ['office', 'administrator'],\r\n        );\r\n        this.creditService.newCredit(credit).subscribe(c => {\r\n          if (c) {\r\n            this.buyerService.getBuyerById(buyerId).subscribe(b => {\r\n              const arr = b.credit.map(item => item._id);\r\n              arr.push(c._id);\r\n              const buyer: any = {\r\n                _id: buyerId,\r\n                credit: arr,\r\n              };\r\n              this.buyerService.putBuyer(buyer).subscribe(() => {\r\n                this.getBuyerById(this.propertyId);\r\n                this.presentToast('Solicitud enviada');\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }\r\n  respondOfert(str: string, isAcept: boolean) {\r\n    const buyerName = this.userSessionService.userSession.value.name;\r\n    this.statusBuyerPropertyService\r\n      .upgradeStatus(this.statusBuyerPropertyId, 'rojo')\r\n      .subscribe(c => console.log(c));\r\n    this.credit.status = 'rojo';\r\n    this.credit.notes = str;\r\n    this.credit.isAccept = isAcept;\r\n    this.creditService.putCredit(this.credit).subscribe(res => {\r\n      // Crear notif\r\n      this.notification(\r\n        'Respuesta de crédito',\r\n        `El cliente ${buyerName} ha ${str} un crédito`,\r\n        this.credit.status,\r\n        'credit',\r\n        ['office', 'administrator'],\r\n      );\r\n      if (res) {\r\n        this.getBuyerById(this.propertyId);\r\n        this.presentToast('Credito ' + str);\r\n      }\r\n    });\r\n  }\r\n  dateSelect(event) {\r\n    if (event) {\r\n      this.daySelect = event.value._i.date;\r\n      this.monthSelect = event.value._i.month;\r\n      this.yearSelect = event.value._i.year;\r\n    }\r\n  }\r\n  // Schedules\r\n  createSchedule() {\r\n    this.propertyService\r\n      .getPropertyById(this.propertyId)\r\n      .subscribe(property => {\r\n        const buyer = this.userSessionService.userSession.value;\r\n\r\n        const newSchedule: any = {\r\n          status: 'gris',\r\n          note: `El cliente \"${\r\n            buyer.name\r\n          }\" requiere una cita para conocer la propiedad: \"${property.name}\"`,\r\n          buyer: buyer.id,\r\n          property: this.propertyId,\r\n          year: this.yearSelect,\r\n          month: this.monthSelect,\r\n          day: this.daySelect,\r\n          hour: this.hourSelect,\r\n        };\r\n        // Crear notif\r\n        this.notification(\r\n          'Solicitud de visita',\r\n          newSchedule.note,\r\n          newSchedule.status,\r\n          'schedule',\r\n          ['office', 'administrator'],\r\n        );\r\n        this.scheduleService.newSchedule(newSchedule).subscribe(s => {\r\n          if (s) {\r\n            this.buyerService.getBuyerById(buyer.id).subscribe(b => {\r\n              const arr = b.schedule.map(item => item._id);\r\n              arr.push(s._id);\r\n              const buyerEdit: any = {\r\n                _id: buyer.id,\r\n                schedule: arr,\r\n              };\r\n              this.buyerService.putBuyer(buyerEdit).subscribe(() => {\r\n                this.getBuyerById(this.propertyId);\r\n                this.presentToast('Cita Solicitada');\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }\r\n  respondSchedule(str: string) {\r\n    const buyerName = this.userSessionService.userSession.value.name;\r\n    if (str === 'Aceptado') {\r\n      this.schedule.status = 'amarillo';\r\n      // noti schedule\r\n      this.notificationBySchedule(this.schedule);\r\n    } else {\r\n      this.schedule.status = 'gris';\r\n    }\r\n    this.schedule.note = str;\r\n    // Crear notif\r\n    this.notification(\r\n      'Respuesta de visita',\r\n      `El cliente ${buyerName} ha ${str} la visita a ${\r\n        this.schedule.property.name\r\n      }`,\r\n      this.schedule.status,\r\n      'schedule',\r\n      ['office', 'administrator'],\r\n      this.schedule.adviser._id,\r\n    );\r\n    this.scheduleService.putSchedule(this.schedule).subscribe(res => {\r\n      if (res) {\r\n        this.getBuyerById(this.propertyId);\r\n        this.presentToast('Cita ' + str);\r\n      }\r\n    });\r\n  }\r\n  // toast\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n  public notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId?: string,\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: [receiversId],\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(\r\n        notification.title,\r\n        message,\r\n        status === 'rojo' ? ['office', 'administrator'] : ['office'],\r\n        receiversId !== undefined ? [receiversId] : undefined,\r\n      )\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService\r\n          .newNotification(notification)\r\n          .subscribe(n => console.log(n));\r\n      });\r\n  }\r\n  public notificationBySchedule(schedule?: ISchedule) {\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalBySchedule(\r\n        'Recordatorio de evento',\r\n        `Tienes un evento con direccion ${schedule.address} en propiedad: ${\r\n          schedule.property.name\r\n        } a las ${schedule.hour}hrs`,\r\n        new Date(\r\n          schedule.year,\r\n          schedule.month,\r\n          schedule.day,\r\n          schedule.hour,\r\n          schedule.minute,\r\n        ),\r\n        undefined,\r\n        [this.userSessionService.userSession.value.id, schedule.adviser._id],\r\n      )\r\n      .subscribe(() => {\r\n        // guardar noti\r\n      });\r\n    /*  this.oneSignalService\r\n      .postOneSignalBySchedule(\r\n        'Recordatorio de evento',\r\n        `sch`,\r\n        new Date(2018, 9, 2, 11, 45),\r\n        [],\r\n        ['5b9be3590ec7e6001335105c', '5baba37a0beeaa15d074e954'],\r\n      )\r\n      .subscribe(e => {\r\n        console.log(e);\r\n      }); */\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Detalles\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n    <h1> Característica </h1>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"!isLiked\\\">\\r\\n\\r\\n        <ion-button (click)=\\\"setLikeProperty(property._id)\\\" color=\\\"secondary\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n          <ion-icon name=\\\"heart-empty\\\"></ion-icon>Me gusta\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"isLiked\\\">\\r\\n        <ion-button (click)=\\\"setLikeProperty(property._id)\\\" color=\\\"secondary\\\" fill=\\\"solid\\\" slot=\\\"end\\\">\\r\\n          <ion-icon color=\\\"dark\\\" name=\\\"heart\\\"></ion-icon>Te gusta\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-card-header>\\r\\n        <ion-card-title> {{property.name}} </ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <!-- Principales -->\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <!-- Renta/venta -->\\r\\n            <ion-chip *ngIf=\\\"property.isRent\\\" style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\r\\n              <ion-label>Renta</ion-label>\\r\\n            </ion-chip>\\r\\n            <ion-chip *ngIf=\\\"!property.isRent\\\" style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\r\\n              <ion-label>Venta</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"expand\\\"></ion-chip-icon>\\r\\n              <ion-label>Espacio {{property.space}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\r\\n              <ion-label>Fecha {{property.dateToBuy}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"water\\\"></ion-chip-icon>\\r\\n              <ion-label>Baños {{property.numBathrooms}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\r\\n              <ion-label>Max ${{property.maxPrice}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\r\\n              <ion-label>Min ${{property.minPrice}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"car\\\"></ion-chip-icon>\\r\\n              <ion-label>Estacionamiento {{property.numCars}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\r\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"bed\\\"></ion-chip-icon>\\r\\n              <ion-label>Cuartos {{property.numRooms}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n      <!-- otros -->\\r\\n      <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Otras</ion-card-subtitle>\\r\\n      <ion-item *ngIf=\\\"property.allServices\\\">\\r\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n        <ion-label>Todos los servicios</ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"property.hasElevator\\\">\\r\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n        <ion-label>Elevador</ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"property.hasGarden\\\">\\r\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n        <ion-label>Jardin</ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"property.isClose\\\">\\r\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n        <ion-label>Fraccionamineto Cerrado</ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"!property.isOld\\\">\\r\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n        <ion-label>Nuevo</ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"property.isLowLevel\\\">\\r\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\r\\n        <ion-label>Planta Baja</ion-label>\\r\\n      </ion-item>\\r\\n      <!-- tag -->\\r\\n      <ion-card-subtitle style=\\\"margin: 8% 0% 2% 8%;\\\">Etiquetas</ion-card-subtitle>\\r\\n      <ion-grid style=\\\"margin-left: 8%;\\\">\\r\\n        <ion-row>\\r\\n          <ion-col *ngFor=\\\"let tag of property.tag\\\">\\r\\n            {{tag}}\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n\\r\\n    </ion-card>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate style=\\\"text-align: center\\\">\\r\\n    <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\r\\n\\r\\n  </ng-template>\\r\\n  <!-- <button (click)=\\\"notification()\\\">algo</button> -->\\r\\n</ion-content>\"","module.exports = \".icon-chip-detail {\\n  border-radius: 50%;\\n  background-color: black;\\n  color: white; }\\n\"","import { IBuyer } from './../../../models/buyer.model';\r\nimport { BuyerService } from './../../../services/buyer.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { Observable } from 'rxjs';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { IStatusBuyerProperty } from '../../../models/statusBuyerProperty.model';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { INotification } from '../../../models/notification.model';\r\n\r\n@Component({\r\n  selector: 'app-detail-prop-buyer',\r\n  templateUrl: './detail-prop-buyer.component.html',\r\n  styleUrls: ['./detail-prop-buyer.component.scss'],\r\n})\r\nexport class DetailPropBuyerComponent implements OnInit {\r\n  property: IProperty;\r\n  isLoad = false;\r\n  isLiked = false;\r\n  arrPropLikes: string[] = [];\r\n  arrSBP: string[] = [];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private propertyService: PropertyService,\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    public toastController: ToastController,\r\n    private statusBPService: StatusBuyerPropertyService,\r\n    private oneSignalService: OnesignalService,\r\n    private sellerService: SellerService,\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params.id);\r\n      if (params.id) {\r\n        this.getPropertyById(params.id);\r\n        this.getlikeProperty(params.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getPropertyById(id: string) {\r\n    this.propertyService.getPropertyById(id).subscribe(property => {\r\n      this.property = property;\r\n      console.log(this.property);\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  async getSellerOfProperty() {\r\n    return await this.sellerService\r\n      .getSellerAll()\r\n      .pipe(\r\n        map(sellers =>\r\n          sellers.find(\r\n            s => !!s.property.find(p => p._id === this.property._id),\r\n          ),\r\n        ),\r\n      )\r\n      .toPromise();\r\n  }\r\n  getlikeProperty(id: string) {\r\n    const buyer = this.userSessionService.userSession.value;\r\n    this.buyerService.getBuyerById(buyer.id).subscribe((b: any) => {\r\n      console.log(b);\r\n      if (b.statusBuyerProperty && b.statusBuyerProperty.length > 0) {\r\n        this.arrSBP = b.statusBuyerProperty.map(\r\n          buyerProperty => buyerProperty._id,\r\n        );\r\n        this.arrPropLikes = b.statusBuyerProperty.map(\r\n          buyerProperty => buyerProperty.property._id,\r\n        );\r\n        if (b.statusBuyerProperty) {\r\n          const findIndex = this.arrPropLikes.findIndex(prop => prop === id);\r\n          if (findIndex !== -1) {\r\n            this.isLiked = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  setLikeProperty(propertyId: string) {\r\n    const buyerId = this.userSessionService.userSession.value.id;\r\n    const sBP: IStatusBuyerProperty = {\r\n      buyer: buyerId,\r\n      property: propertyId,\r\n      status: 'verde',\r\n    };\r\n    const buyer: IBuyer = {\r\n      _id: buyerId,\r\n      statusBuyerProperty: this.arrSBP,\r\n    };\r\n    if (this.isLiked) {\r\n      const findeIndex = this.arrPropLikes.findIndex(\r\n        prop => prop === propertyId,\r\n      );\r\n      this.statusBPService\r\n        .deletedStatusBuyerProperty(this.arrSBP[findeIndex])\r\n        .subscribe(res => {\r\n          if (res) {\r\n            const findeIndexBuyer = buyer.statusBuyerProperty.findIndex(\r\n              item => item === this.arrSBP[findeIndex],\r\n            );\r\n            buyer.statusBuyerProperty.splice(findeIndexBuyer, 1);\r\n            this.buyerService.putBuyer(buyer).subscribe(val => {\r\n              this.presentToast('Te ha dejado de gustar esta propiedad');\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.statusBPService.newStatusBuyerProperty(sBP).subscribe(res => {\r\n        buyer.statusBuyerProperty.push(res._id);\r\n        this.buyerService.putBuyer(buyer).subscribe(val => {\r\n          // crar noti\r\n          this.notification();\r\n          if (val) {\r\n            this.presentToast('Te ha gustado esta propiedad');\r\n          }\r\n        });\r\n      });\r\n    }\r\n    this.isLiked = !this.isLiked;\r\n  }\r\n  public async notification() {\r\n    // seller\r\n    const seller = await this.getSellerOfProperty();\r\n    // mensaje\r\n    const m = `${\r\n      this.userSessionService.userSession.value.name\r\n    } ha indicado que le gusta ${this.property.name}`;\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: 'Interés en una Propiedad',\r\n      message: m,\r\n      tags: ['office', 'administrator'],\r\n      receiversId: [seller._id],\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: 'verde',\r\n      type: 'like',\r\n    };\r\n    console.log(seller);\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, m, ['office'], [seller._id])\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar translucent color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Eventos\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <!-- Toggles in a List -->\\r\\n  <ion-list lines=\\\"none\\\">\\r\\n    <ion-item lines=\\\"none\\\">\\r\\n      <ion-label>Mostrar Todos</ion-label>\\r\\n      <ion-toggle [(ngModel)]=\\\"isAll\\\" (ionChange)=\\\"getAllSchedule();getActualSchedule()\\\"></ion-toggle>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"none\\\" *ngIf=\\\"!isAll\\\">\\r\\n      <ion-chip color=\\\"secondary\\\">\\r\\n        <ion-label>Mostrando Actuales\\r\\n        </ion-label>\\r\\n      </ion-chip>\\r\\n    </ion-item>\\r\\n\\r\\n  </ion-list>\\r\\n  <!-- eventos -->\\r\\n  <ng-container *ngIf=\\\"scheduleToShow.length > 0; then data; else noData\\\"></ng-container>\\r\\n  <ng-template #data>\\r\\n    <ion-card *ngFor=\\\"let schedule of scheduleToShow\\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\r\\n        'state-amarillo': schedule.status === 'amarillo',\\r\\n        'state-rojo': schedule.status === 'rojo',\\r\\n        'state-gris': schedule.status === 'gris',\\r\\n        'state-azul': schedule.status === 'azul' }\\\">\\r\\n      <span *ngIf=\\\"schedule.status === 'gris'\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Estado: Cita Generada</ion-card-subtitle>\\r\\n          <ion-card-title text-wrap>En espera</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content text-wrap>\\r\\n          En poco tiempo recibirá respuesta de la cita solicitada\\r\\n        </ion-card-content>\\r\\n\\r\\n      </span>\\r\\n\\r\\n      <span *ngIf=\\\"schedule.status === 'verde'\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Estado: Propuesta Cita</ion-card-subtitle>\\r\\n          <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content text-wrap>\\r\\n          <ion-label text-wrap>Detalles de la cita : {{schedule.note}}</ion-label>\\r\\n          <ion-list lines=\\\"none\\\">\\r\\n            <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1 }}/{{schedule.year}}</ion-item>\\r\\n            <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour,\\r\\n              schedule.minute)}}</ion-item>\\r\\n          </ion-list>\\r\\n        </ion-card-content>\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"respondSchedule('Aceptado', schedule._id)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n            Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n          <ion-button (click)=\\\"respondSchedule('Denagado',  schedule._id)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n            Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n\\r\\n        </ion-item>\\r\\n\\r\\n      </span>\\r\\n      <span *ngIf=\\\"!schedule.status || schedule.status === 'amarillo'\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Cita: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-card-subtitle>\\r\\n          <ion-card-subtitle lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour,\\r\\n            schedule.minute)}}</ion-card-subtitle>\\r\\n          <ion-card-title>{{schedule.property.name}}</ion-card-title>\\r\\n        </ion-card-header>\\r\\n\\r\\n        <ion-card-content>\\r\\n          <ion-label>\\r\\n            <ion-icon name=\\\"person\\\"></ion-icon>\\r\\n            <b>Tiene una cita con {{schedule.adviser ? schedule.adviser.name : schedule.seller.name}}</b>\\r\\n          </ion-label>\\r\\n          <ion-icon name=\\\"pin\\\"></ion-icon>\\r\\n          Direccion {{schedule.property.zone}}\\r\\n        </ion-card-content>\\r\\n      </span>\\r\\n      <span *ngIf=\\\"schedule.status === 'rojo'\\\">\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Estado: Visitado</ion-card-subtitle>\\r\\n          <!-- Poner en notes Visitada o No Visitada -->\\r\\n          <ion-card-title text-wrap> Evento Pasado </ion-card-title>\\r\\n          <ion-card-content text-wrap>\\r\\n          </ion-card-content>\\r\\n        </ion-card-header>\\r\\n      </span>\\r\\n\\r\\n    </ion-card>\\r\\n  </ng-template>\\r\\n  <!-- sin evento -->\\r\\n  <ng-template #noData>\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>No hay eventos</ion-card-title>\\r\\n      </ion-card-header>\\r\\n    </ion-card>\\r\\n\\r\\n  </ng-template>\\r\\n\\r\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { ISchedule } from '../../../models/schedule.model';\r\nimport { ScheduleService } from '../../../services/schedule.service';\r\nimport { FormatHoursFront, FormatDatesFront } from '../../../_config/_helpers';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\nimport { INotification } from '../../../models/notification.model';\r\n\r\n@Component({\r\n  selector: 'app-event-detail-buyer',\r\n  templateUrl: './event-detail-buyer.component.html',\r\n  styleUrls: ['./event-detail-buyer.component.scss'],\r\n})\r\nexport class EventDetailBuyerComponent implements OnInit {\r\n  schedule: ISchedule[];\r\n  scheduleToShow: ISchedule[] = [];\r\n  isAll: boolean;\r\n  isOne: boolean;\r\n  user: IUserSession;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private userSessionService: UserSessionService,\r\n    private buyerService: BuyerService,\r\n    private scheduleService: ScheduleService,\r\n    private adviserService: AdviserService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.user = this.userSessionService.userSession.value;\r\n    if (this.user.type === 'buyer') {\r\n      this.inti(this.user);\r\n    } else if (this.user.type === 'adviser') {\r\n      this.initAdv(this.user);\r\n    }\r\n  }\r\n\r\n  private inti(buyer: IUserSession) {\r\n    this.buyerService.getBuyerById(buyer.id).subscribe(b => {\r\n      this.schedule = b.schedule;\r\n      this.route.queryParams.subscribe(params => {\r\n        if (params.year) {\r\n          this.isOne = true;\r\n          this.getByDay(+params.year, +params.month, +params.day);\r\n        } else {\r\n          this.isAll = false;\r\n          this.getActualSchedule();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  private initAdv(adv: IUserSession) {\r\n    this.adviserService.getAdviserById(adv.id).subscribe(b => {\r\n      console.log(b);\r\n      this.schedule = b.schedule;\r\n      this.route.queryParams.subscribe(params => {\r\n        if (params.year) {\r\n          this.isOne = true;\r\n          this.getByDay(+params.year, +params.month, +params.day);\r\n        } else {\r\n          this.isAll = false;\r\n          this.getActualSchedule();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getByDay(year: number, month: number, day: number) {\r\n    const isFinded = this.schedule.filter(\r\n      s => s.day === day && s.month === month && s.year === year,\r\n    );\r\n    if (isFinded.length > 0) {\r\n      this.scheduleToShow = isFinded;\r\n    }\r\n    this.isAll = false;\r\n  }\r\n  getAllSchedule() {\r\n    if (this.isAll === true) {\r\n      this.scheduleToShow = this.schedule;\r\n      console.log(this.scheduleToShow);\r\n    }\r\n  }\r\n  getActualSchedule() {\r\n    if (this.isAll === false) {\r\n      const date = new Date();\r\n      const isFinded = this.schedule.filter(\r\n        s => new Date(s.year, s.month, s.day) >= date,\r\n      );\r\n      this.scheduleToShow = isFinded;\r\n    }\r\n  }\r\n  respondSchedule(str: string, scheduleId: string) {\r\n    const schedule = this.schedule.find(s => s._id === scheduleId);\r\n    if (str === 'Aceptado') {\r\n      schedule.status = 'amarillo';\r\n      // noti schedule\r\n      this.notificationBySchedule(schedule);\r\n      // Crear notif\r\n      this.notification(\r\n        'Respuesta de visita',\r\n        `El cliente ${\r\n          this.userSessionService.userSession.value.name\r\n        } ha ${str} la visita a ${schedule.property.name}`,\r\n        schedule.status,\r\n        'schedule',\r\n        ['office', 'administrator'],\r\n        [schedule.adviser ? schedule.adviser._id : schedule.seller._id],\r\n      );\r\n    } else {\r\n      schedule.status = 'gris';\r\n    }\r\n    schedule.note = str;\r\n    this.scheduleService.putSchedule(schedule).subscribe(res => {\r\n      if (res) {\r\n        this.inti(this.user);\r\n      }\r\n    });\r\n  }\r\n  formatHours(hours, minutes) {\r\n    return FormatHoursFront(hours, minutes);\r\n  }\r\n  formatDates(year, month, day) {\r\n    const date = new Date();\r\n    FormatDatesFront(date);\r\n  }\r\n  // noti\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n  public notificationBySchedule(schedule?: ISchedule) {\r\n    console.log(schedule);\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalBySchedule(\r\n        'Recordatorio de evento',\r\n        `Tienes un evento con direccion ${schedule.address} en propiedad: ${\r\n          schedule.property.name\r\n        } a las ${schedule.hour}hrs`,\r\n        new Date(\r\n          schedule.year,\r\n          schedule.month,\r\n          schedule.day,\r\n          schedule.hour,\r\n          schedule.minute,\r\n        ),\r\n        undefined,\r\n        [\r\n          this.userSessionService.userSession.value.id,\r\n          schedule.adviser ? schedule.adviser._id : schedule.seller._id,\r\n        ],\r\n      )\r\n      .subscribe(() => {});\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Lista de Deseos\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n\\r\\n    <h2>Selecciona uno para mayor información</h2>\\r\\n    <ion-card *ngFor=\\\"let item of sBP | async\\\" [ngClass]=\\\"{'state-verde': item.status === 'verde', 'state-amarillo': item.status === 'amarillo','state-rojo': item.status === 'rojo','state-azul': item.status === 'azul' }\\\"\\r\\n      (click)=\\\"itemDetail(item.property, item._id)\\\">\\r\\n      <ion-card-header>\\r\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'verde'\\\">Estado: Interés</ion-card-subtitle>\\r\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'amarillo'\\\">Estado: Negociación</ion-card-subtitle>\\r\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'rojo'\\\">Estado: Oferta Aceptada</ion-card-subtitle>\\r\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'azul'\\\">Estado: Post Venta</ion-card-subtitle>\\r\\n        <ion-card-title>{{item.property.name}}</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"arrow-forward\\\" slot=\\\"end\\\"></ion-icon>\\r\\n          <ion-label text-wrap>Ver estado de crédito o agendar citas</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate>\\r\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".user-select-contenet {\\n  margin: 3% 30% 2% 30%; }\\n\\n.state-verde {\\n  border-left: 4px solid var(--ion-color-success); }\\n\\n.state-amarillo {\\n  border-left: 4px solid var(--ion-color-warning); }\\n\\n.state-rojo {\\n  border-left: 4px solid var(--ion-color-danger); }\\n\\n.state-azul {\\n  border-left: 4px solid var(--ion-color-blue); }\\n\\n@media (max-width: 900px) {\\n  .user-select-contenet {\\n    margin: 1% 1% 1% 1%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { IStatusBuyerPropertyGet } from '../../../models/statusBuyerProperty.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-inter-prop-buyer',\r\n  templateUrl: './inter-prop-buyer.component.html',\r\n  styleUrls: ['./inter-prop-buyer.component.scss'],\r\n})\r\nexport class InterPropBuyerComponent implements OnInit {\r\n  sBP: Observable<IStatusBuyerPropertyGet[]>;\r\n  isLoad = false;\r\n\r\n  constructor(\r\n    private buyerService: BuyerService,\r\n    private userSessionService: UserSessionService,\r\n    private router: Router,\r\n  ) {\r\n    this.getLikes();\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getLikes() {\r\n    const buyerId = this.userSessionService.userSession.value.id;\r\n    this.sBP = this.buyerService\r\n      .getBuyerById(buyerId)\r\n      .pipe(map(res => res.statusBuyerProperty));\r\n    this.isLoad = true;\r\n  }\r\n  itemDetail(item: IProperty, statusId: string) {\r\n    const data: NavigationExtras = {\r\n      queryParams: { id: item._id, statusId: statusId },\r\n    };\r\n    this.router.navigate(['credit-event-buyer'], data);\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propiedades\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <!-- cargar o no -->\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n    <!--  Segment -->\\r\\n    <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" color=\\\"secondary\\\">\\r\\n      <ion-segment-button value=\\\"match\\\" checked>\\r\\n        Sugeridas\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"search\\\">\\r\\n        Todas\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n\\r\\n    <!-- match -->\\r\\n    <ng-container *ngIf=\\\"segment === 'match'; then matchTemplate; else searchTemplate\\\"></ng-container>\\r\\n    <ng-template #matchTemplate>\\r\\n      <h1>Propiedades Sugeridas</h1>\\r\\n      <ion-label>Se muestran las coincidencias con tu perfil</ion-label>\\r\\n      <ion-list [@animateStagger]=\\\"{value:'50'}\\\" lines=\\\"full\\\">\\r\\n        <ion-item [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" lines=\\\"inset\\\" detail *ngFor=\\\"let property of properties\\\"\\r\\n          (click)=\\\"itemDetail(property)\\\">\\r\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'departamento'\\\" style=\\\"color: #F5811E\\\" name=\\\"business\\\" slot=\\\"start\\\"></ion-icon>\\r\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'casa'\\\" style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\r\\n          <ion-label text-wrap>\\r\\n            <h2>{{property.name}}</h2>\\r\\n            <p>{{property.zone}}</p>\\r\\n            <ion-chip *ngIf=\\\"property.percentage > 60\\\" class=\\\"high\\\">\\r\\n              <ion-label>Alta coincidencia</ion-label>\\r\\n            </ion-chip>\\r\\n            <ion-chip *ngIf=\\\"property.percentage <= 60 && property.percentage > 30 \\\" class=\\\"medium\\\">\\r\\n              <ion-label>Media coincidencia</ion-label>\\r\\n            </ion-chip>\\r\\n            <ion-chip *ngIf=\\\"property.percentage <= 30\\\" class=\\\"low\\\">\\r\\n              <ion-label>Baja coincidencia</ion-label>\\r\\n            </ion-chip>\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ng-template>\\r\\n\\r\\n    <!-- search -->\\r\\n    <ng-template #searchTemplate>\\r\\n\\r\\n      <!-- menu end -->\\r\\n      <ion-menu contentId=\\\"menu-end\\\" menuId=\\\"filters\\\" side=\\\"end\\\" type=\\\"overlay\\\">\\r\\n        <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getAllProperty()\\\"></app-general-filters>\\r\\n      </ion-menu>\\r\\n\\r\\n\\r\\n      <!-- Contenido a desplazar listas -->\\r\\n      <div id='menu-end'>\\r\\n        <h1>Todas las Propiedades </h1>\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-button (click)=\\\"menuCtr.open('filters')\\\" color=\\\"secondary\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilers}})\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n        <ng-container *ngIf=\\\" (allProperties | async)?.length ; then dataDisplay; else noDataDisplay \\\"></ng-container>\\r\\n        <ng-template #dataDisplay>\\r\\n          <ion-list [@animateStagger]=\\\"{value:'50'}\\\" lines=\\\"full\\\">\\r\\n            <ion-item [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\" lines=\\\"inset\\\" detail *ngFor=\\\"let property of allProperties | async\\\"\\r\\n              (click)=\\\"itemDetail(property)\\\">\\r\\n              <ion-icon *ngIf=\\\"property.typeOfProperty === 'departamento'\\\" style=\\\"color: #F5811E\\\" name=\\\"business\\\" slot=\\\"start\\\"></ion-icon>\\r\\n              <ion-icon *ngIf=\\\"property.typeOfProperty === 'casa'\\\" style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\r\\n              <ion-label text-wrap>\\r\\n                <h2>{{property.name}}</h2>\\r\\n                <p>{{property.zone}}</p>\\r\\n                <p>\\r\\n                  <span *ngFor=\\\"let tag of property.tag\\\">\\r\\n                    {{'#'+tag+ ' '}}\\r\\n                  </span>\\r\\n                </p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n        </ng-template>\\r\\n        <ng-template #noDataDisplay>\\r\\n          <ion-label>No hay datos con los filtros aplicados</ion-label>\\r\\n\\r\\n        </ng-template>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate>\\r\\n    <!-- <ion-spinner name=\\\"bubbles\\\"></ion-spinner> -->\\r\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\r\\n  </ng-template>\\r\\n\\r\\n</ion-content>\"","module.exports = \".high {\\n  background-color: #0cd1e8; }\\n\\n.medium {\\n  background-color: #ffce00; }\\n\\n.low {\\n  background-color: #989aa2; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { CalcPercentage, DiffDays } from '../../../_config/_helpers';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { Observable, from } from 'rxjs';\r\nimport { fuseAnimations } from '../../../_config/_animations';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-list-prop-buyer',\r\n  templateUrl: './list-prop-buyer.component.html',\r\n  styleUrls: ['./list-prop-buyer.component.scss'],\r\n  animations: fuseAnimations,\r\n})\r\nexport class ListPropBuyerComponent implements OnInit {\r\n  properties: IProperty[] = [];\r\n  allProperties: Observable<IProperty[]>;\r\n  isLoad = false;\r\n  segment = 'match';\r\n  numOfFilers = 0;\r\n  constructor(\r\n    private buyerService: BuyerService,\r\n    private propertyService: PropertyService,\r\n    private userSessionService: UserSessionService,\r\n    private router: Router,\r\n    public menuCtr: MenuController,\r\n  ) {\r\n    this.getPropertyMatch();\r\n    this.getAllProperty();\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getPropertyMatch() {\r\n    const buyer = this.userSessionService.userSession.value;\r\n    this.propertyService.matchSearch(buyer.id).subscribe(val => {\r\n      if (val) {\r\n        console.log(val);\r\n        this.getBuyer(buyer.id);\r\n      }\r\n    });\r\n  }\r\n  getAllProperty() {\r\n    /*  this.allProperties = this.propertyService\r\n      .getAll() */\r\n    this.allProperties = new Observable<IProperty[]>(ob => {\r\n      this.propertyService.getAll().subscribe(data => {\r\n        ob.next(data.filter(p => !p.isBuy));\r\n      });\r\n    });\r\n    this.numOfFilers = 0;\r\n  }\r\n  getBuyer(id) {\r\n    this.buyerService.getBuyerById(id).subscribe(buyer => {\r\n      console.log(buyer);\r\n      const isApart = date => {\r\n        if (date) {\r\n          const days = 15 - DiffDays(date);\r\n          if (days > 0) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      };\r\n      // si apartado  debe de aparecer\r\n      this.properties = CalcPercentage(buyer, buyer.property, 10).filter(\r\n        p => !p.isBuy,\r\n      );\r\n      // si apartado NO debe de aparecer\r\n      /* this.properties = CalcPercentage(buyer, buyer.property, 10).filter(\r\n        p => !p.isBuy && !isApart(p.dateToApart),\r\n      ); */\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  itemDetail(item: IProperty) {\r\n    const data: NavigationExtras = { queryParams: { id: item._id } };\r\n    this.router.navigate(['buyer-property-detail'], data);\r\n  }\r\n  segmentChanged(event) {\r\n    this.segment = event.detail.value;\r\n  }\r\n  openMenu() {\r\n    this.menuCtr.open('filters');\r\n  }\r\n  getFilters(hopeProperty: IProperty) {\r\n    this.getAllProperty();\r\n    const filters = this.setFilters(hopeProperty);\r\n    // !!! crea obs\r\n    this.allProperties = new Observable<IProperty[]>(ob => {\r\n      ob.next(filters.propRes);\r\n    });\r\n  }\r\n  setFilters(\r\n    hopeProperty: IProperty,\r\n  ): { propRes: IProperty[]; numFilters: number } {\r\n    const propRes: IProperty[] = [];\r\n    let numFilters = 0;\r\n    let num = 0;\r\n    this.allProperties.subscribe(properties => {\r\n      properties.forEach(prop => {\r\n        numFilters = 0;\r\n        let isHope = true;\r\n        // condiciones ve si existe\r\n        if (hopeProperty.wayToBuy) {\r\n          numFilters++;\r\n          // ve si coincide\r\n          if (hopeProperty.wayToBuy !== prop.wayToBuy) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.zone) {\r\n          numFilters++;\r\n          // ve si coincide\r\n          if (hopeProperty.zone !== prop.zone) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.typeOfProperty) {\r\n          numFilters++;\r\n          // ve si coincide\r\n          if (hopeProperty.typeOfProperty !== prop.typeOfProperty) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        // solo ve si coincide\r\n        if (hopeProperty.allServices !== undefined) {\r\n          numFilters++;\r\n          if (hopeProperty.allServices !== prop.allServices) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.hasElevator !== undefined) {\r\n          numFilters++;\r\n          if (hopeProperty.hasElevator !== prop.hasElevator) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.isLowLevel !== undefined) {\r\n          numFilters++;\r\n          if (hopeProperty.isLowLevel !== prop.isLowLevel) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.hasGarden !== undefined) {\r\n          numFilters++;\r\n          if (hopeProperty.hasGarden !== prop.hasGarden) {\r\n            isHope = false;\r\n          }\r\n        }\r\n\r\n        if (prop.numBathrooms < hopeProperty.numBathrooms) {\r\n          isHope = false;\r\n        }\r\n        if (hopeProperty.numBathrooms > 0) {\r\n          numFilters++;\r\n        }\r\n        if (hopeProperty.isClose !== undefined) {\r\n          numFilters++;\r\n          if (prop.isClose !== hopeProperty.isClose) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.isOld !== undefined) {\r\n          numFilters++;\r\n          if (prop.isOld !== hopeProperty.isOld) {\r\n            isHope = false;\r\n          }\r\n        }\r\n\r\n        if (prop.numCars < hopeProperty.numCars) {\r\n          numFilters++;\r\n          isHope = false;\r\n        }\r\n        if (hopeProperty.numCars > 0) {\r\n          numFilters++;\r\n        }\r\n        if (prop.numRooms < hopeProperty.numRooms) {\r\n          isHope = false;\r\n        }\r\n        if (hopeProperty.numRooms > 0) {\r\n          numFilters++;\r\n        }\r\n        if (prop.space < hopeProperty.space) {\r\n          isHope = false;\r\n        }\r\n        if (hopeProperty.space > 0) {\r\n          numFilters++;\r\n        }\r\n        if (hopeProperty.isRent !== undefined) {\r\n          numFilters++;\r\n          if (prop.isRent !== hopeProperty.isRent) {\r\n            isHope = false;\r\n          }\r\n        }\r\n\r\n        if (hopeProperty.maxPrice) {\r\n          numFilters++;\r\n          if (prop.maxPrice > hopeProperty.maxPrice) {\r\n            isHope = false;\r\n          }\r\n        }\r\n        if (hopeProperty.minPrice > prop.minPrice) {\r\n          isHope = false;\r\n        }\r\n        if (hopeProperty.minPrice > 0) {\r\n          numFilters++;\r\n        }\r\n        // end condiciones\r\n        // ve si sigue siendo true\r\n        if (isHope) {\r\n          num = numFilters;\r\n          propRes.push(prop);\r\n        }\r\n        // end for\r\n      });\r\n      this.numOfFilers = numFilters;\r\n    });\r\n    return { propRes: propRes, numFilters: num };\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button *ngIf=\\\"!isEdit\\\" style=\\\"color: white !important\\\"></ion-back-button>\\r\\n      <ion-menu-button *ngIf=\\\"isEdit\\\" style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Registro\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid fixed>\\r\\n    <form #loginForm=\\\"ngForm\\\">\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title> Ingrese sus datos</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n\\r\\n          <!-- nombre -->\\r\\n          <mdc-text-field label=\\\"Nombre\\\" [(ngModel)]=\\\"newBuyer.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required\\r\\n            [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n            <span *ngIf=\\\"name.dirty || name.touched\\\">Anota nombre</span>\\r\\n          </mdc-text-field-helper-text>\\r\\n          <!-- 1 apellido -->\\r\\n          <mdc-text-field label=\\\"Apellido Paterno\\\" [(ngModel)]=\\\"newBuyer.fatherLastName\\\" #fatherLastName=\\\"ngModel\\\" id=\\\"fatherLastName\\\"\\r\\n            name=\\\"fatherLastName\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n            <span *ngIf=\\\"fatherLastName.dirty || fatherLastName.touched\\\">Anota Apellido</span>\\r\\n          </mdc-text-field-helper-text>\\r\\n          <!-- 2 apellido -->\\r\\n\\r\\n          <mdc-text-field label=\\\"Apellido Materno\\\" [(ngModel)]=\\\"newBuyer.motherLastName\\\" #motherLastName=\\\"ngModel\\\" id=\\\"motherLastName\\\"\\r\\n            name=\\\"motherLastName\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n            <span *ngIf=\\\"motherLastName.dirty || motherLastName.touched\\\">Anota Apellido</span>\\r\\n          </mdc-text-field-helper-text>\\r\\n          <!-- email -->\\r\\n          <!--  <mdc-text-field label=\\\"Correo\\\" [(ngModel)]=\\\"newBuyer.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required\\r\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"email.dirty || email.touched\\\">Anota email</span>\\r\\n              </mdc-text-field-helper-text> -->\\r\\n          <!-- telefono -->\\r\\n          <mdc-text-field label=\\\"Telefono\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.phone\\\" #phone=\\\"ngModel\\\" id=\\\"phone\\\" name=\\\"phone\\\"\\r\\n            required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n            <span *ngIf=\\\"phone.dirty || phone.touched\\\">Anota telefono</span>\\r\\n          </mdc-text-field-helper-text>\\r\\n\\r\\n        </ion-card-content>\\r\\n        <ion-button *ngIf=\\\"isCorrect === false\\\" color=\\\"warning\\\">Usuario Repetido Verifique\\r\\n          los datos</ion-button>\\r\\n        <div style=\\\"text-align: right\\\">\\r\\n          <ion-button [disabled]=\\\"!loginForm.form.valid\\\" *ngIf=\\\"!isCorrect\\\" color=\\\"primary\\\" (click)=\\\"check()\\\" slot=\\\"end\\\">Verificar</ion-button>\\r\\n          <ion-button *ngIf=\\\"isCorrect === true\\\" color=\\\"success\\\" (click)=\\\"check()\\\" slot=\\\"end\\\">Correcto, puede\\r\\n            continuar</ion-button>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </ion-card>\\r\\n    </form>\\r\\n    <form #loginForm2=\\\"ngForm\\\">\\r\\n\\r\\n      <!-- <ion-card [hidden]='!isCorrect'> -->\\r\\n      <ion-card [hidden]='!isCorrect'>\\r\\n        <div #product></div>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title> Ingrese su Perfil</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n\\r\\n            <!-- email -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Correo\\\" [(ngModel)]=\\\"newBuyer.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\"\\r\\n                required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"email.dirty || email.touched\\\">Anota Correo</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!--password -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Contraseña\\\" [(ngModel)]=\\\"newBuyer.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n                type=\\\"password\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"password.dirty || password.touched\\\">Anota Contraseña</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!--years -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Edad\\\" [(ngModel)]=\\\"newBuyer.years\\\" #years=\\\"ngModel\\\" id=\\\"years\\\" name=\\\"years\\\" type=\\\"number\\\"\\r\\n                required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"years.dirty || years.touched\\\">Anota Edad</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- numOfFamily -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Número de familiares\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numOfFamily\\\"\\r\\n                #numOfFamily=\\\"ngModel\\\" id=\\\"numOfFamily\\\" name=\\\"numOfFamily\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\"\\r\\n                [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"numOfFamily.dirty || numOfFamily.touched\\\">Anota Numero</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- isMale -->\\r\\n            <div>\\r\\n              <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n                <ion-label>Género</ion-label>\\r\\n                <ion-select [(ngModel)]=\\\"newBuyer.isMale\\\" #isMale=\\\"ngModel\\\" id=\\\"isMale\\\" name=\\\"isMale\\\" required\\r\\n                  placeholder=\\\"Selecciona uno\\\">\\r\\n                  <ion-select-option value=\\\"false\\\">Mujer</ion-select-option>\\r\\n                  <ion-select-option value=\\\"true\\\">Hombre</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- isSingle -->\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>\\r\\n                Soltero\\r\\n              </ion-label>\\r\\n              <ion-toggle [(ngModel)]=\\\"newBuyer.isSingle\\\" #isSingle=\\\"ngModel\\\" id=\\\"isSingle\\\" name=\\\"isSingle\\\" mode=\\\"md\\\"\\r\\n                slot=\\\"end\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- tipo de propiedad\\r\\n                    casa\\r\\n        departamento\\r\\n        terreno\\r\\n        nave industrial\\r\\n                   -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Tipo de Propiedad</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.typeOfProperty\\\" #typeOfProperty=\\\"ngModel\\\" id=\\\"typeOfProperty\\\" name=\\\"typeOfProperty\\\"\\r\\n                required placeholder=\\\"Tipo\\\">\\r\\n                <ion-select-option value=\\\"casa\\\">Casa</ion-select-option>\\r\\n                <ion-select-option value=\\\"departamento\\\">Departamento</ion-select-option>\\r\\n                <ion-select-option value=\\\"nave industrial\\\">Nave Industrial</ion-select-option>\\r\\n                <ion-select-option value=\\\"terreno\\\">Terreno</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- space -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Espacio(metros)\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\"\\r\\n                name=\\\"space\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"space.dirty || space.touched\\\">Anota Espacio</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- Compra/renta -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Comprar/Rentar</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.isRenter\\\" #isRenter=\\\"ngModel\\\" id=\\\"isRenter\\\" name=\\\"isRenter\\\" required\\r\\n                placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">Comprar</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Rentar</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- Fecha a comprar -->\\r\\n            <div>\\r\\n              <ion-label text-wrap>Anota la posible fecha de compra o renta</ion-label>\\r\\n              <!-- day -->\\r\\n              <mdc-text-field label=\\\"Dia\\\" type=\\\"number\\\" [(ngModel)]=\\\"daySelect\\\" #d=\\\"ngModel\\\" id=\\\"d\\\" name=\\\"d\\\" required\\r\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"d.dirty || d.touched\\\">Anota Dia</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- mm -->\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Mes</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"monthSelect\\\" #me=\\\"ngModel\\\" id=\\\"me\\\" name=\\\"me\\\" required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option *ngFor=\\\"let m of months; let i = index\\\" [value]=\\\"i + 1\\\">{{m}}</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- aa -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Año\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearSelect\\\" #y=\\\"ngModel\\\" id=\\\"y\\\" name=\\\"y\\\" required\\r\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"y.dirty || y.touched\\\">Anota Año</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- city -->\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Ciudad</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"puebla\\\">Puebla</ion-select-option>\\r\\n                <ion-select-option value=\\\"mexico\\\">Mexico</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- zone -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Zona\\\" [(ngModel)]=\\\"newBuyer.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\" required\\r\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"zone.dirty || zone.touched\\\">Anota Zona</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- minPrice -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Precio Minimo\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.minPrice\\\" #minPrice=\\\"ngModel\\\"\\r\\n                id=\\\"minPrice\\\" name=\\\"minPrice\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"minPrice.dirty || minPrice.touched\\\">Anota Precio</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- maxPrice -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Precio Máximo\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.maxPrice\\\" #maxPrice=\\\"ngModel\\\"\\r\\n                id=\\\"maxPrice\\\" name=\\\"maxPrice\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"maxPrice.dirty || maxPrice.touched\\\">Anota Precio</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- numRooms -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Num. mínimo cuartos\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numRooms\\\" #numRooms=\\\"ngModel\\\"\\r\\n                id=\\\"numRooms\\\" name=\\\"numRooms\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"numRooms.dirty || numRooms.touched\\\">Anota Cuartos</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- numCars -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"lugares estacionamiento\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numCars\\\" #numCars=\\\"ngModel\\\"\\r\\n                id=\\\"numCars\\\" name=\\\"numCars\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"numCars.dirty || numCars.touched\\\">Anota Número</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- numBathrooms -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Baños\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\"\\r\\n                id=\\\"numBathrooms\\\" name=\\\"numBathrooms\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"numBathrooms.dirty || numBathrooms.touched\\\">Anota Número</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- Nuevo/Usado -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Estado</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.isOld\\\" #isOld=\\\"ngModel\\\" id=\\\"isOld\\\" name=\\\"isOld\\\" required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">Nuevo</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Usado</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- isClose -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Fraccionamiento</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.isClose\\\" #isClose=\\\"ngModel\\\" id=\\\"isClose\\\" name=\\\"isClose\\\" required\\r\\n                placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">Abierto</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Cerrado</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- hasGarden -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Jardin</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.hasGarden\\\" #hasGarden=\\\"ngModel\\\" id=\\\"hasGarden\\\" name=\\\"hasGarden\\\"\\r\\n                required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">Sin Jardin</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Con Jardin</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- isLowLevel -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Planta Baja</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.isLowLevel\\\" #isLowLevel=\\\"ngModel\\\" id=\\\"isLowLevel\\\" name=\\\"isLowLevel\\\"\\r\\n                required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">Cualquiera</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Planta Baja</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- hasElevator -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Elevador</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.hasElevator\\\" #hasElevator=\\\"ngModel\\\" id=\\\"hasElevator\\\" name=\\\"hasElevator\\\"\\r\\n                required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">No importa</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Con Elevador</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- allServices -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Servicios</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.allServices\\\" #allServices=\\\"ngModel\\\" id=\\\"allServices\\\" name=\\\"allServices\\\"\\r\\n                required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"false\\\">No importa</ion-select-option>\\r\\n                <ion-select-option value=\\\"true\\\">Todos los servicios</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- wayToBuy FOVISSTE, IMSS, contado, PEMEX, Infonavit, aliados, otros -->\\r\\n\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label text-wrap>Forma de Comprar</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"newBuyer.wayToBuy\\\" #wayToBuy=\\\"ngModel\\\" id=\\\"wayToBuy\\\" name=\\\"wayToBuy\\\" required\\r\\n                placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option value=\\\"FOVISSTE\\\">FOVISSTE</ion-select-option>\\r\\n                <ion-select-option value=\\\"IMSS\\\">IMSS</ion-select-option>\\r\\n                <ion-select-option value=\\\"contado\\\">contado</ion-select-option>\\r\\n                <ion-select-option value=\\\"PEMEX\\\">Pemex</ion-select-option>\\r\\n                <ion-select-option value=\\\"infonavit\\\">Infonavit</ion-select-option>\\r\\n                <ion-select-option value=\\\"infonavit\\\">Aliados</ion-select-option>\\r\\n                <ion-select-option value=\\\"otros\\\">Otros</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <div>\\r\\n              <ion-label text-wrap>Anota palabras clave separadas por comas para una mejor búsqueda (ej: casa,\\r\\n                departamento,\\r\\n                mascotas)</ion-label>\\r\\n              <mdc-textarea [(ngModel)]=\\\"words\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Palabras\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </ion-card-content>\\r\\n        <ion-button *ngIf=\\\"isCorrect === false\\\" color=\\\"warning\\\">Usuario Repetido Verifique\\r\\n          los datos</ion-button>\\r\\n        <div style=\\\"text-align: right\\\">\\r\\n          <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"checkUser()\\\" slot=\\\"end\\\" *ngIf=\\\"!isEdit\\\">Crear</ion-button>\\r\\n          <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"editUser()\\\" slot=\\\"end\\\" *ngIf=\\\"isEdit\\\">Editar</ion-button>\\r\\n\\r\\n          <!--  <ion-button *ngIf=\\\"isCorrect === true\\\" color=\\\"success\\\" (click)=\\\"check()\\\" slot=\\\"end\\\">Correcto, puede\\r\\n                  continuar</ion-button> -->\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </ion-card>\\r\\n    </form>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".margin-field {\\n  margin-top: 20px; }\\n\\n.flex-container {\\n  /* display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { fromEvent } from 'rxjs';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { NavController, LoadingController } from '@ionic/angular';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\n\r\n@Component({\r\n  selector: 'app-new-buyer',\r\n  templateUrl: './new-buyer.component.html',\r\n  styleUrls: ['./new-buyer.component.scss'],\r\n})\r\nexport class NewBuyerComponent implements OnInit {\r\n  newBuyer: IBuyer = {};\r\n  isCorrect: boolean;\r\n  // ver elemento en scroll\r\n  @ViewChild('product')\r\n  productSelect: ElementRef;\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  monthSelect: number;\r\n  yearSelect: number;\r\n  daySelect: number;\r\n  words: string;\r\n  isEdit = false;\r\n  constructor(\r\n    private buyerService: BuyerService,\r\n    private userSession: UserSessionService,\r\n    private navController: NavController,\r\n    public loadingController: LoadingController,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private adviseService: AdviserService,\r\n  ) {\r\n    const buyerId = userSession.userSession.value.id;\r\n    const user = userSession.userSession.value;\r\n    console.log(user);\r\n    if (buyerId && user.type === 'buyer') {\r\n      this.edit(buyerId);\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.edit(params['id']);\r\n      }\r\n    });\r\n  }\r\n  edit(id) {\r\n    this.buyerService.getBuyerById(id).subscribe(buyer => {\r\n      Object.keys(buyer).forEach(key => {\r\n        if (buyer[key] === false) {\r\n          buyer[key] = 'false';\r\n        } else if (buyer[key] === true) {\r\n          buyer[key] = 'true';\r\n        }\r\n      });\r\n      this.newBuyer = buyer;\r\n      this.words = '';\r\n      this.newBuyer.tag.forEach((word, i) => {\r\n        if (this.newBuyer.tag.length === i + 1) {\r\n          this.words += word;\r\n        } else {\r\n          this.words += word + ',';\r\n        }\r\n      });\r\n      const date = this.newBuyer.dateToBuy.split('/');\r\n      this.daySelect = +date[0];\r\n      this.monthSelect = +date[1];\r\n      this.yearSelect = +date[2];\r\n      this.isEdit = true;\r\n      this.isCorrect = true;\r\n    });\r\n  }\r\n\r\n  check() {\r\n    this.buyerService.checkBuyer(this.newBuyer).subscribe(buyer => {\r\n      if (buyer === null) {\r\n        this.isCorrect = true;\r\n      } else {\r\n        this.isCorrect = false;\r\n      }\r\n    });\r\n    this.scroll();\r\n  }\r\n  scroll() {\r\n    this.productSelect.nativeElement.scrollIntoView();\r\n  }\r\n  async checkUser() {\r\n    const user1 = this.userSession.userSession.value;\r\n    const load = await this.presentLoadingWithOptions('Registrando...');\r\n    load.present();\r\n    if (this.words) {\r\n      this.newBuyer.tag = this.words.split(',');\r\n    }\r\n    this.newBuyer.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\r\n      this.yearSelect\r\n    }`;\r\n    if (user1.type && user1.type === 'adviser') {\r\n      const arr: any = [user1.id];\r\n      this.newBuyer.adviser = arr;\r\n    }\r\n    this.buyerService.newBuyer(this.newBuyer).subscribe(buyer => {\r\n      const user = this.userSession.userSession.value;\r\n      // data  administrator buyer seller adviser management\r\n      // ADMIN\r\n      if (\r\n        user.type &&\r\n        (user.type === 'administrator' || user.type === 'office')\r\n      ) {\r\n        // this.router.navigate(['list-buyer-admin']);\r\n        const toast: NavigationExtras = {\r\n          queryParams: { res: ' Comprador Creado' },\r\n        };\r\n        /**\r\n         * Es para recargar el componente previo\r\n         */\r\n        this.router\r\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n          .then(() => this.router.navigate(['list-buyer-admin'], toast));\r\n        // ADVISER\r\n      } else if (user.type && user.type === 'adviser') {\r\n        this.adviseService.getAdviserById(user.id).subscribe(adv => {\r\n          adv.buyer.push(buyer);\r\n          this.adviseService.putAdviser(adv).subscribe(() => {\r\n            const toast: NavigationExtras = {\r\n              queryParams: { res: ' Comprador Creado' },\r\n            };\r\n            /**\r\n             * Es para recargar el componente previo\r\n             */\r\n            this.router\r\n              .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n              .then(() => this.router.navigate(['list-buyer-admin'], toast));\r\n          });\r\n        });\r\n        // NEW\r\n      } else {\r\n        if (buyer) {\r\n          console.log(buyer);\r\n          this.userSession.setUserSession(\r\n            buyer.name,\r\n            'buyer',\r\n            buyer._id,\r\n            buyer.password,\r\n          );\r\n          this.navController.navigateRoot('list-prop-buyer', false);\r\n        }\r\n      }\r\n\r\n      load.dismiss();\r\n    });\r\n  }\r\n  async editUser() {\r\n    const load = await this.presentLoadingWithOptions('Editando...');\r\n    load.present();\r\n    this.newBuyer.tag = this.words.split(',');\r\n    this.newBuyer.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\r\n      this.yearSelect\r\n    }`;\r\n    this.buyerService.putBuyer(this.newBuyer).subscribe(val => {\r\n      const user = this.userSession.userSession.value;\r\n      // data  administrator buyer seller adviser management\r\n      if (user.type && user.type !== 'buyer') {\r\n        // this.navController.navigateRoot('list-buyer-admin');\r\n        // this.router.navigate('/list-buyer-admin');\r\n        const toast: NavigationExtras = {\r\n          queryParams: { res: ' Comprador Editado' },\r\n        };\r\n        /**\r\n         * Es para recargar el componente previo\r\n         */\r\n        this.router\r\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n          .then(() => this.router.navigate(['list-buyer-admin'], toast));\r\n      } else {\r\n        if (val) {\r\n          this.navController.navigateRoot('list-prop-buyer', false);\r\n        }\r\n      }\r\n\r\n      load.dismiss();\r\n    });\r\n  }\r\n  async presentLoadingWithOptions(message) {\r\n    const loading = await this.loadingController.create({\r\n      message: message,\r\n      translucent: true,\r\n    });\r\n    return await loading;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Ofertas\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <!-- cargar -->\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <!-- si cargado -->\\r\\n  <ng-template #thenTemplate>\\r\\n    <ng-container *ngIf=\\\"hasOfert; then Ofert; else noOfert\\\"></ng-container>\\r\\n    <!-- sin oferta -->\\r\\n    <ng-template #noOfert>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Sin Ofertas</ion-card-subtitle>\\r\\n          <ion-card-title text-wrap>Cuando se genere una oferta la podrá revisar aquí</ion-card-title>\\r\\n\\r\\n        </ion-card-header>\\r\\n      </ion-card>\\r\\n    </ng-template>\\r\\n    <!-- con oferta -->\\r\\n    <ng-template #Ofert>\\r\\n      <ion-card *ngFor=\\\"let ofert of oferts\\\" [ngClass]=\\\"\\r\\n        {\\r\\n        'state-amarillo': ofert.status === 'amarillo',\\r\\n        'state-rojo': ofert.status === 'rojo'\\r\\n         }\\\">\\r\\n        <span *ngIf=\\\"ofert.status === 'amarillo'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Negociación</ion-card-subtitle>\\r\\n            <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content text-wrap>\\r\\n            <ion-label text-wrap>Oferta para la propiedad: <b>{{ofert.property.name}}</b></ion-label>\\r\\n            <ion-label text-wrap>Oferta por: <b>${{ofert.ofertPrice}}</b></ion-label>\\r\\n            <ion-label text-wrap>Detalles de la oferta : {{ofert.notes}}</ion-label>\\r\\n            <ion-list lines=\\\"none\\\">\\r\\n              <ion-list-header text-wrap> Documentos Requeridos:</ion-list-header>\\r\\n              <ion-item lines=\\\"none\\\" *ngFor=\\\"let doc of ofert.files\\\">{{doc}}</ion-item>\\r\\n            </ion-list>\\r\\n          </ion-card-content>\\r\\n          <!-- Poner en notes Aceptado o Denagado -->\\r\\n\\r\\n          <ion-item lines=\\\"none\\\">\\r\\n            <ion-button (click)=\\\"respondOfert('Aceptada', ofert, true)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button (click)=\\\"respondOfert('Denagada', ofert, false)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\r\\n              Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n\\r\\n          </ion-item>\\r\\n\\r\\n        </span>\\r\\n        <span *ngIf=\\\"ofert.status === 'rojo'\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-subtitle>Estado: Respuesta de Oferta</ion-card-subtitle>\\r\\n            <!-- Poner en notes Aceptado o Denagado -->\\r\\n            <ion-card-title text-wrap> Oferta: {{ofert.notes}}</ion-card-title>\\r\\n            <ion-card-content text-wrap>\\r\\n              <ion-label text-wrap *ngIf=\\\"ofert.notes === 'Aceptada' \\\"> Propiedad <b>{{ofert.property.name\\r\\n                  }}</b>\\r\\n                Apartada</ion-label>\\r\\n\\r\\n            </ion-card-content>\\r\\n          </ion-card-header>\\r\\n        </span>\\r\\n      </ion-card>\\r\\n    </ng-template>\\r\\n  </ng-template>\\r\\n  <!-- no cargado -->\\r\\n  <ng-template #elseTemplate>\\r\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\r\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\r\\n  </ng-template>\\r\\n\\r\\n  <!-- /cargar -->\\r\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { IOfert } from '../../../models/ofert.model';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { OfertService } from '../../../services/ofert.service';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { IStatusBuyerProperty } from '../../../models/statusBuyerProperty.model';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-ofert-buyer',\r\n  templateUrl: './ofert-buyer.component.html',\r\n  styleUrls: ['./ofert-buyer.component.scss'],\r\n})\r\nexport class OfertBuyerComponent implements OnInit {\r\n  isLoad = false;\r\n  hasOfert = false;\r\n  oferts: IOfert[];\r\n  statusBuyerProperty: IStatusBuyerProperty[];\r\n  buyer: IBuyer;\r\n\r\n  constructor(\r\n    private userSessionService: UserSessionService,\r\n    private buyerService: BuyerService,\r\n    public toastController: ToastController,\r\n    private ofertService: OfertService,\r\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\r\n    private propertyService: PropertyService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.getOfert();\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getOfert() {\r\n    const buyerId = this.userSessionService.userSession.value.id;\r\n    this.buyerService.getBuyerById(buyerId).subscribe(buyer => {\r\n      console.log(buyer);\r\n      this.buyer = buyer;\r\n      if (buyer.ofert.length > 0) {\r\n        this.hasOfert = true;\r\n        this.oferts = buyer.ofert;\r\n        this.statusBuyerProperty = buyer.statusBuyerProperty;\r\n      }\r\n      this.isLoad = true;\r\n    });\r\n  }\r\n  respondOfert(str: string, ofert: IOfert, isAccept: boolean) {\r\n    const buyer = this.userSessionService.userSession.value;\r\n    const find = this.statusBuyerProperty.find(\r\n      (s: any) => s.property._id === ofert.property._id,\r\n    );\r\n    this.statusBuyerPropertyService\r\n      .upgradeStatus(find._id, 'rojo')\r\n      .subscribe(c => {\r\n        if (isAccept) {\r\n          const prop = ofert.property;\r\n          prop.dateToApart = new Date();\r\n          this.propertyService\r\n            .putProperty(prop)\r\n            .subscribe(() => console.log('date'));\r\n        }\r\n      });\r\n    ofert.status = 'rojo';\r\n    ofert.notes = str;\r\n    ofert.isAccept = isAccept;\r\n    this.ofertService.putOfert(ofert).subscribe(res => {\r\n      if (res) {\r\n        this.notification(\r\n          'Respuesta de oferta',\r\n          `La oferta del ${buyer.name} ha sido ${str}`,\r\n          ofert.status,\r\n          'ofert',\r\n          ['office', 'administrator'],\r\n        );\r\n        this.getOfert();\r\n        this.presentToast('Oferta ' + str);\r\n      }\r\n    });\r\n  }\r\n  // toast\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 3000,\r\n    });\r\n    toast.present();\r\n  }\r\n  public notification(title, message, status, type, tags) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, [\r\n        'office',\r\n        'administrator',\r\n      ])\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService\r\n          .newNotification(notification)\r\n          .subscribe(n => console.log(n));\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Crédito\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n    <ion-grid fixed>\\r\\n      <h1>Editar Crédito</h1>\\r\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n        <form #newUserForm=\\\"ngForm\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-title>Complete los campos</mat-card-title>\\r\\n            <span *ngIf=\\\"credit.buyer.name &&  credit.property.name\\\" class=\\\"flex-container2\\\">\\r\\n              <mat-list role=\\\"list\\\">\\r\\n                <h3 mat-subheader>Nombre del Cliente</h3>\\r\\n                <mat-list-item role=\\\"listitem\\\">{{credit.buyer.name}}</mat-list-item>\\r\\n              </mat-list>\\r\\n              <mat-list role=\\\"list\\\">\\r\\n                <h3 mat-subheader>Nombre de la Propiedad</h3>\\r\\n                <mat-list-item role=\\\"listitem\\\">{{credit.property.name}}</mat-list-item>\\r\\n              </mat-list>\\r\\n            </span>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <!-- status -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Estado</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"credit.status\\\" #status=\\\"ngModel\\\" id=\\\"status\\\" name=\\\"status\\\" required>\\r\\n                  <mat-option value=\\\"verde\\\">\\r\\n                    Interés\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"amarillo\\\">\\r\\n                    Negociación\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"rojo\\\">\\r\\n                    Aceptado\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"status.dirty || status.touched\\\">Selecciona</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- files -->\\r\\n              <ion-label text-wrap>Anota los documentos para el crédito separado por comas\\r\\n                (documento1,documento2,etc...)</ion-label>\\r\\n              <mdc-textarea [(ngModel)]=\\\"files\\\" #f=\\\"ngModel\\\" id=\\\"f\\\" name=\\\"f\\\" label=\\\"Ducumentos\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\r\\n              <!-- notas -->\\r\\n              <mdc-textarea [(ngModel)]=\\\"credit.notes\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Notas\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\r\\n\\r\\n            </div>\\r\\n            <mat-card-actions align=\\\"end\\\">\\r\\n              <div style=\\\"margin-right: 2%\\\">\\r\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                  <!-- <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\r\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button> -->\\r\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\r\\n                    (click)=\\\"editCredit()\\\">Editar</button>\\r\\n                </span>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n            </mat-card-actions>\\r\\n\\r\\n          </mat-card>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { CreditService } from '../../../services/credit.service';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-credit',\r\n  templateUrl: './new-edit-credit.component.html',\r\n  styleUrls: ['./new-edit-credit.component.scss'],\r\n})\r\nexport class NewEditCreditComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  credit: ICreditGet = {};\r\n  files: string;\r\n  isLoad: boolean;\r\n  buyer = '';\r\n  property = '';\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private creditService: CreditService,\r\n    private navCtr: NavController,\r\n    private propertyService: PropertyService,\r\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\r\n    private userSession: UserSessionService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.isLoad = false;\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.creditService.getCreditById(params['id']).subscribe(credit => {\r\n          console.log(credit);\r\n          this.credit = <any>credit;\r\n          this.buyer = this.credit.buyer._id;\r\n          this.property = this.credit.property._id;\r\n          this.files = '';\r\n          this.credit.files.forEach((f, i) => {\r\n            if (this.credit.files.length === i + 1) {\r\n              this.files += f;\r\n            } else {\r\n              this.files += f + ',';\r\n            }\r\n          });\r\n          this.isLoad = true;\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n        this.isLoad = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  editCredit() {\r\n    this.statusBuyerPropertyService\r\n      .searchSpecial(this.buyer, this.property)\r\n      .subscribe(sbp => {\r\n        console.log(sbp);\r\n        this.statusBuyerPropertyService\r\n          .upgradeStatus(sbp._id, this.credit.status)\r\n          .subscribe(c => console.log(c));\r\n      });\r\n    this.credit.files = this.files.split(',');\r\n    // noti\r\n    if (this.credit.status === 'amarillo') {\r\n      this.notification(\r\n        'Propuesta de crédito',\r\n        `Nueva propuesta de crédito para ${this.credit.property.name}`,\r\n        'amarillo',\r\n        'credit',\r\n        this.buyer,\r\n      );\r\n    }\r\n\r\n    this.creditService.putCredit(<ICredit>this.credit).subscribe(s => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Credito Editado' },\r\n      };\r\n      // this.router.navigate(['list-credit-admin'], toast);\r\n      // this.navCtr.navigateRoot('list-credit-admin', true, toast);\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-credit-admin'], toast));\r\n    });\r\n  }\r\n  editCustomer() {\r\n    /* this.sellerService.putSeller(this.seller).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Propietario Editado' },\r\n      };\r\n      this.router.navigate(['list-seller-admin'], toast);\r\n      this.navCtr.navigateRoot('list-seller-admin', true, toast);\r\n    }); */\r\n  }\r\n  public notification(title, message, status, type, receiversId: string) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      receiversId: [receiversId],\r\n      senderId: this.userSession.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, undefined, [receiversId])\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bar-line',\r\n  templateUrl: './bar-line.component.html',\r\n  styleUrls: ['./bar-line.component.scss']\r\n})\r\nexport class BarLineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{dataInput.header}}</h2>\\r\\n<h3 mat-dialog-title>{{dataInput.subHeader}}</h3>\\r\\n<mat-dialog-content>\\r\\n  <span *ngIf=\\\"dataInput.body\\\" [innerHTML]=\\\"dataInput.body\\\"></span>\\r\\n  <span *ngIf=\\\"dataInput.isform\\\">\\r\\n    <form #newUserForm=\\\"ngForm\\\">\\r\\n      <!--  <mat-form-field appearance=\\\"outline\\\">\\r\\n        <mat-label>Estado </mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"statusTicket\\\" #status=\\\"ngModel\\\" id=\\\"status\\\" name=\\\"status\\\">\\r\\n          <mat-option value=\\\"Atendiendo\\\">\\r\\n            Atendiendo\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"Cerrado\\\">\\r\\n            Cerrado\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"Pendiente\\\">\\r\\n            Pendiente\\r\\n          </mat-option>\\r\\n\\r\\n        </mat-select>\\r\\n      </mat-form-field> -->\\r\\n    </form>\\r\\n  </span>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button color=\\\"primary\\\" (click)=\\\"buttonsResponse(true)\\\" mat-button mat-dialog-close>Ok</button>\\r\\n  <button color=\\\"warn\\\" *ngIf=\\\"!dataInput.hideButtonCancel\\\" mat-button mat-dialog-close (click)=\\\"buttonsResponse(false)\\\">Cancelar</button>\\r\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\r\\n</mat-dialog-actions>\"","module.exports = \"\"","import {\r\n  Component,\r\n  OnInit,\r\n  Inject,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dialog-general',\r\n  templateUrl: './dialog-general.component.html',\r\n  styleUrls: ['./dialog-general.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DialogGeneralComponent implements OnInit {\r\n  message: string;\r\n  buttons = new EventEmitter();\r\n  ratingResult = new EventEmitter();\r\n  statusChange = new EventEmitter();\r\n  statusTicket: string;\r\n  private ratingStars;\r\n  public dataInput: {\r\n    header: string;\r\n    subHeader?: string;\r\n    body: string;\r\n    hideButtonCancel?: boolean;\r\n    isRating?: boolean;\r\n    isform?: boolean;\r\n  };\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogGeneralComponent>,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      header: string;\r\n      subHeader?: string;\r\n      body: string;\r\n      hideButtonCancel?: boolean;\r\n      isRating?: boolean;\r\n      isform?: boolean;\r\n    },\r\n  ) {\r\n    this.dataInput = data;\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  buttonsResponse(options: boolean) {\r\n    this.buttons.emit(options);\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Filtros</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- <div class=\\\"main\\\"> -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Fecha</ion-label>\\r\\n    </ion-list-header>\\r\\n  </ion-list>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Dia\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\r\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\r\\n        placeholder=\\\"Mes\\\">\\r\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\r\\n          {{month}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!--  <ion-label>Mes</ion-label>\\r\\n            <ion-select interface=\\\"popover\\\" (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\"\\r\\n              name=\\\"day\\\">\\r\\n              <ion-select-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">{{month}}</ion-select-option>\\r\\n            </ion-select> -->\\r\\n\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Año\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<!-- </div> -->\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-adviser',\r\n  templateUrl: './filter-adviser.component.html',\r\n  styleUrls: ['./filter-adviser.component.scss'],\r\n})\r\nexport class FilterAdviserComponent implements OnInit {\r\n  status: string;\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  dayInput: number;\r\n  monthInput: number;\r\n  yearInput: number;\r\n  @Output()\r\n  filters = new EventEmitter();\r\n  @Output()\r\n  resetAll = new EventEmitter();\r\n  @Output()\r\n  closeMenu = new EventEmitter();\r\n  @Input()\r\n  isDesktop: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  applyFilters() {\r\n    this.filters.emit({\r\n      day: this.dayInput,\r\n      month: this.monthInput,\r\n      year: this.yearInput,\r\n      status: this.status,\r\n    });\r\n  }\r\n  reset() {\r\n    this.resetAll.emit();\r\n    this.dayInput = null;\r\n    this.monthInput = null;\r\n    this.yearInput = null;\r\n    this.status = undefined;\r\n  }\r\n  goBack() {\r\n    if (!this.isDesktop) {\r\n      this.closeMenu.emit();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Filtros</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- <div class=\\\"main\\\"> -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"isComplete\\\" #isR=\\\"ngModel\\\" id=\\\"isR\\\" name=\\\"isR\\\"\\r\\n        placeholder=\\\"Tipo\\\">\\r\\n        <mat-option [value]=true>\\r\\n          Completado\\r\\n        </mat-option>\\r\\n        <mat-option [value]=false>\\r\\n          En Proceso\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </ion-item>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Fecha inicio</ion-label>\\r\\n    </ion-list-header>\\r\\n  </ion-list>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Dia\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\r\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\r\\n        placeholder=\\\"Mes\\\">\\r\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\r\\n          {{month}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Año\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <br>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Fecha Fin</ion-label>\\r\\n    </ion-list-header>\\r\\n  </ion-list>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Dia\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput2\\\" #day=\\\"ngModel\\\"\\r\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput2\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\r\\n        placeholder=\\\"Mes\\\">\\r\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\r\\n          {{month}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Año\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput2\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<!-- </div> -->\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-build',\r\n  templateUrl: './filter-build.component.html',\r\n  styleUrls: ['./filter-build.component.scss'],\r\n})\r\nexport class FilterBuildComponent implements OnInit {\r\n  isComplete: boolean;\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  dayInput: number;\r\n  monthInput: number;\r\n  yearInput: number;\r\n  dayInput2: number;\r\n  monthInput2: number;\r\n  yearInput2: number;\r\n  @Output()\r\n  filters = new EventEmitter();\r\n  @Output()\r\n  resetAll = new EventEmitter();\r\n  @Output()\r\n  closeMenu = new EventEmitter();\r\n  @Input()\r\n  isDesktop: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  applyFilters() {\r\n    this.filters.emit({\r\n      day: this.dayInput,\r\n      month: this.monthInput,\r\n      year: this.yearInput,\r\n      day2: this.dayInput2,\r\n      month2: this.monthInput2,\r\n      year2: this.yearInput2,\r\n      isComplete: this.isComplete,\r\n    });\r\n  }\r\n  reset() {\r\n    this.resetAll.emit();\r\n    this.dayInput = null;\r\n    this.monthInput = null;\r\n    this.yearInput = null;\r\n    this.yearInput2 = null;\r\n    this.monthInput2 = null;\r\n    this.dayInput2 = null;\r\n    this.isComplete = undefined;\r\n  }\r\n  goBack() {\r\n    if (!this.isDesktop) {\r\n      this.closeMenu.emit();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  filter-maker works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-maker',\r\n  templateUrl: './filter-maker.component.html',\r\n  styleUrls: ['./filter-maker.component.scss']\r\n})\r\nexport class FilterMakerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Filtros</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- <div class=\\\"main\\\"> -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"isRenter\\\" #isR=\\\"ngModel\\\" id=\\\"isR\\\" name=\\\"isR\\\"\\r\\n        placeholder=\\\"Tipo\\\">\\r\\n        <mat-option [value]=false>\\r\\n          Vende\\r\\n        </mat-option>\\r\\n        <mat-option [value]=true>\\r\\n          Renta\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </ion-item>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Fecha</ion-label>\\r\\n    </ion-list-header>\\r\\n  </ion-list>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Dia\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\r\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\r\\n        placeholder=\\\"Mes\\\">\\r\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\r\\n          {{month}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!--  <ion-label>Mes</ion-label>\\r\\n              <ion-select interface=\\\"popover\\\" (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\"\\r\\n                name=\\\"day\\\">\\r\\n                <ion-select-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">{{month}}</ion-select-option>\\r\\n              </ion-select> -->\\r\\n\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Año\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<!-- </div> -->\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-seller',\r\n  templateUrl: './filter-seller.component.html',\r\n  styleUrls: ['./filter-seller.component.scss'],\r\n})\r\nexport class FilterSellerComponent implements OnInit {\r\n  isRenter: boolean;\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  dayInput: number;\r\n  monthInput: number;\r\n  yearInput: number;\r\n  @Output()\r\n  filters = new EventEmitter();\r\n  @Output()\r\n  resetAll = new EventEmitter();\r\n  @Output()\r\n  closeMenu = new EventEmitter();\r\n  @Input()\r\n  isDesktop: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  applyFilters() {\r\n    this.filters.emit({\r\n      day: this.dayInput,\r\n      month: this.monthInput,\r\n      year: this.yearInput,\r\n      isRenter: this.isRenter,\r\n    });\r\n  }\r\n  reset() {\r\n    this.resetAll.emit();\r\n    this.dayInput = null;\r\n    this.monthInput = null;\r\n    this.yearInput = null;\r\n    this.isRenter = undefined;\r\n  }\r\n  goBack() {\r\n    if (!this.isDesktop) {\r\n      this.closeMenu.emit();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"flex-container2\\\">\\r\\n  <h3 mat-subheader>{{nameTitle}}</h3>\\r\\n  <form #newUserForm=\\\"ngForm\\\">\\r\\n    <div *ngFor=\\\"let item of arrInput; let i=index\\\" [ngClass]=\\\"{'more-input': forms.arrStr && forms.arrDate}\\\">\\r\\n      <!-- arrStr default* -->\\r\\n      <mat-form-field appearance=\\\"outline\\\" [ngClass]=\\\"{'one-input': forms.arrStr && !forms.arrDate}\\\">\\r\\n        <mat-label>{{nameItems}} {{i + 1}}</mat-label>\\r\\n        <input matInput placeholder=\\\"\\\" (keyup)=\\\"getStr()\\\" [(ngModel)]=\\\"arrStr[i]\\\" #str=\\\"ngModel\\\" id=\\\"str{{i}}\\\" name=\\\"str{{i}}\\\"\\r\\n          [required]=\\\"isRequired\\\">\\r\\n        <mat-error *ngIf=\\\"(str.dirty || str.touched) && isRequired\\\">Obligatorio</mat-error>\\r\\n      </mat-form-field>\\r\\n      <!-- / arrStr default* -->\\r\\n      <!-- arrStr2 -->\\r\\n      <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"forms.arrStr2\\\">\\r\\n        <mat-label>{{nameItems2}} {{i + 1}}</mat-label>\\r\\n        <input matInput placeholder=\\\"\\\" (keyup)=\\\"getStr()\\\" [(ngModel)]=\\\"arrStr2[i]\\\" #str2=\\\"ngModel\\\" id=\\\"str2{{i}}\\\" name=\\\"str2{{i}}\\\"\\r\\n          [required]=\\\"isRequired\\\">\\r\\n        <mat-error *ngIf=\\\"(str2.dirty || str2.touched) && isRequired\\\">Obligatorio</mat-error>\\r\\n      </mat-form-field>\\r\\n      <!-- arrDate -->\\r\\n      <!-- Fecha -->\\r\\n      <mat-form-field class=\\\"date-input\\\" *ngIf=\\\"forms.arrDate\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Inicio</mat-label>\\r\\n        <input (dateChange)=\\\"dateSelect($event, i)\\\" [value]=\\\"arrDate[i]\\\" [(ngModel)]=\\\"arrDate[i]\\\" #date2=\\\"ngModel\\\" id=\\\"date{{i}}\\\"\\r\\n          name=\\\"date{{i}}\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"\\\" [required]=\\\"isRequired\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      <!-- Fecha2 -->\\r\\n      <mat-form-field class=\\\"date-input\\\" *ngIf=\\\"forms.arrDate2\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Fin</mat-label>\\r\\n        <input (dateChange)=\\\"dateSelect2($event, i)\\\" [value]=\\\"arrDate2[i]\\\" [(ngModel)]=\\\"arrDate2[i]\\\" #date2=\\\"ngModel\\\"\\r\\n          id=\\\"date2{{i}}\\\" name=\\\"date2{{i}}\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"\\\"\\r\\n          [required]=\\\"isRequired\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      <!-- X -->\\r\\n      <button *ngIf=\\\"isDesktop\\\" matTooltip=\\\"Eliminar\\\" mat-icon-button (click)=\\\"deleteItem(i)\\\">\\r\\n        <mat-icon color=\\\"warn\\\">clear</mat-icon>\\r\\n      </button>\\r\\n      <button *ngIf=\\\"!isDesktop\\\" mat-stroked-button color=\\\"warn\\\" (click)=\\\"deleteItem(i)\\\">\\r\\n        <mat-icon>clear</mat-icon>Eliminar\\r\\n      </button>\\r\\n      <hr *ngIf=\\\"!isDesktop\\\">\\r\\n      <!-- /X -->\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"button-add\\\">\\r\\n    <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"addItem()\\\">\\r\\n      <mat-icon color=\\\"accent\\\">add</mat-icon>\\r\\n      Agregar\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\\n.button-add {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 1%; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.one-input {\\n  width: 80%; }\\n\\n.more-input {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  align-items: baseline; }\\n\\n.more-input > * {\\n  padding: 1%; }\\n\\n.more-input > button {\\n  flex: 0; }\\n\\n.date-input {\\n  width: 18%; }\\n\\n@media (max-width: 900px) {\\n  .more-input {\\n    display: flex;\\n    flex-wrap: wrap;\\n    align-items: baseline; }\\n  .date-input {\\n    width: 50%; } }\\n\\nhr {\\n  width: 100%;\\n  height: 0px;\\n  background-color: darkgray;\\n  border-radius: 7px 7px 7px 7px; }\\n\"","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ElementRef,\r\n} from '@angular/core';\r\nexport interface FormStr {\r\n  arrStr: string[];\r\n  arrStr2: string[];\r\n  arrDate: Date[];\r\n  arrDate2: Date[];\r\n  isValid: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-str-list',\r\n  templateUrl: './form-str-list.component.html',\r\n  styleUrls: ['./form-str-list.component.scss'],\r\n})\r\nexport class FormStrListComponent implements OnInit, OnChanges {\r\n  @ViewChild('newUserForm')\r\n  newUserForm;\r\n  @Input()\r\n  numOfItems = 3;\r\n  @Input()\r\n  nameItems = 'Objeto';\r\n  @Input()\r\n  nameItems2 = 'Objeto';\r\n  @Input()\r\n  nameTitle = 'Lista';\r\n  @Input()\r\n  arrStr: string[] = [];\r\n  @Input()\r\n  arrStr2: string[] = [];\r\n  @Input()\r\n  arrDate: any[] = [];\r\n  @Input()\r\n  arrDate2: any[] = [];\r\n  @Input()\r\n  isRequired = false;\r\n  arrInput: number[];\r\n  @Output()\r\n  arrList = new EventEmitter<string[]>();\r\n  @Output()\r\n  arrOutput = new EventEmitter();\r\n  @Input()\r\n  forms = {\r\n    arrStr: true,\r\n    arrStr2: false,\r\n    arrDate: false,\r\n    arrDate2: false,\r\n  };\r\n  @Input()\r\n  isDesktop = true;\r\n\r\n  constructor() {\r\n    this.getArray(this.numOfItems);\r\n  }\r\n\r\n  ngOnInit() {}\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.numOfItems) {\r\n      if (changes.numOfItems.currentValue) {\r\n        this.numOfItems = changes.numOfItems.currentValue;\r\n        this.getArray(changes.numOfItems.currentValue);\r\n      }\r\n    }\r\n    /*  if (changes.nameItems) {\r\n      if (changes.nameItems.currentValue) {\r\n        this.nameItems = changes.nameItems.currentValue;\r\n      }\r\n    }\r\n    if (changes.nameTitle) {\r\n      if (changes.nameTitle.currentValue) {\r\n        this.nameTitle = changes.nameTitle.currentValue;\r\n      }\r\n    }\r\n    if (changes.isRequired) {\r\n      if (changes.isRequired.currentValue) {\r\n        this.isRequired = changes.isRequired.currentValue;\r\n      }\r\n    } */\r\n  }\r\n  getArray(num?: number) {\r\n    this.arrInput = Array(num).fill(1);\r\n  }\r\n  getStr(itemStr?) {\r\n    console.log(this.newUserForm.valid);\r\n\r\n    this.arrList.emit(this.arrStr);\r\n    this.arrOutput.emit({\r\n      arrStr: this.arrStr,\r\n      arrStr2: this.arrStr2,\r\n      arrDate: this.arrDate,\r\n      arrDate2: this.arrDate2,\r\n      isValid: this.newUserForm.valid,\r\n    });\r\n  }\r\n  deleteItem(number) {\r\n    this.numOfItems--;\r\n    this.arrInput.splice(number, 1);\r\n    this.arrStr.splice(number, 1);\r\n    this.arrStr2.splice(number, 1);\r\n    this.arrDate.splice(number, 1);\r\n    this.arrDate2.splice(number, 1);\r\n    this.arrList.emit(this.arrStr);\r\n    this.getStr();\r\n  }\r\n  addItem() {\r\n    this.numOfItems++;\r\n    this.getArray(this.numOfItems);\r\n  }\r\n  dateSelect(event, i) {\r\n    if (event) {\r\n      this.arrDate[i] = new Date(\r\n        event.value._i.year,\r\n        event.value._i.month,\r\n        event.value._i.date,\r\n      );\r\n      this.getStr();\r\n    }\r\n  }\r\n  dateSelect2(event, i) {\r\n    if (event) {\r\n      this.arrDate2[i] = new Date(\r\n        event.value._i.year,\r\n        event.value._i.month,\r\n        event.value._i.date,\r\n      );\r\n      this.getStr();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div id=\\\"calendar\\\" (click)=\\\"click($event)\\\" style=\\\"height: 100%;\\\"></div>\"","module.exports = \"#calendar .row-number-day {\\n  padding: 15px !important;\\n  text-align: left !important;\\n  border-bottom: 1px solid #ddd;\\n  vertical-align: top; }\\n\\n#calendar .row-name-day {\\n  padding: 2px 15px 15px 0px !important;\\n  height: 10px;\\n  text-align: left !important;\\n  border-bottom: 2px solid #ffb251;\\n  vertical-align: top; }\\n\\n#calendar .row-number-day2 {\\n  padding: 15px 0px !important;\\n  text-align: left !important;\\n  border-bottom: 1px solid #ddd;\\n  vertical-align: top;\\n  width: 15%; }\\n\\n#calendar .current-day {\\n  background-color: #ffb251;\\n  border-radius: 9px;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content; }\\n\\n#calendar .calendar-table {\\n  width: 100%;\\n  height: 100%; }\\n\\n#calendar td {\\n  border-bottom: 1px solid #ddd;\\n  vertical-align: top; }\\n\\n#calendar td:hover {\\n  background-color: #f5f5f5; }\\n\\n#calendar .event-of-day {\\n  background-color: #ffe9cc;\\n  border-left: 5px solid #FFB251;\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-gris {\\n  background-color: #aab4bd;\\n  border-left: 5px solid #47525d;\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-verde {\\n  background-color: #c3f7d7;\\n  border-left: 5px solid var(--ion-color-success);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-amarillo {\\n  background-color: #f7f3e2;\\n  border-left: 5px solid var(--ion-color-warning);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-rojo {\\n  background-color: #f1b9b9;\\n  border-left: 5px solid var(--ion-color-danger);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-azul {\\n  background-color: #9bd6fb;\\n  border-left: 5px solid var(--ion-color-blue);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { ISchedule } from '../../../models/schedule.model';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-general-calendar',\r\n  templateUrl: './general-calendar.component.html',\r\n  styleUrls: ['./general-calendar.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class GeneralCalendarComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  month: number = new Date().getMonth();\r\n  @Input()\r\n  year: number = new Date().getFullYear();\r\n  @Input()\r\n  schedules: ISchedule[] = [];\r\n  @Output()\r\n  calendarSelect = new EventEmitter<any>();\r\n  @Output()\r\n  alertOfToday = new EventEmitter<any>();\r\n  flag = false;\r\n  constructor(public toastController: ToastController) {}\r\n  // tslint:disable:no-var-keyword\r\n  // tslint:disable:quotemark\r\n  // tslint:disable:prefer-const\r\n  // tslint:disable:max-line-length\r\n\r\n  ngOnInit() {\r\n    this.calendar2(new Date().getMonth(), new Date().getFullYear());\r\n  }\r\n  click(event) {\r\n    this.calendarSelect.emit({\r\n      year: this.year,\r\n      month: this.month,\r\n      day: +event.srcElement.id,\r\n    });\r\n  }\r\n  getScheduleEvents(year, month, day): string {\r\n    let numOfEvent = 0;\r\n    let str = '';\r\n    const events = this.schedules.filter(\r\n      s => s.day === day && s.month === month && s.year === year,\r\n    );\r\n    if (events.length > 0) {\r\n      if (events.length === 1) {\r\n        if (events[0].status) {\r\n          str +=\r\n            '<div class=\"event-of-day-' +\r\n            events[0].status +\r\n            '\" id=\"' +\r\n            day +\r\n            '\">' +\r\n            events.length +\r\n            ' Evento </div>';\r\n        } else {\r\n          str +=\r\n            '<div class=\"event-of-day\" id=\"' +\r\n            day +\r\n            '\">' +\r\n            events.length +\r\n            ' Evento </div>';\r\n        }\r\n      } else {\r\n        str +=\r\n          '<div class=\"event-of-day\" id=\"' +\r\n          day +\r\n          '\">' +\r\n          events.length +\r\n          ' Eventos </div>';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n  presentToast() {\r\n    this.alertOfToday.emit();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.month) {\r\n      if (changes.month.currentValue) {\r\n        this.calendar2(this.month, this.year);\r\n      }\r\n    }\r\n    if (changes.year) {\r\n      if (changes.year.currentValue) {\r\n        this.calendar2(this.month, this.year);\r\n      }\r\n    }\r\n  }\r\n  calendar2(month: number, year: number) {\r\n    // Variables to be used later.  Place holders right now.\r\n    var padding = '';\r\n    var totalFeb = '';\r\n    var i = 1;\r\n    var testing = '';\r\n\r\n    var current = new Date();\r\n    var cmonth = current.getMonth(); // current (today) month\r\n    var day = current.getDate();\r\n    var tempMonth = month + 1; // +1; // Used to match up the current month with the correct start date.\r\n    var prevMonth = month - 1;\r\n\r\n    // Determing if Feb has 28 or 29 days in it.\r\n    if (month === 1) {\r\n      if ((year % 100 !== 0 && year % 4 === 0) || year % 400 === 0) {\r\n        totalFeb = '29';\r\n      } else {\r\n        totalFeb = '28';\r\n      }\r\n    }\r\n\r\n    // Setting up arrays for the name of the months, days, and the number of days in the month.\r\n    var monthNames = [\r\n      'Jan',\r\n      'Feb',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'Aug',\r\n      'Sept',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ];\r\n    var dayNames = [\r\n      'Sunday',\r\n      'Monday',\r\n      'Tuesday',\r\n      'Wednesday',\r\n      'Thrusday',\r\n      'Friday',\r\n      'Saturday',\r\n    ];\r\n    var totalDays = [\r\n      '31',\r\n      '' + totalFeb + '',\r\n      '31',\r\n      '30',\r\n      '31',\r\n      '30',\r\n      '31',\r\n      '31',\r\n      '30',\r\n      '31',\r\n      '30',\r\n      '31',\r\n    ];\r\n\r\n    // Temp values to get the number of days in current month, and previous month. Also getting the day of the week.\r\n    // var tempDate = new Date(tempMonth + ' 1 ,' + year);\r\n    var tempDate = new Date(year, month, 1);\r\n    var tempweekday = tempDate.getDay();\r\n    var tempweekday2 = tempweekday;\r\n    var dayAmount = totalDays[month];\r\n    // After getting the first day of the week for the month, padding the other days for that week with the previous months days.  IE, if the first day of the week is on a Thursday, then this fills in Sun - Wed with the last months dates, counting down from the last day on Wed, until Sunday.\r\n    while (tempweekday > 0) {\r\n      padding += '<td ></td>';\r\n      // preAmount++;\r\n      tempweekday--;\r\n    }\r\n    // Filling in the calendar with the current month days in the correct location along.\r\n    while (i <= +dayAmount) {\r\n      // Determining when to start a new row\r\n\r\n      if (tempweekday2 > 6) {\r\n        tempweekday2 = 0;\r\n        padding += '</tr><tr >';\r\n      }\r\n\r\n      // tslint:disable-next-line:max-line-length\r\n      // checking to see if i is equal to the current day, if so then we are making the color of that cell a different color using CSS. Also adding a rollover effect to highlight the day the user rolls over. This loop creates the actual calendar that is displayed.\r\n      const eventsOfDay: string = this.getScheduleEvents(year, month, i);\r\n      if (eventsOfDay !== '') {\r\n        if (i === day && month === cmonth) {\r\n          padding +=\r\n            '<td class=\"row-number-day2\" id=\"' +\r\n            i +\r\n            '\"><div class=\"current-day\">' +\r\n            i +\r\n            eventsOfDay +\r\n            '</div></td>';\r\n          this.presentToast();\r\n        } else {\r\n          padding +=\r\n            '<td class=\"row-number-day2\" id=\"' +\r\n            i +\r\n            '\" >' +\r\n            i +\r\n            eventsOfDay +\r\n            '</td>';\r\n        }\r\n      } else {\r\n        if (i === day && month === cmonth) {\r\n          padding +=\r\n            '<td class=\" row-number-day \" id=\"' +\r\n            i +\r\n            '\" ><div class=\"current-day\">' +\r\n            i +\r\n            '</div></td>';\r\n        } else {\r\n          padding +=\r\n            '<td class=\"row-number-day\" id=\"' + i + '\" >' + i + '</td>';\r\n        }\r\n      }\r\n\r\n      tempweekday2++;\r\n\r\n      i++;\r\n    }\r\n    if (tempweekday2 < 7) {\r\n      let fillEnd = 7 - tempweekday2;\r\n      while (fillEnd > 0) {\r\n        padding += '<td ></td>';\r\n        fillEnd--;\r\n      }\r\n    }\r\n\r\n    // Outputing the calendar onto the site.  Also, putting in the month name and days of the week.\r\n    var calendarTable = '<table class=\"calendar-table \" > ';\r\n    calendarTable +=\r\n      '<tr class=\"row-name-day \" >  <td class=\"row-name-day \">Do</td>  <td class=\"row-name-day \">Lu</td> <td class=\"row-name-day \">Ma</td> <td class=\"row-name-day \">Mi</td> <td class=\"row-name-day \">Ju</td> <td class=\"row-name-day \">Vi</td> <td class=\"row-name-day \">Sa</td> </tr>';\r\n    calendarTable += '<tr class=\"row-number-day\" >';\r\n    calendarTable += padding;\r\n    calendarTable += '</tr></table>';\r\n    document.getElementById('calendar').innerHTML = calendarTable;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Filtros</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- <div class=\\\"main\\\"> -->\\r\\n<ion-content fullscreen>\\r\\n  <ion-list>\\r\\n    <ion-radio-group [(ngModel)]=\\\"status\\\" (ionChange)=\\\"applyFilters()\\\">\\r\\n      <ion-list-header>\\r\\n        <ion-label>Estado</ion-label>\\r\\n      </ion-list-header>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>Gris</ion-label>\\r\\n        <ion-radio mode=\\\"md\\\" value=\\\"gris\\\" slot=\\\"end\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>Verde</ion-label>\\r\\n        <ion-radio mode=\\\"md\\\" value=\\\"verde\\\" slot=\\\"end\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>Amarillo</ion-label>\\r\\n        <ion-radio mode=\\\"md\\\" value=\\\"amarillo\\\" slot=\\\"end\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>Rojo</ion-label>\\r\\n        <ion-radio mode=\\\"md\\\" value=\\\"rojo\\\" slot=\\\"end\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>Azul</ion-label>\\r\\n        <ion-radio mode=\\\"md\\\" value=\\\"azul\\\" slot=\\\"end\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n    </ion-radio-group>\\r\\n  </ion-list>\\r\\n  <ion-list>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Fecha</ion-label>\\r\\n    </ion-list-header>\\r\\n  </ion-list>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Dia\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\r\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <mat-form-field>\\r\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\r\\n        placeholder=\\\"Mes\\\">\\r\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\r\\n          {{month}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!--  <ion-label>Mes</ion-label>\\r\\n          <ion-select interface=\\\"popover\\\" (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\"\\r\\n            name=\\\"day\\\">\\r\\n            <ion-select-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">{{month}}</ion-select-option>\\r\\n          </ion-select> -->\\r\\n\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label>\\r\\n      Año\\r\\n    </ion-label>\\r\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\r\\n  </ion-item>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<!-- </div> -->\"","module.exports = \".main {\\n  margin-top: 26%;\\n  /* Add a top margin to avoid content overlay */\\n  overflow: auto; }\\n\\n.top-bar {\\n  position: fixed;\\n  overflow: hidden;\\n  z-index: 10;\\n  width: 15%; }\\n\\n@media (max-width: 900px) {\\n  .top-bar {\\n    position: absolute;\\n    width: 100%;\\n    right: 0; } }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\n\r\n@Component({\r\n  selector: 'app-general-filter-buyer',\r\n  templateUrl: './general-filter-buyer.component.html',\r\n  styleUrls: ['./general-filter-buyer.component.scss'],\r\n})\r\nexport class GeneralFilterBuyerComponent implements OnInit {\r\n  status: string;\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  dayInput: number;\r\n  monthInput: number;\r\n  yearInput: number;\r\n  @Output()\r\n  filters = new EventEmitter();\r\n  @Output()\r\n  resetAll = new EventEmitter();\r\n  @Output()\r\n  closeMenu = new EventEmitter();\r\n  @Input()\r\n  isDesktop: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  applyFilters() {\r\n    this.filters.emit({\r\n      day: this.dayInput,\r\n      month: this.monthInput,\r\n      year: this.yearInput,\r\n      status: this.status,\r\n    });\r\n  }\r\n  reset() {\r\n    this.resetAll.emit();\r\n    this.dayInput = null;\r\n    this.monthInput = null;\r\n    this.yearInput = null;\r\n    this.status = undefined;\r\n  }\r\n  goBack() {\r\n    if (!this.isDesktop) {\r\n      this.closeMenu.emit();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\r\\n      <ion-button (click)=\\\"goBack()\\\" slot=\\\"start\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Filtros</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"sendFilters();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\r\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- <div class=\\\"parent20\\\"> -->\\r\\n<ion-content fullscreen>\\r\\n\\r\\n  <ng-container *ngIf=\\\"!isFilterApply; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n\\r\\n    <ion-list lines=\\\"none\\\">\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\" caseFilter = 'Precio';isFilterApply = !isFilterApply; \\\">\\r\\n        <ion-label>\\r\\n          Precio\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice === 0 && !hopeProperty.maxPrice\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice !== 0 && !hopeProperty.maxPrice\\\">{{hopeProperty.minPrice}}+</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice === 0 && hopeProperty.maxPrice\\\">{{hopeProperty.maxPrice}}</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice !== 0 && hopeProperty.maxPrice\\\"> {{hopeProperty.minPrice }}-{{\\r\\n          hopeProperty.maxPrice}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Renta\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"rent\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Venta\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"sell\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\" caseFilter = 'Tipo de Vivienda';isFilterApply = !isFilterApply; \\\">\\r\\n        <ion-label>\\r\\n          Tipo de Vivienda\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"!hopeProperty.typeOfProperty\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.typeOfProperty\\\">{{hopeProperty.typeOfProperty}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Espacio'\\\">\\r\\n        <ion-label>\\r\\n          Espacio\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.space === 0\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.space !== 0\\\">{{hopeProperty.space}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Zona'\\\">\\r\\n        <ion-label>\\r\\n          Zona\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"!hopeProperty.zone\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.zone\\\">{{hopeProperty.zone}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Cuartos'\\\">\\r\\n        <ion-label>\\r\\n          Número de Cuartos\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.numRooms === 0\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.numRooms !== 0\\\">{{hopeProperty.numRooms}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Carros'\\\">\\r\\n        <ion-label>\\r\\n          Espacio para carros\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.numCars === 0\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.numCars !== 0\\\">{{hopeProperty.numCars}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Usado\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"old\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Nuevo\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"notOld\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Cerrado\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"close\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Abierto\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"open\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Bathrooms'\\\">\\r\\n        <ion-label>\\r\\n          Numero de baños\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.numBathrooms === 0\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.numBathrooms !== 0\\\">{{hopeProperty.numBathrooms}}</ion-note>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Con Jardin\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"garden\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Sin Jardin\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"noGarden\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          En plata baja\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"lowLevel\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Cualquier Nivel\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"noMatterLevel\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Con Elevador\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"elevator\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Sin Elevador\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"noElevator\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Todos los servicios\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"allServices\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>\\r\\n          Sin Servicios\\r\\n        </ion-label>\\r\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"notAllServices\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Forma de compra'\\\">\\r\\n        <ion-label>\\r\\n          Forma de compra\\r\\n        </ion-label>\\r\\n        <ion-note *ngIf=\\\"!hopeProperty.wayToBuy\\\">Cualquiera</ion-note>\\r\\n        <ion-note *ngIf=\\\"hopeProperty.wayToBuy\\\">{{hopeProperty.wayToBuy}}</ion-note>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"sendFilters();goBack()\\\">Aplicar</ion-button>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate>\\r\\n    <!-- Filtros aplicar -->\\r\\n    <span [ngSwitch]=\\\"caseFilter\\\">\\r\\n      <span *ngSwitchCase=\\\"'Precio'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Minimo</ion-label>\\r\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\" name=\\\"minPrice\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Maximo</ion-label>\\r\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\" name=\\\"maxPrice\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Tipo de Vivienda'\\\">\\r\\n        Seleccione uno\\r\\n        <ion-list>\\r\\n          <ion-radio-group [(ngModel)]=\\\"hopeProperty.typeOfProperty\\\">\\r\\n            <ion-list-header>\\r\\n              <ion-label>Tipo de Vivienda</ion-label>\\r\\n            </ion-list-header>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>Casa</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"casa\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>Departamento</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"departamento\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>Terreno</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"terreno\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>Nave Industrial</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"nave industrial\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n          </ion-radio-group>\\r\\n        </ion-list>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Espacio'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Espacio</ion-label>\\r\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Zona'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Zona</ion-label>\\r\\n          <ion-input [(ngModel)]=\\\"hopeProperty.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Cuartos'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Minimo num. de cuartos </ion-label>\\r\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.numRooms\\\" #numRooms=\\\"ngModel\\\" id=\\\"numRooms\\\" name=\\\"numRooms\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Carros'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Minimo num. de carros </ion-label>\\r\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.numCars\\\" #numCars=\\\"ngModel\\\" id=\\\"numCars\\\" name=\\\"numCars\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Bathrooms'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Minimo num.</ion-label>\\r\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\" id=\\\"numBathrooms\\\"\\r\\n            name=\\\"numBathrooms\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n\\r\\n      </span>\\r\\n      <span *ngSwitchCase=\\\"'Forma de compra'\\\">\\r\\n        Seleccione uno\\r\\n        <ion-list>\\r\\n          <ion-radio-group [(ngModel)]=\\\"hopeProperty.wayToBuy\\\">\\r\\n            <ion-list-header>\\r\\n              <ion-label>Forma de compra</ion-label>\\r\\n            </ion-list-header>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>FOVISSTE</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"FOVISSTE\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>IMSS</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"IMSS\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>Contado</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"contado\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label>PEMEX</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"PEMEX\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label>Infonavit</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"infonavit\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label>Aliados</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"aliados\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label>Otros</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"otros\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n          </ion-radio-group>\\r\\n        </ion-list>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\r\\n      </span>\\r\\n\\r\\n      <!--   <p *ngSwitchDefault>\\r\\n  \\r\\n  </p> -->\\r\\n    </span>\\r\\n  </ng-template>\\r\\n</ion-content>\\r\\n\\r\\n<!-- </div> -->\\r\\n\\r\\n<!-- <ion-footer *ngIf=\\\"!isFilterApply\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"sendFilters();goBack()\\\">Aplicar</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer> -->\"","module.exports = \".parent20 {\\n  height: 563px;\\n  overflow: auto; }\\n\\n.main-container {\\n  height: 75vh;\\n  /* or position:absolute; height:100%; */\\n  display: flex;\\n  flex-direction: column; }\\n\\n/* an arbitrary container of fixed height */\\n\\n.fixed-container {\\n  height: 100px;\\n  padding: 20px;\\n  background-color: #0B5AB0;\\n  color: white; }\\n\\n/* this is the flex container that will take the rest of the height */\\n\\n.content-wrapper {\\n  display: flex;\\n  flex: 1;\\n  min-height: 0px;\\n  /* IMPORTANT: you need this for non-chrome browsers */ }\\n\\n/* the container for our overflowed content */\\n\\n.overflow-container {\\n  flex: 1;\\n  overflow: auto; }\\n\\n/* the overflow content itself */\\n\\n.overflow-content {\\n  height: 2000px;\\n  color: black;\\n  background-color: #ddd;\\n  padding: 20px; }\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { IProperty } from '../../../models/property.model';\r\n\r\n@Component({\r\n  selector: 'app-general-filters',\r\n  templateUrl: './general-filters.component.html',\r\n  styleUrls: ['./general-filters.component.scss'],\r\n})\r\nexport class GeneralFiltersComponent implements OnInit {\r\n  @Input()\r\n  isDesktop = false;\r\n  @Output()\r\n  filters = new EventEmitter();\r\n  @Output()\r\n  resetAll = new EventEmitter();\r\n  @Output()\r\n  closeMenuMaterial = new EventEmitter();\r\n  constructor(public menuCtr: MenuController) {}\r\n  isFilterApply = false;\r\n  caseFilter: string;\r\n  hopeProperty: IProperty = {\r\n    minPrice: 0,\r\n    numBathrooms: 0,\r\n    numCars: 0,\r\n    numRooms: 0,\r\n    space: 0,\r\n  };\r\n  rent = false;\r\n  sell = false;\r\n  old = false;\r\n  notOld = false;\r\n  garden = false;\r\n  noGarden = false;\r\n  lowLevel = false;\r\n  noMatterLevel = false;\r\n  elevator = false;\r\n  noElevator = false;\r\n  allServices = false;\r\n  notAllServices = false;\r\n  open = false;\r\n  close = false;\r\n\r\n  ngOnInit() {}\r\n  goBack() {\r\n    if (this.isFilterApply) {\r\n      this.sendFilters();\r\n      this.isFilterApply = false;\r\n    } else {\r\n      this.menuCtr.close('filters');\r\n      if (!this.isDesktop) {\r\n        this.closeMenuMaterial.emit();\r\n      }\r\n    }\r\n  }\r\n  sendFilters() {\r\n    if (this.rent !== this.sell) {\r\n      this.hopeProperty.isRent = this.rent;\r\n    } else {\r\n      this.hopeProperty.isRent = undefined;\r\n    }\r\n    if (this.old !== this.notOld) {\r\n      this.hopeProperty.isOld = this.old;\r\n    } else {\r\n      this.hopeProperty.isOld = undefined;\r\n    }\r\n    if (this.garden !== this.noGarden) {\r\n      this.hopeProperty.hasGarden = this.garden;\r\n    } else {\r\n      this.hopeProperty.hasGarden = undefined;\r\n    }\r\n    if (this.lowLevel !== this.noMatterLevel) {\r\n      this.hopeProperty.isLowLevel = this.lowLevel;\r\n    } else {\r\n      this.hopeProperty.isLowLevel = undefined;\r\n    }\r\n    if (this.elevator !== this.noElevator) {\r\n      this.hopeProperty.hasElevator = this.elevator;\r\n    } else {\r\n      this.hopeProperty.hasElevator = undefined;\r\n    }\r\n    if (this.allServices !== this.notAllServices) {\r\n      this.hopeProperty.allServices = this.allServices;\r\n    } else {\r\n      this.hopeProperty.allServices = undefined;\r\n    }\r\n    if (this.open !== this.close) {\r\n      this.hopeProperty.isClose = this.close;\r\n    } else {\r\n      this.hopeProperty.isClose = undefined;\r\n    }\r\n    console.log(this.hopeProperty);\r\n    this.filters.emit(this.hopeProperty);\r\n  }\r\n  reset() {\r\n    this.rent = false;\r\n    this.sell = false;\r\n    this.old = false;\r\n    this.notOld = false;\r\n    this.garden = false;\r\n    this.noGarden = false;\r\n    this.lowLevel = false;\r\n    this.noMatterLevel = false;\r\n    this.elevator = false;\r\n    this.noElevator = false;\r\n    this.allServices = false;\r\n    this.notAllServices = false;\r\n    this.open = false;\r\n    this.close = false;\r\n    this.hopeProperty = {\r\n      minPrice: 0,\r\n      numBathrooms: 0,\r\n      numCars: 0,\r\n      numRooms: 0,\r\n      space: 0,\r\n    };\r\n    this.resetAll.emit();\r\n  }\r\n}\r\n","module.exports = \"<ion-skeleton-text width=40px></ion-skeleton-text>\\r\\n<ion-skeleton-text width=200px></ion-skeleton-text>\\r\\n<ion-skeleton-text width=600px></ion-skeleton-text>\\r\\n<ion-skeleton-text width=100px></ion-skeleton-text>\\r\\n<ion-skeleton-text width=80px></ion-skeleton-text>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-general-skeleton',\r\n  templateUrl: './general-skeleton.component.html',\r\n  styleUrls: ['./general-skeleton.component.scss']\r\n})\r\nexport class GeneralSkeletonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"isDesktop; then Desktop; else Device\\\"></ng-container>\\r\\n<ng-template #Desktop>\\r\\n\\r\\n  <mat-card [class.mat-elevation-z0]=\\\"true\\\" class=\\\"border-filter\\\">\\r\\n    <mat-card-title>Búsqueda General</mat-card-title>\\r\\n    <div class=\\\"row\\\">\\r\\n      <mat-form-field style=\\\"margin-right: 1%\\\" appearance=\\\"fill\\\">\\r\\n        <mat-label>Buscar en toda la tabla </mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar...\\\">\\r\\n      </mat-form-field>\\r\\n      <!-- \\r\\n      <mat-form-field style=\\\"margin-right: 1%\\\" appearance=\\\"fill\\\">\\r\\n        <mat-label>Buscar por Dia </mat-label>\\r\\n        <input matInput (keyup)=\\\"filterByDay($event.target.value)\\\" placeholder=\\\"Buscar...\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"margin-right: 1%; \\\" appearance=\\\"fill\\\">\\r\\n        <mat-label>Buscar por Mes </mat-label>\\r\\n        <mat-select #m (valueChange)=\\\"filterByMonth(m.value)\\\" placeholder=\\\"Buscar por Mes\\\">\\r\\n          <mat-option *ngFor=\\\"let month of months; index as i\\\" [value]=\\\"i\\\">\\r\\n            {{month}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        <button mat-button *ngIf=\\\"m.value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"m.value='';filterByMonth(undefined)\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n        </button>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field appearance=\\\"fill\\\" style=\\\"margin-right: 1%; \\\">\\r\\n        <mat-label style=\\\"top: 10px\\\">Buscar por Año </mat-label>\\r\\n        <input matInput (keyup)=\\\"filterByYear($event.target.value)\\\" placeholder=\\\"Buscar...\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field *ngIf=\\\"showFilterByStatus\\\" style=\\\"  max-width: 17%; \\\" appearance=\\\"fill\\\">\\r\\n        <mat-label>Buscar por Estado </mat-label>\\r\\n        <mat-select #state (valueChange)=\\\"filterByState(state.value)\\\" placeholder=\\\"Buscar por Estado\\\">\\r\\n          <mat-option value=\\\"Atendiendo\\\">\\r\\n            Atendiendo\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"Cerrado\\\">\\r\\n            Cerrado\\r\\n          </mat-option>\\r\\n          <mat-option value=\\\"Pendiente\\\">\\r\\n            Pendiente\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        <button mat-button *ngIf=\\\"state.value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"state.value='';filterByState(undefined)\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n        </button>\\r\\n      </mat-form-field> -->\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </mat-card>\\r\\n  <div style=\\\"margin: 1%\\\" class=\\\"mat-elevation-z8\\\">\\r\\n    <div class=\\\"table-container\\\" style=\\\"overflow-x:auto; \\\" *ngIf=\\\"rows && dataSource\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n        <ng-container *ngFor=\\\"let column of columns\\\" [cdkColumnDef]=\\\"column.prop\\\">\\r\\n          <th mat-header-cell mat-sort-header [ngClass]=\\\"{customWidthClass: column.w } \\\" *cdkHeaderCellDef>{{\\r\\n            column.name\\r\\n            }}</th>\\r\\n          <!-- normal -->\\r\\n          <span *ngIf=\\\"column.type === 'normal'\\\">\\r\\n            <td mat-cell [ngClass]=\\\"{customWidthClass: column.w } \\\" *cdkCellDef=\\\"let row\\\">{{ row[column.prop] }}</td>\\r\\n          </span>\\r\\n          <!-- date -->\\r\\n          <div *ngIf=\\\"column.type === 'date'\\\">\\r\\n            <td mat-cell style=\\\"padding: 0% 1% 0% 1%\\\" [ngClass]=\\\"{customWidthClass: column.w }\\\" *cdkCellDef=\\\"let row\\\">{{formatDates(row[column.prop])}}</td>\\r\\n          </div>\\r\\n          <!-- status \\r\\n            name\\r\\n            status \\r\\n          -->\\r\\n          <span *ngIf=\\\"column.type === 'status'\\\">\\r\\n            <td mat-cell class=\\\"center-cell \\\" [ngClass]=\\\"{customWidthClass: column.w } \\\" *cdkCellDef=\\\"let row\\\">\\r\\n              <ion-chip *ngFor=\\\"let property of row[column.prop]\\\" [ngClass]=\\\"{\\r\\n                'background-gris': property.status === 'gris', \\r\\n                'background-verde': property.status === 'verde',\\r\\n                'background-amarillo': property.status === 'amarillo',\\r\\n                'background-rojo': property.status === 'rojo',\\r\\n                'background-azul': property.status === 'azul'\\r\\n            }\\\">\\r\\n                <ion-label>{{property.name}}</ion-label>\\r\\n              </ion-chip>\\r\\n\\r\\n            </td>\\r\\n          </span>\\r\\n          <!-- boolean -->\\r\\n          <span *ngIf=\\\"column.type === 'boolean'\\\">\\r\\n            <td mat-cell class=\\\"center-cell\\\" [ngClass]=\\\"{customWidthClass: column.w }\\\" *cdkCellDef=\\\"let row\\\">\\r\\n              <span class=\\\"margin-ranking \\\">\\r\\n                <button *ngIf=\\\"row[column.prop]\\\" (click)=\\\"onSelect(row)\\\" mat-icon-button>\\r\\n                  <mat-icon class=\\\"secondary-text\\\" class=\\\"green-icon\\\">check_circle</mat-icon>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"!row[column.prop]\\\" (click)=\\\"onSelect(row)\\\" mat-icon-button>\\r\\n                  <mat-icon class=\\\"secondary-text\\\" class=\\\"red-icon\\\">cancel</mat-icon>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </span>\\r\\n          <!-- ranking -->\\r\\n          <span *ngIf=\\\"column.type === 'ranking'\\\">\\r\\n            <td mat-cell [ngClass]=\\\"{customWidthClass: column.w }\\\" class=\\\"margin-ranking\\\" *cdkCellDef=\\\"let row\\\">\\r\\n              <div class=\\\"flexbox-ranking\\\">\\r\\n                <span *ngIf=\\\"row[column.prop] > 0\\\">\\r\\n                  <mat-icon *ngFor=\\\"let starts of getArray(row[column.prop])\\\" class=\\\"secondary-text\\\" class=\\\"yellow-icon\\\">star_rate</mat-icon>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"row[column.prop] === 0\\\">\\r\\n                  Sin calificar\\r\\n                </span>\\r\\n              </div>\\r\\n            </td>\\r\\n          </span>\\r\\n          <!-- money -->\\r\\n          <span *ngIf=\\\"column.type === 'money'\\\">\\r\\n            <td mat-cell class=\\\"center-cell\\\" [ngClass]=\\\"{customWidthClass: column.w } \\\" *cdkCellDef=\\\"let row\\\"> $ {{\\r\\n              row[column.prop].toFixed(2) }}</td>\\r\\n          </span>\\r\\n          <!-- number  -->\\r\\n          <span *ngIf=\\\"column.type === 'number'\\\">\\r\\n            <td mat-cell class=\\\"center-cell\\\" style=\\\"text-align: center\\\" [ngClass]=\\\"{customWidthClass: column.w } \\\"\\r\\n              *cdkCellDef=\\\"let row\\\"> {{\\r\\n              row[column.prop]}}</td>\\r\\n          </span>\\r\\n          <!-- phone\\r\\n              <a href=\\\"tel:+13174562564\\\">317-456-2564</a>\\r\\n            -->\\r\\n          <span *ngIf=\\\"column.type === 'phone'\\\">\\r\\n            <td mat-cell class=\\\"center-cell\\\" [ngClass]=\\\"{customWidthClass: column.w } \\\" *cdkCellDef=\\\"let row\\\">\\r\\n              <a [href]=\\\"'tel:'+row[column.prop]\\\">{{ row[column.prop]}}</a>\\r\\n            </td>\\r\\n          </span>\\r\\n          <!-- butons -->\\r\\n          <span *ngIf=\\\"column.type === 'buttons'\\\">\\r\\n            <td mat-cell [ngClass]=\\\"{customWidthClass: column.w }\\\" *cdkCellDef=\\\"let row\\\" style=\\\"justify-content: center;\\\">\\r\\n              <div class=\\\"flexbox-buttons\\\">\\r\\n                <button mat-icon-button matTooltip=\\\"Detalles\\\" matTooltipPosition=\\\"above\\\" color=\\\"primary\\\" *ngIf=\\\"column.buttonDetails\\\"\\r\\n                  (click)=\\\"detailsItem(row)\\\">\\r\\n                  <mat-icon class=\\\"secondary-text\\\">info</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Editar\\\" matTooltipPosition=\\\"above\\\" *ngIf=\\\"column.buttonEdit\\\"\\r\\n                  (click)=\\\"editItem(row)\\\">\\r\\n                  <mat-icon class=\\\"secondary-text\\\">create</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button color=\\\"warn\\\" matTooltip=\\\"Borrar\\\" matTooltipPosition=\\\"above\\\" *ngIf=\\\"column.buttonDeleted\\\"\\r\\n                  (click)=\\\"deletedItem(row)\\\">\\r\\n                  <mat-icon class=\\\"secondary-text\\\">delete</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Mensaje\\\" matTooltipPosition=\\\"above\\\" *ngIf=\\\"column.buttonMail\\\"\\r\\n                  (click)=\\\"mailItem(row)\\\">\\r\\n                  <mat-icon class=\\\"secondary-text\\\">mail</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Calificar\\\" matTooltipPosition=\\\"above\\\" *ngIf=\\\"column.buttonRating && row.status === 'Cerrado'\\\"\\r\\n                  (click)=\\\"ratingItem(row)\\\">\\r\\n                  <mat-icon class=\\\"secondary-text\\\">stars</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </td>\\r\\n          </span>\\r\\n        </ng-container>\\r\\n        <!-- <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr> -->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"10\\\"></mat-paginator>\\r\\n  </div>\\r\\n  <br>\\r\\n</ng-template>\\r\\n<!-- Celular lista -->\\r\\n<ng-template #Device>\\r\\n  <ion-list>\\r\\n    <ion-item lines=\\\"inset\\\" *ngFor=\\\"let row of dataSource.data\\\">\\r\\n      <ion-icon *ngIf=\\\"isIcon\\\" style=\\\"color: #F5811E\\\" [name]=\\\"row.iconName\\\" slot=\\\"start\\\"></ion-icon>\\r\\n      <!-- <ion-icon  style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon> -->\\r\\n      <ion-label text-wrap>\\r\\n        <span *ngFor=\\\"let column of columns; let ii=index\\\">\\r\\n          <!-- title -->\\r\\n          <h2 *ngIf=\\\"ii === 0 && column.type === 'normal'\\\"><b>{{row[column.prop]}}</b></h2>\\r\\n          <!-- normal -->\\r\\n          <p *ngIf=\\\"column.type === 'normal' && ii !== 0\\\"><b> {{column.name}}: </b>{{row[column.prop]}}</p>\\r\\n          <!-- number -->\\r\\n          <p *ngIf=\\\"column.type === 'number'\\\"><b> {{column.name}}: </b>{{row[column.prop]}}</p>\\r\\n\\r\\n          <!-- fecha -->\\r\\n          <p *ngIf=\\\"column.type === 'date'\\\"><b> {{column.name}}: </b> {{formatDates(row[column.prop])}}</p>\\r\\n          <!-- boolean -->\\r\\n          <span *ngIf=\\\"column.type === 'boolean'\\\">\\r\\n            <button *ngIf=\\\"row[column.prop]\\\" (click)=\\\"onSelect(row)\\\" mat-icon-button>\\r\\n              <b> {{column.name}} </b>\\r\\n              <mat-icon class=\\\"secondary-text\\\" class=\\\"green-icon\\\">check_circle</mat-icon>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"!row[column.prop]\\\" (click)=\\\"onSelect(row)\\\" mat-icon-button>\\r\\n              <b> {{column.name}} </b>\\r\\n              <mat-icon class=\\\"secondary-text\\\" class=\\\"red-icon\\\">cancel</mat-icon>\\r\\n            </button>\\r\\n          </span>\\r\\n          <!-- money -->\\r\\n          <span *ngIf=\\\"column.type === 'money'\\\">\\r\\n            <p> <b>{{column.name}}: </b>$ {{\\r\\n              row[column.prop].toFixed(2) }}</p>\\r\\n          </span>\\r\\n\\r\\n\\r\\n          <!-- phone -->\\r\\n          <!-- <p *ngIf=\\\"column.type === 'phone'\\\"><a [href]=\\\"'tel:'+row[column.prop]\\\">{{ row[column.prop]}}</a></p> -->\\r\\n\\r\\n          <!-- status -->\\r\\n          <span *ngIf=\\\"column.type === 'status'\\\">\\r\\n            <ion-chip *ngFor=\\\"let property of row[column.prop]\\\" [ngClass]=\\\"{\\r\\n            'background-gris': property.status === 'gris', \\r\\n            'background-verde': property.status === 'verde',\\r\\n            'background-amarillo': property.status === 'amarillo',\\r\\n            'background-rojo': property.status === 'rojo',\\r\\n            'background-azul': property.status === 'azul'\\r\\n        }\\\">\\r\\n              <ion-label>{{property.name}}</ion-label>\\r\\n            </ion-chip>\\r\\n          </span>\\r\\n        </span>\\r\\n\\r\\n      </ion-label>\\r\\n      <!--   <ion-buttons slot=\\\"end\\\">\\r\\n        <ion-button (click)=\\\"getEvents()\\\" slot=\\\"end\\\">\\r\\n          <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"clipboard\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"fowardOne()\\\" slot=\\\"end\\\">\\r\\n          <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-buttons> -->\\r\\n      <div *ngFor=\\\"let column of columns;\\\">\\r\\n        <button *ngIf=\\\"column.type === 'buttons' && column.buttonDetails\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"detailsItem(row)\\\">\\r\\n          <mat-icon>info</mat-icon>\\r\\n        </button>\\r\\n        <!--  <button *ngIf=\\\"column.type === 'buttons' && column.buttonDeleted\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"detailsItem(row)\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </button> -->\\r\\n        <a *ngIf=\\\"column.type === 'phone'\\\" mat-icon-button color=\\\"primary\\\" [href]=\\\"'tel:'+row[column.prop]\\\">\\r\\n          <mat-icon>phone</mat-icon>\\r\\n        </a>\\r\\n        <button *ngIf=\\\"column.type === 'buttons' && column.buttonEdit\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"editItem(row)\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <div class=\\\"space-buttons\\\"></div>\\r\\n\\r\\n</ng-template>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.table-container {\\n  height: 500px;\\n  overflow: auto; }\\n\\n.buttons-movile-container {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 30%; }\\n\\ntd,\\nth {\\n  width: 15%; }\\n\\n.customWidthClass {\\n  flex: 0 0 6%; }\\n\\n.red-icon {\\n  color: red; }\\n\\n.green-icon {\\n  color: green; }\\n\\n.yellow-icon {\\n  size: 1px !important;\\n  color: goldenrod; }\\n\\n.flexbox-ranking {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.flexbox-buttons {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.margin-ranking {\\n  margin-right: 3px;\\n  margin-left: 3px; }\\n\\n.center-cell {\\n  justify-content: center; }\\n\\n.righ-cell {\\n  justify-content: flex-end; }\\n\\n.chip-yellow {\\n  background-color: #FFE57F; }\\n\\n.chip-green {\\n  background-color: #B9F6CA; }\\n\\n.chip-black {\\n  background-color: #546E7A;\\n  color: white; }\\n\\n.tag {\\n  background-color: blue;\\n  color: white;\\n  border-radius: 25%; }\\n\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  IterableDiffers,\r\n  DoCheck,\r\n} from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\nimport { TableColumsModel } from '../../../models/tableColums.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-general-table',\r\n  templateUrl: './general-table.component.html',\r\n  styleUrls: ['./general-table.component.scss'],\r\n})\r\nexport class GeneralTableComponent implements OnInit, OnChanges, AfterViewInit {\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  displayedColumns: string[];\r\n  dataSource: MatTableDataSource<any>;\r\n  @Input()\r\n  isIcon = false;\r\n  @Input()\r\n  isDesktop = true;\r\n  @Input()\r\n  showFilterByStatus = true;\r\n  @Input()\r\n  columns: TableColumsModel[];\r\n  @Input()\r\n  rows: any[];\r\n  @Output()\r\n  editButton = new EventEmitter<Array<any>>();\r\n  @Output()\r\n  deletedButton = new EventEmitter<Array<any>>();\r\n  @Output()\r\n  detailsButton = new EventEmitter<Array<any>>();\r\n  @Output()\r\n  mailButton = new EventEmitter<Array<any>>();\r\n  @Output()\r\n  ratingButton = new EventEmitter<Array<any>>();\r\n  @ViewChild(MatPaginator)\r\n  paginator: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort: MatSort;\r\n  realData;\r\n  iterableDiffer;\r\n\r\n  constructor(private _iterableDiffers: IterableDiffers) {\r\n    // Assign the data to the data source for the table to render\r\n    this.iterableDiffer = this._iterableDiffers.find([]).create(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // TICKETS.map(item => item.timestamp);\r\n    // this.dataSource.sort = this.sort;\r\n  }\r\n  // ve los cambios en array lenght = 0\r\n  /* ngDoCheck() {\r\n    const changes = this.iterableDiffer.diff(this.rows);\r\n    if (changes) {\r\n      console.log(changes);\r\n      this.dataSource = new MatTableDataSource(changes.collection);\r\n      this.realData = changes.collection;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  } */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.columns) {\r\n      if (changes.columns.currentValue) {\r\n        this.displayedColumns = changes.columns.currentValue.map(\r\n          colum => colum.prop,\r\n        );\r\n      }\r\n    }\r\n    if (changes.rows) {\r\n      if (changes.rows.currentValue) {\r\n        this.dataSource = new MatTableDataSource(changes.rows.currentValue);\r\n        this.realData = changes.rows.currentValue;\r\n        // paginator works !!\r\n        setTimeout(() => (this.dataSource.paginator = this.paginator));\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  filterByDay(day: number) {\r\n    this.dataSource = new MatTableDataSource(this.realData);\r\n    const dayFinded = this.dataSource.data.filter(\r\n      item => new Date(item.timestamp).getDate() === +day,\r\n    );\r\n    this.dataSource = new MatTableDataSource(dayFinded);\r\n    if (!day) {\r\n      this.dataSource = new MatTableDataSource(this.realData);\r\n    }\r\n  }\r\n  filterByYear(year: number) {\r\n    this.dataSource = new MatTableDataSource(this.realData);\r\n    const dayFinded = this.dataSource.data.filter(\r\n      item => new Date(item.timestamp).getFullYear() === +year,\r\n    );\r\n    this.dataSource = new MatTableDataSource(dayFinded);\r\n    if (!year) {\r\n      this.dataSource = new MatTableDataSource(this.realData);\r\n    }\r\n  }\r\n  filterByMonth(month: number) {\r\n    this.dataSource = new MatTableDataSource(this.realData);\r\n    const dayFinded = this.dataSource.data.filter(\r\n      item => new Date(item.timestamp).getMonth() === +month,\r\n    );\r\n    this.dataSource = new MatTableDataSource(dayFinded);\r\n    if (isNaN(month)) {\r\n      this.dataSource = new MatTableDataSource(this.realData);\r\n    }\r\n  }\r\n  filterByState(status) {\r\n    if (!status) {\r\n      this.dataSource = new MatTableDataSource(this.realData);\r\n    } else {\r\n      this.dataSource = new MatTableDataSource(this.realData);\r\n      const stateFinded = this.dataSource.data.filter(\r\n        item => item.status.toLowerCase() === status.toLowerCase(),\r\n      );\r\n      this.dataSource = new MatTableDataSource(stateFinded);\r\n    }\r\n  }\r\n  formatDates(dateInput: Date): string {\r\n    const day: string = new Date(dateInput).getDate().toString();\r\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\r\n    const year: string = new Date(dateInput).getFullYear().toString();\r\n    const date = day + '/' + month + '/' + year;\r\n    return date;\r\n  }\r\n  getArray(numberItems: number): number[] {\r\n    return Array(numberItems).fill(1);\r\n  }\r\n  onSelect(item) {\r\n    console.log(item);\r\n  }\r\n  deletedItem(item) {\r\n    this.deletedButton.emit(item);\r\n  }\r\n  mailItem(item) {\r\n    this.mailButton.emit(item);\r\n  }\r\n  ratingItem(item) {\r\n    this.ratingButton.emit(item);\r\n  }\r\n  editItem(item) {\r\n    this.editButton.emit(item);\r\n  }\r\n  detailsItem(item) {\r\n    this.detailsButton.emit(item);\r\n  }\r\n  // sort despues de iniciar\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","module.exports = \"<circle-progress [percent]=\\\"percent\\\" [radius]=\\\"150\\\" [outerStrokeWidth]=\\\"16\\\" [innerStrokeWidth]=\\\"8\\\" [outerStrokeColor]=\\\"outerStrokeColor\\\"\\r\\n  [animation]=\\\"true\\\" [subtitle]=\\\"subtitle\\\" [animationDuration]=\\\"animationDuration\\\" [titleFontSize]=\\\"titleFontSize\\\"\\r\\n  [unitsFontSize]=\\\"unitsFontSize\\\" [subtitleFontSize]=\\\"subtitleFontSize\\\"></circle-progress>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-goal-progress',\r\n  templateUrl: './goal-progress.component.html',\r\n  styleUrls: ['./goal-progress.component.scss'],\r\n})\r\nexport class GoalProgressComponent implements OnInit {\r\n  @Input()\r\n  percent: number;\r\n  @Input()\r\n  subtitle: string;\r\n  @Input()\r\n  outerStrokeColor = '#78C000';\r\n  animationDuration = 1600;\r\n  @Input()\r\n  titleFontSize;\r\n  @Input()\r\n  unitsFontSize;\r\n  @Input()\r\n  subtitleFontSize;\r\n  isDesktop: boolean;\r\n\r\n  constructor(private platform: Platform) {\r\n    this.isDesktop = this.platform.is('desktop');\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isDesktop) {\r\n      this.titleFontSize = '40';\r\n      this.unitsFontSize = '15';\r\n      this.subtitleFontSize = '15';\r\n    } else {\r\n      this.titleFontSize = '80';\r\n      this.unitsFontSize = '20';\r\n      this.subtitleFontSize = '20';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<p></p>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-refre',\r\n  templateUrl: './refre.component.html',\r\n  styleUrls: ['./refre.component.scss']\r\n})\r\nexport class RefreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Objetivo\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <h1 *ngIf=\\\"isNew\\\">Nuevo Objetivo</h1>\\r\\n    <h1 *ngIf=\\\"!isNew\\\">Editar Objetivo</h1>\\r\\n    <p>Complete los campos para asignar una meta</p>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\r\\n          <mat-card-title>Datos del Objetivo</mat-card-title>\\r\\n\\r\\n          <div class=\\\"flex-container2\\\" *ngIf=\\\"goal.adviser && goal.adviser.length > 0\\\">\\r\\n            <!-- list adv -->\\r\\n            <mat-list role=\\\"list\\\">\\r\\n              <h3 mat-subheader>Asesores del Objetivo</h3>\\r\\n              <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let adv of goal.adviser\\\">\\r\\n                {{adv.name}} {{adv.lastName}}\\r\\n                <!-- <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"schedule.adviser=undefined\\\"></button> -->\\r\\n                <button matTooltip=\\\"Eliminar\\\" mat-icon-button (click)=\\\"deleteAdviserOfGoal(adv._id)\\\">\\r\\n                  <mat-icon color=\\\"warn\\\">clear</mat-icon>\\r\\n                </button>\\r\\n              </mat-list-item>\\r\\n            </mat-list>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"flex-container\\\">\\r\\n            <!-- adv -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Asesores</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"adviserSelect\\\" #adviserSelect2=\\\"ngModel\\\" id=\\\"adviserSelect2\\\" name=\\\"adviserSelect2\\\"\\r\\n                [required]=\\\"isNew\\\" multiple>\\r\\n                <mat-option *ngFor=\\\"let adv of advisers$ | async\\\" [value]=\\\"adv\\\">{{adv.name}} {{adv.lastName}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <!-- title -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Titulo</mat-label>\\r\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"goal.title\\\" #title=\\\"ngModel\\\" id=\\\"title\\\" name=\\\"title\\\" required>\\r\\n              <mat-error *ngIf=\\\"title.dirty || title.touched\\\">Anotar</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- cont -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Contenido</mat-label>\\r\\n              <textarea matInput placeholder=\\\"\\\" [(ngModel)]=\\\"goal.content\\\" #content=\\\"ngModel\\\" id=\\\"content\\\" name=\\\"content\\\"\\r\\n                required></textarea>\\r\\n              <mat-error *ngIf=\\\"content.dirty || content.touched\\\">Anotar</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- status -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Estado</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"goal.status\\\" #status=\\\"ngModel\\\" id=\\\"status\\\" name=\\\"status\\\" required>\\r\\n                <mat-option value=\\\"gris\\\">\\r\\n                  Inicial\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"verde\\\">\\r\\n                  Bajo\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"amarillo\\\">\\r\\n                  Medio\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"rojo\\\">\\r\\n                  Urgente\\r\\n                </mat-option>\\r\\n                <!-- <mat-option value=\\\"azul\\\">\\r\\n                  Cumplido\\r\\n                </mat-option> -->\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"status.dirty || status.touched\\\">Selecciona</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- isOld -->\\r\\n            <!--  <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Tipo</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"goal.isByManagement\\\" #isByManagement=\\\"ngModel\\\" id=\\\"isByManagement\\\" name=\\\"isByManagement\\\"\\r\\n                required>\\r\\n                <mat-option [value]=false>Individual\\r\\n                </mat-option>\\r\\n                <mat-option [value]=true>Grupal\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"isByManagement.dirty || isByManagement.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field> -->\\r\\n\\r\\n            <!-- Fecha -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Fecha para ser cumplido</mat-label>\\r\\n              <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" [value]=\\\"getDate(goal.day, goal.month, goal.year)\\\"\\r\\n                matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Selecciona Fecha\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <!-- GENERAL str list -->\\r\\n            <app-form-str-list nameTitle=\\\"Lista de Objetivos\\\" nameItems=\\\"Objetivo\\\" (arrList)=\\\"arrList = $event\\\"\\r\\n              [arrStr]=\\\"arrList\\\" [numOfItems]=\\\"numOfItems\\\"></app-form-str-list>\\r\\n          </div>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newGoal()\\\" [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\r\\n                  (click)=\\\"editGoal()\\\">Editar</button>\\r\\n              </span>\\r\\n            </div>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n      </form>\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IGoal } from '../../../models/goal.model';\r\nimport { GoalService } from '../../../services/goal.service';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { Platform } from '@ionic/angular';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { filter, map } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-new-edit-goal',\r\n  templateUrl: './new-edit-goal.component.html',\r\n  styleUrls: ['./new-edit-goal.component.scss'],\r\n})\r\nexport class NewEditGoalComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  goal: IGoal = {};\r\n  files: string;\r\n  isLoad: boolean;\r\n  buyer = '';\r\n  property = '';\r\n  buyers;\r\n  adviserSelect: IAdviser[] = [];\r\n  advisers$: Observable<IAdviser[]>;\r\n  isDesktop = false;\r\n  arrList: string[] = [];\r\n  numOfItems = 3;\r\n  user: IUserSession;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private goalService: GoalService,\r\n    private adviserService: AdviserService,\r\n    private platform: Platform,\r\n    private userService: UserSessionService,\r\n  ) {\r\n    this.user = userService.userSession.value;\r\n    this.isDesktop = platform.is('desktop');\r\n    this.getAdviser();\r\n    this.isLoad = false;\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        goalService.getGoaltById(params.id).subscribe(goal => {\r\n          console.log(goal);\r\n          this.goal = goal;\r\n          if (goal.goals && goal.goals.length > 0) {\r\n            this.arrList = goal.goals.map(g => g.nameGoal);\r\n            this.numOfItems = this.arrList.length;\r\n            console.log(this.arrList);\r\n          }\r\n        });\r\n        this.isNew = false;\r\n        this.isLoad = true;\r\n      } else {\r\n        this.isNew = true;\r\n        this.isLoad = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  getAdviser() {\r\n    if (this.user.type === 'adviser') {\r\n      this.advisers$ = this.adviserService\r\n        .getAdviserAll()\r\n        .pipe(map(advs => advs.filter(adv => adv._id === this.user.id)));\r\n    } else {\r\n      this.advisers$ = this.adviserService.getAdviserAll();\r\n    }\r\n  }\r\n  editGoal() {\r\n    // adv\r\n    this.adviserSelect.forEach(adv => {\r\n      const findIndex = this.goal.adviser.findIndex(\r\n        gadv => gadv._id === adv._id,\r\n      );\r\n      if (findIndex === -1) {\r\n        this.adviserService.getAdviserById(adv._id).subscribe(a => {\r\n          const arr = a.goal.map(g => g._id);\r\n          arr.push(this.goal._id);\r\n          a.goal = <any>arr;\r\n          this.adviserService.putAdviser(a).subscribe(co => console.log('co'));\r\n        });\r\n      }\r\n    });\r\n    // goal\r\n    this.getSet();\r\n    console.log(this.goal);\r\n    console.log(this.arrList);\r\n    this.goalService.putGoal(this.goal).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Objetivo Editado' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-goals-admin'], toast));\r\n    });\r\n  }\r\n\r\n  newGoal() {\r\n    this.getSet();\r\n    console.log(this.goal);\r\n    this.goalService.newGoal(this.goal).subscribe(newGoal => {\r\n      this.adviserSelect.forEach(adv => {\r\n        this.adviserService.getAdviserById(adv._id).subscribe(a => {\r\n          const arr = a.goal.map(g => g._id);\r\n          arr.push(newGoal._id);\r\n          a.goal = <any>arr;\r\n          this.adviserService.putAdviser(a).subscribe(co => console.log('co'));\r\n        });\r\n      });\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Objetivo Creado' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-goals-admin'], toast));\r\n    });\r\n  }\r\n  deleteAdviserOfGoal(adviserId: string) {\r\n    console.log(adviserId);\r\n    const index = this.goal.adviser.findIndex(adv => adv._id === adviserId);\r\n    this.goal.adviser.splice(index, 1);\r\n    this.adviserService.getAdviserById(adviserId).subscribe(adv => {\r\n      const indexAdv = adv.goal.findIndex(g => g._id === this.goal._id);\r\n      adv.goal.splice(indexAdv, 1);\r\n      this.adviserService.putAdviser(adv).subscribe(() => {\r\n        console.log('ok');\r\n      });\r\n    });\r\n  }\r\n  dateSelect(event) {\r\n    if (event) {\r\n      this.goal.day = event.value._i.date;\r\n      this.goal.month = event.value._i.month;\r\n      this.goal.year = event.value._i.year;\r\n    }\r\n  }\r\n  private getSet() {\r\n    // user\r\n    const user = this.userService.userSession.value;\r\n    if (user.type === 'administrator' || user.type === 'office') {\r\n      this.goal.isByManagement = true;\r\n    } else {\r\n      this.goal.isByManagement = false;\r\n    }\r\n    // lista adv\r\n    if (this.goal.adviser && this.goal.adviser.length > 0) {\r\n      this.adviserSelect.forEach(adv => {\r\n        const isFinded = this.goal.adviser.findIndex(\r\n          gad => gad._id === adv._id,\r\n        );\r\n        if (isFinded === -1) {\r\n          this.goal.adviser.push(adv);\r\n        }\r\n      });\r\n    } else {\r\n      this.goal.adviser = this.adviserSelect;\r\n    }\r\n    // lista str\r\n    if (this.goal.goals && this.goal.goals.length > 0) {\r\n      const goals = [];\r\n      this.arrList.forEach((nameGoal, i) => {\r\n        goals.push({\r\n          isComplete: this.goal.goals[i]\r\n            ? this.goal.goals[i].isComplete\r\n            : false,\r\n          nameGoal: nameGoal,\r\n        });\r\n      });\r\n      this.goal.goals = <any>goals;\r\n      // nuevo\r\n    } else if (this.arrList.length > 0) {\r\n      const goals = [];\r\n      this.arrList.forEach((nameGoal, i) => {\r\n        goals.push({\r\n          isComplete: false,\r\n          nameGoal: nameGoal,\r\n        });\r\n      });\r\n      this.goal.goals = <any>goals;\r\n    }\r\n  }\r\n\r\n  getDate(day, month, year) {\r\n    return new Date(year, month, day);\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>\\r\\n      Ingresar\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- <ion-content fixed>\\r\\n  <form #loginForm=\\\"ngForm\\\">\\r\\n    <mdc-text-field label=\\\"Nombre\\\" [(ngModel)]=\\\"emailInput\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required [outline]=\\\"true\\\"\\r\\n      [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n    <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n      <span *ngIf=\\\"email.dirty || email.touched\\\">Anota nombre</span>\\r\\n    </mdc-text-field-helper-text>\\r\\n    <mdc-text-field label=\\\"Contraseña\\\" type=\\\"password\\\" [(ngModel)]=\\\"passInput\\\" #pass=\\\"ngModel\\\" id=\\\"pass\\\" name=\\\"pass\\\"\\r\\n      required [outline]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n    <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n      <span *ngIf=\\\"pass.dirty || pass.touched\\\">Anota Contraseña</span>\\r\\n    </mdc-text-field-helper-text>\\r\\n    <ion-button color=\\\"primary\\\" (click)=\\\"login()\\\">Ingresar</ion-button>\\r\\n    <ion-button round fill=\\\"outline\\\" color=\\\"secondary\\\">Nuevo Usuario</ion-button>\\r\\n  </form>\\r\\n</ion-content> -->\\r\\n<ng-container *ngIf=\\\"isLogin; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n<ng-template #thenTemplate>\\r\\n\\r\\n</ng-template>\\r\\n<ng-template #elseTemplate>\\r\\n  <div class=\\\"center-login\\\">\\r\\n    <img src=\\\"assets/cobian-light.jpg\\\" style=\\\"max-width: 10em\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isFind\\\" style=\\\"margin-top: 2%; margin-bottom: 2%; text-align: center;\\\">\\r\\n    <span class=\\\"alert alert-danger \\\">\\r\\n      Error usuario y/o contraseña inválido\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"grandParentContaniner\\\">\\r\\n    <form #loginForm=\\\"ngForm\\\">\\r\\n      <mdc-text-field label=\\\"Nombre\\\" [(ngModel)]=\\\"emailInput\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required\\r\\n        [outline]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n      <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n        <span *ngIf=\\\"email.dirty || email.touched\\\">Anota nombre</span>\\r\\n      </mdc-text-field-helper-text>\\r\\n      <mdc-text-field (keyup)=\\\"pressEnter($event)\\\" label=\\\"Contraseña\\\" type=\\\"password\\\" [(ngModel)]=\\\"passInput\\\" #pass=\\\"ngModel\\\"\\r\\n        id=\\\"pass\\\" name=\\\"pass\\\" required [outline]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n      <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n        <span *ngIf=\\\"pass.dirty || pass.touched\\\">Anota Contraseña</span>\\r\\n      </mdc-text-field-helper-text>\\r\\n      <ion-button color=\\\"primary\\\" (click)=\\\"login()\\\">Ingresar</ion-button>\\r\\n      <ion-button round fill=\\\"outline\\\" color=\\\"secondary\\\" (click)=\\\"newUser()\\\">Nuevo Usuario</ion-button>\\r\\n    </form>\\r\\n    <div class=\\\"space-buttons\\\"></div>\\r\\n  </div>\\r\\n</ng-template>\"","module.exports = \".grandParentContaniner {\\n  display: flex;\\n  justify-content: center;\\n  height: 100%; }\\n\\n.center-login {\\n  text-align: center; }\\n\\n.alert {\\n  position: relative;\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 1rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem; }\\n\\n.alert-danger {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserSessionService } from '../../services/user-session.service';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport {\r\n  NavController,\r\n  MenuController,\r\n  LoadingController,\r\n  Platform,\r\n} from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { IUserSession } from '../../models/userSession.model';\r\nimport { IMaker } from '../../models/maker.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  emailInput: string;\r\n  passInput: string;\r\n  isFind = true;\r\n  isDevice: boolean;\r\n  isLogin: boolean;\r\n\r\n  constructor(\r\n    private userSession: UserSessionService,\r\n    private router: Router,\r\n    private navController: NavController,\r\n    private menuController: MenuController,\r\n    private storage: Storage,\r\n    public loadingController: LoadingController,\r\n    private platform: Platform,\r\n  ) {\r\n    this.isDevice = this.platform.is('cordova');\r\n    // console.log(this.platform.is('desktop'));\r\n    this.storage.keys().then(keys => {\r\n      const keyUserSession = keys.find(key => key === 'userSession');\r\n      if (!keyUserSession) {\r\n        this.isLogin = false;\r\n        userSession.loggout();\r\n      } else {\r\n        storage.get('userSession').then((val: IUserSession) => {\r\n          this.emailInput = val.name;\r\n          this.passInput = val.password;\r\n          this.login();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  close() {}\r\n  async login() {\r\n    const load = await this.presentLoadingWithOptions();\r\n    load.present();\r\n    this.userSession\r\n      .logginUserSession(this.emailInput, this.passInput)\r\n      .subscribe(data => {\r\n        // data  administrator buyer seller adviser management\r\n        if (data !== 'error') {\r\n          this.userSession.setUserSession(\r\n            data.data[0].name,\r\n            data.type,\r\n            data.data[0]._id,\r\n            data.data[0].password,\r\n          );\r\n          this.isFind = true;\r\n          // seller\r\n          if (data.type === 'seller') {\r\n            this.isLogin = true;\r\n            load.dismiss();\r\n            this.navController.navigateRoot('list-buyer-admin', false);\r\n          }\r\n          // office\r\n          if (data.type === 'office') {\r\n            this.isLogin = true;\r\n            load.dismiss();\r\n            this.navController.navigateRoot('list-buyer-admin', false);\r\n          }\r\n          // adviser\r\n          if (data.type === 'adviser') {\r\n            this.isLogin = true;\r\n            load.dismiss();\r\n            this.navController.navigateRoot('list-buyer-admin', false);\r\n          }\r\n          // maker\r\n          if (data.type === 'maker') {\r\n            const maker: IMaker[] = data.data;\r\n            this.isLogin = true;\r\n            load.dismiss();\r\n            const query: NavigationExtras = {\r\n              queryParams: { id: maker[0].build },\r\n            };\r\n            this.router.navigate(['detail-build-admin'], query);\r\n          }\r\n          // buyer\r\n          if (data.type === 'buyer') {\r\n            this.isLogin = true;\r\n            load.dismiss();\r\n            this.navController.navigateRoot('list-prop-buyer', false);\r\n          }\r\n          //  admin\r\n          if (data.type === 'administrator') {\r\n            this.isLogin = true;\r\n            load.dismiss();\r\n            this.navController.navigateRoot('main-admin', false);\r\n          }\r\n        } else {\r\n          load.dismiss();\r\n          this.isFind = false;\r\n        }\r\n      });\r\n  }\r\n  async presentLoadingWithOptions() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Iniciando...',\r\n      translucent: true,\r\n    });\r\n    return await loading;\r\n  }\r\n  newUser() {\r\n    this.navController.navigateForward('login-select-user', false);\r\n  }\r\n  pressEnter(event) {\r\n    if (event.keyCode === 13) {\r\n      this.login();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Selecciona Usuario\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <div class=\\\"user-select-contenet\\\">\\r\\n    <!-- <ion-list>\\r\\n      <ion-item [routerLink]=\\\"['/new-buyer']\\\">\\r\\n        <ion-radio color=\\\"secondary\\\" mode=\\\"md\\\" slot=\\\"start\\\"></ion-radio>\\r\\n        <ion-label text-wrap>\\r\\n          <h2>Cliente</h2>\\r\\n          <p>Usuario para aquirir o rentar propiedades</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-radio color=\\\"secondary\\\" mode=\\\"md\\\" slot=\\\"start\\\"></ion-radio>\\r\\n        <ion-label text-wrap>\\r\\n          <h2>Vendedor</h2>\\r\\n          <p>Usuario para vender o dar a rentar propiedades</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-radio color=\\\"secondary\\\" mode=\\\"md\\\" slot=\\\"start\\\"></ion-radio>\\r\\n        <ion-label text-wrap>\\r\\n          <h2>Asesor</h2>\\r\\n          <p>Usuario para vender o dar a rentar propiedades</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-list> -->\\r\\n    <ion-card class=\\\"user-select-card\\\" [routerLink]=\\\"['/new-buyer']\\\">\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Cliente</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ion-label>Usuario para aquirir o rentar propiedades</ion-label>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    <ion-card class=\\\"user-select-card\\\">\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Constructor</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ion-label>Usuario para aquirir o rentar propiedades</ion-label>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    <ion-card class=\\\"user-select-card\\\">\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Vendedor</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ion-label>Usuario para aquirir o rentar propiedades</ion-label>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\"","module.exports = \".user-select-contenet {\\n  margin: 3% 30% 2% 30%; }\\n\\n.user-select-card {\\n  border-left: 4px solid var(--ion-color-secondary); }\\n\\n.user-select-card:hover {\\n  background-color: var(--ion-color-light); }\\n\\n@media (max-width: 900px) {\\n  .user-select-contenet {\\n    margin: 1% 1% 1% 1%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-select',\r\n  templateUrl: './user-select.component.html',\r\n  styleUrls: ['./user-select.component.scss'],\r\n})\r\nexport class UserSelectComponent implements OnInit {\r\n  user: string;\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propietario\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n    <ng-template #thenTemplate>\\r\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n        <form #newUserForm=\\\"ngForm\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-title>Complete los campos</mat-card-title>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <!-- name -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Nombre</mat-label>\\r\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"maker.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n                <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- lastname -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Apellido</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"maker.lastName\\\" #lastName=\\\"ngModel\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" required>\\r\\n                <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\">Anotar Apellido</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- email -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Correo</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"maker.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\r\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- email -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Teléfono</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"maker.phone\\\" #phone=\\\"ngModel\\\" id=\\\"phone\\\" name=\\\"phone\\\" required>\\r\\n                <mat-error *ngIf=\\\"phone.dirty || phone.touched\\\">Anotar Teléfono</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- city -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Ciudad</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"maker.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\r\\n                  <mat-option value=\\\"puebla\\\">\\r\\n                    Puebla\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"mexico\\\">\\r\\n                    México\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- pass -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Contraseña</mat-label>\\r\\n                <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"maker.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\"\\r\\n                  name=\\\"password\\\" required>\\r\\n                <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\r\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <!-- prop -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Obras del Constructor</mat-label>\\r\\n                <mat-select (selectionChange)=\\\"flag = true\\\" [(ngModel)]=\\\"maker.build._id\\\" #property=\\\"ngModel\\\" id=\\\"property\\\"\\r\\n                  name=\\\"property\\\">\\r\\n                  <mat-option *ngFor=\\\"let prop of buildings$ | async\\\" [value]=\\\"prop._id\\\">\\r\\n                    {{prop.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"property.dirty || property.touched\\\">Anotar Obra</mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <mat-card-actions align=\\\"end\\\">\\r\\n              <div style=\\\"margin-right: 2%\\\">\\r\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                  <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\r\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\r\\n                    (click)=\\\"editCustomer()\\\">Editar</button>\\r\\n                </span>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </mat-card-actions>\\r\\n\\r\\n          </mat-card>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template #elseTemplate>\\r\\n      <app-general-skeleton></app-general-skeleton>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IMaker } from '../../../models/maker.model';\r\nimport { IBuild } from '../../../models/build.model';\r\nimport { Observable } from 'rxjs';\r\nimport { BuildService } from '../../../services/build.service';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { MakerService } from '../../../services/maker.service';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-maker',\r\n  templateUrl: './new-edit-maker.component.html',\r\n  styleUrls: ['./new-edit-maker.component.scss'],\r\n})\r\nexport class NewEditMakerComponent implements OnInit {\r\n  isLoad = false;\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  maker: IMaker = {};\r\n  buildings$: Observable<IBuild[]>;\r\n  oldBuild;\r\n  flag = false;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private navCtr: NavController,\r\n    private buildService: BuildService,\r\n    private makerService: MakerService,\r\n    private userSessionService: UserSessionService,\r\n    private oneSignalService: OnesignalService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoad = false;\r\n    this.getBuild();\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.makerService.getMakerById(params['id']).subscribe(m => {\r\n          this.maker = m;\r\n          if (m.build) {\r\n            this.oldBuild = m.build._id;\r\n          } else {\r\n            const obj = { _id: '' };\r\n            this.maker.build = obj;\r\n          }\r\n          console.log(m);\r\n          this.isLoad = true;\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        const obj = { _id: '' };\r\n        this.maker.build = obj;\r\n        this.isNew = true;\r\n        this.isLoad = true;\r\n      }\r\n    });\r\n  }\r\n  getBuild() {\r\n    this.buildings$ = this.buildService.getBuildAll();\r\n  }\r\n  newCustomer() {\r\n    this.makerService.newMaker(this.maker).subscribe(s => {\r\n      // add\r\n      this.buildService.getBuildById(this.maker.build._id).subscribe(build => {\r\n        const findIndex = build.maker.findIndex(m => m._id === this.maker._id);\r\n        if (findIndex === -1) {\r\n          build.maker.push(s);\r\n          this.buildService.putBuild(build).subscribe(() => {\r\n            this.notification(\r\n              'Nueva Obra',\r\n              `Se le ha asignado: ${build.name}`,\r\n              'verde',\r\n              'build',\r\n              undefined,\r\n              [this.maker._id],\r\n            );\r\n            console.log('add');\r\n            const toast: NavigationExtras = {\r\n              queryParams: { res: 'Nuevo Cosntructor Agregado' },\r\n            };\r\n            // this.router.navigate(['list-seller-admin'], toast);\r\n            this.router\r\n              .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n              .then(() => this.router.navigate(['list-maker-admin'], toast));\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n  editCustomer() {\r\n    console.log(this.oldBuild);\r\n    console.log(this.maker.build._id);\r\n    if (this.oldBuild && this.oldBuild !== this.maker.build._id) {\r\n      console.log('a');\r\n      // add\r\n      this.buildService.getBuildById(this.maker.build._id).subscribe(build => {\r\n        const findIndex = build.maker.findIndex(m => m._id === this.maker._id);\r\n        if (findIndex === -1) {\r\n          build.maker.push(this.maker);\r\n          this.buildService.putBuild(build).subscribe(() => {\r\n            this.notification(\r\n              'Nueva Obra',\r\n              `Se le ha asignado: ${build.name}`,\r\n              'verde',\r\n              'build',\r\n              undefined,\r\n              [this.maker._id],\r\n            );\r\n            console.log('add');\r\n          });\r\n        }\r\n      });\r\n      // remove\r\n      this.buildService.getBuildById(this.oldBuild).subscribe(build => {\r\n        const findIndex = build.maker.findIndex(m => m._id === this.maker._id);\r\n        build.maker.splice(findIndex, 1);\r\n        this.buildService.putBuild(build).subscribe(() => {\r\n          console.log('remove');\r\n          this.putMaker();\r\n        });\r\n      });\r\n    } else {\r\n      //\r\n      this.notification(\r\n        'Nueva Obra',\r\n        `Se le ha asignado nueva obra`,\r\n        'verde',\r\n        'build',\r\n        undefined,\r\n        [this.maker._id],\r\n      );\r\n      this.putMaker();\r\n    }\r\n  }\r\n  private putMaker() {\r\n    this.makerService.putMaker(this.maker).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Constructor Editado' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-maker-admin'], toast));\r\n    });\r\n  }\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSessionService.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n\r\n/* this.buildService.putBuild(this.oldBuild).subscribe(() => {\r\n          console.log('remove');\r\n          resolve(true);\r\n        }); */\r\n\r\n/* this.buildService.getBuildById(builId).subscribe(build => {\r\n          const findIndex = build.maker.findIndex(m => m._id === makerId);\r\n          if (findIndex === -1) {\r\n            build.maker.push(makerId);\r\n            this.buildService.putBuild(build).subscribe(() => {\r\n              resolve(true);\r\n            });\r\n          }\r\n        }); */\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Oferta\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n    <ion-grid fixed>\\r\\n      <h1>Oferta</h1>\\r\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n        <form #newUserForm=\\\"ngForm\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-title>Complete los campos</mat-card-title>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <!-- buyer -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Consumidor</mat-label>\\r\\n                <mat-select [disabled]=\\\"!isNew\\\" (selectionChange)=\\\"getProp(bu.value)\\\" [(ngModel)]=\\\"ofert.buyer\\\" #bu=\\\"ngModel\\\"\\r\\n                  id=\\\"bu\\\" name=\\\"bu\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let buyer of buyers\\\" [value]=\\\"buyer._id\\\">\\r\\n                    {{buyer.name}} {{buyer.fatherLastName}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"bu.dirty || bu.touched\\\">Selecciona</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- prop -->\\r\\n              <mat-form-field *ngIf=\\\"bu.value && !isEmpty\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Propiedad de Interés</mat-label>\\r\\n                <mat-select [disabled]=\\\"!isNew\\\" [(ngModel)]=\\\"ofert.property\\\" #p=\\\"ngModel\\\" id=\\\"p\\\" name=\\\"p\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let prop of properties\\\" [value]=\\\"prop._id\\\">\\r\\n                    {{prop.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"p.dirty || p.touched\\\">Selecciona</mat-error>\\r\\n              </mat-form-field>\\r\\n              <ion-button *ngIf=\\\"isEmpty\\\" color=\\\"danger\\\" fill=\\\"outline\\\" shape=\\\"round\\\">Usuarion sin propiedades\\r\\n                interesadas</ion-button>\\r\\n              <!-- files -->\\r\\n              <ion-label text-wrap>Anota los documentos para el crédito separado por comas\\r\\n                (documento1,documento2,etc...)</ion-label>\\r\\n              <mdc-textarea [(ngModel)]=\\\"files\\\" #f=\\\"ngModel\\\" id=\\\"f\\\" name=\\\"f\\\" label=\\\"Ducumentos\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\r\\n              <!-- notas -->\\r\\n              <mdc-textarea [(ngModel)]=\\\"ofert.notes\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Notas\\\" rows=\\\"8\\\" cols=\\\"40\\\"\\r\\n                required></mdc-textarea>\\r\\n              <!-- precio-->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Precio</mat-label>\\r\\n                <input matInput type=\\\"number\\\" [(ngModel)]=\\\"ofert.ofertPrice\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"\\r\\n                  required>\\r\\n                <mat-error *ngIf=\\\"space.dirty || space.touched\\\">Anotar Costo</mat-error>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <mat-card-actions align=\\\"end\\\">\\r\\n              <div style=\\\"margin-right: 2%\\\">\\r\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                  <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newOfert()\\\"\\r\\n                    [disabled]=\\\"!newUserForm.form.valid || isEmpty\\\">Crear</button>\\r\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\r\\n                    (click)=\\\"editOfert()\\\">Editar</button>\\r\\n                </span>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n            </mat-card-actions>\\r\\n\\r\\n          </mat-card>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IOfert } from '../../../models/ofert.model';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { CreditService } from '../../../services/credit.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\r\nimport { ICredit } from '../../../models/credit.model';\r\nimport { OfertService } from '../../../services/ofert.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-ofert',\r\n  templateUrl: './new-edit-ofert.component.html',\r\n  styleUrls: ['./new-edit-ofert.component.scss'],\r\n})\r\nexport class NewEditOfertComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  ofert: IOfert = {};\r\n  files: string;\r\n  isLoad: boolean;\r\n  buyer = '';\r\n  property = '';\r\n  properties: IProperty[];\r\n  buyers;\r\n  isEmpty: boolean;\r\n  OfertsBuyer: string[];\r\n  ofertForNot;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private ofertService: OfertService,\r\n    private navCtr: NavController,\r\n    private propertyService: PropertyService,\r\n    private buyerService: BuyerService,\r\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\r\n    private oneSignalService: OnesignalService,\r\n    private userSession: UserSessionService,\r\n  ) {\r\n    this.isLoad = false;\r\n    buyerService.getBuyerAll().subscribe(buyers => {\r\n      this.buyers = buyers;\r\n    });\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.ofertService.getOfertById(params['id']).subscribe(ofert => {\r\n          this.ofert = <any>ofert;\r\n          this.buyer = this.ofert.buyer._id;\r\n          this.property = this.ofert.property._id;\r\n          this.files = '';\r\n          this.ofert.files.forEach((f, i) => {\r\n            if (this.ofert.files.length === i + 1) {\r\n              this.files += f;\r\n            } else {\r\n              this.files += f + ',';\r\n            }\r\n            this.ofert.buyer = <any>this.buyer;\r\n            this.ofert.property = <any>this.property;\r\n            this.getProp(this.buyer);\r\n          });\r\n          this.isLoad = true;\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n        this.isLoad = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  async getPropName(id) {\r\n    return await this.propertyService.getPropertyById(id).toPromise();\r\n  }\r\n  async editOfert() {\r\n    this.update('amarillo', this.ofert.buyer, this.ofert.property);\r\n    this.ofert.status = 'amarillo';\r\n    this.ofert.files = this.files.split(',');\r\n    const prop = await this.getPropName(this.ofert.property);\r\n    this.notification(\r\n      'Actualización de Oferta',\r\n      `Se ha actualizado la oferta para ${prop.name}`,\r\n      'amarillo',\r\n      'ofert',\r\n      <any>this.ofert.buyer,\r\n    );\r\n    this.ofertService.putOfert(this.ofert).subscribe(s => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Oferta Editada' },\r\n      };\r\n      // this.router.navigate(['list-credit-admin'], toast);\r\n      // this.navCtr.navigateRoot('list-ofert-admin', true, toast);\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-ofert-admin'], toast));\r\n    });\r\n  }\r\n  async newOfert() {\r\n    this.ofert.files = this.files.split(',');\r\n    this.ofert.status = 'amarillo';\r\n    const prop = await this.getPropName(this.ofert.property);\r\n    this.notification(\r\n      'Nueva Oferta',\r\n      `Se ha creado oferta para ${prop.name}`,\r\n      'amarillo',\r\n      'ofert',\r\n      <any>this.ofert.buyer,\r\n    );\r\n    this.ofertService.newOfert(this.ofert).subscribe(o => {\r\n      this.update('amarillo', this.ofert.buyer, this.ofert.property);\r\n      this.OfertsBuyer.push(o._id);\r\n      const buyer: any = {\r\n        _id: this.ofert.buyer,\r\n        ofert: this.OfertsBuyer,\r\n      };\r\n      this.buyerService.putBuyer(buyer).subscribe(() => {\r\n        // this.navCtr.navigateRoot('list-ofert-admin', true);\r\n        const toast: NavigationExtras = {\r\n          queryParams: { res: 'Oferta Creada' },\r\n        };\r\n        this.router\r\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n          .then(() => this.router.navigate(['list-ofert-admin'], toast));\r\n      });\r\n    });\r\n  }\r\n  private update(status: string, buyer, prop) {\r\n    this.statusBuyerPropertyService\r\n      .searchSpecial(buyer, prop)\r\n      .subscribe(sbp => {\r\n        console.log(sbp);\r\n        this.statusBuyerPropertyService\r\n          .upgradeStatus(sbp._id, status)\r\n          .subscribe(c => console.log(c));\r\n      });\r\n  }\r\n  getProp(item) {\r\n    this.buyerService.getBuyerById(item).subscribe(buyer => {\r\n      this.OfertsBuyer = buyer.ofert.map(o => o._id);\r\n      if (buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0) {\r\n        this.properties = buyer.statusBuyerProperty.map(sbp => sbp.property);\r\n        this.isEmpty = false;\r\n      } else {\r\n        this.isEmpty = true;\r\n      }\r\n    });\r\n  }\r\n  // noti\r\n  public notification(title, message, status, type, receiversId: string) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      receiversId: [receiversId],\r\n      senderId: this.userSession.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, undefined, [receiversId])\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Oficinista\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\r\\n  <ng-template #thenTemplate>\\r\\n    <ion-grid fixed>\\r\\n      <h1>Oficinista</h1>\\r\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n        <form #newUserForm=\\\"ngForm\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-title>Complete los campos</mat-card-title>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <!-- name -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Nombre</mat-label>\\r\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"office.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n                <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- Apellido -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Apellido</mat-label>\\r\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"office.lastname\\\" #lastname=\\\"ngModel\\\" id=\\\"lastname\\\" name=\\\"lastname\\\"\\r\\n                  required>\\r\\n                <mat-error *ngIf=\\\"lastname.dirty || lastname.touched\\\">Anotar Apellido</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- Teléfono -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Teléfono</mat-label>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"office.phone\\\" #phone=\\\"ngModel\\\" id=\\\"phone\\\"\\r\\n                  name=\\\"phone\\\" required>\\r\\n                <mat-error *ngIf=\\\"phone.dirty || phone.touched\\\">Anotar Telefono</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- Correo-->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Correo</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"office.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\r\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\r\\n              </mat-form-field>\\r\\n              <!-- pass -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Contraseña</mat-label>\\r\\n                <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"office.password\\\" #password=\\\"ngModel\\\"\\r\\n                  id=\\\"password\\\" name=\\\"password\\\" required>\\r\\n                <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\r\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <mat-card-actions align=\\\"end\\\">\\r\\n              <div style=\\\"margin-right: 2%\\\">\\r\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                  <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newOfert()\\\"\\r\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\r\\n                    (click)=\\\"editOfert()\\\">Editar</button>\\r\\n                </span>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n            </mat-card-actions>\\r\\n\\r\\n          </mat-card>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ng-template>\\r\\n  <ng-template #elseTemplate>\\r\\n    <app-general-skeleton></app-general-skeleton>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IOffice } from '../../../models/office.model';\r\nimport { OfficeService } from '../../../services/office.service';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-office',\r\n  templateUrl: './new-edit-office.component.html',\r\n  styleUrls: ['./new-edit-office.component.scss'],\r\n})\r\nexport class NewEditOfficeComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  office: IOffice = {};\r\n  files: string;\r\n  isLoad: boolean;\r\n  user: IUserSession;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private officeService: OfficeService,\r\n    private userSession: UserSessionService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n    this.isLoad = false;\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.officeService.getOfficeById(params['id']).subscribe(office => {\r\n          this.office = office;\r\n          this.isLoad = true;\r\n        });\r\n        this.isNew = false;\r\n      } else if (this.user && this.user.type === 'office') {\r\n        this.officeService.getOfficeById(this.user.id).subscribe(office => {\r\n          this.office = office;\r\n          this.isLoad = true;\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n        this.isLoad = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  editOfert() {\r\n    this.officeService.putOffice(this.office).subscribe(office => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Oficinista Editado' },\r\n      };\r\n      // this.router.navigate(['list-credit-admin'], toast);\r\n      // this.navCtr.navigateRoot('list-ofert-admin', true, toast);\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-office-admin'], toast));\r\n    });\r\n  }\r\n  newOfert() {\r\n    this.officeService.newOffice(this.office).subscribe(o => {\r\n      // this.navCtr.navigateRoot('list-ofert-admin', true);\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Oficinista Creado' },\r\n      };\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-office-admin'], toast));\r\n    });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propiedad\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>Complete los campos</mat-card-title>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n            <!-- name -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Nombre</mat-label>\\r\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"property.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- isRent  -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Venta o Renta</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.isRent\\\" #isRent=\\\"ngModel\\\" id=\\\"isRent\\\" name=\\\"isRent\\\" required>\\r\\n                <mat-option [value]=true>\\r\\n                  Renta\\r\\n                </mat-option>\\r\\n                <mat-option [value]=false>\\r\\n                  Venta\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"isRent.dirty || isRent.touched\\\">Selecciona una</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- typeOfProperty -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Tipo de Vivienda</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.typeOfProperty\\\" #typeOfProperty=\\\"ngModel\\\" id=\\\"typeOfProperty\\\" name=\\\"typeOfProperty\\\"\\r\\n                required>\\r\\n                <mat-option value=\\\"casa\\\">Casa\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"departamento\\\">Departamento\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"nave industrial\\\">Nave Industrial\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"terreno\\\">Terreno\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"typeOfProperty.dirty || typeOfProperty.touched\\\">Anotar Correo</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- space-->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Espacio</mat-label>\\r\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"property.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"\\r\\n                required>\\r\\n              <mat-error *ngIf=\\\"space.dirty || space.touched\\\">Anotar Espacio</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- dateToBuy -->\\r\\n            <!-- Fecha a comprar -->\\r\\n            <div>\\r\\n              <ion-label text-wrap>Anota la posible fecha de compra o renta</ion-label>\\r\\n              <!-- day -->\\r\\n              <mdc-text-field label=\\\"Dia\\\" type=\\\"number\\\" [(ngModel)]=\\\"daySelect\\\" #d=\\\"ngModel\\\" id=\\\"d\\\" name=\\\"d\\\" required\\r\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"d.dirty || d.touched\\\">Anota Dia</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- mm -->\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\r\\n              <ion-label>Mes</ion-label>\\r\\n              <ion-select [(ngModel)]=\\\"monthSelect\\\" #me=\\\"ngModel\\\" id=\\\"me\\\" name=\\\"me\\\" required placeholder=\\\"Selecciona\\\">\\r\\n                <ion-select-option *ngFor=\\\"let m of months; let i = index\\\" [value]=\\\"i + 1\\\">{{m}}</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <!-- aa -->\\r\\n            <div>\\r\\n              <mdc-text-field label=\\\"Año\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearSelect\\\" #y=\\\"ngModel\\\" id=\\\"y\\\" name=\\\"y\\\" required\\r\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\r\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\r\\n                <span *ngIf=\\\"y.dirty || y.touched\\\">Anota Año</span>\\r\\n              </mdc-text-field-helper-text>\\r\\n            </div>\\r\\n\\r\\n            <!-- zone -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Zona</mat-label>\\r\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"property.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\" required>\\r\\n              <mat-error *ngIf=\\\"zone.dirty || zone.touched\\\">Anotar Zona</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- minPrice -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Precio Minimo</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\"\\r\\n                name=\\\"minPrice\\\" required>\\r\\n              <mat-error *ngIf=\\\"minPrice.dirty || minPrice.touched\\\">Anotar Numero</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- max -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Precio Maximo</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\"\\r\\n                name=\\\"maxPrice\\\" required>\\r\\n              <mat-error *ngIf=\\\"maxPrice.dirty || maxPrice.touched\\\">Anotar Numero</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- numRooms -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Numero de Cuartos</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numRooms\\\" #numRooms=\\\"ngModel\\\" id=\\\"numRooms\\\"\\r\\n                name=\\\"numRooms\\\" required>\\r\\n              <mat-error *ngIf=\\\"numRooms.dirty || numRooms.touched\\\">Anotar Numero</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- numBathrooms -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Numero de Baños</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\"\\r\\n                id=\\\"numBathrooms\\\" name=\\\"numBathrooms\\\" required>\\r\\n              <mat-error *ngIf=\\\"numBathrooms.dirty || numBathrooms.touched\\\">Anotar Numero</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- numCars -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Lugares Estacionamiento</mat-label>\\r\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numCars\\\" #numCars=\\\"ngModel\\\" id=\\\"numCars\\\"\\r\\n                name=\\\"numCars\\\" required>\\r\\n              <mat-error *ngIf=\\\"numCars.dirty || numCars.touched\\\">Anotar Numero</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- isOld -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Estado</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.isOld\\\" #isOld=\\\"ngModel\\\" id=\\\"isOld\\\" name=\\\"isOld\\\" required>\\r\\n                <mat-option [value]=false>Nuevo\\r\\n                </mat-option>\\r\\n                <mat-option [value]=true>Usado\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"isOld.dirty || isOld.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- isClose -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Tipo Fraccionamiento</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.isClose\\\" #isClose=\\\"ngModel\\\" id=\\\"isClose\\\" name=\\\"isClose\\\" required>\\r\\n                <mat-option [value]=false>Abierto\\r\\n                </mat-option>\\r\\n                <mat-option [value]=true>Cerrado\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"isClose.dirty || isClose.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- hasGarden -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Con Jardin</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.hasGarden\\\" #hasGarden=\\\"ngModel\\\" id=\\\"hasGarden\\\" name=\\\"hasGarden\\\"\\r\\n                required>\\r\\n                <mat-option [value]=true>Sí\\r\\n                </mat-option>\\r\\n                <mat-option [value]=false>No\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"hasGarden.dirty || hasGarden.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- isLowLevel -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Planta Baja</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.isLowLevel\\\" #isLowLevel=\\\"ngModel\\\" id=\\\"isLowLevel\\\" name=\\\"isLowLevel\\\"\\r\\n                required>\\r\\n                <mat-option [value]=true>Sí\\r\\n                </mat-option>\\r\\n                <mat-option [value]=false>No\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"isLowLevel.dirty || isLowLevel.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- hasElevator -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Con Elevador</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.hasElevator\\\" #hasElevator=\\\"ngModel\\\" id=\\\"hasElevator\\\" name=\\\"hasElevator\\\"\\r\\n                required>\\r\\n                <mat-option [value]=true>Sí\\r\\n                </mat-option>\\r\\n                <mat-option [value]=false>No\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"hasElevator.dirty || hasElevator.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- allServices -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Todos los Servicios </mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.allServices\\\" #allServices=\\\"ngModel\\\" id=\\\"allServices\\\" name=\\\"allServices\\\"\\r\\n                required>\\r\\n                <mat-option [value]=true>Sí\\r\\n                </mat-option>\\r\\n                <mat-option [value]=false>No\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"allServices.dirty || allServices.touched\\\">Selecciona uno</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- wayToBuy FOVISSTE, IMSS, contado, PEMEX, Infonavit, aliados, otros -->\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Forma de Venta/Renta </mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"property.wayToBuy\\\" #wayToBuy=\\\"ngModel\\\" id=\\\"wayToBuy\\\" name=\\\"wayToBuy\\\" required\\r\\n                placeholder=\\\"Selecciona\\\">\\r\\n                <mat-option value=\\\"FOVISSTE\\\">FOVISSTE</mat-option>\\r\\n                <mat-option value=\\\"IMSS\\\">IMSS</mat-option>\\r\\n                <mat-option value=\\\"contado\\\">contado</mat-option>\\r\\n                <mat-option value=\\\"PEMEX\\\">Pemex</mat-option>\\r\\n                <mat-option value=\\\"infonavit\\\">Infonavit</mat-option>\\r\\n                <mat-option value=\\\"infonavit\\\">Aliados</mat-option>\\r\\n                <mat-option value=\\\"otros\\\">Otros</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <!-- tag -->\\r\\n            <div>\\r\\n              <ion-label text-wrap>Anota palabras clave separadas por comas para una mejor búsqueda (ej: casa,\\r\\n                departamento,\\r\\n                mascotas)</ion-label>\\r\\n              <mdc-textarea [(ngModel)]=\\\"words\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Palabras\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\r\\n            </div>\\r\\n\\r\\n            <!-- files -->\\r\\n            <div>\\r\\n              <ion-label text-wrap>Anota nombre de los archivos separado por comas (ej: documento1,\\r\\n                documento2, documento3, etc...)</ion-label>\\r\\n              <mdc-textarea [(ngModel)]=\\\"files\\\" #f=\\\"ngModel\\\" id=\\\"f\\\" name=\\\"f\\\" label=\\\"Documentos:\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\r\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editCustomer()\\\">Editar</button>\\r\\n              </span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  /* display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-prop',\r\n  templateUrl: './new-edit-prop.component.html',\r\n  styleUrls: ['./new-edit-prop.component.scss'],\r\n})\r\nexport class NewEditPropComponent implements OnInit {\r\n  months = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  property: IProperty = {};\r\n  words: string;\r\n  files: string;\r\n  daySelect: any;\r\n  monthSelect: any;\r\n  yearSelect: any;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private propertyService: PropertyService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.propertyService.getPropertyById(params['id']).subscribe(prop => {\r\n          console.log(prop);\r\n          this.property = prop;\r\n          this.words = '';\r\n          this.property.tag.forEach((word, i) => {\r\n            if (this.property.tag.length === i + 1) {\r\n              this.words += word;\r\n            } else {\r\n              this.words += word + ',';\r\n            }\r\n          });\r\n          this.files = '';\r\n          this.property.files.forEach((f, i) => {\r\n            if (this.property.files.length === i + 1) {\r\n              this.files += f;\r\n            } else {\r\n              this.files += f + ',';\r\n            }\r\n          });\r\n          const date = this.property.dateToBuy.split('/');\r\n          this.daySelect = +date[0];\r\n          this.monthSelect = +date[1];\r\n          this.yearSelect = +date[2];\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n      }\r\n    });\r\n  }\r\n  newCustomer() {\r\n    console.log(this.property);\r\n    console.log(this.words.split(','));\r\n    console.log(this.files.split(','));\r\n    if (this.words) {\r\n      this.property.tag = this.words.split(',');\r\n    }\r\n    if (this.files) {\r\n      this.property.files = this.files.split(',');\r\n    }\r\n    this.property.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\r\n      this.yearSelect\r\n    }`;\r\n    console.log(this.property);\r\n    this.propertyService.newProperty(this.property).subscribe(prop => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Nuevo Propiedad Agregada' },\r\n      };\r\n      // this.router.navigate(['list-prop-admin'], toast);\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-prop-admin'], toast));\r\n    });\r\n  }\r\n  editCustomer() {\r\n    if (this.words) {\r\n      this.property.tag = this.words.split(',');\r\n    }\r\n    if (this.files) {\r\n      this.property.files = this.files.split(',');\r\n    }\r\n    this.property.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\r\n      this.yearSelect\r\n    }`;\r\n    this.propertyService.putProperty(this.property).subscribe(prop => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Propiedad Editada' },\r\n      };\r\n      // this.router.navigate(['list-prop-admin'], toast);\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-prop-admin'], toast));\r\n    });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Evento\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <ion-button style=\\\"margin-bottom: 2%\\\" shape=\\\"round\\\" color=\\\"secondary\\\" [routerLink]=\\\"['/personal-schedule']\\\">Crear\\r\\n        Evento Personal</ion-button>\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>Complete los campos</mat-card-title>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n            <!-- buyer -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Cliente</mat-label>\\r\\n              <mat-select [disabled]=\\\"!isNew\\\" (selectionChange)=\\\"getAdvByBuyer()\\\" [(ngModel)]=\\\"schedule.buyer\\\" #b=\\\"ngModel\\\"\\r\\n                id=\\\"b\\\" name=\\\"b\\\" required>\\r\\n                <mat-option *ngFor=\\\"let buyer of buyers$ | async\\\" [value]=\\\"buyer._id\\\">\\r\\n                  {{buyer.name}} {{buyer.fatherLastName}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"b.dirty || b.touched\\\">Anotar Comprador</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- lista de asesores -->\\r\\n            <div *ngIf=\\\"b.value && (user.type !== 'adviser' && user.type !== 'seller') && (schedule && !schedule.seller )\\\">\\r\\n              <mat-radio-group style=\\\"margin-bottom: 2%;\\\" (change)=\\\"getAdvAll(ad.value)\\\" class=\\\"example-radio-group\\\"\\r\\n                [(ngModel)]=\\\"item\\\" #ad=\\\"ngModel\\\" id=\\\"ad\\\" name=\\\"ad\\\" required>\\r\\n                <span class=\\\"example-radio-group\\\" *ngIf=\\\"(buyerSelect$ | async)?.adviser && (buyerSelect$ | async)?.adviser.length > 0\\\">\\r\\n                  <mat-radio-button [checked]=\\\"schedule.adviser === adv._id\\\" class=\\\"example-radio-button\\\" *ngFor=\\\"let adv of (buyerSelect$ | async)?.adviser\\\"\\r\\n                    [value]=\\\"adv._id\\\">\\r\\n                    {{adv.name}} {{adv.lastName}}\\r\\n                    <small> Disponible de {{adv.hourStart}} a {{adv.hourEnd}}</small>\\r\\n                  </mat-radio-button>\\r\\n                </span>\\r\\n\\r\\n                <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"other\\\">\\r\\n                  Asignar nuevo Asesor\\r\\n                </mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <!-- new adv to buyer -->\\r\\n            <mat-label style=\\\"margin: 3%;\\\" *ngIf=\\\" item === 'other'\\\">Se agregará un nuevo asesor al cliente:</mat-label>\\r\\n            <mat-form-field *ngIf=\\\" item === 'other'\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Asesores</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"schedule.adviser\\\" #ad2=\\\"ngModel\\\" id=\\\"ad2\\\" name=\\\"ad2\\\">\\r\\n                <mat-option *ngFor=\\\"let adviser of advisers$ | async\\\" [value]=\\\"adviser._id\\\">\\r\\n                  {{adviser.name}} {{adviser.lastName}} <small> Disponible de {{adviser.hourStart}} a\\r\\n                    {{adviser.hourEnd}}</small>\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <button mat-button *ngIf=\\\"ad2.value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"schedule.adviser=undefined\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n              </button>\\r\\n              <mat-error *ngIf=\\\"ad2.dirty || ad2.touched\\\">Anotar Comprador</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- prop -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Propiedad a visitar</mat-label>\\r\\n              <mat-select [disabled]=\\\"user.type !== 'seller' && schedule.seller\\\" (selectionChange)=\\\"getAddress(property.value)\\\"\\r\\n                [(ngModel)]=\\\"schedule.property\\\" #property=\\\"ngModel\\\" id=\\\"property\\\" name=\\\"property\\\" required>\\r\\n                <mat-option *ngFor=\\\"let prop of properties$ | async\\\" [value]=\\\"prop._id\\\">\\r\\n                  {{prop.name}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"property.dirty || property.touched\\\">Anotar Propiedad</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- address -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Dirección</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"schedule.address\\\" #address=\\\"ngModel\\\" id=\\\"address\\\" name=\\\"address\\\" required></textarea>\\r\\n              <mat-error *ngIf=\\\"address.dirty || address.touched\\\">Anotar Dirección</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- Fecha -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" [value]=\\\"getDate(schedule.day, schedule.month, schedule.year)\\\"\\r\\n                matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Selecciona Fecha\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <!-- hora -->\\r\\n            <mat-label style=\\\"margin-bottom: 2%;\\\">Anote Hora </mat-label>\\r\\n            <div>\\r\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\r\\n                <input max=24 min=0 type=\\\"number\\\" style=\\\"text-align: right;\\\" matInput [(ngModel)]=\\\"schedule.hour\\\" #hour=\\\"ngModel\\\"\\r\\n                  id=\\\"hour\\\" name=\\\"hour\\\" required>\\r\\n\\r\\n              </mat-form-field>\\r\\n              :\\r\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\r\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"schedule.minute\\\" #minute=\\\"ngModel\\\" id=\\\"minute\\\" name=\\\"minute\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n              <!-- pm/am -->\\r\\n              <mat-form-field style=\\\"width: 71px;\\r\\n              margin-left: 1%;\\\" appearance=\\\"outline\\\">\\r\\n                <mat-select (selectionChange)=\\\"hourFormat(ampm.value)\\\" #ampm>\\r\\n                  <mat-option value=\\\"pm\\\">\\r\\n                    PM\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"am\\\">\\r\\n                    AM\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <!-- title -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Titulo del evento</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"schedule.title\\\" #title=\\\"ngModel\\\" id=\\\"title\\\" name=\\\"title\\\" required>\\r\\n              <mat-error *ngIf=\\\"title.dirty || title.touched\\\">Anotar Titulo</mat-error>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <!-- note -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Notas</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"schedule.note\\\" #note=\\\"ngModel\\\" id=\\\"note\\\" name=\\\"note\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <!-- <div class=\\\"alert-schedule\\\">\\r\\n              El Asesor seleccionado tiene una disponibilidad de 8 a 6 hrs\\r\\n            </div> -->\\r\\n\\r\\n          </div>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n\\r\\n              <!-- no seller -->\\r\\n\\r\\n              <button *ngIf=\\\"isNew && user.type !== 'seller'\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"dialogs(true,'new','admin')\\\"\\r\\n                [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n\\r\\n              <button *ngIf=\\\"!isNew && (user.type !== 'seller' && !schedule.seller)\\\" id=\\\"submitUser\\\" mat-raised-button\\r\\n                color=\\\"primary\\\" (click)=\\\"dialogs(true,'edit','admin')\\\">Editar</button>\\r\\n              <!-- seller -->\\r\\n              <button *ngIf=\\\"isNew && (user.type === 'seller')\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\"\\r\\n                (click)=\\\"dialogs(false,'new','seller')\\\" [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n              <button *ngIf=\\\"!isNew && (user.type === 'seller' || schedule.seller )\\\" mat-raised-button color=\\\"accent\\\"\\r\\n                (click)=\\\"dialogs(false,'edit','seller')\\\">Editar</button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.alert-schedule {\\n  background-color: #ffcdcd;\\n  border-left: 5px solid red;\\n  color: black;\\n  width: 50% !important;\\n  padding: 5px; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  ISchedule,\r\n  IScheduleGet,\r\n  CheckSchedule,\r\n} from '../../../models/schedule.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport {\r\n  ActivatedRoute,\r\n  Router,\r\n  NavigationExtras,\r\n  NavigationEnd,\r\n} from '@angular/router';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { NavController, AlertController } from '@ionic/angular';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { IBuyer } from '../../../models/buyer.model';\r\nimport { BuyerService } from '../../../services/buyer.service';\r\nimport { IAdviser } from '../../../models/adviser.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { AdviserService } from '../../../services/adviser.service';\r\nimport { MatDatepickerInputEvent, MatDialog } from '@angular/material';\r\nimport { Moment } from 'moment';\r\nimport { ScheduleService } from '../../../services/schedule.service';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\nimport { DialogGeneralComponent } from '../../general/dialog-general/dialog-general.component';\r\nimport { INotification } from '../../../models/notification.model';\r\nimport { OnesignalService } from '../../../services/onesignal.service';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-schedule',\r\n  templateUrl: './new-edit-schedule.component.html',\r\n  styleUrls: ['./new-edit-schedule.component.scss'],\r\n})\r\nexport class NewEditScheduleComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  schedule: IScheduleGet = {};\r\n  properties$: Observable<IProperty[]>;\r\n  buyers$: Observable<IBuyer[]>;\r\n  buyerSelect$: Observable<IBuyer>;\r\n  advisers$: Observable<IAdviser[]>;\r\n  item;\r\n  adviserBefore: string;\r\n  user: IUserSession;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private scheduleService: ScheduleService,\r\n    private navCtr: NavController,\r\n    private propertyService: PropertyService,\r\n    private buyerService: BuyerService,\r\n    private adviserService: AdviserService,\r\n    public alertController: AlertController,\r\n    private userSession: UserSessionService,\r\n    private sellerService: SellerService,\r\n    public dialog: MatDialog,\r\n    private oneSignalService: OnesignalService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProperties();\r\n    this.getBuyers();\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.scheduleService.getScheduleById(params['id']).subscribe(s => {\r\n          console.log(s);\r\n          this.schedule = <IScheduleGet>s;\r\n          if (s.buyer) {\r\n            this.schedule.buyer = <any>s.buyer._id;\r\n            this.getAdvByBuyer();\r\n          }\r\n          if (s.adviser) {\r\n            this.schedule.adviser = <any>s.adviser._id;\r\n            console.log(this.schedule.adviser);\r\n            this.adviserBefore = this.schedule.adviser;\r\n          }\r\n          this.schedule.property = <any>s.property._id;\r\n          if (this.schedule.property) {\r\n            this.getAddress(this.schedule.property);\r\n          }\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        if (params['year']) {\r\n          this.schedule.day = +params.day;\r\n          this.schedule.month = +params.month;\r\n          this.schedule.year = +params.year;\r\n        }\r\n        if (this.user.type === 'adviser') {\r\n          this.schedule.adviser = this.user.id;\r\n        }\r\n        this.isNew = true;\r\n      }\r\n    });\r\n  }\r\n  getProperties() {\r\n    if (this.user.type === 'seller') {\r\n      this.properties$ = new Observable<IProperty[]>(ob => {\r\n        this.propertyService.getAll().subscribe(prop => {\r\n          this.sellerService.getSellerById(this.user.id).subscribe(seller => {\r\n            ob.next(\r\n              prop.filter(p => {\r\n                return !!seller.property.find(ps => ps._id === p._id);\r\n              }),\r\n            );\r\n          });\r\n        });\r\n        ob.next();\r\n      });\r\n    } else {\r\n      this.properties$ = this.propertyService.getAll();\r\n    }\r\n  }\r\n  getBuyers() {\r\n    if (this.user.type === 'adviser') {\r\n      this.buyers$ = new Observable<IBuyer[]>(ob => {\r\n        this.buyerService.getBuyerAll().subscribe(data => {\r\n          ob.next(\r\n            data.filter(b => {\r\n              return !!b.adviser.find(adv => adv._id === this.user.id);\r\n            }),\r\n          );\r\n        });\r\n      });\r\n    } else if (this.user.type === 'seller') {\r\n      this.buyers$ = new Observable<IBuyer[]>(ob => {\r\n        this.buyerService.getBuyerAll().subscribe(buyers => {\r\n          this.sellerService.getSellerById(this.user.id).subscribe(seller => {\r\n            ob.next(\r\n              buyers.filter(b => {\r\n                return !!b.statusBuyerProperty.find(sbp => {\r\n                  return !!seller.property.find(\r\n                    p => p._id === sbp.property._id,\r\n                  );\r\n                });\r\n              }),\r\n            );\r\n          });\r\n        });\r\n      });\r\n    } else {\r\n      this.buyers$ = this.buyerService.getBuyerAll();\r\n    }\r\n  }\r\n  getAdvByBuyer() {\r\n    this.buyerSelect$ = this.buyerService.getBuyerById(<string>(\r\n      this.schedule.buyer\r\n    ));\r\n    this.buyerSelect$.subscribe(c => console.log(c));\r\n  }\r\n  getAddress(propId) {\r\n    this.propertyService.getPropertyById(propId).subscribe(prop => {\r\n      this.schedule.address = prop.zone;\r\n    });\r\n  }\r\n  dateSelect(event) {\r\n    if (event) {\r\n      this.schedule.day = event.value._i.date;\r\n      this.schedule.month = event.value._i.month;\r\n      this.schedule.year = event.value._i.year;\r\n    }\r\n  }\r\n  hourFormat(pmAm) {\r\n    console.log(pmAm);\r\n    if (pmAm === 'pm' && this.schedule.hour && this.schedule.hour < 12) {\r\n      this.schedule.hour = this.schedule.hour + 12;\r\n    }\r\n  }\r\n  getAdvAll(item) {\r\n    this.item = item;\r\n    console.log(item);\r\n    if (item === 'other') {\r\n      this.advisers$ = this.adviserService.getAdviserAll();\r\n      this.advisers$.subscribe(a => console.log(a));\r\n    } else {\r\n      this.schedule.adviser = item;\r\n    }\r\n  }\r\n  async getPropById(id) {\r\n    return await this.propertyService.getPropertyById(id).toPromise();\r\n  }\r\n  async newScheduleSeller() {\r\n    const prop = await this.getPropById(this.schedule.property);\r\n    this.schedule.status = 'verde';\r\n    this.schedule.seller = <any>this.user.id;\r\n    console.log(this.schedule);\r\n    this.scheduleService.newSchedule(<ISchedule>this.schedule).subscribe(s => {\r\n      this.buyerSelect$.subscribe(buyer => {\r\n        buyer.schedule.push(<ISchedule>s._id);\r\n        this.buyerService.putBuyer(buyer).subscribe(() => {\r\n          this.sellerService.getSellerById(this.user.id).subscribe(seller => {\r\n            seller.schedule.push(<ISchedule>s._id);\r\n            this.sellerService.putSeller(seller).subscribe(() => {\r\n              this.notification(\r\n                'Nuevo Evento',\r\n                `Se ha agendado una propuesta de evento con el vendedor ${\r\n                  seller.name\r\n                } en propiedad: ${prop.name}`,\r\n                'amarillo',\r\n                'schedule',\r\n                undefined,\r\n                [this.schedule.buyer],\r\n              );\r\n              const toast: NavigationExtras = {\r\n                queryParams: { res: 'Evento de Vendedor Creado' },\r\n              };\r\n              // this.navCtr.navigateRoot('list-schedule-admin');\r\n              this.router\r\n                .navigateByUrl('/RefrshComponent', {\r\n                  skipLocationChange: true,\r\n                })\r\n                .then(() =>\r\n                  this.router.navigate(['list-schedule-admin'], toast),\r\n                );\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  // start get by id\r\n  async getSchedulebyId(id) {\r\n    return await this.scheduleService.getScheduleById(id).toPromise();\r\n  }\r\n  //\r\n  newSchedule() {\r\n    this.schedule.status = 'verde';\r\n    console.log(this.schedule);\r\n    this.scheduleService.newSchedule(<ISchedule>this.schedule).subscribe(s => {\r\n      this.buyerSelect$.subscribe(buyer => {\r\n        buyer.schedule.push(<ISchedule>s._id);\r\n        if (this.item === 'other') {\r\n          buyer.adviser.push(<any>this.schedule.adviser);\r\n        }\r\n        this.buyerService.putBuyer(buyer).subscribe(() => {\r\n          this.adviserService\r\n            .getAdviserById(<string>this.schedule.adviser)\r\n            .subscribe(adv => {\r\n              if (this.item === 'other') {\r\n                adv.buyer.push(<any>this.schedule.buyer);\r\n              }\r\n              adv.schedule.push(<ISchedule>s._id);\r\n              this.adviserService.putAdviser(adv).subscribe(async () => {\r\n                const schedule = await this.getSchedulebyId(s._id);\r\n                // noti\r\n                this.notification(\r\n                  'Nuevo Evento',\r\n                  `Se ha generado una propuesta de evento en ${\r\n                    schedule.property.name\r\n                  }`,\r\n                  'verde',\r\n                  'schedule',\r\n                  undefined,\r\n                  [schedule.adviser._id, schedule.buyer._id],\r\n                );\r\n                const toast: NavigationExtras = {\r\n                  queryParams: { res: ' Evento Creado' },\r\n                };\r\n                // this.navCtr.navigateRoot('list-schedule-admin');\r\n                this.router\r\n                  .navigateByUrl('/RefrshComponent', {\r\n                    skipLocationChange: true,\r\n                  })\r\n                  .then(() =>\r\n                    this.router.navigate(['list-schedule-admin'], toast),\r\n                  );\r\n              });\r\n            });\r\n        });\r\n      });\r\n    });\r\n    console.log('%c nuevo', 'color: #f5811e;');\r\n  }\r\n  editCustomerSeller() {\r\n    this.schedule.status = 'verde';\r\n    this.scheduleService\r\n      .putSchedule(<ISchedule>this.schedule)\r\n      .subscribe(async () => {\r\n        const prop = await this.getPropById(this.schedule.property);\r\n        const toast: NavigationExtras = {\r\n          queryParams: { res: ' Evento Editado' },\r\n        };\r\n        this.notification(\r\n          'Evento Editado',\r\n          `Actualización de propuesta de evento en propiedad ${prop.name}`,\r\n          'amarillo',\r\n          'schedule',\r\n          undefined,\r\n          [this.schedule.buyer],\r\n        );\r\n        // this.router.navigate(['list-schedule-admin'], toast);\r\n        // this.navCtr.navigateRoot('list-schedule-admin');\r\n        const p = await this.router.navigateByUrl('/RefrshComponent', {\r\n          skipLocationChange: true,\r\n        });\r\n        if (p) {\r\n          this.router.navigate(['list-schedule-admin'], toast);\r\n        }\r\n      });\r\n  }\r\n  editCustomer() {\r\n    this.schedule.status = 'verde';\r\n    console.log(this.adviserBefore);\r\n    console.log(this.schedule.adviser);\r\n    console.log(this.schedule);\r\n    if (this.adviserBefore === undefined) {\r\n      this.buyerSelect$.subscribe(buyer => {\r\n        if (this.item === 'other') {\r\n          buyer.adviser.push(<any>this.schedule.adviser);\r\n        }\r\n        this.buyerService.putBuyer(buyer).subscribe(() => {\r\n          this.adviserService\r\n            .getAdviserById(<string>this.schedule.adviser)\r\n            .subscribe(adv => {\r\n              if (this.item === 'other') {\r\n                adv.buyer.push(<any>this.schedule.buyer);\r\n              }\r\n              adv.schedule.push(<ISchedule>this.schedule._id);\r\n              this.adviserService.putAdviser(adv).subscribe(() => {});\r\n            });\r\n        });\r\n      });\r\n    } else {\r\n      if (this.adviserBefore !== this.schedule.adviser) {\r\n        this.adviserService\r\n          .getAdviserById(this.adviserBefore)\r\n          .subscribe(advBefore => {\r\n            const indexFinded = advBefore.schedule.findIndex(\r\n              s => s._id === this.schedule._id,\r\n            );\r\n            advBefore.schedule.splice(indexFinded, 1);\r\n            this.adviserService.putAdviser(advBefore).subscribe(() => {\r\n              this.adviserService\r\n                .getAdviserById(this.schedule.adviser)\r\n                .subscribe(adv => {\r\n                  adv.schedule.push(<ISchedule>this.schedule._id);\r\n                  this.adviserService.putAdviser(adv).subscribe(() => {});\r\n                });\r\n            });\r\n          });\r\n      }\r\n    }\r\n\r\n    this.scheduleService\r\n      .putSchedule(<ISchedule>this.schedule)\r\n      .subscribe(async () => {\r\n        const schedule = await this.getSchedulebyId(this.schedule._id);\r\n        // noti\r\n        this.notification(\r\n          'Nuevo Evento',\r\n          `Se ha respondido una propuesta de evento en ${\r\n            schedule.property.name\r\n          }`,\r\n          'verde',\r\n          'schedule',\r\n          undefined,\r\n          [schedule.buyer._id],\r\n        );\r\n        const toast: NavigationExtras = {\r\n          queryParams: { res: ' Evento Editado' },\r\n        };\r\n        // this.router.navigate(['list-schedule-admin'], toast);\r\n        // this.navCtr.navigateRoot('list-schedule-admin');\r\n        /**\r\n         * Es para recargar el componente previo\r\n         */\r\n        /*  this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-schedule-admin'], toast)); */\r\n        const p = await this.router.navigate(['RefrshComponent'], {\r\n          skipLocationChange: true,\r\n        });\r\n        if (p) {\r\n          this.router.navigate(['list-schedule-admin'], toast);\r\n        }\r\n      });\r\n  }\r\n  // START VER errores de horarios\r\n  // checa adv horario\r\n  async checkHoursAdviser(): Promise<boolean> {\r\n    const adv = await this.advData();\r\n    const promise = new Promise<boolean>((resolve, reject) => {\r\n      try {\r\n        if (\r\n          this.schedule.hour < adv.hourStart ||\r\n          this.schedule.hour > adv.hourEnd\r\n        ) {\r\n          // no puede a esa hora\r\n          resolve(true);\r\n        } else {\r\n          // si puede\r\n          resolve(false);\r\n        }\r\n        console.log(this.schedule);\r\n      } catch (error) {\r\n        // error\r\n      }\r\n    });\r\n    const result = await promise;\r\n    return result;\r\n  }\r\n  private async advData() {\r\n    return await this.adviserService\r\n      .getAdviserById(this.schedule.adviser)\r\n      .toPromise();\r\n  }\r\n\r\n  //  ve errores de calendario\r\n  async checkSchedule(): Promise<CheckSchedule> {\r\n    return await this.scheduleService.checkSchedule(this.schedule).toPromise();\r\n  }\r\n  // END VER\r\n\r\n  // START dialog\r\n  async dialogs(checkAdv: boolean, type: 'edit' | 'new', user) {\r\n    // checa adv\r\n    let presentDialogAdv = false;\r\n    let checkSchedule = true;\r\n    let result = false;\r\n    if (checkAdv) {\r\n      presentDialogAdv = await this.checkHoursAdviser();\r\n    }\r\n    if (presentDialogAdv) {\r\n      checkSchedule = await this.dialogAdv();\r\n    }\r\n    if (checkSchedule) {\r\n      const check = await this.checkSchedule();\r\n      const isOk = check.adviserCan && check.buyerCan && check.propertyCan;\r\n      if (!isOk) {\r\n        result = await this.dialogSchedule(check);\r\n      } else {\r\n        result = true;\r\n      }\r\n    }\r\n    if (result) {\r\n      if (type === 'new' && user === 'seller') {\r\n        this.newScheduleSeller();\r\n      } else if (type === 'edit' && user === 'seller') {\r\n        this.editCustomerSeller();\r\n      } else if (type === 'new' && user !== 'seller') {\r\n        this.newSchedule();\r\n      } else if (type === 'edit' && user !== 'seller') {\r\n        this.editCustomer();\r\n      }\r\n    }\r\n  }\r\n  private async dialogSchedule(check): Promise<boolean> {\r\n    let message;\r\n    console.log(check);\r\n    if (!check.propertyCan) {\r\n      message = 'La propiedad elegida esta ocupada a esa hora';\r\n    } else if (!check.buyerCan) {\r\n      message = `El Cliente elegido esta ocupado a esa hora`;\r\n    } else if (!check.adviserCan) {\r\n      message = `El Asesor elegido esta ocupado a esa hora`;\r\n    }\r\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\r\n      maxWidth: '50%',\r\n      minWidth: '20%',\r\n      data: {\r\n        header: 'Advertencia',\r\n        subHeader: 'Se empalman horarios',\r\n        body: message,\r\n        isform: false,\r\n      },\r\n    });\r\n    const promise = new Promise<boolean>((resolve, reject) => {\r\n      try {\r\n        const sub = dialogRef.componentInstance.buttons.subscribe(res => {\r\n          resolve(res);\r\n        });\r\n      } catch (error) {}\r\n    });\r\n    console.log(await promise);\r\n    const result = await promise;\r\n    return result;\r\n  }\r\n\r\n  async dialogAdv(): Promise<boolean> {\r\n    const adv = await this.advData();\r\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\r\n      maxWidth: '50%',\r\n      minWidth: '20%',\r\n      data: {\r\n        header: 'Advertencia',\r\n        subHeader: 'El horario no coincide con el asesor',\r\n        body: `El asesor <b>${adv.name}</b> tiene un horario de <b>${\r\n          adv.hourStart\r\n        }</b> a <b>${adv.hourEnd}</b>`,\r\n        isform: false,\r\n      },\r\n    });\r\n    const promise = new Promise<boolean>((resolve, reject) => {\r\n      try {\r\n        const sub = dialogRef.componentInstance.buttons.subscribe(res => {\r\n          resolve(res);\r\n        });\r\n      } catch (error) {}\r\n    });\r\n    console.log(await promise);\r\n    const result = await promise;\r\n    return result;\r\n  }\r\n  // END dialog\r\n\r\n  getDate(day, month, year) {\r\n    return new Date(year, month, day);\r\n  }\r\n  // noti\r\n  private notification(\r\n    title,\r\n    message,\r\n    status,\r\n    type,\r\n    tags,\r\n    receiversId: string[],\r\n  ) {\r\n    // notificacion\r\n    const notification: INotification = {\r\n      title: title,\r\n      message: message,\r\n      tags: tags,\r\n      receiversId: receiversId,\r\n      senderId: this.userSession.userSession.value.id,\r\n      status: status,\r\n      type: type,\r\n    };\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\r\n      .subscribe(() => {\r\n        // guardar noti\r\n        this.oneSignalService.newNotification(notification).subscribe();\r\n      });\r\n  }\r\n  private notificationBySchedule(schedule: ISchedule) {\r\n    // onesignal\r\n    this.oneSignalService\r\n      .postOneSignalBySchedule(\r\n        'Recordatorio de evento',\r\n        `Tienes un evento con direccion ${schedule.address} en propiedad: ${\r\n          schedule.property.name\r\n        } a las ${schedule.hour}hrs`,\r\n        new Date(\r\n          schedule.year,\r\n          schedule.month,\r\n          schedule.day,\r\n          schedule.hour,\r\n          schedule.minute,\r\n        ),\r\n        undefined,\r\n        [schedule.buyer._id, schedule.adviser._id],\r\n      )\r\n      .subscribe(() => {});\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Evento Personal\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>Complete los campos</mat-card-title>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n\\r\\n\\r\\n            <!-- address -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Dirección</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"schedule.address\\\" #address=\\\"ngModel\\\" id=\\\"address\\\" name=\\\"address\\\" required></textarea>\\r\\n              <mat-error *ngIf=\\\"address.dirty || address.touched\\\">Anotar Dirección</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- Fecha -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" [value]=\\\"getDate(schedule.day, schedule.month, schedule.year)\\\"\\r\\n                matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Selecciona Fecha\\\" required>\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <!-- hora -->\\r\\n            <mat-label style=\\\"margin-bottom: 2%;\\\">Anote Hora </mat-label>\\r\\n            <div>\\r\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\r\\n                <input max=24 min=0 type=\\\"number\\\" style=\\\"text-align: right;\\\" matInput [(ngModel)]=\\\"schedule.hour\\\" #hour=\\\"ngModel\\\"\\r\\n                  id=\\\"hour\\\" name=\\\"hour\\\" required>\\r\\n\\r\\n              </mat-form-field>\\r\\n              :\\r\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\r\\n                <input max=59 min=0 type=\\\"number\\\" matInput [(ngModel)]=\\\"schedule.minute\\\" #minute=\\\"ngModel\\\" id=\\\"minute\\\"\\r\\n                  name=\\\"minute\\\" required>\\r\\n              </mat-form-field>\\r\\n              <!-- pm/am -->\\r\\n              <mat-form-field style=\\\"width: 71px;\\r\\n                margin-left: 1%;\\\" appearance=\\\"outline\\\">\\r\\n                <mat-select (selectionChange)=\\\"hourFormat(ampm.value)\\\" #ampm>\\r\\n                  <mat-option value=\\\"pm\\\">\\r\\n                    PM\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"am\\\">\\r\\n                    AM\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <!-- title -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Titulo del evento</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"schedule.title\\\" #title=\\\"ngModel\\\" id=\\\"title\\\" name=\\\"title\\\" required>\\r\\n              <mat-error *ngIf=\\\"title.dirty || title.touched\\\">Anotar Titulo</mat-error>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <!-- note -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Notas</mat-label>\\r\\n              <textarea matInput [(ngModel)]=\\\"schedule.note\\\" #note=\\\"ngModel\\\" id=\\\"note\\\" name=\\\"note\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <!-- <div class=\\\"alert-schedule\\\">\\r\\n                El Asesor seleccionado tiene una disponibilidad de 8 a 6 hrs\\r\\n              </div> -->\\r\\n\\r\\n          </div>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newSchedule()\\\"\\r\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editSchedule()\\\">Editar</button>\\r\\n              </span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.alert-schedule {\\n  background-color: #ffcdcd;\\n  border-left: 5px solid red;\\n  color: black;\\n  width: 50% !important;\\n  padding: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IScheduleGet, ISchedule } from '../../../models/schedule.model';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { ScheduleService } from '../../../services/schedule.service';\r\n\r\n@Component({\r\n  selector: 'app-personal-schedule',\r\n  templateUrl: './personal-schedule.component.html',\r\n  styleUrls: ['./personal-schedule.component.scss'],\r\n})\r\nexport class PersonalScheduleComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  schedule: IScheduleGet = {};\r\n  item;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private scheduleService: ScheduleService,\r\n    private userSessionService: UserSessionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['id']) {\r\n        this.scheduleService.getScheduleById(params.id).subscribe(s => {\r\n          this.schedule = <any>s;\r\n          this.isNew = false;\r\n        });\r\n      } else {\r\n        this.isNew = true;\r\n      }\r\n    });\r\n\r\n    this.getUsuerType();\r\n  }\r\n  /**\r\n   * asignar persona\r\n   */\r\n  getUsuerType() {\r\n    const user = this.userSessionService.userSession.value;\r\n    if (user.type === 'administrator') {\r\n      this.schedule.administrator = user.id;\r\n    } else {\r\n      this.schedule.personal = user.id;\r\n    }\r\n  }\r\n\r\n  dateSelect(event) {\r\n    if (event) {\r\n      this.schedule.day = event.value._i.date;\r\n      this.schedule.month = event.value._i.month;\r\n      this.schedule.year = event.value._i.year;\r\n    }\r\n  }\r\n  hourFormat(pmAm) {\r\n    console.log(pmAm);\r\n    if (pmAm === 'pm' && this.schedule.hour && this.schedule.hour < 12) {\r\n      this.schedule.hour = this.schedule.hour + 12;\r\n    }\r\n  }\r\n  /*   getAdvAll(item) {\r\n    this.item = item;\r\n    console.log(item);\r\n    if (item === 'other') {\r\n      this.advisers$ = this.adviserService.getAdviserAll();\r\n      this.advisers$.subscribe(a => console.log(a));\r\n    } else {\r\n      this.schedule.adviser = item;\r\n    }\r\n  } */\r\n  newSchedule() {\r\n    this.scheduleService.newSchedule(<ISchedule>this.schedule).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Evento Creado' },\r\n      };\r\n      // this.navCtr.navigateRoot('list-schedule-admin');\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', {\r\n          skipLocationChange: true,\r\n        })\r\n        .then(() => this.router.navigate(['list-schedule-admin'], toast));\r\n    });\r\n  }\r\n  editSchedule() {\r\n    this.scheduleService.putSchedule(<ISchedule>this.schedule).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Evento Editado' },\r\n      };\r\n      // this.navCtr.navigateRoot('list-schedule-admin');\r\n      /**\r\n       * Es para recargar el componente previo\r\n       */\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', {\r\n          skipLocationChange: true,\r\n        })\r\n        .then(() => this.router.navigate(['list-schedule-admin'], toast));\r\n    });\r\n  }\r\n\r\n  getDate(day, month, year) {\r\n    return new Date(year, month, day);\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Propietario\\r\\n    </ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-grid fixed>\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\r\\n      <form #newUserForm=\\\"ngForm\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>Complete los campos</mat-card-title>\\r\\n          <div class=\\\"flex-container\\\">\\r\\n            <!-- name -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Nombre</mat-label>\\r\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"seller.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- lastname -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Dirección</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"seller.lastName\\\" #lastName=\\\"ngModel\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" required>\\r\\n              <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\">Anotar Apellido</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- email -->\\r\\n            <!--  <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Correo</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"seller.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\r\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\r\\n              </mat-form-field> -->\\r\\n            <!-- city -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Ciudad</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"seller.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\r\\n                <mat-option value=\\\"puebla\\\">\\r\\n                  Puebla\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"mexico\\\">\\r\\n                  México\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- isRenter -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Vende o Renta</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"seller.isRenter\\\" #isRenter=\\\"ngModel\\\" id=\\\"isRenter\\\" name=\\\"isRenter\\\" required>\\r\\n                <mat-option value=\\\"false\\\">\\r\\n                  Vende\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"true\\\">\\r\\n                  Renta\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"isRenter.dirty || isRenter.touched\\\">Anotar Tipo</mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- pass -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Contraseña</mat-label>\\r\\n              <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"seller.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\"\\r\\n                name=\\\"password\\\" required>\\r\\n              <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- prop -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Propiedades del Vendedor</mat-label>\\r\\n              <mat-select [disabled]=\\\"user.type === 'seller'\\\" [(ngModel)]=\\\"seller.property\\\" #property=\\\"ngModel\\\" id=\\\"property\\\"\\r\\n                name=\\\"property\\\" multiple>\\r\\n                <mat-option [disabled]=\\\"prop.isBuy\\\" *ngFor=\\\"let prop of properties$ | async\\\" [value]=\\\"prop._id\\\">\\r\\n                  {{prop.name}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"property.dirty || property.touched\\\">Anotar Tipo</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <mat-card-actions align=\\\"end\\\">\\r\\n            <div style=\\\"margin-right: 2%\\\">\\r\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\r\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\r\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\r\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\r\\n                  (click)=\\\"editCustomer()\\\">Editar</button>\\r\\n              </span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </mat-card-actions>\\r\\n\\r\\n        </mat-card>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ISeller } from '../../../models/seller.model';\r\nimport { NavigationExtras, ActivatedRoute, Router } from '@angular/router';\r\nimport { SellerService } from '../../../services/seller.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { PropertyService } from '../../../services/property.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IProperty } from '../../../models/property.model';\r\nimport { UserSessionService } from '../../../services/user-session.service';\r\nimport { IUserSession } from '../../../models/userSession.model';\r\n\r\n@Component({\r\n  selector: 'app-new-edit-seller',\r\n  templateUrl: './new-edit-seller.component.html',\r\n  styleUrls: ['./new-edit-seller.component.scss'],\r\n})\r\nexport class NewEditSellerComponent implements OnInit {\r\n  hide = true;\r\n  companyId: string;\r\n  isNew = true;\r\n  errorToShow = '';\r\n  errorToShowMat = 'Dato obligatorio';\r\n  seller: ISeller = {};\r\n  properties$: Observable<IProperty[]>;\r\n  user: IUserSession;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sellerService: SellerService,\r\n    private navCtr: NavController,\r\n    private propertyService: PropertyService,\r\n    private userSession: UserSessionService,\r\n  ) {\r\n    this.user = userSession.userSession.value;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProperties();\r\n    this.route.queryParams.subscribe(params => {\r\n      let arr = [];\r\n      if (params['id']) {\r\n        this.sellerService.getSellerById(params['id']).subscribe(s => {\r\n          Object.keys(s).forEach(key => {\r\n            if (s[key] === false) {\r\n              s[key] = 'false';\r\n            } else if (s[key] === true) {\r\n              s[key] = 'true';\r\n            }\r\n          });\r\n          if (s.property && s.property.length > 0) {\r\n            arr = <any>s.property.map(p => p._id);\r\n          }\r\n          delete s.property;\r\n          this.seller = s;\r\n          this.seller.property = arr;\r\n        });\r\n        this.isNew = false;\r\n      } else if (this.user.type === 'seller') {\r\n        this.sellerService.getSellerById(this.user.id).subscribe(s => {\r\n          Object.keys(s).forEach(key => {\r\n            if (s[key] === false) {\r\n              s[key] = 'false';\r\n            } else if (s[key] === true) {\r\n              s[key] = 'true';\r\n            }\r\n          });\r\n          if (s.property && s.property.length > 0) {\r\n            arr = <any>s.property.map(p => p._id);\r\n          }\r\n          delete s.property;\r\n          this.seller = s;\r\n          this.seller.property = arr;\r\n        });\r\n        this.isNew = false;\r\n      } else {\r\n        this.isNew = true;\r\n      }\r\n    });\r\n  }\r\n  getProperties() {\r\n    this.properties$ = this.propertyService.getAllSpecial();\r\n  }\r\n  newCustomer() {\r\n    this.sellerService.newSeller(this.seller).subscribe(s => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: 'Nuevo Propietario Agregado' },\r\n      };\r\n      // this.router.navigate(['list-seller-admin'], toast);\r\n      this.router\r\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n        .then(() => this.router.navigate(['list-seller-admin'], toast));\r\n    });\r\n  }\r\n  editCustomer() {\r\n    this.sellerService.putSeller(this.seller).subscribe(() => {\r\n      const toast: NavigationExtras = {\r\n        queryParams: { res: ' Propietario Editado' },\r\n      };\r\n      if (this.user.type === 'seller') {\r\n        this.router\r\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n          .then(() => this.router.navigate(['list-buyer-admin'], toast));\r\n      } else {\r\n        this.router\r\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\r\n          .then(() => this.router.navigate(['list-seller-admin'], toast));\r\n      }\r\n    });\r\n  }\r\n  getPopMessage(event) {\r\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\r\n      .disabled;\r\n    if (isDisabled) {\r\n      this.errorToShow = 'Verificar datos ingresados';\r\n    } else {\r\n      this.errorToShow = '';\r\n    }\r\n  }\r\n  getMatError($event) {\r\n    if ($event.target.validity.valueMissing) {\r\n      this.errorToShowMat = 'Dato obligatorio';\r\n    }\r\n    if ($event.target.validity.patternMismatch) {\r\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\r\n    }\r\n    if ($event.target.validity.tooShort) {\r\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.tooLong) {\r\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\r\n    }\r\n    if ($event.target.validity.rangeUnderflow) {\r\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MdcButtonModule,\r\n  MdcIconModule,\r\n  MdcRippleModule,\r\n  MdcTextFieldModule,\r\n  MdcThemeModule,\r\n  MdcTypographyModule,\r\n} from '@angular-mdc/web';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MdcButtonModule,\r\n    MdcIconModule,\r\n    MdcRippleModule,\r\n    MdcTextFieldModule,\r\n    MdcThemeModule,\r\n    MdcTypographyModule,\r\n  ],\r\n})\r\nexport class AppMaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IAdministrator } from '../models/administrator.model';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdministratorService {\r\n  constructor(private http: HttpClient) {}\r\n  public getBuyerById(id: string): Observable<IAdministrator> {\r\n    return this.http\r\n      .get(END_POINT.ADMINISTRATOR + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IAdviser } from '../models/adviser.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdviserService {\r\n  constructor(private http: HttpClient) {}\r\n  public getAdviserAll(): Observable<IAdviser[]> {\r\n    return this.http.get(END_POINT.ADVISER).pipe(map((data: any) => data.data));\r\n  }\r\n  public newAdviser(adviser: IAdviser): Observable<IAdviser> {\r\n    return this.http\r\n      .post(END_POINT.ADVISER, adviser)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putAdviser(adviser: IAdviser): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.ADVISER + adviser._id, adviser)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getAdviserById(id: string): Observable<IAdviser> {\r\n    return this.http\r\n      .get(END_POINT.ADVISER_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deletedAdviserById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.ADVISER + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IBuild } from '../models/build.model';\r\nimport { Observable } from 'rxjs';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BuildService {\r\n  constructor(private http: HttpClient) {}\r\n  public newBuild(build: IBuild): Observable<IBuild> {\r\n    return this.http\r\n      .post(END_POINT.BUILD, build)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putBuild(build: IBuild): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.BUILD + build._id, build)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getBuildAll(): Observable<IBuild[]> {\r\n    return this.http.get(END_POINT.BUILD).pipe(map((data: any) => data.data));\r\n  }\r\n  public getBuildById(id: string): Observable<IBuild> {\r\n    return this.http\r\n      .get(END_POINT.BUILD_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deltedBuildById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.BUILD + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public updateBuildPhase(timeLine, id): Observable<IBuild> {\r\n    return this.http\r\n      .put(END_POINT.BUILD_UPDATE_PHASE + id, timeLine)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public uploadImg(formData: FormData): Observable<string[]> {\r\n    return this.http\r\n      .post(END_POINT.BUILD_UPLOAD_IMG, formData)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  /**\r\n   *\r\n   * @param imgName ej: imagen.PNG\r\n   */\r\n  public deletedImg(imgName: string): Observable<boolean> {\r\n    return this.http\r\n      .get(END_POINT.BUILD_DELETE_IMG + imgName)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IBuyer } from '../models/buyer.model';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BuyerService {\r\n  constructor(private http: HttpClient) {}\r\n  public getBuyerById(id: string): Observable<IBuyer> {\r\n    return this.http\r\n      .get(END_POINT.BUYER_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getBuyerAll(): Observable<IBuyer[]> {\r\n    return this.http.get(END_POINT.BUYER).pipe(map((data: any) => data.data));\r\n  }\r\n\r\n  public putBuyer(buyer: IBuyer): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.BUYER + buyer._id, buyer)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public checkBuyer(buyer: IBuyer): Observable<IBuyer> {\r\n    return this.http\r\n      .post(END_POINT.BUYER_CHECK, buyer)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public newBuyer(buyer: IBuyer): Observable<IBuyer> {\r\n    return this.http\r\n      .post(END_POINT.BUYER, buyer)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deletedBuyer(buyer: IBuyer): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.BUYER + buyer._id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICredit } from '../models/credit.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CreditService {\r\n  constructor(private http: HttpClient) {}\r\n  public newCredit(credit: ICredit): Observable<ICredit> {\r\n    return this.http\r\n      .post(END_POINT.CREDIT, credit)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putCredit(credit: ICredit): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.CREDIT + credit._id, credit)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getCredit(): Observable<ICredit[]> {\r\n    return this.http.get(END_POINT.CREDIT).pipe(map((data: any) => data.data));\r\n  }\r\n  public getCreditById(id: string): Observable<ICredit> {\r\n    return this.http\r\n      .get(END_POINT.CREDIT_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deleteCredit(id: string): Observable<ICredit> {\r\n    return this.http\r\n      .delete(END_POINT.CREDIT + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IGoal } from '../models/goal.model';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GoalService {\r\n  constructor(private http: HttpClient) {}\r\n  public newGoal(goal: IGoal): Observable<IGoal> {\r\n    return this.http\r\n      .post(END_POINT.GOAL, goal)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getGoal(): Observable<IGoal[]> {\r\n    return this.http.get(END_POINT.GOAL).pipe(map((data: any) => data.data));\r\n  }\r\n  public getGoaltById(id: string): Observable<IGoal> {\r\n    return this.http\r\n      .get(END_POINT.GOAL_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putGoal(goal: IGoal): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.GOAL + goal._id, goal)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n\r\n  public deleteGoal(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.GOAL + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IMaker } from '../models/maker.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MakerService {\r\n  constructor(private http: HttpClient) {}\r\n  public newMaker(maker: IMaker): Observable<IMaker> {\r\n    return this.http\r\n      .post(END_POINT.MAKER, maker)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putMaker(maker: IMaker): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.MAKER + maker._id, maker)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getMakerAll(): Observable<IMaker[]> {\r\n    return this.http.get(END_POINT.MAKER).pipe(map((data: any) => data.data));\r\n  }\r\n  public getMakerById(id: string): Observable<IMaker> {\r\n    return this.http\r\n      .get(END_POINT.MAKER_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deltedMakerById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.MAKER + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IOfert } from '../models/ofert.model';\r\nimport { Observable } from 'rxjs';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OfertService {\r\n  constructor(private http: HttpClient) {}\r\n  public newOfert(ofert: IOfert): Observable<IOfert> {\r\n    return this.http\r\n      .post(END_POINT.OFERT, ofert)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putOfert(ofert: IOfert): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.OFERT + ofert._id, ofert)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getOfert(): Observable<IOfert[]> {\r\n    return this.http.get(END_POINT.OFERT).pipe(map((data: any) => data.data));\r\n  }\r\n  public getOfertById(id: string): Observable<IOfert> {\r\n    return this.http\r\n      .get(END_POINT.OFERT_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deleteOfertById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.OFERT + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IOffice } from '../models/office.model';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OfficeService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public newOffice(office: IOffice): Observable<IOffice> {\r\n    return this.http\r\n      .post(END_POINT.OFFICE, office)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putOffice(office: IOffice): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.OFFICE + office._id, office)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getOffice(): Observable<IOffice[]> {\r\n    return this.http.get(END_POINT.OFFICE).pipe(map((data: any) => data.data));\r\n  }\r\n  public getOfficeById(id: string): Observable<IOffice> {\r\n    return this.http\r\n      .get(END_POINT.OFFICE_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deleteOfficeById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.OFFICE + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { INotification } from '../models/notification.model';\r\nimport { CONST_GENERAL } from '../_config/_const-general';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OnesignalService {\r\n  constructor(private http: HttpClient) {}\r\n  public search(\r\n    id?: string,\r\n    tags?: string[],\r\n    pageNumber = 1,\r\n    nPerPage = 10,\r\n  ): Observable<INotification> {\r\n    const body = {\r\n      id,\r\n      pageNumber,\r\n      nPerPage,\r\n      tags,\r\n    };\r\n    return this.http\r\n      .post(END_POINT.NOTIFICATION_SEARCH, body)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public newNotification(\r\n    notification: INotification,\r\n  ): Observable<INotification> {\r\n    return this.http\r\n      .post(END_POINT.NOTIFICATION, notification)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putNotification(notification: INotification): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.PROPERTY + notification._id, notification)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  /**\r\n   *\r\n   * @param headings Titulo de la notificacion\r\n   * @param contents contenido\r\n   * @param tags typo se usuario  | 'administrator' | 'buyer' | 'seller' | 'adviser' | 'management' | 'maker' | 'office'\r\n   * @param usersId [ids]\r\n   */\r\n  public postOneSignalByTag(\r\n    headings: string,\r\n    contents: string,\r\n    tags?: string[],\r\n    usersId?: string[],\r\n  ): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Basic ${CONST_GENERAL.REST_API_KEY}`,\r\n      'Content-Type': 'application/json; charset=utf-8',\r\n    });\r\n    const filters = this.filterByTags(tags, usersId);\r\n    const body = {\r\n      app_id: CONST_GENERAL.ONESIGNAL_APP_ID,\r\n      headings: { en: headings },\r\n      contents: { en: contents },\r\n      filters: filters,\r\n    };\r\n    console.log(body);\r\n    return this.http\r\n      .post(END_POINT.ONESIGNAL, body, { headers: headers })\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public postOneSignalBySchedule(\r\n    headings: string,\r\n    contents: string,\r\n    date: Date,\r\n    tags?: string[],\r\n    usersId?: string[],\r\n  ): Observable<any> {\r\n    const prevTime = 30 * 60000;\r\n    const schedule = new Date(date).getTime() - prevTime;\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Basic ${CONST_GENERAL.REST_API_KEY}`,\r\n      'Content-Type': 'application/json; charset=utf-8',\r\n    });\r\n    const filters = this.filterByTags(tags, usersId);\r\n    const body = {\r\n      app_id: CONST_GENERAL.ONESIGNAL_APP_ID,\r\n      headings: { en: headings },\r\n      contents: { en: contents },\r\n      filters: filters,\r\n      send_after: new Date(schedule).toString(),\r\n    };\r\n    console.log(body);\r\n    return this.http\r\n      .post(END_POINT.ONESIGNAL, body, { headers: headers })\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  // helpers\r\n  private filterByTags(tags: string[], usersId: string[]) {\r\n    let filters = [];\r\n    if (tags && (usersId === undefined || usersId === null)) {\r\n      filters = this.getFiltersTags(tags);\r\n    }\r\n    if (usersId && (tags === undefined || tags === null)) {\r\n      filters = this.getFiltersIds(usersId);\r\n    }\r\n    if (\r\n      usersId !== undefined &&\r\n      usersId !== null &&\r\n      (tags !== undefined && tags !== null)\r\n    ) {\r\n      filters = this.getFiltersTags(tags);\r\n      filters.push({\r\n        operator: 'OR',\r\n      });\r\n      filters = filters.concat(this.getFiltersIds(usersId));\r\n    }\r\n\r\n    return filters;\r\n  }\r\n\r\n  private getFiltersTags(tags: string[]) {\r\n    const filters = [];\r\n    tags.forEach((tag, i) => {\r\n      if (i === 0) {\r\n        filters.push({\r\n          field: 'tag',\r\n          key: 'type',\r\n          relation: '=',\r\n          value: tag,\r\n        });\r\n      } else {\r\n        filters.push(\r\n          {\r\n            operator: 'OR',\r\n          },\r\n          {\r\n            field: 'tag',\r\n            key: 'type',\r\n            relation: '=',\r\n            value: tag,\r\n          },\r\n        );\r\n      }\r\n    });\r\n    return filters;\r\n  }\r\n  private getFiltersIds(usersId: string[]) {\r\n    const ids = [];\r\n    usersId.forEach((userId, i) => {\r\n      if (i === 0) {\r\n        ids.push({\r\n          field: 'tag',\r\n          key: '_id',\r\n          relation: '=',\r\n          value: userId,\r\n        });\r\n      } else {\r\n        ids.push(\r\n          {\r\n            operator: 'OR',\r\n          },\r\n          {\r\n            field: 'tag',\r\n            key: '_id',\r\n            relation: '=',\r\n            value: userId,\r\n          },\r\n        );\r\n      }\r\n    });\r\n    return ids;\r\n  }\r\n  /* public getPropertyById(id: string): Observable<IProperty> {\r\n    return this.http\r\n      .get(END_POINT.PROPERTY_BY_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getAll(): Observable<IProperty[]> {\r\n    return this.http\r\n      .get(END_POINT.PROPERTY)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getAllSpecial(): Observable<IProperty[]> {\r\n    return this.http\r\n      .get(END_POINT.PROPERTY_ALL)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deletedById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.PROPERTY + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public newProperty(property: IProperty): Observable<IProperty> {\r\n    return this.http\r\n      .post(END_POINT.PROPERTY, property)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putProperty(property: IProperty): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.PROPERTY + property._id, property)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getPropertySimulate(\r\n    property: IProperty,\r\n    percentage: number,\r\n  ): Observable<IProperty[]> {\r\n    const body: any = property;\r\n    body.percentage = percentage;\r\n    return this.http\r\n      .post(END_POINT.PROPERTY_SIMULATE, body)\r\n      .pipe(map((data: any) => data.data));\r\n  } */\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { IProperty } from '../models/property.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PropertyService {\r\n  constructor(private http: HttpClient) {}\r\n  public matchSearch(buyerId: string, percentage = 10): Observable<boolean> {\r\n    const body = { percentage: percentage };\r\n    return this.http\r\n      .post(END_POINT.PROPERTY_MATCH_SEARCH + buyerId, body)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getPropertyById(id: string): Observable<IProperty> {\r\n    return this.http\r\n      .get(END_POINT.PROPERTY_BY_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getAll(): Observable<IProperty[]> {\r\n    return this.http\r\n      .get(END_POINT.PROPERTY)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getAllSpecial(): Observable<IProperty[]> {\r\n    return this.http\r\n      .get(END_POINT.PROPERTY_ALL)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deletedById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.PROPERTY + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public newProperty(property: IProperty): Observable<IProperty> {\r\n    return this.http\r\n      .post(END_POINT.PROPERTY, property)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putProperty(property: IProperty): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.PROPERTY + property._id, property)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getPropertySimulate(\r\n    property: IProperty,\r\n    percentage: number,\r\n  ): Observable<IProperty[]> {\r\n    const body: any = property;\r\n    body.percentage = percentage;\r\n    return this.http\r\n      .post(END_POINT.PROPERTY_SIMULATE, body)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ISale } from '../models/sale.model';\r\nimport { Observable } from 'rxjs';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SaleService {\r\n  constructor(private http: HttpClient) {}\r\n  public newSale(sale: ISale): Observable<ISale> {\r\n    return this.http\r\n      .post(END_POINT.SALE, sale)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putSale(sale: ISale): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.SALE + sale._id, sale)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getSale(): Observable<ISale[]> {\r\n    return this.http.get(END_POINT.SALE).pipe(map((data: any) => data.data));\r\n  }\r\n  public getSaleById(id: string): Observable<ISale> {\r\n    return this.http\r\n      .get(END_POINT.SALE_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deltedSaleById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.SALE + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getSaleByIdAdv(adviserId: string): Observable<ISale[]> {\r\n    return this.http\r\n      .post(END_POINT.SALE_ADV_ID, { adviser: adviserId })\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  ISchedule,\r\n  IScheduleGet,\r\n  CheckSchedule,\r\n} from '../models/schedule.model';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ScheduleService {\r\n  constructor(private http: HttpClient) {}\r\n  public newSchedule(schedule: ISchedule): Observable<ISchedule> {\r\n    return this.http\r\n      .post(END_POINT.SCHEDULE, schedule)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putSchedule(schedule: ISchedule): Observable<ISchedule> {\r\n    return this.http\r\n      .put(END_POINT.SCHEDULE + schedule._id, schedule)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getSchedule(): Observable<ISchedule[]> {\r\n    return this.http\r\n      .get(END_POINT.SCHEDULE)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getScheduleById(id: string): Observable<ISchedule> {\r\n    return this.http\r\n      .get(END_POINT.SCHEDULE_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deltedScheduleById(id: string): Observable<ISchedule> {\r\n    return this.http\r\n      .delete(END_POINT.SCHEDULE + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public checkSchedule(schedule: IScheduleGet): Observable<CheckSchedule> {\r\n    return this.http\r\n      .post(END_POINT.SCHEDULE_CHECK, schedule)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ISeller } from '../models/seller.model';\r\nimport { Observable } from 'rxjs';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SellerService {\r\n  constructor(private http: HttpClient) {}\r\n  public getSellerAll(): Observable<ISeller[]> {\r\n    return this.http.get(END_POINT.SELLER).pipe(map((data: any) => data.data));\r\n  }\r\n  public newSeller(seller: ISeller): Observable<ISeller[]> {\r\n    return this.http\r\n      .post(END_POINT.SELLER, seller)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public putSeller(seller: ISeller): Observable<boolean> {\r\n    return this.http\r\n      .put(END_POINT.SELLER + seller._id, seller)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getSellerById(id: string): Observable<ISeller> {\r\n    return this.http\r\n      .get(END_POINT.SELLER_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deletedSellerById(id: string): Observable<boolean> {\r\n    return this.http\r\n      .delete(END_POINT.SELLER + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IStatusBuyerProperty } from '../models/statusBuyerProperty.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StatusBuyerPropertyService {\r\n  constructor(private http: HttpClient) {}\r\n  public newStatusBuyerProperty(\r\n    sBP: IStatusBuyerProperty,\r\n  ): Observable<IStatusBuyerProperty> {\r\n    return this.http\r\n      .post(END_POINT.STATUS_BP, sBP)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public deletedStatusBuyerProperty(sBPId: string): Observable<Boolean> {\r\n    return this.http\r\n      .delete(END_POINT.STATUS_BP + sBPId)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public upgradeStatus(sBPId: string, sBPStatus: string): Observable<Boolean> {\r\n    const body = { status: sBPStatus };\r\n    return this.http\r\n      .post(END_POINT.STATUS_UPGRADE + sBPId, body)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getStatusBuyerProperty(): Observable<IStatusBuyerProperty[]> {\r\n    return this.http\r\n      .get(END_POINT.STATUS_BP)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public getStatusBuyerPropertyById(\r\n    id: string,\r\n  ): Observable<IStatusBuyerProperty> {\r\n    return this.http\r\n      .get(END_POINT.STATUS_ID + id)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public searchSpecial(buyerId, propertyId): Observable<IStatusBuyerProperty> {\r\n    const body = { buyer: buyerId, property: propertyId };\r\n    return this.http\r\n      .post(END_POINT.STATUS_SEARCH, body)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { IUserSession } from '../models/userSession.model';\r\nimport { END_POINT } from '../_config/api.end-points';\r\nimport { Storage } from '@ionic/storage';\r\nimport { CONST_GENERAL } from '../_config/_const-general';\r\nimport { Platform } from '@ionic/angular';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserSessionService {\r\n  public userSession = new BehaviorSubject<IUserSession>({});\r\n  private isInitOne = false;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storage: Storage,\r\n    private platform: Platform\r\n  ) {}\r\n\r\n  public logginUserSession(name, password): Observable<any> {\r\n    const concatSession = btoa(name + ':' + password);\r\n    return this.http\r\n      .get(END_POINT.USER_SESSION + concatSession)\r\n      .pipe(map((data: any) => data.data));\r\n  }\r\n  public setUserSession(name, type, id, password): void {\r\n    const currentData: IUserSession = {\r\n      type: type,\r\n      name: name,\r\n      id: id,\r\n      password: password\r\n    };\r\n    this.userSession.next({\r\n      name: name,\r\n      type: type,\r\n      id: id,\r\n      password: password\r\n    });\r\n    // localStorage.setItem('userSession', JSON.stringify(currentData));\r\n    this.storage.set('userSession', currentData);\r\n    // onesignal\r\n    /*  if (this.platform.is('cordova')) {\r\n      this.oneSignalCordova(id, type);\r\n    } else if (environment.production && !this.isInitOne) {\r\n      this.oneSignalDesktop(id, type);\r\n    } */\r\n  }\r\n\r\n  public loggout(): void {\r\n    this.storage.remove('userSession');\r\n    this.storage.remove('alert-adv');\r\n    // localStorage.removeItem('userSession');\r\n    this.userSession.next({\r\n      name: undefined,\r\n      type: undefined,\r\n      id: undefined,\r\n      password: undefined\r\n    });\r\n    /* this.platform.ready().then(c => {\r\n      console.log(c);\r\n      if (this.platform.is('cordova')) {\r\n        this.oneSignalLogoutCordova();\r\n      } else if (environment.production && this.isInitOne) {\r\n        this.oneSignalLogoutDesktop();\r\n      }\r\n    }); */\r\n  }\r\n\r\n  // inicia antes que la app mandando un Promise en cada respuesta environment.production &&\r\n  checkValidSession(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      // ve si hay un usuario en el localstore\r\n      this.storage.keys().then(keys => {\r\n        const keyUserSession = keys.find(key => key === 'userSession');\r\n        if (keyUserSession) {\r\n          this.storage.get('userSession').then((val: IUserSession) => {\r\n            this.logginUserSession(val.name, val.password).subscribe(data => {\r\n              // data  administrator buyer seller adviser management\r\n\r\n              if (data !== 'error') {\r\n                this.setUserSession(\r\n                  data.data[0].name,\r\n                  data.type,\r\n                  data.data[0]._id,\r\n                  data.data[0].password\r\n                );\r\n                return resolve(true);\r\n                // usuario o contrasena caducada\r\n              } else {\r\n                this.loggout();\r\n                return resolve(true);\r\n              }\r\n            });\r\n          });\r\n          // no hay nada en local, manda a login en app.component\r\n        } else {\r\n          this.loggout();\r\n          return resolve(true);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  //  one signal\r\n  private oneSignalDesktop(id: any, type: any) {\r\n    const OneSignalDektop = window['OneSignal'] || [];\r\n    console.log('Init OneSignal');\r\n    OneSignalDektop.push(function() {\r\n      OneSignalDektop.init({\r\n        appId: CONST_GENERAL.ONESIGNAL_APP_ID,\r\n        autoRegister: true,\r\n        notifyButton: {\r\n          enable: false\r\n        },\r\n        promptOptions: {\r\n          actionMessage:\r\n            'Nos gustaría notificarle cuando se mande un nuevo programa',\r\n          acceptButtonText: 'Permitir',\r\n          cancelButtonText: 'No gracias'\r\n        }\r\n      });\r\n      OneSignalDektop.getUserId(function(userId) {\r\n        console.log('OneSignal User ID:', userId);\r\n      });\r\n      OneSignalDektop.sendTags({\r\n        _id: id.toString(),\r\n        type: type\r\n      });\r\n      OneSignalDektop.on('subscriptionChange', function(isSubscribed) {\r\n        console.log('The user subscription state is now:', isSubscribed);\r\n        OneSignalDektop.sendTags({\r\n          _id: id.toString(),\r\n          type: type\r\n        });\r\n      });\r\n    });\r\n    this.isInitOne = true;\r\n  }\r\n  oneSignalCordova(id, type) {\r\n    /* const notificationOpenedCallback = function(jsonData) {\r\n      alert('notificationOpenedCallback: ' + JSON.stringify(jsonData));\r\n    }; */\r\n    const oneSignal = window['plugins'].OneSignal;\r\n    oneSignal.startInit(\r\n      CONST_GENERAL.ONESIGNAL_APP_ID,\r\n      CONST_GENERAL.googleProjectNumber\r\n    );\r\n    /* oneSignal.handleNotificationOpened(notificationOpenedCallback); */\r\n    oneSignal.sendTags({\r\n      _id: id.toString(),\r\n      type: type\r\n    });\r\n    oneSignal.endInit();\r\n  }\r\n  private oneSignalLogoutDesktop() {\r\n    const OneSignalD = window['OneSignal'] || [];\r\n    console.log('Delete OneSignal');\r\n    OneSignalD.push(function() {\r\n      OneSignalD.deleteTags(['_id', 'type']);\r\n    });\r\n    this.isInitOne = false;\r\n  }\r\n  private oneSignalLogoutCordova() {\r\n    window['plugins'].OneSignal.deleteTags(['_id', 'type']);\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}