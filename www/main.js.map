{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_config/_const-general.ts","webpack:///./src/app/_config/_helpers.ts","webpack:///./src/app/_config/api.end-points.ts","webpack:///./src/app/_config/error.interceptor.ts","webpack:///./src/app/_config/jwt.interceptor.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/detail-adviser-admin/detail-adviser-admin.component.html","webpack:///./src/app/components/admin/detail-adviser-admin/detail-adviser-admin.component.scss","webpack:///./src/app/components/admin/detail-adviser-admin/detail-adviser-admin.component.ts","webpack:///./src/app/components/admin/detail-build-admin/detail-build-admin.component.html","webpack:///./src/app/components/admin/detail-build-admin/detail-build-admin.component.scss","webpack:///./src/app/components/admin/detail-build-admin/detail-build-admin.component.ts","webpack:///./src/app/components/admin/detail-buyer-admin/detail-buyer-admin.component.html","webpack:///./src/app/components/admin/detail-buyer-admin/detail-buyer-admin.component.scss","webpack:///./src/app/components/admin/detail-buyer-admin/detail-buyer-admin.component.ts","webpack:///./src/app/components/admin/detail-goal-admin/detail-goal-admin.component.html","webpack:///./src/app/components/admin/detail-goal-admin/detail-goal-admin.component.scss","webpack:///./src/app/components/admin/detail-goal-admin/detail-goal-admin.component.ts","webpack:///./src/app/components/admin/detail-pre-build/detail-pre-build.component.html","webpack:///./src/app/components/admin/detail-pre-build/detail-pre-build.component.scss","webpack:///./src/app/components/admin/detail-pre-build/detail-pre-build.component.ts","webpack:///./src/app/components/admin/detail-prop-admin/detail-prop-admin.component.html","webpack:///./src/app/components/admin/detail-prop-admin/detail-prop-admin.component.scss","webpack:///./src/app/components/admin/detail-prop-admin/detail-prop-admin.component.ts","webpack:///./src/app/components/admin/detail-salesprop-admin/detail-salesprop-admin.component.html","webpack:///./src/app/components/admin/detail-salesprop-admin/detail-salesprop-admin.component.scss","webpack:///./src/app/components/admin/detail-salesprop-admin/detail-salesprop-admin.component.ts","webpack:///./src/app/components/admin/detail-seller-admin/detail-seller-admin.component.html","webpack:///./src/app/components/admin/detail-seller-admin/detail-seller-admin.component.scss","webpack:///./src/app/components/admin/detail-seller-admin/detail-seller-admin.component.ts","webpack:///./src/app/components/admin/list-adviser-admin/list-adviser-admin.component.html","webpack:///./src/app/components/admin/list-adviser-admin/list-adviser-admin.component.scss","webpack:///./src/app/components/admin/list-adviser-admin/list-adviser-admin.component.ts","webpack:///./src/app/components/admin/list-build-admin/list-build-admin.component.html","webpack:///./src/app/components/admin/list-build-admin/list-build-admin.component.scss","webpack:///./src/app/components/admin/list-build-admin/list-build-admin.component.ts","webpack:///./src/app/components/admin/list-buyer-admin/list-buyer-admin.component.html","webpack:///./src/app/components/admin/list-buyer-admin/list-buyer-admin.component.scss","webpack:///./src/app/components/admin/list-buyer-admin/list-buyer-admin.component.ts","webpack:///./src/app/components/admin/list-credit-admin/list-credit-admin.component.html","webpack:///./src/app/components/admin/list-credit-admin/list-credit-admin.component.scss","webpack:///./src/app/components/admin/list-credit-admin/list-credit-admin.component.ts","webpack:///./src/app/components/admin/list-goals/list-goals.component.html","webpack:///./src/app/components/admin/list-goals/list-goals.component.scss","webpack:///./src/app/components/admin/list-goals/list-goals.component.ts","webpack:///./src/app/components/admin/list-maker-admin/list-maker-admin.component.html","webpack:///./src/app/components/admin/list-maker-admin/list-maker-admin.component.scss","webpack:///./src/app/components/admin/list-maker-admin/list-maker-admin.component.ts","webpack:///./src/app/components/admin/list-manager-admin/list-manager-admin.component.html","webpack:///./src/app/components/admin/list-manager-admin/list-manager-admin.component.scss","webpack:///./src/app/components/admin/list-manager-admin/list-manager-admin.component.ts","webpack:///./src/app/components/admin/list-oferts-admin/list-oferts-admin.component.html","webpack:///./src/app/components/admin/list-oferts-admin/list-oferts-admin.component.scss","webpack:///./src/app/components/admin/list-oferts-admin/list-oferts-admin.component.ts","webpack:///./src/app/components/admin/list-office-admin/list-office-admin.component.html","webpack:///./src/app/components/admin/list-office-admin/list-office-admin.component.scss","webpack:///./src/app/components/admin/list-office-admin/list-office-admin.component.ts","webpack:///./src/app/components/admin/list-pre-build/list-pre-build.component.html","webpack:///./src/app/components/admin/list-pre-build/list-pre-build.component.scss","webpack:///./src/app/components/admin/list-pre-build/list-pre-build.component.ts","webpack:///./src/app/components/admin/list-pre-buyer/list-pre-buyer.component.html","webpack:///./src/app/components/admin/list-pre-buyer/list-pre-buyer.component.scss","webpack:///./src/app/components/admin/list-pre-buyer/list-pre-buyer.component.ts","webpack:///./src/app/components/admin/list-prop-admin/list-prop-admin.component.html","webpack:///./src/app/components/admin/list-prop-admin/list-prop-admin.component.scss","webpack:///./src/app/components/admin/list-prop-admin/list-prop-admin.component.ts","webpack:///./src/app/components/admin/list-sales-admin/list-sales-admin.component.html","webpack:///./src/app/components/admin/list-sales-admin/list-sales-admin.component.scss","webpack:///./src/app/components/admin/list-sales-admin/list-sales-admin.component.ts","webpack:///./src/app/components/admin/list-salesprop-admin/list-salesprop-admin.component.html","webpack:///./src/app/components/admin/list-salesprop-admin/list-salesprop-admin.component.scss","webpack:///./src/app/components/admin/list-salesprop-admin/list-salesprop-admin.component.ts","webpack:///./src/app/components/admin/list-schedule-admin/list-schedule-admin.component.html","webpack:///./src/app/components/admin/list-schedule-admin/list-schedule-admin.component.scss","webpack:///./src/app/components/admin/list-schedule-admin/list-schedule-admin.component.ts","webpack:///./src/app/components/admin/list-seller-admin/list-seller-admin.component.html","webpack:///./src/app/components/admin/list-seller-admin/list-seller-admin.component.scss","webpack:///./src/app/components/admin/list-seller-admin/list-seller-admin.component.ts","webpack:///./src/app/components/admin/main-admin/main-admin.component.html","webpack:///./src/app/components/admin/main-admin/main-admin.component.scss","webpack:///./src/app/components/admin/main-admin/main-admin.component.ts","webpack:///./src/app/components/admin/simulate-search-admin/simulate-search-admin.component.html","webpack:///./src/app/components/admin/simulate-search-admin/simulate-search-admin.component.scss","webpack:///./src/app/components/admin/simulate-search-admin/simulate-search-admin.component.ts","webpack:///./src/app/components/adviser/new-edit-adviser/new-edit-adviser.component.html","webpack:///./src/app/components/adviser/new-edit-adviser/new-edit-adviser.component.scss","webpack:///./src/app/components/adviser/new-edit-adviser/new-edit-adviser.component.ts","webpack:///./src/app/components/build/new-edit-build/new-edit-build.component.html","webpack:///./src/app/components/build/new-edit-build/new-edit-build.component.scss","webpack:///./src/app/components/build/new-edit-build/new-edit-build.component.ts","webpack:///./src/app/components/buyer/calendar-buyer/calendar-buyer.component.html","webpack:///./src/app/components/buyer/calendar-buyer/calendar-buyer.component.scss","webpack:///./src/app/components/buyer/calendar-buyer/calendar-buyer.component.ts","webpack:///./src/app/components/buyer/credit-event-buyer/credit-event-buyer.component.html","webpack:///./src/app/components/buyer/credit-event-buyer/credit-event-buyer.component.scss","webpack:///./src/app/components/buyer/credit-event-buyer/credit-event-buyer.component.ts","webpack:///./src/app/components/buyer/detail-prop-buyer/detail-prop-buyer.component.html","webpack:///./src/app/components/buyer/detail-prop-buyer/detail-prop-buyer.component.scss","webpack:///./src/app/components/buyer/detail-prop-buyer/detail-prop-buyer.component.ts","webpack:///./src/app/components/buyer/event-detail-buyer/event-detail-buyer.component.html","webpack:///./src/app/components/buyer/event-detail-buyer/event-detail-buyer.component.scss","webpack:///./src/app/components/buyer/event-detail-buyer/event-detail-buyer.component.ts","webpack:///./src/app/components/buyer/inter-prop-buyer/inter-prop-buyer.component.html","webpack:///./src/app/components/buyer/inter-prop-buyer/inter-prop-buyer.component.scss","webpack:///./src/app/components/buyer/inter-prop-buyer/inter-prop-buyer.component.ts","webpack:///./src/app/components/buyer/list-prop-buyer/list-prop-buyer.component.html","webpack:///./src/app/components/buyer/list-prop-buyer/list-prop-buyer.component.scss","webpack:///./src/app/components/buyer/list-prop-buyer/list-prop-buyer.component.ts","webpack:///./src/app/components/buyer/new-buyer/new-buyer.component.html","webpack:///./src/app/components/buyer/new-buyer/new-buyer.component.scss","webpack:///./src/app/components/buyer/new-buyer/new-buyer.component.ts","webpack:///./src/app/components/buyer/ofert-buyer/ofert-buyer.component.html","webpack:///./src/app/components/buyer/ofert-buyer/ofert-buyer.component.scss","webpack:///./src/app/components/buyer/ofert-buyer/ofert-buyer.component.ts","webpack:///./src/app/components/credit/new-edit-credit/new-edit-credit.component.html","webpack:///./src/app/components/credit/new-edit-credit/new-edit-credit.component.scss","webpack:///./src/app/components/credit/new-edit-credit/new-edit-credit.component.ts","webpack:///./src/app/components/documents/documents.component.html","webpack:///./src/app/components/documents/documents.component.scss","webpack:///./src/app/components/documents/documents.component.ts","webpack:///./src/app/components/general/calendar-specific/calendar-specific.component.html","webpack:///./src/app/components/general/calendar-specific/calendar-specific.component.scss","webpack:///./src/app/components/general/calendar-specific/calendar-specific.component.ts","webpack:///./src/app/components/general/dialog-general/dialog-general.component.html","webpack:///./src/app/components/general/dialog-general/dialog-general.component.scss","webpack:///./src/app/components/general/dialog-general/dialog-general.component.ts","webpack:///./src/app/components/general/document-filter/document-filter.component.html","webpack:///./src/app/components/general/document-filter/document-filter.component.scss","webpack:///./src/app/components/general/document-filter/document-filter.component.ts","webpack:///./src/app/components/general/filter-adviser/filter-adviser.component.html","webpack:///./src/app/components/general/filter-adviser/filter-adviser.component.scss","webpack:///./src/app/components/general/filter-adviser/filter-adviser.component.ts","webpack:///./src/app/components/general/filter-build/filter-build.component.html","webpack:///./src/app/components/general/filter-build/filter-build.component.scss","webpack:///./src/app/components/general/filter-build/filter-build.component.ts","webpack:///./src/app/components/general/filter-maker/filter-maker.component.html","webpack:///./src/app/components/general/filter-maker/filter-maker.component.scss","webpack:///./src/app/components/general/filter-maker/filter-maker.component.ts","webpack:///./src/app/components/general/filter-seller/filter-seller.component.html","webpack:///./src/app/components/general/filter-seller/filter-seller.component.scss","webpack:///./src/app/components/general/filter-seller/filter-seller.component.ts","webpack:///./src/app/components/general/form-str-list/form-str-list.component.html","webpack:///./src/app/components/general/form-str-list/form-str-list.component.scss","webpack:///./src/app/components/general/form-str-list/form-str-list.component.ts","webpack:///./src/app/components/general/general-calendar/general-calendar.component.html","webpack:///./src/app/components/general/general-calendar/general-calendar.component.scss","webpack:///./src/app/components/general/general-calendar/general-calendar.component.ts","webpack:///./src/app/components/general/general-filter-buyer/general-filter-buyer.component.html","webpack:///./src/app/components/general/general-filter-buyer/general-filter-buyer.component.scss","webpack:///./src/app/components/general/general-filter-buyer/general-filter-buyer.component.ts","webpack:///./src/app/components/general/general-filters/general-filters.component.html","webpack:///./src/app/components/general/general-filters/general-filters.component.scss","webpack:///./src/app/components/general/general-filters/general-filters.component.ts","webpack:///./src/app/components/general/general-skeleton/general-skeleton.component.html","webpack:///./src/app/components/general/general-skeleton/general-skeleton.component.scss","webpack:///./src/app/components/general/general-skeleton/general-skeleton.component.ts","webpack:///./src/app/components/general/general-table/general-table.component.html","webpack:///./src/app/components/general/general-table/general-table.component.scss","webpack:///./src/app/components/general/general-table/general-table.component.ts","webpack:///./src/app/components/general/goal-progress/goal-progress.component.html","webpack:///./src/app/components/general/goal-progress/goal-progress.component.scss","webpack:///./src/app/components/general/goal-progress/goal-progress.component.ts","webpack:///./src/app/components/general/maps-button/maps-button.component.html","webpack:///./src/app/components/general/maps-button/maps-button.component.scss","webpack:///./src/app/components/general/maps-button/maps-button.component.ts","webpack:///./src/app/components/general/menu-general/menu-general.component.html","webpack:///./src/app/components/general/menu-general/menu-general.component.scss","webpack:///./src/app/components/general/menu-general/menu-general.component.ts","webpack:///./src/app/components/general/popover/popover.component.html","webpack:///./src/app/components/general/popover/popover.component.scss","webpack:///./src/app/components/general/popover/popover.component.ts","webpack:///./src/app/components/general/refre/refre.component.html","webpack:///./src/app/components/general/refre/refre.component.scss","webpack:///./src/app/components/general/refre/refre.component.ts","webpack:///./src/app/components/general/search-select/search-select.component.html","webpack:///./src/app/components/general/search-select/search-select.component.scss","webpack:///./src/app/components/general/search-select/search-select.component.ts","webpack:///./src/app/components/goals/new-edit-goal/new-edit-goal.component.html","webpack:///./src/app/components/goals/new-edit-goal/new-edit-goal.component.scss","webpack:///./src/app/components/goals/new-edit-goal/new-edit-goal.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/login/user-select/user-select.component.html","webpack:///./src/app/components/login/user-select/user-select.component.scss","webpack:///./src/app/components/login/user-select/user-select.component.ts","webpack:///./src/app/components/maker/new-edit-maker/new-edit-maker.component.html","webpack:///./src/app/components/maker/new-edit-maker/new-edit-maker.component.scss","webpack:///./src/app/components/maker/new-edit-maker/new-edit-maker.component.ts","webpack:///./src/app/components/manager/new-edit-manager/new-edit-manager.component.html","webpack:///./src/app/components/manager/new-edit-manager/new-edit-manager.component.scss","webpack:///./src/app/components/manager/new-edit-manager/new-edit-manager.component.ts","webpack:///./src/app/components/notification/list-notification/list-notification.component.html","webpack:///./src/app/components/notification/list-notification/list-notification.component.scss","webpack:///./src/app/components/notification/list-notification/list-notification.component.ts","webpack:///./src/app/components/oferts/new-edit-ofert/new-edit-ofert.component.html","webpack:///./src/app/components/oferts/new-edit-ofert/new-edit-ofert.component.scss","webpack:///./src/app/components/oferts/new-edit-ofert/new-edit-ofert.component.ts","webpack:///./src/app/components/office/new-edit-office/new-edit-office.component.html","webpack:///./src/app/components/office/new-edit-office/new-edit-office.component.scss","webpack:///./src/app/components/office/new-edit-office/new-edit-office.component.ts","webpack:///./src/app/components/pre-build/new-edit-pre-build/new-edit-pre-build.component.html","webpack:///./src/app/components/pre-build/new-edit-pre-build/new-edit-pre-build.component.scss","webpack:///./src/app/components/pre-build/new-edit-pre-build/new-edit-pre-build.component.ts","webpack:///./src/app/components/pre-buyer/pre-buyer.component.html","webpack:///./src/app/components/pre-buyer/pre-buyer.component.scss","webpack:///./src/app/components/pre-buyer/pre-buyer.component.ts","webpack:///./src/app/components/prop/new-edit-prop/new-edit-prop.component.html","webpack:///./src/app/components/prop/new-edit-prop/new-edit-prop.component.scss","webpack:///./src/app/components/prop/new-edit-prop/new-edit-prop.component.ts","webpack:///./src/app/components/schedule/new-edit-schedule/new-edit-schedule.component.html","webpack:///./src/app/components/schedule/new-edit-schedule/new-edit-schedule.component.scss","webpack:///./src/app/components/schedule/new-edit-schedule/new-edit-schedule.component.ts","webpack:///./src/app/components/schedule/personal-schedule/personal-schedule.component.html","webpack:///./src/app/components/schedule/personal-schedule/personal-schedule.component.scss","webpack:///./src/app/components/schedule/personal-schedule/personal-schedule.component.ts","webpack:///./src/app/components/seller/new-edit-seller/new-edit-seller.component.html","webpack:///./src/app/components/seller/new-edit-seller/new-edit-seller.component.scss","webpack:///./src/app/components/seller/new-edit-seller/new-edit-seller.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/services/administrator.service.ts","webpack:///./src/app/services/adviser.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/build.service.ts","webpack:///./src/app/services/buyer.service.ts","webpack:///./src/app/services/credit.service.ts","webpack:///./src/app/services/goal.service.ts","webpack:///./src/app/services/mail.service.ts","webpack:///./src/app/services/maker.service.ts","webpack:///./src/app/services/managers.service.ts","webpack:///./src/app/services/ofert.service.ts","webpack:///./src/app/services/office.service.ts","webpack:///./src/app/services/onesignal.service.ts","webpack:///./src/app/services/pre-build.service.ts","webpack:///./src/app/services/pre-buyer.service.ts","webpack:///./src/app/services/property.service.ts","webpack:///./src/app/services/sale.service.ts","webpack:///./src/app/services/schedule.service.ts","webpack:///./src/app/services/seller.service.ts","webpack:///./src/app/services/socket-io.service.ts","webpack:///./src/app/services/status-buyer-property.service.ts","webpack:///./src/app/services/user-session.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBiC;AACA;AACiB;AACT;AACS;AAEV;AACF;AACN;AAEV;AACS;AACY;AACd;AACF;AACiB;AACuC;AACN;AACF;AACW;AACH;AACH;AACd;AACN;AACM;AACc;AACM;AACvB;AACT;AAmCpD;AAC4C;AAC4B;AAChD;AACC;AACqD;AACG;AACW;AACR;AACA;AACT;AACK;AACJ;AACK;AACM;AACG;AAClB;AACS;AACb;AACO;AACM;AACL;AACK;AACR;AACW;AACG;AACtC;AACoC;AAChB;AACR;AACW;AACvC;AACgD;AACV;AACsB;AACf;AACA;AACN;AACA;AACH;AACA;AACe;AACM;AACM;AAClB;AACG;AACL;AACD;AACc;AACpB;AACd;AACiB;AACjD;AAC6D;AACpD;AACI;AACM;AACwB;AACb;AACyB;AAC1B;AACoB;AACM;AACN;AACe;AACH;AACJ;AAuJ3G;IAAA;IAAwB,CAAC;IAAZ,SAAS;QArJrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAc;gBACd,mHAAsB;gBACtB,iHAAsB;gBACtB,yHAAwB;gBACxB,4HAAyB;gBACzB,yHAAwB;gBACxB,sHAAuB;gBACvB,wGAAmB;gBACnB,kGAAiB;gBACjB,wGAAmB;gBACnB,sHAAuB;gBACvB,4HAAyB;gBACzB,qGAAkB;gBAClB,gHAAqB;gBACrB,sHAAuB;gBACvB,yHAAwB;gBACxB,oIAA2B;gBAC3B,4HAAyB;gBACzB,4HAAyB;gBACzB,mHAAsB;gBACtB,wHAAuB;gBACvB,oHAAsB;gBACtB,yHAAwB;gBACxB,+HAA0B;gBAC1B,kIAA2B;gBAC3B,gHAAqB;gBACrB,yHAAwB;gBACxB,4GAAoB;gBACpB,mHAAsB;gBACtB,yHAAwB;gBACxB,oHAAsB;gBACtB,yHAAwB;gBACxB,iHAAqB;gBACrB,4HAAwB;gBACxB,+HAA0B;gBAC1B,yFAAc;gBACd,6HAAyB;gBACzB,6GAAoB;gBACpB,qGAAkB;gBAClB,gHAAqB;gBACrB,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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./components/chat/chat.module\": [\n\t\t\"./src/app/components/chat/chat.module.ts\",\n\t\t\"components-chat-chat-module\"\n\t],\n\t\"./components/user-session/user-session/user-session.module\": [\n\t\t\"./src/app/components/user-session/user-session/user-session.module.ts\",\n\t\t\"components-user-session-user-session-user-session-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export const CONST_GENERAL = Object.freeze({\n  ONESIGNAL_APP_ID: '03441d74-5974-4324-8dce-c7cd5c9dcfd9',\n  REST_API_KEY: 'N2RmZjk5OGItZDNhNS00ZThlLTljZTItYmNiNWQ1M2I2Yzhl',\n  googleProjectNumber: '409059103026',\n});\n","import { IBuyer } from '../models/buyer.model';\nimport { IProperty } from '../models/property.model';\nimport { IBuild } from '../models/build.model';\n\n// filtro prop match\n/**\n *\n * @param buyer comprador\n * @param properties propiedades\n * @param percentage % minimo\n */\nexport function CalcPercentage(\n  buyer: IBuyer,\n  properties: IProperty[],\n  percentage: number\n) {\n  const propertiesMatch: IProperty[] = [];\n  properties.forEach(property => {\n    let sumTotal = 0;\n    let items = 17;\n    if (buyer.isRenter === property.isRent) {\n      sumTotal++;\n    }\n    if (\n      buyer.typeOfProperty.toLocaleLowerCase().trim() ===\n      property.typeOfProperty.toLocaleLowerCase().trim()\n    ) {\n      sumTotal++;\n    }\n    if (buyer.space <= property.space) {\n      sumTotal++;\n    }\n    if (buyer.dateToBuy === property.dateToBuy) {\n      sumTotal++;\n    }\n    if (\n      buyer.zone.toLocaleLowerCase().trim() ===\n      property.zone.toLocaleLowerCase().trim()\n    ) {\n      sumTotal++;\n    }\n    if (buyer.minPrice >= property.minPrice) {\n      sumTotal++;\n    }\n    if (buyer.maxPrice >= property.maxPrice) {\n      sumTotal++;\n    }\n    if (buyer.numRooms === property.numRooms) {\n      sumTotal++;\n    }\n    if (buyer.numCars <= property.numCars) {\n      sumTotal++;\n    }\n    if (buyer.isOld === property.isOld) {\n      sumTotal++;\n    }\n    if (buyer.isClose === property.isClose) {\n      sumTotal++;\n    }\n    if (buyer.numBathrooms <= property.numBathrooms) {\n      sumTotal++;\n    }\n    if (buyer.hasGarden === property.hasGarden) {\n      sumTotal++;\n    }\n    if (buyer.isLowLevel === property.isLowLevel) {\n      sumTotal++;\n    }\n    if (buyer.hasElevator === property.hasElevator) {\n      sumTotal++;\n    }\n    if (buyer.allServices === property.allServices) {\n      sumTotal++;\n    }\n    if (\n      buyer.wayToBuy.toLocaleLowerCase().trim() ===\n      property.wayToBuy.toLocaleLowerCase().trim()\n    ) {\n      sumTotal++;\n    }\n    if (buyer.tag.length !== 0 && property.tag.length !== 0) {\n      buyer.tag.forEach(tag => {\n        items++;\n        const isFind = property.tag.find(\n          t => t.toLocaleLowerCase().trim() === tag.toLocaleLowerCase().trim()\n        );\n        if (isFind) {\n          sumTotal++;\n        }\n      });\n    }\n    const avr = (sumTotal / items) * 100;\n    if (avr >= percentage) {\n      // add % avr\n      property['percentage'] = avr;\n      propertiesMatch.push(property);\n    }\n  });\n  properties.sort((a, b) => {\n    return b.percentage - a.percentage;\n  });\n  return properties;\n}\n\n// filtro buyers\nexport function BuyersFilters(\n  buyer: IBuyer,\n  filtersApply: {\n    day: number;\n    month: number;\n    year: number;\n    status: string;\n    property: string;\n  }\n) {\n  let isOK = true;\n  const buyerDate = new Date(buyer.timestamp);\n  // si existe prop\n  if (filtersApply.property !== undefined && filtersApply.property !== null) {\n    const isFind = buyer.statusBuyerProperty.some(\n      sbp => sbp.property.name === filtersApply.property\n    );\n    if (!isFind) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\n    if (buyerDate.getDate() !== filtersApply.day) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\n    if (buyerDate.getMonth() !== filtersApply.month) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\n    if (buyerDate.getFullYear() !== filtersApply.year) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.status !== undefined && filtersApply.status !== null) {\n    if (buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0) {\n      const isFinded = buyer.statusBuyerProperty.findIndex(\n        sbp => sbp.status === filtersApply.status\n      );\n      if (isFinded === -1) {\n        isOK = false;\n      }\n    } else {\n      if (filtersApply.status !== 'gris') {\n        isOK = false;\n      }\n    }\n  }\n  // end filters\n  return isOK;\n}\n\n// filtro dates\nexport function OnlyDates(\n  some: any,\n  filtersApply: {\n    day: number;\n    month: number;\n    year: number;\n    hourStart?: number;\n    hourEnd?: number;\n  }\n) {\n  console.log('fil', filtersApply);\n  console.log('some', some);\n  let isOK = true;\n  const buyerDate = new Date(some.timestamp);\n  // si existe\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\n    if (buyerDate.getDate() !== filtersApply.day) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\n    if (buyerDate.getMonth() !== filtersApply.month) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\n    if (buyerDate.getFullYear() !== filtersApply.year) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.hourEnd !== undefined && filtersApply.hourEnd !== null) {\n    if (some.hourEnd < filtersApply.hourEnd) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.hourStart !== undefined && filtersApply.hourStart !== null) {\n    if (some.hourStart > filtersApply.hourStart) {\n      console.log(false);\n      isOK = false;\n    }\n  }\n  // end filters\n  return isOK;\n}\n\n// filtro dates\nexport function SellerFilter(\n  some: any,\n  filtersApply: {\n    day: number;\n    month: number;\n    year: number;\n    isRenter: boolean;\n  }\n) {\n  let isOK = true;\n  const buyerDate = new Date(some.timestamp);\n  // si existe\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\n    if (buyerDate.getDate() !== filtersApply.day) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\n    if (buyerDate.getMonth() !== filtersApply.month) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\n    if (buyerDate.getFullYear() !== filtersApply.year) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.isRenter !== undefined && filtersApply.isRenter !== null) {\n    if (some.isRenter !== filtersApply.isRenter) {\n      isOK = false;\n    }\n  }\n  // end filters\n  return isOK;\n}\nexport function PropertyFilter(hopeProperty: IProperty, prop: IProperty) {\n  const propRes: IProperty[] = [];\n  let numFilters = 0;\n  let num = 0;\n  numFilters = 0;\n  let isHope = true;\n  // condiciones ve si existe\n  if (hopeProperty.wayToBuy) {\n    numFilters++;\n    // ve si coincide\n    if (hopeProperty.wayToBuy !== prop.wayToBuy) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.zone) {\n    numFilters++;\n    // ve si coincide\n    if (hopeProperty.zone !== prop.zone) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.typeOfProperty) {\n    numFilters++;\n    // ve si coincide\n    if (hopeProperty.typeOfProperty !== prop.typeOfProperty) {\n      isHope = false;\n    }\n  }\n  // solo ve si coincide\n  if (hopeProperty.allServices !== undefined) {\n    numFilters++;\n    if (hopeProperty.allServices !== prop.allServices) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.hasElevator !== undefined) {\n    numFilters++;\n    if (hopeProperty.hasElevator !== prop.hasElevator) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.isLowLevel !== undefined) {\n    numFilters++;\n    if (hopeProperty.isLowLevel !== prop.isLowLevel) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.hasGarden !== undefined) {\n    numFilters++;\n    if (hopeProperty.hasGarden !== prop.hasGarden) {\n      isHope = false;\n    }\n  }\n\n  if (prop.numBathrooms < hopeProperty.numBathrooms) {\n    isHope = false;\n  }\n  if (hopeProperty.numBathrooms > 0) {\n    numFilters++;\n  }\n  if (hopeProperty.isClose !== undefined) {\n    numFilters++;\n    if (prop.isClose !== hopeProperty.isClose) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.isOld !== undefined) {\n    numFilters++;\n    if (prop.isOld !== hopeProperty.isOld) {\n      isHope = false;\n    }\n  }\n\n  if (prop.numCars < hopeProperty.numCars) {\n    numFilters++;\n    isHope = false;\n  }\n  if (hopeProperty.numCars > 0) {\n    numFilters++;\n  }\n  if (prop.numRooms < hopeProperty.numRooms) {\n    isHope = false;\n  }\n  if (hopeProperty.numRooms > 0) {\n    numFilters++;\n  }\n  if (prop.space < hopeProperty.space) {\n    isHope = false;\n  }\n  if (hopeProperty.space > 0) {\n    numFilters++;\n  }\n  if (hopeProperty.isRent !== undefined) {\n    numFilters++;\n    if (prop.isRent !== hopeProperty.isRent) {\n      isHope = false;\n    }\n  }\n\n  if (hopeProperty.maxPrice) {\n    numFilters++;\n    if (prop.maxPrice > hopeProperty.maxPrice) {\n      isHope = false;\n    }\n  }\n  if (hopeProperty.minPrice > prop.minPrice) {\n    isHope = false;\n  }\n  if (hopeProperty.minPrice > 0) {\n    numFilters++;\n  }\n  // end condiciones\n  // ve si sigue siendo true\n  if (isHope) {\n    num = numFilters;\n    propRes.push(prop);\n  }\n  // end for\n  console.log(numFilters);\n  return { isHope: isHope, numOfFilters: numFilters };\n}\nexport function FormatDatesFront(dateInput: Date): string {\n  const day: string = new Date(dateInput).getDate().toString();\n  const month: string = (new Date(dateInput).getMonth() + 1).toString();\n  const year: string = new Date(dateInput).getFullYear().toString();\n  const date = day + '/' + month + '/' + year;\n  return date;\n}\nexport function FormatHoursFront(hours: number, minutes: number) {\n  let strFormat, strMin, strHour, strState;\n  if (minutes === 0 || minutes === undefined || minutes === null) {\n    strMin = '00';\n  } else if (minutes < 10) {\n    strMin = `0${minutes}`;\n  } else if (minutes >= 10) {\n    strMin = minutes.toString();\n  }\n  if (hours > 12) {\n    strHour = `${hours - 12}`;\n    strState = 'PM';\n  } else if (hours < 12) {\n    strHour = hours.toString();\n    strState = 'AM';\n  } else if (hours === 12) {\n    strHour = hours.toString();\n    strState = 'PM';\n  }\n  strFormat = `${strHour}:${strMin} ${strState}`;\n  return strFormat;\n}\nexport function GetPercentGoal(\n  goals: [\n    {\n      nameGoal: string;\n      isComplete: boolean;\n    }\n  ]\n): number {\n  let numOfComplete = 0;\n  goals.forEach(goal => {\n    if (goal.isComplete) {\n      numOfComplete++;\n    }\n  });\n  return +((numOfComplete * 100) / goals.length).toFixed(2);\n}\nexport function FilerBuild(\n  build: IBuild,\n  filtersApply: {\n    day: number;\n    month: number;\n    year: number;\n    day2: number;\n    month2: number;\n    year2: number;\n    isComplete: boolean;\n  }\n) {\n  let isOK = true;\n  let buildDateEnd;\n  const buildDateStart = new Date(build.timestamp);\n  if (build.timeLine) {\n    const lastIndex = build.timeLine.length - 1;\n    if (build.timeLine.length > 0) {\n      const lastPhase = build.timeLine[lastIndex];\n      buildDateEnd = new Date(\n        lastPhase.yearToEnd,\n        lastPhase.monthToEnd,\n        lastPhase.dayToEnd\n      );\n    }\n  }\n  let isComplete = true;\n  const isFinded = build.timeLine.find(t => t.isComplete === false);\n  if (isFinded) {\n    isComplete = false;\n  }\n  // inicio\n  // si existe\n  if (filtersApply.day !== undefined && filtersApply.day !== null) {\n    if (buildDateStart.getDate() !== filtersApply.day) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.month !== undefined && filtersApply.month !== null) {\n    if (buildDateStart.getMonth() !== filtersApply.month) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.year !== undefined && filtersApply.year !== null) {\n    if (buildDateStart.getFullYear() !== filtersApply.year) {\n      isOK = false;\n    }\n  }\n  // fin\n  // si existe\n  if (filtersApply.day2 !== undefined && filtersApply.day2 !== null) {\n    if (buildDateEnd.getDate() !== filtersApply.day2) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.month2 !== undefined && filtersApply.month2 !== null) {\n    if (buildDateEnd.getMonth() !== filtersApply.month2) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (filtersApply.year2 !== undefined && filtersApply.year2 !== null) {\n    if (buildDateEnd.getFullYear() !== filtersApply.year2) {\n      isOK = false;\n    }\n  }\n  // si existe\n  if (\n    filtersApply.isComplete !== undefined &&\n    filtersApply.isComplete !== null\n  ) {\n    if (isComplete !== filtersApply.isComplete) {\n      isOK = false;\n    }\n  }\n  // end filters\n  return isOK;\n}\nexport function DiffDays(dateToDiference: Date) {\n  const date1 = new Date(dateToDiference);\n  const date2 = new Date();\n  const timeDiff = Math.abs(date2.getTime() - date1.getTime());\n  const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  return diffDays;\n}\nexport function DiffDaysNoABS(dateToDiference: Date) {\n  const date1 = new Date(dateToDiference);\n  const date2 = new Date();\n  const timeDiff = date2.getTime() - date1.getTime();\n  const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  return diffDays;\n}\nexport function OpenGoogleMaps(schedule, city = 'Puebla') {\n  window.open(\n    'https://www.google.com/maps/search/?api=1&&q=' + schedule + ',' + city,\n    '_system',\n    'location=yes'\n  );\n}\n","// const ip = 'http://localhost:3004/';\n// const ip = 'http://31.220.52.51:3004/';\n\n// prod\nconst ip = 'http://31.220.58.194:3004/';\n\nconst apiUrl = ip + 'api/v1/';\nconst userSession = 'usersession/';\nconst buyer = 'buyer/';\nconst buyerId = 'bybuyerid/';\nconst property = 'property/';\nconst propertyAll = 'all/';\nconst bypropertyid = 'bypropertyid/';\nconst checkbuyer = 'checkbuyer/';\nconst propertybyBuyer = 'matchsearchbybuyer/';\nconst properySimulate = 'matchsearchbydemo/';\nconst statusBuyerProperty = 'status/';\nconst credit = 'credit/';\nconst schedule = 'schedule/';\nconst schedulePage = 'page/';\nconst scheduleId = 'byscheduleid/';\nconst scheduleCheck = 'checkschedule/';\nconst upgradeStatus = 'upgradelevelbyid/';\nconst ofert = 'ofert/';\nconst ofertId = 'byofertid/';\nconst administrator = 'administrator/';\nconst administratorEvents = 'events/';\nconst adviser = 'adviser/';\nconst adviserId = 'byadviserid/';\nconst seller = 'seller/';\nconst sellerId = 'bysellerid/';\nconst creditById = 'bycreditid/';\nconst sbpbypropertybuyer = 'bybuyerpropid/';\nconst goal = 'goal/';\nconst goalId = 'bygoalid/';\nconst build = 'build/';\nconst buildupdatephase = 'updatephase/';\nconst buildbybuildid = 'bybuildid/';\nconst uploadImg = 'uploadImg';\nconst maker = 'maker/';\nconst makerbymakerid = 'bymakerid/';\nconst deleteFile = 'deleteFile/';\nconst bystatusid = 'bystatusid/';\nconst sale = 'sale/';\nconst bysaleid = 'bysaleid/';\nconst byadviserid = 'byadviserid/';\nconst office = 'office/';\nconst byofficeid = 'byofficeid/';\nconst notification = 'notification/';\nconst notificatiosNoRead = 'noread/';\nconst notificatiosSearch = 'search/';\nconst onesignal = 'https://onesignal.com/api/v1/notifications';\nconst mail = 'mail/';\nconst mailAdd = 'add/';\nconst mailFind = 'find/';\nconst bybuyerid = 'bybuyerid/';\nconst chat = 'chat/';\nconst chatByProp = 'bypropertyid/';\nconst chatByCity = 'bychatcity/';\nconst addmessage = 'addmessage/';\nconst addread = 'addread/';\nconst bychatid = 'bychatid/';\nconst files = 'files/';\nconst prebuyer = 'prebuyer/';\nconst prebuild = 'prebuild/';\nconst management = 'management/';\nconst bymanagementid = 'bymanagementid/';\n\nexport const END_POINT = {\n  IP: ip,\n  //   session\n  USER_SESSION: apiUrl + userSession,\n  // buyer\n  BUYER_ID: apiUrl + buyer + buyerId,\n  BUYER: apiUrl + buyer,\n  BUYER_CHECK: apiUrl + buyer + checkbuyer,\n  // properties\n  PROPERTY_MATCH_SEARCH: apiUrl + property + propertybyBuyer,\n  PROPERTY_BY_ID: apiUrl + property + bypropertyid,\n  PROPERTY: apiUrl + property,\n  PROPERTY_ALL: apiUrl + property + propertyAll,\n  PROPERTY_SIMULATE: apiUrl + property + properySimulate,\n  // status buyer property\n  STATUS_BP: apiUrl + statusBuyerProperty,\n  STATUS_UPGRADE: apiUrl + statusBuyerProperty + upgradeStatus,\n  STATUS_SEARCH: apiUrl + statusBuyerProperty + sbpbypropertybuyer,\n  STATUS_ID: apiUrl + statusBuyerProperty + bystatusid,\n  STATUS_FIND_BY_BUYER: apiUrl + statusBuyerProperty + bybuyerid,\n  // credit\n  CREDIT: apiUrl + credit,\n  CREDIT_ID: apiUrl + credit + creditById,\n  // schedule\n  SCHEDULE: apiUrl + schedule,\n  SCHEDULE_PAGE: apiUrl + schedule + schedulePage,\n  SCHEDULE_CHECK: apiUrl + schedule + scheduleCheck,\n  SCHEDULE_ID: apiUrl + schedule + scheduleId,\n  // ofert\n  OFERT: apiUrl + ofert,\n  OFERT_ID: apiUrl + ofert + ofertId,\n  // admin\n  ADMINISTRATOR: apiUrl + administrator,\n  ADMINISTRATOR_EVENTS: apiUrl + administrator + administratorEvents,\n  // adviser\n  ADVISER: apiUrl + adviser,\n  ADVISER_ID: apiUrl + adviser + adviserId,\n  // seller\n  SELLER: apiUrl + seller,\n  SELLER_ID: apiUrl + seller + sellerId,\n  // goal\n  GOAL: apiUrl + goal,\n  GOAL_ID: apiUrl + goal + goalId,\n  // building\n  BUILD: apiUrl + build,\n  BUILD_ID: apiUrl + build + buildbybuildid,\n  BUILD_UPDATE_PHASE: apiUrl + build + buildupdatephase,\n  BUILD_UPLOAD_IMG: apiUrl + build + uploadImg,\n  BUILD_DELETE_IMG: apiUrl + build + deleteFile,\n  // maker\n  MAKER: apiUrl + maker,\n  MAKER_ID: apiUrl + maker + makerbymakerid,\n  // Sales\n  SALE: apiUrl + sale,\n  SALE_ID: apiUrl + sale + bysaleid,\n  SALE_ADV_ID: apiUrl + sale + byadviserid,\n  // Oficinista\n  OFFICE: apiUrl + office,\n  OFFICE_ID: apiUrl + office + byofficeid,\n  // Notifi\n  NOTIFICATION: apiUrl + notification,\n  NOTIFICATION_SEARCH: apiUrl + notification + notificatiosSearch,\n  NOTIFICATION_NOT_READ: apiUrl + notification + notificatiosNoRead,\n  // OneSignal\n  ONESIGNAL: onesignal,\n  // Email\n  EMAIL_ADD: apiUrl + mail + mailAdd,\n  EMAIL_FIND: apiUrl + mail + mailFind,\n  EMAIL_FILES: apiUrl + mail + files,\n  // chat\n  CHAT: apiUrl + chat,\n  CHAT_PROP_ID: apiUrl + chat + chatByProp,\n  CHAT_CITY_ID: apiUrl + chat + chatByCity,\n  CHAT_ID: apiUrl + chat + bychatid,\n  CHAT_ADD_MSG: apiUrl + chat + addmessage,\n  CHAT_ADD_READ: apiUrl + chat + addread,\n  // PRE\n  PRE_BUYER: apiUrl + prebuyer,\n  PRE_BUILD: apiUrl + prebuild,\n  //  management\n  MANAGER: apiUrl + management,\n  MANAGER_ID: apiUrl + management + bymanagementid\n};\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserSessionService } from '../services/user-session.service';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private userSessionService: UserSessionService,\n    private alertCtrl: AlertController,\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError(err => {\n        if (err.status === 401) {\n          this.presentAlert();\n          // auto logout if 401 response returned from api\n          this.userSessionService.loggout();\n          //   location.reload(true);\n        }\n        if (err.status === 500) {\n          this.presentAlert();\n          // auto logout if 401 response returned from api\n          this.userSessionService.loggout();\n          //   location.reload(true);\n        }\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      }),\n    );\n  }\n  async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Error',\n      subHeader: '',\n      message: 'Se ha detectado un error.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserSessionService } from '../services/user-session.service';\nimport { END_POINT } from './api.end-points';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = this.injector.get(UserSessionService).userSession.value;\n    const isOneSignal = request.url.indexOf(END_POINT.ONESIGNAL);\n    if (currentUser && currentUser.token && isOneSignal === -1) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { ListPropBuyerComponent } from './components/buyer/list-prop-buyer/list-prop-buyer.component';\nimport { CalendarBuyerComponent } from './components/buyer/calendar-buyer/calendar-buyer.component';\nimport { EventDetailBuyerComponent } from './components/buyer/event-detail-buyer/event-detail-buyer.component';\nimport { DetailPropBuyerComponent } from './components/buyer/detail-prop-buyer/detail-prop-buyer.component';\nimport { UserSelectComponent } from './components/login/user-select/user-select.component';\nimport { NewBuyerComponent } from './components/buyer/new-buyer/new-buyer.component';\nimport { InterPropBuyerComponent } from './components/buyer/inter-prop-buyer/inter-prop-buyer.component';\nimport { CreditEventBuyerComponent } from './components/buyer/credit-event-buyer/credit-event-buyer.component';\nimport { OfertBuyerComponent } from './components/buyer/ofert-buyer/ofert-buyer.component';\nimport { MainAdminComponent } from './components/admin/main-admin/main-admin.component';\nimport { ListBuyerAdminComponent } from './components/admin/list-buyer-admin/list-buyer-admin.component';\nimport { DetailBuyerAdminComponent } from './components/admin/detail-buyer-admin/detail-buyer-admin.component';\nimport { ListAdviserAdminComponent } from './components/admin/list-adviser-admin/list-adviser-admin.component';\nimport { NewEditAdviserComponent } from './components/adviser/new-edit-adviser/new-edit-adviser.component';\nimport { DetailAdviserAdminComponent } from './components/admin/detail-adviser-admin/detail-adviser-admin.component';\nimport { ListSellerAdminComponent } from './components/admin/list-seller-admin/list-seller-admin.component';\nimport { DetailSellerAdminComponent } from './components/admin/detail-seller-admin/detail-seller-admin.component';\nimport { NewEditSellerComponent } from './components/seller/new-edit-seller/new-edit-seller.component';\nimport { NewEditPropComponent } from './components/prop/new-edit-prop/new-edit-prop.component';\nimport { ListPropAdminComponent } from './components/admin/list-prop-admin/list-prop-admin.component';\nimport { DetailPropAdminComponent } from './components/admin/detail-prop-admin/detail-prop-admin.component';\nimport { ListCreditAdminComponent } from './components/admin/list-credit-admin/list-credit-admin.component';\nimport { NewEditCreditComponent } from './components/credit/new-edit-credit/new-edit-credit.component';\nimport { ListOfertsAdminComponent } from './components/admin/list-oferts-admin/list-oferts-admin.component';\nimport { NewEditOfertComponent } from './components/oferts/new-edit-ofert/new-edit-ofert.component';\nimport { ListScheduleAdminComponent } from './components/admin/list-schedule-admin/list-schedule-admin.component';\nimport { NewEditScheduleComponent } from './components/schedule/new-edit-schedule/new-edit-schedule.component';\nimport { RefreComponent } from './components/general/refre/refre.component';\nimport { PersonalScheduleComponent } from './components/schedule/personal-schedule/personal-schedule.component';\nimport { ListGoalsComponent } from './components/admin/list-goals/list-goals.component';\nimport { NewEditGoalComponent } from './components/goals/new-edit-goal/new-edit-goal.component';\nimport { DetailGoalAdminComponent } from './components/admin/detail-goal-admin/detail-goal-admin.component';\nimport { SimulateSearchAdminComponent } from './components/admin/simulate-search-admin/simulate-search-admin.component';\nimport { ListBuildAdminComponent } from './components/admin/list-build-admin/list-build-admin.component';\nimport { NewEditBuildComponent } from './components/build/new-edit-build/new-edit-build.component';\nimport { ListMakerAdminComponent } from './components/admin/list-maker-admin/list-maker-admin.component';\nimport { NewEditMakerComponent } from './components/maker/new-edit-maker/new-edit-maker.component';\nimport { DetailBuildAdminComponent } from './components/admin/detail-build-admin/detail-build-admin.component';\nimport { ListSalespropAdminComponent } from './components/admin/list-salesprop-admin/list-salesprop-admin.component';\nimport { DetailSalespropAdminComponent } from './components/admin/detail-salesprop-admin/detail-salesprop-admin.component';\nimport { ListSalesAdminComponent } from './components/admin/list-sales-admin/list-sales-admin.component';\nimport { ListOfficeAdminComponent } from './components/admin/list-office-admin/list-office-admin.component';\nimport { NewEditOfficeComponent } from './components/office/new-edit-office/new-edit-office.component';\nimport { ListNotificationComponent } from './components/notification/list-notification/list-notification.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { DocumentsComponent } from './components/documents/documents.component';\nimport { ListPreBuyerComponent } from './components/admin/list-pre-buyer/list-pre-buyer.component';\nimport { PreBuyerComponent } from './components/pre-buyer/pre-buyer.component';\nimport { ListPreBuildComponent } from './components/admin/list-pre-build/list-pre-build.component';\nimport { NewEditPreBuildComponent } from './components/pre-build/new-edit-pre-build/new-edit-pre-build.component';\nimport { DetailPreBuildComponent } from './components/admin/detail-pre-build/detail-pre-build.component';\nimport { ListManagerAdminComponent } from './components/admin/list-manager-admin/list-manager-admin.component';\nimport { NewEditManagerComponent } from './components/manager/new-edit-manager/new-edit-manager.component';\n\nconst routes: Routes = [\n  // Rutas\n  // roles : | 'administrator' | 'buyer' | 'seller' | 'adviser' | 'management' | 'maker' | 'office';\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'list-prop-buyer',\n    component: ListPropBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  {\n    path: 'calendar-buyer',\n    component: CalendarBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  {\n    path: 'event-detail-buyer',\n    component: EventDetailBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  {\n    path: 'buyer-property-detail',\n    component: DetailPropBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  { path: 'login-select-user', component: UserSelectComponent },\n  { path: 'new-buyer', component: NewBuyerComponent },\n  {\n    path: 'inter-prop-buyer',\n    component: InterPropBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  {\n    path: 'credit-event-buyer',\n    component: CreditEventBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  {\n    path: 'ofert-buyer',\n    component: OfertBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['buyer'] }\n  },\n  {\n    path: 'main-admin',\n    component: MainAdminComponent,\n    canActivate: [AuthGuardService],\n    data: { rol: ['administrator'] }\n  },\n  {\n    path: 'list-buyer-admin',\n    component: ListBuyerAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-buyer-admin',\n    component: DetailBuyerAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-adviser-admin',\n    component: ListAdviserAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-adviser',\n    component: NewEditAdviserComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-adviser-admin',\n    component: DetailAdviserAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-seller-admin',\n    component: ListSellerAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-seller-admin',\n    component: DetailSellerAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-seller',\n    component: NewEditSellerComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-prop-admin',\n    component: ListPropAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-prop',\n    component: NewEditPropComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-prop-admin',\n    component: DetailPropAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'seller', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-credit-admin',\n    component: ListCreditAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-credit',\n    component: NewEditCreditComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-ofert-admin',\n    component: ListOfertsAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-ofert',\n    component: NewEditOfertComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-schedule',\n    component: NewEditScheduleComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-schedule-admin',\n    component: ListScheduleAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  { path: 'personal-schedule', component: PersonalScheduleComponent },\n  { path: 'RefrshComponent', component: RefreComponent },\n  {\n    path: 'list-goals-admin',\n    component: ListGoalsComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-goal',\n    component: NewEditGoalComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-goal-admin',\n    component: DetailGoalAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'simulate-search-admin',\n    component: SimulateSearchAdminComponent\n  },\n  {\n    path: 'list-build-admin',\n    component: ListBuildAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-build',\n    component: NewEditBuildComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-maker-admin',\n    component: ListMakerAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-maker',\n    component: NewEditMakerComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-build-admin',\n    component: DetailBuildAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office', 'maker']\n    }\n  },\n  {\n    path: 'list-salesprop-admin',\n    component: ListSalespropAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'detail-salesprop-admin',\n    component: DetailSalespropAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-sales-admin',\n    component: ListSalesAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-office-admin',\n    component: ListOfficeAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management']\n    }\n  },\n  {\n    path: 'new-edit-office',\n    component: NewEditOfficeComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-manager-admin',\n    component: ListManagerAdminComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-manager',\n    component: NewEditManagerComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    }\n  },\n  { path: 'list-notification', component: ListNotificationComponent },\n  {\n    path: 'user-session',\n    loadChildren:\n      './components/user-session/user-session/user-session.module#UserSessionPageModule'\n    /*  canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'adviser', 'management', 'office'],\n    }, */\n  },\n  {\n    path: 'chat',\n    loadChildren: './components/chat/chat.module#ChatPageModule'\n  },\n  {\n    path: 'documents',\n    component: DocumentsComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    }\n  },\n  {\n    path: 'list-prebuyer-admin',\n    component: ListPreBuyerComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-prebuyer',\n    component: PreBuyerComponent\n    /* canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    } */\n  },\n  {\n    path: 'list-prebuild-admin',\n    component: ListPreBuildComponent,\n    canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    }\n  },\n  {\n    path: 'new-edit-prebuild',\n    component: NewEditPreBuildComponent\n    /* canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    } */\n  },\n  {\n    path: 'detail-prebuild-admin',\n    component: DetailPreBuildComponent\n    /* canActivate: [AuthGuardService],\n    data: {\n      rol: ['administrator', 'management', 'office']\n    } */\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<ion-app>\\n  <ion-split-pane>\\n    <ion-menu [hidden]=\\\"!isLoggin\\\" class=\\\"menu-desktop \\\" type=\\\"overlay\\\">\\n      <ion-header>\\n        <ion-toolbar color=\\\"primary\\\">\\n          <ion-title>Menu</ion-title>\\n        </ion-toolbar>\\n      </ion-header>\\n      <ion-content>\\n        <ion-list lines=\\\"none\\\">\\n          <ion-menu-toggle auto-hide=\\\"false\\\">\\n            <span *ngFor=\\\"let p of appPages\\\">\\n              <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'background-item-menu':link === p.url }\\\" (click)=\\\"link = p.url \\\"\\n                [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"[p.url]\\\" *ngIf=\\\"user && (user.type === p.userType || p.userType === 'all') \\\">\\n                <ion-icon slot=\\\"start\\\" [name]=\\\"p.icon\\\"></ion-icon>\\n                <ion-label>\\n                  {{p.title}}\\n                </ion-label>\\n                <ion-badge *ngIf=\\\" (numOfNewNoti | async) > 0 && p.url === '/list-notification'\\\" color=\\\"danger\\\" slot=\\\"end\\\">\\n                  {{(numOfNewNoti | async)}}\\n                </ion-badge>\\n              </ion-item>\\n            </span>\\n\\n            <ion-item (click)=\\\"logout()\\\" [routerDirection]=\\\"'root'\\\" routerLink=\\\"/login\\\">\\n              <!-- <ion-item (click)=\\\"logout()\\\"> -->\\n              <ion-icon slot=\\\"start\\\" name=\\\"log-out\\\"></ion-icon>\\n              <ion-label>\\n                Cerrar Sesión\\n              </ion-label>\\n\\n            </ion-item>\\n            <!-- <ion-item>\\n              <ion-label>\\n                {{typeDevice}}\\n              </ion-label>\\n            </ion-item> -->\\n          </ion-menu-toggle>\\n        </ion-list>\\n      </ion-content>\\n    </ion-menu>\\n\\n\\n    <ion-router-outlet main></ion-router-outlet>\\n  </ion-split-pane>\\n</ion-app>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Platform, NavController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Storage } from '@ionic/storage';\nimport { UserSessionService } from './services/user-session.service';\nimport { Router } from '@angular/router';\nimport { IUserSession } from './models/userSession.model';\nimport { CONST_GENERAL } from './_config/_const-general';\nimport { map } from 'rxjs/operators';\nimport { SocketIoService } from './services/socket-io.service';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { OnesignalService } from './services/onesignal.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  public appPages = [\n    // buyer\n    {\n      title: 'Propiedades',\n      url: '/list-prop-buyer',\n      icon: 'business',\n      userType: 'buyer'\n    },\n    {\n      title: 'Calendario',\n      url: '/calendar-buyer',\n      icon: 'calendar',\n      userType: 'buyer'\n    },\n    {\n      title: 'Lista de deseos',\n      url: '/inter-prop-buyer',\n      icon: 'heart',\n      userType: 'buyer'\n    },\n    {\n      title: 'Ofertas',\n      url: '/ofert-buyer',\n      icon: 'clipboard',\n      userType: 'buyer'\n    },\n    {\n      title: 'Editar Perfil',\n      url: '/new-buyer',\n      icon: 'contact',\n      userType: 'buyer'\n    },\n    {\n      title: 'Chat',\n      url: '/chat',\n      icon: 'chatbubbles',\n      userType: 'buyer'\n    },\n    // admin\n    {\n      title: 'Principal',\n      url: '/main-admin',\n      icon: 'home',\n      userType: 'administrator'\n    },\n    {\n      title: 'Consumidores',\n      url: '/list-buyer-admin',\n      icon: 'clipboard',\n      userType: 'administrator'\n    },\n    {\n      title: 'Asesores',\n      url: '/list-adviser-admin',\n      icon: 'people',\n      userType: 'administrator'\n    },\n    {\n      title: 'Dueño',\n      url: '/list-seller-admin',\n      icon: 'cash',\n      userType: 'administrator'\n    },\n    {\n      title: 'Oficina',\n      url: '/list-office-admin',\n      icon: 'desktop',\n      userType: 'administrator'\n    },\n    {\n      title: 'Gerencia',\n      url: '/list-manager-admin',\n      icon: 'cog',\n      userType: 'administrator'\n    },\n    {\n      title: 'Propiedades',\n      url: '/list-prop-admin',\n      icon: 'business',\n      userType: 'administrator'\n    },\n    {\n      title: 'Créditos',\n      url: '/list-credit-admin',\n      icon: 'document',\n      userType: 'administrator'\n    },\n    {\n      title: 'Ofertas',\n      url: '/list-ofert-admin',\n      icon: 'card',\n      userType: 'administrator'\n    },\n    {\n      title: 'Obras',\n      url: '/list-build-admin',\n      icon: 'construct',\n      userType: 'administrator'\n    },\n    {\n      title: 'Constructores',\n      url: '/list-maker-admin',\n      icon: 'walk',\n      userType: 'administrator'\n    },\n    {\n      title: 'Calendario',\n      url: '/list-schedule-admin',\n      icon: 'calendar',\n      userType: 'administrator'\n    },\n    {\n      title: 'Metas',\n      url: '/list-goals-admin',\n      icon: 'stats',\n      userType: 'administrator'\n    },\n    {\n      title: 'Simulador Match',\n      url: '/simulate-search-admin',\n      icon: 'heart-empty',\n      userType: 'administrator'\n    },\n    {\n      title: 'Propiedades Apartadas',\n      url: '/list-salesprop-admin',\n      icon: 'timer',\n      userType: 'administrator'\n    },\n    {\n      title: 'Propiedades Aquiridas',\n      url: '/list-sales-admin',\n      icon: 'trending-up',\n      userType: 'administrator'\n    },\n    {\n      title: 'Chat',\n      url: '/chat',\n      icon: 'chatbubbles',\n      userType: 'administrator'\n    },\n    {\n      title: 'Documentos',\n      url: '/documents',\n      icon: 'archive',\n      userType: 'administrator'\n    },\n    {\n      title: 'Usuarios Preventa',\n      url: '/list-prebuyer-admin',\n      icon: 'wallet',\n      userType: 'administrator'\n    },\n    {\n      title: 'Obras Preventa',\n      url: '/list-prebuild-admin',\n      icon: 'build',\n      userType: 'administrator'\n    },\n    // asesores\n    {\n      title: 'Consumidores',\n      url: '/list-buyer-admin',\n      icon: 'clipboard',\n      userType: 'adviser'\n    },\n    {\n      title: 'Propiedades',\n      url: '/list-prop-admin',\n      icon: 'business',\n      userType: 'adviser'\n    },\n    {\n      title: 'Calendario',\n      url: '/list-schedule-admin',\n      icon: 'calendar',\n      userType: 'adviser'\n    },\n    {\n      title: 'Metas',\n      url: '/list-goals-admin',\n      icon: 'stats',\n      userType: 'adviser'\n    },\n    {\n      title: 'Perfil',\n      url: '/new-edit-adviser',\n      icon: 'contact',\n      userType: 'adviser'\n    },\n    {\n      title: 'Simulador Match',\n      url: '/simulate-search-admin',\n      icon: 'heart-empty',\n      userType: 'adviser'\n    },\n    // Seller\n    {\n      title: 'Consumidores',\n      url: '/list-buyer-admin',\n      icon: 'clipboard',\n      userType: 'seller'\n    },\n    {\n      title: 'Propiedades',\n      url: '/list-prop-admin',\n      icon: 'business',\n      userType: 'seller'\n    },\n    {\n      title: 'Perfil',\n      url: '/new-edit-seller',\n      icon: 'contact',\n      userType: 'seller'\n    },\n    {\n      title: 'Simulador Match',\n      url: '/simulate-search-admin',\n      icon: 'heart-empty',\n      userType: 'seller'\n    },\n    {\n      title: 'Chat',\n      url: '/chat',\n      icon: 'chatbubbles',\n      userType: 'seller'\n    },\n    // office\n    {\n      title: 'Consumidores',\n      url: '/list-buyer-admin',\n      icon: 'clipboard',\n      userType: 'office'\n    },\n    {\n      title: 'Asesores',\n      url: '/list-adviser-admin',\n      icon: 'people',\n      userType: 'office'\n    },\n    {\n      title: 'Dueño',\n      url: '/list-seller-admin',\n      icon: 'cash',\n      userType: 'office'\n    },\n    {\n      title: 'Propiedades',\n      url: '/list-prop-admin',\n      icon: 'business',\n      userType: 'office'\n    },\n    {\n      title: 'Créditos',\n      url: '/list-credit-admin',\n      icon: 'document',\n      userType: 'office'\n    },\n    {\n      title: 'Ofertas',\n      url: '/list-ofert-admin',\n      icon: 'card',\n      userType: 'office'\n    },\n    {\n      title: 'Obras',\n      url: '/list-build-admin',\n      icon: 'construct',\n      userType: 'office'\n    },\n    {\n      title: 'Constructores',\n      url: '/list-maker-admin',\n      icon: 'walk',\n      userType: 'office'\n    },\n    {\n      title: 'Calendario',\n      url: '/list-schedule-admin',\n      icon: 'calendar',\n      userType: 'office'\n    },\n    {\n      title: 'Metas',\n      url: '/list-goals-admin',\n      icon: 'stats',\n      userType: 'office'\n    },\n    {\n      title: 'Simulador Match',\n      url: '/simulate-search-admin',\n      icon: 'heart-empty',\n      userType: 'office'\n    },\n    {\n      title: 'Propiedades Apartadas',\n      url: '/list-salesprop-admin',\n      icon: 'timer',\n      userType: 'office'\n    },\n    {\n      title: 'Propiedades Aquiridas',\n      url: '/list-sales-admin',\n      icon: 'trending-up',\n      userType: 'office'\n    },\n    {\n      title: 'Perfil',\n      url: '/new-edit-office',\n      icon: 'contact',\n      userType: 'office'\n    },\n    {\n      title: 'Chat',\n      url: '/chat',\n      icon: 'chatbubbles',\n      userType: 'office'\n    },\n    {\n      title: 'Documentos',\n      url: '/documents',\n      icon: 'archive',\n      userType: 'office'\n    },\n    {\n      title: 'Usuarios Preventa',\n      url: '/list-prebuyer-admin',\n      icon: 'wallet',\n      userType: 'office'\n    },\n    {\n      title: 'Obras Preventa',\n      url: '/list-prebuild-admin',\n      icon: 'build',\n      userType: 'office'\n    },\n    // makers\n    {\n      title: 'Obra',\n      url: '/detail-build-admin',\n      icon: 'construct',\n      userType: 'maker'\n    },\n    // prebuyer\n    {\n      title: 'Preventa',\n      url: '/login-select-user',\n      icon: 'construct',\n      userType: 'preBuyer'\n    },\n    {\n      title: 'Chat',\n      url: '/chat',\n      icon: 'chatbubbles',\n      userType: 'preBuyer'\n    },\n    // list-notification\n    {\n      title: 'Notificaciones',\n      url: '/list-notification',\n      icon: 'notifications',\n      userType: 'all'\n    }\n  ];\n  isLoggin = false;\n  user: IUserSession;\n  link: string;\n  numOfNewNoti: BehaviorSubject<number>;\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private storage: Storage,\n    private userSessionService: UserSessionService,\n    private router: Router,\n    private navController: NavController,\n    private socketIOService: SocketIoService,\n    private oneSignalService: OnesignalService\n  ) {\n    this.initializeApp();\n    this.getNotification();\n    this.numOfNewNoti = socketIOService.numOfNewNoti;\n    // socketIOService.numOfNewNoti.subscribe(c => console.log(c));\n    userSessionService.userSession.subscribe(user => {\n      if (user.name) {\n        this.isLoggin = true;\n        this.user = user;\n        this.setNotificationStart(user.id, user.type);\n        // no hay en local manda a login\n      } else {\n        this.isLoggin = false;\n        this.user = undefined;\n        this.navController.navigateRoot('login', false);\n        /*  this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['login'])); */\n      }\n      // item select\n      if (user.type === 'administrator') {\n        this.link = '/main-admin';\n      } else {\n        this.link = '/list-buyer-admin';\n      }\n    });\n    router.events.pipe(map((m: any) => m.url)).subscribe(r => {\n      if (r !== undefined) {\n        const urlSet = this.appPages.map(ap => ap.url).find(url => url === r);\n        if (urlSet) {\n          this.link = r;\n        }\n      }\n    });\n    // android one signal\n    userSessionService.activateMenu.subscribe(str => {\n      if (str === 'list-notification') {\n        navController.navigateRoot(str);\n      }\n    });\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // this.statusBar.styleDefault();\n      this.statusBar.overlaysWebView(false);\n      this.statusBar.styleBlackTranslucent();\n      this.splashScreen.hide();\n    });\n  }\n  logout() {\n    this.storage.remove('userSessionCurrent').then(() => {\n      this.navController.navigateRoot('login', false);\n      /* this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['login'])); */\n    });\n  }\n  // num of no read\n  getNotification() {\n    this.socketIOService.onNewPost().subscribe(n => {\n      const isForMe =\n        !!n.receiversId.find(r => r === this.user.id) ||\n        !!n.tags.find(t => t === this.user.type);\n      if (isForMe) {\n        this.socketIOService.addNum();\n      }\n    });\n  }\n  setNotificationStart(id, tags) {\n    this.socketIOService.resetNum();\n    this.oneSignalService.notRead(id, tags).subscribe(nts => {\n      console.log('no read', nts);\n      nts.forEach(n => {\n        this.socketIOService.addNum();\n      });\n    });\n  }\n}\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, RouteReuseStrategy, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { AppMaterialModule } from './material.module';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { UserSessionService } from './services/user-session.service';\nimport { GeneralCalendarComponent } from './components/general/general-calendar/general-calendar.component';\nimport { ListPropBuyerComponent } from './components/buyer/list-prop-buyer/list-prop-buyer.component';\nimport { CalendarBuyerComponent } from './components/buyer/calendar-buyer/calendar-buyer.component';\nimport { EventDetailBuyerComponent } from './components/buyer/event-detail-buyer/event-detail-buyer.component';\nimport { DetailPropBuyerComponent } from './components/buyer/detail-prop-buyer/detail-prop-buyer.component';\nimport { GeneralFiltersComponent } from './components/general/general-filters/general-filters.component';\nimport { UserSelectComponent } from './components/login/user-select/user-select.component';\nimport { NewBuyerComponent } from './components/buyer/new-buyer/new-buyer.component';\nimport { OfertBuyerComponent } from './components/buyer/ofert-buyer/ofert-buyer.component';\nimport { InterPropBuyerComponent } from './components/buyer/inter-prop-buyer/inter-prop-buyer.component';\nimport { CreditEventBuyerComponent } from './components/buyer/credit-event-buyer/credit-event-buyer.component';\nimport { MainAdminComponent } from './components/admin/main-admin/main-admin.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatGridListModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatTooltipModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatBottomSheetModule,\n  MatSnackBarModule,\n  MatAutocompleteModule,\n  MatExpansionModule,\n  MatDialogModule,\n  MatRadioModule,\n  MatTabsModule,\n  MatProgressSpinnerModule,\n  MatDividerModule,\n  MatDatepickerModule,\n  NativeDateModule,\n  MAT_DATE_LOCALE,\n  MatProgressBarModule,\n  MatStepperModule,\n  MatVerticalStepper,\n  MatStep\n} from '@angular/material';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { GeneralTableComponent } from './components/general/general-table/general-table.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ListBuyerAdminComponent } from './components/admin/list-buyer-admin/list-buyer-admin.component';\nimport { GeneralSkeletonComponent } from './components/general/general-skeleton/general-skeleton.component';\nimport { GeneralFilterBuyerComponent } from './components/general/general-filter-buyer/general-filter-buyer.component';\nimport { DetailBuyerAdminComponent } from './components/admin/detail-buyer-admin/detail-buyer-admin.component';\nimport { ListAdviserAdminComponent } from './components/admin/list-adviser-admin/list-adviser-admin.component';\nimport { FilterAdviserComponent } from './components/general/filter-adviser/filter-adviser.component';\nimport { NewEditAdviserComponent } from './components/adviser/new-edit-adviser/new-edit-adviser.component';\nimport { NewEditSellerComponent } from './components/seller/new-edit-seller/new-edit-seller.component';\nimport { ListSellerAdminComponent } from './components/admin/list-seller-admin/list-seller-admin.component';\nimport { DetailSellerAdminComponent } from './components/admin/detail-seller-admin/detail-seller-admin.component';\nimport { DetailAdviserAdminComponent } from './components/admin/detail-adviser-admin/detail-adviser-admin.component';\nimport { FilterSellerComponent } from './components/general/filter-seller/filter-seller.component';\nimport { DetailPropAdminComponent } from './components/admin/detail-prop-admin/detail-prop-admin.component';\nimport { NewEditPropComponent } from './components/prop/new-edit-prop/new-edit-prop.component';\nimport { ListPropAdminComponent } from './components/admin/list-prop-admin/list-prop-admin.component';\nimport { ListCreditAdminComponent } from './components/admin/list-credit-admin/list-credit-admin.component';\nimport { NewEditCreditComponent } from './components/credit/new-edit-credit/new-edit-credit.component';\nimport { ListOfertsAdminComponent } from './components/admin/list-oferts-admin/list-oferts-admin.component';\nimport { NewEditOfertComponent } from './components/oferts/new-edit-ofert/new-edit-ofert.component';\nimport { NewEditScheduleComponent } from './components/schedule/new-edit-schedule/new-edit-schedule.component';\nimport { ListScheduleAdminComponent } from './components/admin/list-schedule-admin/list-schedule-admin.component';\nimport { RefreComponent } from './components/general/refre/refre.component';\nimport { PersonalScheduleComponent } from './components/schedule/personal-schedule/personal-schedule.component';\nimport { NewEditGoalComponent } from './components/goals/new-edit-goal/new-edit-goal.component';\nimport { ListGoalsComponent } from './components/admin/list-goals/list-goals.component';\nimport { GoalProgressComponent } from './components/general/goal-progress/goal-progress.component';\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { DetailGoalAdminComponent } from './components/admin/detail-goal-admin/detail-goal-admin.component';\nimport { FormStrListComponent } from './components/general/form-str-list/form-str-list.component';\nimport { SimulateSearchAdminComponent } from './components/admin/simulate-search-admin/simulate-search-admin.component';\nimport { ListBuildAdminComponent } from './components/admin/list-build-admin/list-build-admin.component';\nimport { ListMakerAdminComponent } from './components/admin/list-maker-admin/list-maker-admin.component';\nimport { NewEditMakerComponent } from './components/maker/new-edit-maker/new-edit-maker.component';\nimport { NewEditBuildComponent } from './components/build/new-edit-build/new-edit-build.component';\nimport { FilterBuildComponent } from './components/general/filter-build/filter-build.component';\nimport { FilterMakerComponent } from './components/general/filter-maker/filter-maker.component';\nimport { DetailBuildAdminComponent } from './components/admin/detail-build-admin/detail-build-admin.component';\nimport { ListSalespropAdminComponent } from './components/admin/list-salesprop-admin/list-salesprop-admin.component';\nimport { DetailSalespropAdminComponent } from './components/admin/detail-salesprop-admin/detail-salesprop-admin.component';\nimport { ListSalesAdminComponent } from './components/admin/list-sales-admin/list-sales-admin.component';\nimport { ListOfficeAdminComponent } from './components/admin/list-office-admin/list-office-admin.component';\nimport { NewEditOfficeComponent } from './components/office/new-edit-office/new-edit-office.component';\nimport { DialogGeneralComponent } from './components/general/dialog-general/dialog-general.component';\nimport { ListNotificationComponent } from './components/notification/list-notification/list-notification.component';\nimport { MenuGeneralComponent } from './components/general/menu-general/menu-general.component';\nimport { PopoverComponent } from './components/general/popover/popover.component';\nimport { SearchSelectComponent } from './components/general/search-select/search-select.component';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { CalendarSpecificComponent } from './components/general/calendar-specific/calendar-specific.component';\nimport { JwtInterceptor } from './_config/jwt.interceptor';\nimport { ErrorInterceptor } from './_config/error.interceptor';\nimport { LaunchNavigator } from '@ionic-native/launch-navigator/ngx';\nimport { MapsButtonComponent } from './components/general/maps-button/maps-button.component';\nimport { DocumentsComponent } from './components/documents/documents.component';\nimport { DocumentFilterComponent } from './components/general/document-filter/document-filter.component';\nimport { PreBuyerComponent } from './components/pre-buyer/pre-buyer.component';\nimport { ListPreBuyerComponent } from './components/admin/list-pre-buyer/list-pre-buyer.component';\nimport { DetailPreBuildComponent } from './components/admin/detail-pre-build/detail-pre-build.component';\nimport { ListPreBuildComponent } from './components/admin/list-pre-build/list-pre-build.component';\nimport { NewEditPreBuildComponent } from './components/pre-build/new-edit-pre-build/new-edit-pre-build.component';\nimport { ListManagerAdminComponent } from './components/admin/list-manager-admin/list-manager-admin.component';\nimport { NewEditManagerComponent } from './components/manager/new-edit-manager/new-edit-manager.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ListPropBuyerComponent,\n    CalendarBuyerComponent,\n    GeneralCalendarComponent,\n    EventDetailBuyerComponent,\n    DetailPropBuyerComponent,\n    GeneralFiltersComponent,\n    UserSelectComponent,\n    NewBuyerComponent,\n    OfertBuyerComponent,\n    InterPropBuyerComponent,\n    CreditEventBuyerComponent,\n    MainAdminComponent,\n    GeneralTableComponent,\n    ListBuyerAdminComponent,\n    GeneralSkeletonComponent,\n    GeneralFilterBuyerComponent,\n    DetailBuyerAdminComponent,\n    ListAdviserAdminComponent,\n    FilterAdviserComponent,\n    NewEditAdviserComponent,\n    NewEditSellerComponent,\n    ListSellerAdminComponent,\n    DetailSellerAdminComponent,\n    DetailAdviserAdminComponent,\n    FilterSellerComponent,\n    DetailPropAdminComponent,\n    NewEditPropComponent,\n    ListPropAdminComponent,\n    ListCreditAdminComponent,\n    NewEditCreditComponent,\n    ListOfertsAdminComponent,\n    NewEditOfertComponent,\n    NewEditScheduleComponent,\n    ListScheduleAdminComponent,\n    RefreComponent,\n    PersonalScheduleComponent,\n    NewEditGoalComponent,\n    ListGoalsComponent,\n    GoalProgressComponent,\n    DetailGoalAdminComponent,\n    FormStrListComponent,\n    SimulateSearchAdminComponent,\n    ListBuildAdminComponent,\n    ListMakerAdminComponent,\n    NewEditMakerComponent,\n    NewEditBuildComponent,\n    FilterBuildComponent,\n    FilterMakerComponent,\n    DetailBuildAdminComponent,\n    ListSalespropAdminComponent,\n    DetailSalespropAdminComponent,\n    ListSalesAdminComponent,\n    ListOfficeAdminComponent,\n    NewEditOfficeComponent,\n    DialogGeneralComponent,\n    ListNotificationComponent,\n    MenuGeneralComponent,\n    PopoverComponent,\n    SearchSelectComponent,\n    CalendarSpecificComponent,\n    MapsButtonComponent,\n    DocumentsComponent,\n    DocumentFilterComponent,\n    PreBuyerComponent,\n    ListPreBuyerComponent,\n    DetailPreBuildComponent,\n    ListPreBuildComponent,\n    NewEditPreBuildComponent,\n    ListManagerAdminComponent,\n    NewEditManagerComponent\n  ],\n  entryComponents: [\n    DialogGeneralComponent,\n    PopoverComponent,\n    SearchSelectComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    //  IonicModule.forRoot({ backButtonText: '', mode: 'ios' }),\n    IonicModule.forRoot({ backButtonText: '' }),\n    IonicStorageModule.forRoot(),\n    AppRoutingModule,\n    FormsModule,\n    AppMaterialModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatGridListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatBottomSheetModule,\n    MatSnackBarModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    MatProgressBarModule,\n    CdkTableModule,\n    MatDatepickerModule,\n    NativeDateModule,\n    MatMomentDateModule,\n    MatStepperModule,\n    NgCircleProgressModule.forRoot({\n      showInnerStroke: false,\n      responsive: true\n    })\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    Camera,\n    LaunchNavigator,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (check: UserSessionService) => () =>\n        check.checkValidSession(),\n      deps: [UserSessionService],\n      multi: true\n    },\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<ion-header>\\n  <!-- <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles\\n    </ion-title>\\n  </ion-toolbar> -->\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Detalles'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <h1> Detalles de Asessor </h1>\\n\\n      <ion-card>\\n\\n\\n        <ion-card-header>\\n          <ion-card-subtitle> {{adviser.name}} {{adviser.lastName}} </ion-card-subtitle>\\n          <ion-card-title> {{adviser.name}} </ion-card-title>\\n        </ion-card-header>\\n        <ion-item>\\n          <ion-label>Email: {{adviser.email}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Hora inicio {{adviser.hourStart}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Hora fin {{adviser.hourEnd}}</ion-label>\\n        </ion-item>\\n\\n      </ion-card>\\n      <!-- buyers -->\\n      <h1 *ngIf=\\\"adviser.buyer && adviser.buyer.length > 0\\\"> Consumidores Asignados </h1>\\n      <ion-card *ngFor=\\\"let buyer  of adviser.buyer \\\">\\n        <ion-item>\\n          <ion-label>Consumidor {{buyer.name}}</ion-label>\\n        </ion-item>\\n      </ion-card>\\n      <!-- schedule -->\\n      <h1 *ngIf=\\\"adviser.schedule && adviser.schedule.length > 0\\\"> Citas </h1>\\n      <ion-card *ngFor=\\\"let schedule  of adviser.schedule \\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\n    'state-amarillo': schedule.status === 'amarillo',\\n    'state-rojo': schedule.status === 'rojo',\\n    'state-azul': schedule.status === 'azul' }\\\">\\n        <ion-item>\\n          <ion-label>Propiedad {{schedule.property.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Fecha {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-label>\\n        </ion-item>\\n\\n        <ion-item text-wrap>Hora: {{formatHours(schedule.hour,schedule.minute)}}</ion-item>\\n\\n        <ion-item>\\n          <ion-label>Lugar {{schedule.address}}</ion-label>\\n        </ion-item>\\n      </ion-card>\\n      <!-- Goals -->\\n      <h1 *ngIf=\\\"adviser.goal && adviser.goal.length > 0\\\"> Metas Asignadas </h1>\\n      <ion-card *ngFor=\\\"let goal  of adviser.goal \\\">\\n        <ion-item>\\n          <ion-label>Meta {{goal.title}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Completado {{getPercentage(goal.goals)}}%</ion-label>\\n        </ion-item>\\n      </ion-card>\\n      <!-- Adquiridas -->\\n      <h1 *ngIf=\\\" sales.length > 0\\\"> Propiedades Vendidas y Rentadas </h1>\\n      <ion-card class=\\\"state-azul\\\" *ngFor=\\\"let sale  of sales \\\">\\n        <ion-item>\\n          <ion-label>Propiedad {{sale.property.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Consumidor {{sale.buyer.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Cantidad ${{sale.price}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Fecha {{formatDates(sale.timestamp)}}</ion-label>\\n        </ion-item>\\n      </ion-card>\\n\\n    </ng-template>\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n\\n    </ng-template>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { FormatHoursFront, GetPercentGoal } from '../../../_config/_helpers';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\n\n@Component({\n  selector: 'app-detail-adviser-admin',\n  templateUrl: './detail-adviser-admin.component.html',\n  styleUrls: ['./detail-adviser-admin.component.scss'],\n})\nexport class DetailAdviserAdminComponent implements OnInit {\n  isLoad = false;\n  isLiked = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  adviser: IAdviser;\n  sales: ISale[];\n  constructor(\n    private route: ActivatedRoute,\n    private adviserService: AdviserService,\n    private salesService: SaleService,\n  ) {\n    this.route.queryParams.subscribe(params => {\n      console.log(params.id);\n      if (params.id) {\n        this.getAdviserById(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getAdviserById(id: string) {\n    this.isLoad = false;\n    this.adviserService.getAdviserById(id).subscribe(adv => {\n      this.adviser = adv;\n      this.salesService.getSaleByIdAdv(id).subscribe(sales => {\n        console.log(this.adviser);\n        this.sales = sales;\n        this.isLoad = true;\n      });\n\n      if (adv.buyer && adv.buyer.length > 0) {\n      }\n    });\n  }\n  getPercentage(goals) {\n    return GetPercentGoal(goals);\n  }\n  formatDates(dateInput: Date): string {\n    const day: string = new Date(dateInput).getDate().toString();\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\n    const year: string = new Date(dateInput).getFullYear().toString();\n    const date = day + '/' + month + '/' + year;\n    return date;\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Obra\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"user.type === 'maker' ? 'menu' : 'back'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Detalle Obra'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then: Load; else: NoLoad\\\"></ng-container>\\n    <ng-template #Load>\\n      <h1>Detalles de: {{ build.name }}</h1>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{ 'desktop-card': isDesktop }\\\">\\n            <!-- [ngClass]=\\\"{'desktop-card': isDesktop }\\\" -->\\n            <ion-card-header>\\n              <ion-card-title> Progreso </ion-card-title>\\n              <ion-card-content>\\n                <app-goal-progress\\n                  subtitle=\\\"Progreso\\\"\\n                  [percent]=\\\"percent\\\"\\n                ></app-goal-progress>\\n                <ion-list lines=\\\"none\\\">\\n                  <ion-list-header>Constructores de la Obra</ion-list-header>\\n                  <ion-item lines=\\\"none\\\" *ngFor=\\\"let adv of build.maker\\\">\\n                    {{ adv.name }} {{ adv.lastName }}\\n                  </ion-item>\\n                </ion-list>\\n              </ion-card-content>\\n            </ion-card-header>\\n          </ion-card>\\n        </ion-col>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{ 'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <ion-card-title> Lista de Fases </ion-card-title>\\n              <ion-card-subtitle *ngIf=\\\"checkAdminRol(user.type)\\\"\\n                >Seleccione una fase para completar</ion-card-subtitle\\n              >\\n            </ion-card-header>\\n            <div *ngIf=\\\"checkAdminRol(user.type)\\\" class=\\\"flex-container\\\">\\n              <mat-checkbox\\n                (change)=\\\"changeGoal($event.checked)\\\"\\n                *ngFor=\\\"let item of build.timeLine; let i = index\\\"\\n                [(ngModel)]=\\\"item.isComplete\\\"\\n              >\\n                <h3>{{ item.namePhase }}</h3>\\n                <div>{{ item.notes }}</div>\\n                <div>\\n                  Inicio:\\n                  {{\\n                    formatDates(\\n                      item.yearToStart,\\n                      item.monthToStart,\\n                      item.dayToStart\\n                    )\\n                  }}\\n                </div>\\n                <div>\\n                  Fin:\\n                  {{\\n                    formatDates(item.yearToEnd, item.monthToEnd, item.dayToEnd)\\n                  }}\\n                </div>\\n              </mat-checkbox>\\n            </div>\\n            <span *ngIf=\\\"!checkAdminRol(user.type)\\\">\\n              <mat-list *ngFor=\\\"let item of build.timeLine; let i = index\\\">\\n                <h3 matSubheader>\\n                  <b> {{ item.namePhase }} </b>\\n                </h3>\\n                <mat-list-item>\\n                  <mat-icon\\n                    [ngClass]=\\\"{\\n                      'color-complete': item.isComplete,\\n                      'color-incomplete': !item.isComplete\\n                    }\\\"\\n                    matListIcon\\n                    >{{\\n                      item.isComplete\\n                        ? 'assignment_turned_in'\\n                        : 'assignment_late'\\n                    }}</mat-icon\\n                  >\\n                  <h4 matLine>\\n                    <b>\\n                      {{ item.isComplete ? 'Completada' : 'Sin Completar' }}\\n                    </b>\\n                  </h4>\\n                  <p matLine>\\n                    Inicio:\\n                    {{\\n                      formatDates(\\n                        item.yearToStart,\\n                        item.monthToStart,\\n                        item.dayToStart\\n                      )\\n                    }}\\n                  </p>\\n                  <p matLine>\\n                    Fin:\\n                    {{\\n                      formatDates(\\n                        item.yearToEnd,\\n                        item.monthToEnd,\\n                        item.dayToEnd\\n                      )\\n                    }}\\n                  </p>\\n                  <p matLine>{{ item.notes }}</p>\\n                </mat-list-item>\\n              </mat-list>\\n            </span>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Options grid -->\\n      <div *ngIf=\\\"checkAdminRol(user.type)\\\" class=\\\"conteiner-buttons\\\">\\n        <p style=\\\"text-align: left;\\\">Fotos de Fase</p>\\n        <mat-button-toggle-group (change)=\\\"changeGrid($event)\\\">\\n          <mat-button-toggle [checked]=\\\"!isList\\\" value=\\\"column\\\">\\n            <mat-icon color=\\\"accent\\\">view_column</mat-icon>\\n          </mat-button-toggle>\\n          <mat-button-toggle [checked]=\\\"isList\\\" color=\\\"primary\\\" value=\\\"list\\\">\\n            <mat-icon color=\\\"accent\\\">view_list</mat-icon>\\n          </mat-button-toggle>\\n        </mat-button-toggle-group>\\n      </div>\\n      <ng-container *ngIf=\\\"isList; then: List; else: Column\\\"></ng-container>\\n      <ng-template #List>\\n        <!-- Contenedor List -->\\n        <ion-list style=\\\"margin-top: 1%\\\">\\n          <ion-list-header>\\n            {{ build.timeLine[numOfCurrentFase].namePhase }}\\n          </ion-list-header>\\n          <!-- img -->\\n          <ion-item\\n            *ngFor=\\\"\\n              let imgData of build.timeLine[numOfCurrentFase].imagesData;\\n              let imgNumber = index\\n            \\\"\\n          >\\n            <ion-thumbnail slot=\\\"start\\\">\\n              <ion-img [src]=\\\"imgData.url\\\"></ion-img>\\n            </ion-thumbnail>\\n            <ion-label text-wrap>\\n              <h3>{{ build.timeLine[numOfCurrentFase].namePhase }}</h3>\\n              <p><b>Notas: </b>{{ imgData.notes }}</p>\\n              <p><b>Fecha de Subida: </b>{{ formatDates2(imgData.date) }}</p>\\n            </ion-label>\\n            <ion-button\\n              (click)=\\\"\\n                presentAlertConfirm(imgData.url, numOfCurrentFase, imgNumber)\\n              \\\"\\n              shape=\\\"round\\\"\\n              fill=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n            >\\n              <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\n              Borrar\\n            </ion-button>\\n          </ion-item>\\n          <!-- img antes de subir -->\\n          <span *ngFor=\\\"let prev of imgToUpload; let ii = index\\\">\\n            <ion-item>\\n              <ion-thumbnail slot=\\\"start\\\">\\n                <ion-img [src]=\\\"prev.srcPrev\\\"></ion-img>\\n              </ion-thumbnail>\\n              <span>\\n                <ion-label>\\n                  <h3>Subir Foto</h3>\\n                  <p></p>\\n                </ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"prev.notes\\\"\\n                  placeholder=\\\"Escribe algo referente\\\"\\n                ></ion-input>\\n                <ion-button\\n                  shape=\\\"round\\\"\\n                  fill=\\\"outline\\\"\\n                  (click)=\\\"uploadImg(prev, ii, prev.notes)\\\"\\n                  color=\\\"success\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n                  Subir\\n                </ion-button>\\n                <ion-button\\n                  (click)=\\\"discartImg(ii)\\\"\\n                  shape=\\\"round\\\"\\n                  fill=\\\"outline\\\"\\n                  color=\\\"danger\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\n                  Descartar\\n                </ion-button>\\n              </span>\\n            </ion-item>\\n          </span>\\n\\n          <input\\n            id=\\\"imagen1\\\"\\n            accept=\\\"image/*\\\"\\n            name=\\\"imagen1\\\"\\n            type=\\\"file\\\"\\n            hidden\\n            (change)=\\\"fileChangeEvent($event)\\\"\\n          />\\n          <ion-button\\n            (click)=\\\"link(numOfCurrentFase)\\\"\\n            shape=\\\"round\\\"\\n            fill=\\\"outline\\\"\\n            color=\\\"secondary\\\"\\n          >\\n            <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n            Agregar\\n          </ion-button>\\n          <ion-button\\n            *ngIf=\\\"isCordova\\\"\\n            (click)=\\\"cameraIonic()\\\"\\n            shape=\\\"round\\\"\\n            fill=\\\"outline\\\"\\n            color=\\\"secondary\\\"\\n          >\\n            <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\n            Camara\\n          </ion-button>\\n        </ion-list>\\n      </ng-template>\\n      <ng-template #Column>\\n        <!-- Contenedor de fases -->\\n        <div class=\\\"conteiner-phases\\\">\\n          <!-- fase titulo -->\\n          <h2>{{ build.timeLine[numOfCurrentFase].namePhase }}</h2>\\n          <!-- contenedor imagenes -->\\n          <div class=\\\"flex-img\\\">\\n            <img\\n              *ngFor=\\\"let img of build.timeLine[numOfCurrentFase].imagesData\\\"\\n              [src]=\\\"img.url\\\"\\n            />\\n          </div>\\n          <!--\\n            <button style=\\\"margin-left: 1%;\\\" mat-stroked-button color=\\\"accent\\\">\\n              <mat-icon color=\\\"accent\\\">add</mat-icon>\\n              Agregar\\n            </button>\\n          -->\\n          <!-- /contenedor imagenes -->\\n        </div>\\n\\n        <!-- /Contenedor de fases -->\\n      </ng-template>\\n    </ng-template>\\n    <ng-template #NoLoad>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n    <!--\\n      <img *ngIf=\\\"Test\\\" [src]=\\\"Test\\\" alt=\\\"\\\">\\n      <ion-label text-wrap>\\n        {{Test}}\\n      </ion-label>\\n\\n      <input type=\\\"file\\\" accept=\\\"image/*\\\" capture=\\\"camera\\\">\\n    -->\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.flex-img {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.flex-img > * {\\n  padding: 1%;\\n  width: 300px;\\n  height: 300px; }\\n\\n.conteiner-buttons {\\n  padding: 3% 3% 0% 3%;\\n  text-align: right;\\n  margin-top: 8%; }\\n\\n/* .conteiner-buttons>* {\\n    // background-color: var(--ion-color-primary);\\n\\n} */\\n\\n.conteiner-phases {\\n  padding: 1%; }\\n\\n.flex-img > .item {\\n  align-self: flex-end; }\\n\\n.color-complete {\\n  color: var(--ion-color-success); }\\n\\n.color-incomplete {\\n  color: var(--ion-color-warning); }\\n\\n@media (max-width: 900px) {\\n  .flex-img > * {\\n    padding: 1%;\\n    width: 100%;\\n    height: unset; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IBuild } from '../../../models/build.model';\nimport { BuildService } from '../../../services/build.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport {\n  ToastController,\n  Platform,\n  AlertController,\n  LoadingController,\n} from '@ionic/angular';\nimport { FormatDatesFront, FormatHoursFront } from '../../../_config/_helpers';\nimport { END_POINT } from '../../../_config/api.end-points';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { Storage } from '@ionic/storage';\nimport { MakerService } from '../../../services/maker.service';\n\n@Component({\n  selector: 'app-detail-build-admin',\n  templateUrl: './detail-build-admin.component.html',\n  styleUrls: ['./detail-build-admin.component.scss'],\n})\nexport class DetailBuildAdminComponent implements OnInit {\n  percent = 1;\n  isLoad = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  build: IBuild;\n  isDesktop = true;\n  isList = false;\n  formData: FormData;\n  imgName = '';\n  imgToUpload: {\n    numPhase: number;\n    srcPrev: string;\n    srcBlob: Blob;\n    name: string;\n    notes?: string;\n  }[] = [];\n  numItem;\n  // notas por img\n  notes: string[] = [];\n  user: IUserSession;\n  Test;\n  Test2 = 'a';\n  numOfCurrentFase: number;\n  isCordova: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private buildService: BuildService,\n    private userSessionService: UserSessionService,\n    public toastController: ToastController,\n    private platform: Platform,\n    private alertController: AlertController,\n    private oneSignalService: OnesignalService,\n    private camera: Camera,\n    private storage: Storage,\n    private loadingController: LoadingController,\n    private makerService: MakerService,\n  ) {\n    this.isCordova = platform.is('cordova');\n    this.user = userSessionService.userSession.value;\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.getGoalById(params.id);\n      } else if (this.user.type === 'maker') {\n        this.getBuildOfMaker(this.user.id);\n      }\n    });\n    // si regresa de  crash\n    this.storage.keys().then(async keys => {\n      const keyBuildImg = keys.some(key => key === 'build-img');\n      if (keyBuildImg) {\n        const imgb64 = await this.storage.get('build-img');\n        this.Test2 = userSessionService.saveURI;\n        /* this.platform.resume.subscribe((event: any) => {\n          // this.Test2 = event.pendingResult.result;\n          this.Test2 = event;\n          this.Test = event.pendingResult.pluginServiceName;\n        }); */\n        this.getGoalById(imgb64.idBuild);\n        /*  this.render(imgb64.base64Image); */\n        storage.remove('build-img');\n      }\n    });\n  }\n  async getBuildOfMaker(id) {\n    const maker = await this.makerService.getMakerById(id).toPromise();\n    this.getGoalById(maker.build._id);\n  }\n\n  ngOnInit() {}\n  checkAdminRol(userType: string): boolean {\n    if (userType === 'maker') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  getGoalById(id: string) {\n    this.isLoad = false;\n    this.buildService.getBuildById(id).subscribe(build => {\n      let i = 0;\n      for (const tl of build.timeLine) {\n        if (tl.isComplete && tl.isComplete === true) {\n          if (i < build.timeLine.length - 1) {\n            i++;\n          }\n        } else {\n          break;\n        }\n      }\n      this.numOfCurrentFase = i;\n      this.build = build;\n\n      this.getPercent(build.timeLine);\n      this.isLoad = true;\n    });\n  }\n  getPercent(timeLine) {\n    let numOfComplete = 0;\n    timeLine.forEach(tl => {\n      if (tl.isComplete) {\n        numOfComplete++;\n      }\n    });\n    this.percent = (numOfComplete * 100) / timeLine.length;\n  }\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n    });\n    toast.present();\n  }\n  changeGoal(e) {\n    if (this.build.timeLine[this.numOfCurrentFase].imagesData.length > 0) {\n      this.build.timeLine[this.numOfCurrentFase].imagesData.forEach(img => {\n        this.completePhase(img.url);\n      });\n      this.build.timeLine[this.numOfCurrentFase].imagesData = <any>[];\n    }\n    this.buildService.putBuild(this.build).subscribe(() => {\n      let m;\n      this.getPercent(this.build.timeLine);\n      if (this.percent === 100) {\n        this.presentToast('Se ha completado una Obra');\n        m = 'Se ha completado una Obra';\n      } else {\n        this.presentToast('Se ha modificado una Fase');\n        m = 'Se ha modificado una Fase';\n      }\n      this.notification(\n        m,\n        `Actualizacion de ${this.build.name}`,\n        'amarillo',\n        'build',\n        undefined,\n        this.build.maker.map(maker => maker._id),\n      );\n    });\n    let i = 0;\n    for (const tl of this.build.timeLine) {\n      if (tl.isComplete && tl.isComplete === true) {\n        if (i < this.build.timeLine.length - 1) {\n          i++;\n        }\n      } else {\n        break;\n      }\n    }\n    this.numOfCurrentFase = i;\n  }\n  changeGrid(value) {\n    this.isList = !this.isList;\n  }\n  formatDates(year, month, day): string {\n    const date = new Date(year, month, day);\n    return FormatDatesFront(date);\n  }\n  formatDates2(date: Date): string {\n    return FormatDatesFront(date);\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  link(i) {\n    this.numItem = i;\n    const input = document.getElementById('imagen1').click();\n  }\n  // subir foto\n  fileChangeEvent(fileInput) {\n    const imgToUpload = <File>fileInput.target.files[0];\n    /*  if (imgToUpload.size > 200000) {\n      this.presentAlertImg(\n        'La imagen excede el límite de tamaño',\n        'Imagen no válida',\n      );\n    } else {\n      // img name\n      this.imgName = imgToUpload.name.slice(0, imgToUpload.name.indexOf('.'));\n      // preview\n      const reader = new FileReader();\n      reader.onload = r => {\n        this.render(reader.result);\n      };\n      reader.readAsDataURL(imgToUpload);\n    } */\n    // img name\n    this.imgName = imgToUpload.name.slice(0, imgToUpload.name.indexOf('.'));\n    // preview\n    const reader = new FileReader();\n    reader.onload = r => {\n      this.render(reader.result);\n    };\n    reader.readAsDataURL(imgToUpload);\n  }\n  private saveForRecovery(): Promise<{}> {\n    return new Promise(resolve => {\n      this.storage\n        .set('build-img', { idBuild: this.build._id })\n        .then((recover: any) => {\n          resolve();\n        });\n    });\n  }\n  // ionic camera\n  cameraIonic() {\n    const options: CameraOptions = {\n      quality: 100,\n      targetWidth: 600,\n      targetHeight: 400,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      correctOrientation: true,\n    };\n    this.saveForRecovery().then(() => {\n      this.camera.getPicture(options).then(\n        imageData => {\n          const base64Image = 'data:image/jpeg;base64,' + imageData;\n          //  por si crash\n          /*  this.storage.set('build-img', {\n            idBuild: this.build._id,\n            base64Image: base64Image,\n          }); */\n          this.Test = base64Image;\n          this.Test2 = 'algo1';\n          this.render(base64Image);\n          this.imgName = String(\n            Math.random()\n              .toString(36)\n              .substring(2, 15) +\n              Math.random()\n                .toString(36)\n                .substring(2, 15),\n          );\n        },\n        err => {\n          this.Test2 = err.toString();\n        },\n      );\n    });\n  }\n  render(src) {\n    const MAX_HEIGHT = 400;\n    const image = new Image();\n    image.onload = r => {\n      const canvas = document.createElement('canvas');\n      if (image.height > MAX_HEIGHT && this.isCordova === false) {\n        image.width *= MAX_HEIGHT / image.height;\n        image.height = MAX_HEIGHT;\n      }\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, image.width, image.height);\n      this.Test2 = 'Render';\n      canvas.toBlob(\n        c => {\n          if (c.size > 200000) {\n            this.presentAlertImg(\n              'La imagen excede el límite de tamaño',\n              'Imagen no válida',\n            );\n          } else {\n            this.imgToUpload.push({\n              numPhase: this.numItem,\n              srcPrev: src,\n              name: this.imgName,\n              srcBlob: c,\n            });\n          }\n          // tipo, calidad\n        },\n        'image/jpeg',\n        0.75,\n      );\n    };\n    image.src = src;\n  }\n  /**\n   * Subir imagen Confirmado\n   * @param imgToUp imagen subir\n   * @param index index del prev\n   * @param notes notas\n   */\n  async uploadImg(\n    imgToUp: {\n      numPhase: number;\n      srcPrev: string;\n      srcBlob: Blob;\n      name: string;\n    },\n    index,\n    notes: string,\n  ) {\n    if (this.isCordova) {\n      // Cordova\n      const load = await this.presentLoadingWithOptions('Subiendo Foto...');\n      load.present();\n      this.buildService.getBuildById(this.build._id).subscribe(build => {\n        build.timeLine[this.numOfCurrentFase].imagesData.push({\n          date: new Date(),\n          notes: notes,\n          url: `http://31.220.52.51:3004/${this.imgName}.jpg`,\n        });\n        this.buildService.putBuild(build).subscribe(c => {\n          this.Test2 = 'put';\n          const file = new File([imgToUp.srcBlob], imgToUp.name + '.jpg', {\n            type: imgToUp.srcBlob.type,\n            lastModified: new Date().getTime(),\n          });\n          // construir form\n          const formData = new FormData();\n          formData.append('imagen1', file);\n          // subir al server\n          // espera respuesta\n          this.buildService.uploadImg(formData).subscribe();\n          this.build.timeLine[this.numOfCurrentFase].imagesData.push({\n            date: new Date(),\n            notes: notes,\n            url: `http://31.220.52.51:3004/${this.imgName}.jpg`,\n          });\n          this.Test2 = this.imgName;\n\n          // noti\n          if (this.user.type === 'maker') {\n            this.notification(\n              'Nueva Foto',\n              `El constructor ${\n                this.user.name\n              } ha subido una foto de la construcción ${this.build.name}`,\n              'amarillo',\n              'build',\n              ['office'],\n              this.build.maker.map(m => m._id),\n            );\n          } else {\n            this.notification(\n              'Nueva Foto',\n              `Se ha subido una foto de la construcción ${this.build.name}`,\n              'amarillo',\n              'build',\n              undefined,\n              this.build.maker.map(m => m._id),\n            );\n          }\n          // elimina del  arr prev\n          this.imgToUpload.splice(index, 1);\n          load.dismiss();\n        });\n      });\n    } else {\n      // subir no cordova\n      const load = await this.presentLoadingWithOptions('Subiendo Foto...');\n      load.present();\n      // construir archivo\n      const file = new File([imgToUp.srcBlob], imgToUp.name + '.jpg', {\n        type: imgToUp.srcBlob.type,\n        lastModified: new Date().getTime(),\n      });\n      // construir form\n      const formData = new FormData();\n      formData.append('imagen1', file);\n      // subir al server\n      // espera respuesta\n      const arrStr = await this.buildService.uploadImg(formData).toPromise();\n      if (arrStr.length > 0) {\n        this.putBuild(imgToUp, notes, index);\n        load.dismiss();\n        this.presentToast('Imagen Subida');\n      }\n    }\n  }\n  private putBuild(\n    imgToUp: { numPhase: number; srcPrev: string; srcBlob: Blob; name: string },\n    notes: string,\n    index: any,\n  ) {\n    this.build.timeLine[imgToUp.numPhase].imagesData.push({\n      date: new Date(),\n      notes: notes,\n      url: END_POINT.IP + imgToUp.name + '.jpg',\n    });\n    this.Test2 = END_POINT.IP + imgToUp.name + '.jpg';\n    // put al build\n    this.buildService.putBuild(this.build).subscribe(res => {\n      if (res) {\n        // elimina del  arr prev\n        this.imgToUpload.splice(index, 1);\n      }\n      // noti\n      if (this.user.type === 'maker') {\n        this.notification(\n          'Nueva Foto',\n          `El constructor ${\n            this.user.name\n          } ha subido una foto de la construcción ${this.build.name}`,\n          'amarillo',\n          'build',\n          ['office'],\n          this.build.maker.map(m => m._id),\n        );\n      } else {\n        this.notification(\n          'Nueva Foto',\n          `Se ha subido una foto de la construcción ${this.build.name}`,\n          'amarillo',\n          'build',\n          undefined,\n          this.build.maker.map(m => m._id),\n        );\n      }\n    });\n  }\n\n  discartImg(index: number) {\n    this.imgToUpload.splice(index, 1);\n  }\n  deletedImg(imgURL: string, phase, index) {\n    const imgName = imgURL.slice(imgURL.lastIndexOf('/') + 1, imgURL.length);\n    this.buildService.deletedImg(imgName).subscribe(() => {\n      this.build.timeLine[phase].imagesData.splice(index, 1);\n      this.buildService.putBuild(this.build).subscribe(() => {\n        this.presentToast('Imagen Borrada');\n      });\n    });\n  }\n  completePhase(imgURL: string) {\n    const imgName = imgURL.slice(imgURL.lastIndexOf('/') + 1, imgURL.length);\n    this.buildService.deletedImg(imgName).subscribe(() => {});\n  }\n  async presentAlertConfirm(url: string, phase, index) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Imagen',\n      message: `¿Desea eliminar imagen?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deletedImg(url, phase, index);\n      }\n    });\n  }\n  async presentAlertImg(message, header) {\n    const alert = await this.alertController.create({\n      header: header,\n      message: message,\n      buttons: [\n        {\n          text: 'Ok',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n  async presentLoadingWithOptions(message) {\n    const loading = await this.loadingController.create({\n      message: message,\n      translucent: true,\n    });\n    return await loading;\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n}\n","module.exports = \"<!-- <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles\\n    </ion-title>\\n  </ion-toolbar> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Movimientos Clientes'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <h1> Detalles de Consumidor </h1>\\n\\n      <ion-card>\\n\\n\\n        <ion-card-header>\\n          <ion-card-subtitle> {{buyer.name}} {{buyer.fatherLastName}} </ion-card-subtitle>\\n          <ion-card-subtitle> Edad {{buyer.years}} </ion-card-subtitle>\\n          <ion-card-title> {{buyer.name}} </ion-card-title>\\n        </ion-card-header>\\n        <!-- Principales -->\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col>\\n              <!-- Renta/venta -->\\n              <ion-chip *ngIf=\\\"buyer.isRenter\\\" style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n                <ion-label>Renta</ion-label>\\n              </ion-chip>\\n              <ion-chip *ngIf=\\\"!buyer.isRenter\\\" style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n                <ion-label>Venta</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"expand\\\"></ion-chip-icon>\\n                <ion-label><b>{{buyer.space}}</b> Espacio </ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n                <ion-label>Fecha <b>{{buyer.dateToBuy}}</b></ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"water\\\"></ion-chip-icon>\\n                <ion-label><b>{{buyer.numBathrooms}}</b> Baños </ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n                <ion-label>Max <b>${{buyer.maxPrice}}</b></ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n                <ion-label>Min <b> ${{buyer.minPrice}}</b></ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"car\\\"></ion-chip-icon>\\n                <ion-label><b>{{buyer.numCars}}</b> Estacionamiento </ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"bed\\\"></ion-chip-icon>\\n                <ion-label><b>{{buyer.numRooms}}</b> Cuartos </ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n        <!-- otros -->\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Otras</ion-card-subtitle>\\n        <div class=\\\"container-details-buyer\\\">\\n          <ion-item *ngIf=\\\"buyer.allServices\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Todos los servicios</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!buyer.allServices\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin los servicios</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.hasElevator\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Elevador</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!buyer.hasElevator\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin Elevador</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.hasGarden\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Jardin</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!buyer.hasGarden\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin Jardin</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.isClose\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Fraccionamineto Cerrado</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!buyer.isClose\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin Fraccionamineto Cerrado</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!buyer.isOld\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Nuevo</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.isOld\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Usado</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.isLowLevel\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Planta Baja</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!buyer.isLowLevel\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Cualquier num de piso</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.wayToBuy\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap> Forma de Compra: {{buyer.wayToBuy}}</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.zone\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap>Zona: {{buyer.zone}}</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.typeOfProperty\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap>Tipo de Propiedad: {{buyer.typeOfProperty}}</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.email\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap>Email: {{buyer.email}}</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"buyer.city\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap>Ciudad: {{buyer.city}}</ion-label>\\n          </ion-item>\\n        </div>\\n\\n        <!-- tag -->\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Etiquetas</ion-card-subtitle>\\n        <div class=\\\"container-details-buyer\\\">\\n          <div *ngFor=\\\"let tag of buyer.tag\\\">\\n            # {{tag }}\\n          </div>\\n        </div>\\n\\n\\n      </ion-card>\\n      <h1 *ngIf=\\\"buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0\\\"> Propiedades que le interesan </h1>\\n      <ion-card *ngFor=\\\"let sbp  of buyer.statusBuyerProperty \\\" [ngClass]=\\\"{'state-verde': sbp.status === 'verde', \\n        'state-amarillo': sbp.status === 'amarillo',\\n        'state-rojo': sbp.status === 'rojo',\\n        'state-azul': sbp.status === 'azul' }\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Fecha {{formatDates(sbp.timestamp)}}</ion-card-subtitle>\\n          <ion-card-title>{{sbp.property.name}}</ion-card-title>\\n        </ion-card-header>\\n      </ion-card>\\n      <!-- citas -->\\n      <h1 *ngIf=\\\"buyer.schedule && buyer.schedule.length > 0\\\"> Citas </h1>\\n      <ion-card *ngFor=\\\"let schedule  of buyer.schedule \\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\n        'state-amarillo': schedule.status === 'amarillo',\\n        'state-rojo': schedule.status === 'rojo',\\n        'state-azul': schedule.status === 'azul' }\\\">\\n        <ion-item>\\n          <ion-label>Propiedad {{schedule.property.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Fecha {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-label>\\n        </ion-item>\\n        <ion-item text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}}</ion-item>\\n        <ion-item>\\n          <ion-label>Lugar {{schedule.address}}</ion-label>\\n        </ion-item>\\n      </ion-card>\\n      <!-- Ofertas -->\\n      <h1 *ngIf=\\\"buyer.ofert && buyer.ofert.length > 0\\\"> Ofertas </h1>\\n      <ion-card *ngFor=\\\"let ofert  of buyer.ofert \\\" [ngClass]=\\\"{'state-verde': ofert.status === 'verde', \\n         'state-amarillo': ofert.status === 'amarillo',\\n         'state-rojo': ofert.status === 'rojo',\\n         'state-azul': ofert.status === 'azul' }\\\">\\n        <ion-item>\\n          <ion-label>Propiedad {{ofert.property.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Fecha {{formatDates(ofert.timestamp)}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Precio {{ofert.ofertPrice}}</ion-label>\\n        </ion-item>\\n        <ion-card-content>\\n          Notas {{ofert.notes}}\\n        </ion-card-content>\\n      </ion-card>\\n      <!-- credito -->\\n      <h1 *ngIf=\\\"credits && credits.length > 0\\\"> Crédito </h1>\\n      <ion-card *ngFor=\\\"let credit  of credits \\\" [ngClass]=\\\"{'state-verde': credit.status === 'verde', \\n          'state-amarillo': credit.status === 'amarillo',\\n          'state-rojo': credit.status === 'rojo',\\n          'state-azul': credit.status === 'azul',\\n            'state-secondary': !credit.status }\\\">\\n        <ion-item>\\n          <ion-label>Propiedad {{credit.property.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Fecha {{formatDates(credit.timestamp)}}</ion-label>\\n        </ion-item>\\n        <ion-card-content>\\n          Notas {{credit.notes}}\\n        </ion-card-content>\\n      </ion-card>\\n\\n\\n    </ng-template>\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n\\n    </ng-template>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".container-details-buyer {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 0% 10% 3% 10%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PropertyService } from '../../../services/property.service';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { ToastController } from '@ionic/angular';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { IStatusBuyerProperty } from '../../../models/statusBuyerProperty.model';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { ICreditGet } from '../../../models/credit.model';\nimport { FormatHoursFront } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-detail-buyer-admin',\n  templateUrl: './detail-buyer-admin.component.html',\n  styleUrls: ['./detail-buyer-admin.component.scss'],\n})\nexport class DetailBuyerAdminComponent implements OnInit {\n  isLoad = false;\n  isLiked = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  buyer: IBuyer;\n  credits: ICreditGet[] = [];\n  constructor(\n    private route: ActivatedRoute,\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    public toastController: ToastController,\n    private statusBPService: StatusBuyerPropertyService,\n  ) {\n    this.route.queryParams.subscribe(params => {\n      console.log(params.id);\n      if (params.id) {\n        this.getBuyerById(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getBuyerById(id: string) {\n    this.isLoad = false;\n    this.buyerService.getBuyerById(id).subscribe(b => {\n      this.buyer = b;\n      this.credits = <any>b.credit;\n\n      console.log(this.buyer);\n\n      if (b.statusBuyerProperty && b.statusBuyerProperty.length > 0) {\n        this.arrSBP = b.statusBuyerProperty.map(\n          buyerProperty => buyerProperty._id,\n        );\n        this.arrPropLikes = b.statusBuyerProperty.map(\n          buyerProperty => buyerProperty.property._id,\n        );\n        console.log(this.arrSBP);\n      }\n      this.isLoad = true;\n    });\n  }\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n    });\n    toast.present();\n  }\n  formatDates(dateInput: Date): string {\n    const day: string = new Date(dateInput).getDate().toString();\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\n    const year: string = new Date(dateInput).getFullYear().toString();\n    const date = day + '/' + month + '/' + year;\n    return date;\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Objetivo\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Objetivo'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then Load; else NoLoad\\\"></ng-container>\\n    <ng-template #Load>\\n      <h1>Detalles de: {{goal.title}}</h1>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <!-- [ngClass]=\\\"{'desktop-card': isDesktop }\\\" -->\\n            <ion-card-header>\\n              <ion-card-title>\\n                Progreso\\n              </ion-card-title>\\n              <ion-card-content>\\n                <app-goal-progress subtitle=\\\"Progreso\\\" [percent]=\\\"percent\\\"></app-goal-progress>\\n                <ion-list lines=\\\"none\\\">\\n                  <ion-list-header>Asesores del Objetivo</ion-list-header>\\n                  <ion-item lines=\\\"none\\\" *ngFor=\\\"let adv of goal.adviser\\\">\\n                    {{adv.name}} {{adv.lastName}}\\n                  </ion-item>\\n                </ion-list>\\n              </ion-card-content>\\n            </ion-card-header>\\n          </ion-card>\\n        </ion-col>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <ion-card-title text-wrap>\\n                {{titleCard}}\\n              </ion-card-title>\\n\\n            </ion-card-header>\\n            <div *ngIf=\\\"goal.typeOfGoal === 'goals'\\\" class=\\\"flex-container\\\">\\n              <mat-checkbox [disabled]=\\\"user.type === 'adviser' && goal.isByManagement\\\" (change)=\\\"changeGoal($event)\\\"\\n                *ngFor=\\\"let item of goal.goals; let i=index\\\" [(ngModel)]=\\\"goal.goals[i].isComplete\\\">{{item.nameGoal}}</mat-checkbox>\\n            </div>\\n            <ion-list *ngIf=\\\"goal.typeOfGoal === 'goals'\\\" style=\\\"padding: 5%;\\\" lines=\\\"none\\\">\\n              <ion-list-header>Otros Datos</ion-list-header>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <p><b>Contenido</b></p>\\n                  <p>{{goal.content}}</p>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <p><b>Estatus</b></p>\\n                  <p *ngIf=\\\"goal.status === 'verde'\\\">Bajo</p>\\n                  <p *ngIf=\\\"goal.status === 'gris'\\\">Inicial</p>\\n                  <p *ngIf=\\\"goal.status === 'amarillo'\\\">Medio</p>\\n                  <p *ngIf=\\\"goal.status === 'rojo'\\\">Urgente</p>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <p><b>Fecha Inicio</b></p>\\n                  <p>{{formatDates(goal.timestamp)}}</p>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label>\\n                  <p><b>Fecha Fin</b></p>\\n                  <p>{{fortmatDate2(goal.year, goal.month, goal.day)}}</p>\\n                </ion-label>\\n              </ion-item>\\n\\n            </ion-list>\\n\\n            <div class=\\\"goals-number\\\" *ngIf=\\\"goal.typeOfGoal !== 'goals' && isMoney\\\">\\n              <h4>Total a Cumplir </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"secondary\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n                <ion-label>${{goal.quantitative}}</ion-label>\\n              </ion-chip>\\n              <h4>Total Cumplido </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"dark\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n                <ion-label>${{totalCurrent}}</ion-label>\\n              </ion-chip>\\n              <h4>Fecha de Inicio </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"medium\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n                <ion-label>{{formatDates(goal.timestamp)}}</ion-label>\\n              </ion-chip>\\n              <h4>Fecha de Fin </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"medium\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n                <ion-label>{{fortmatDate2(goal.year, goal.month, goal.day)}}</ion-label>\\n              </ion-chip>\\n\\n            </div>\\n\\n            <div class=\\\"goals-number\\\" *ngIf=\\\"goal.typeOfGoal !== 'goals' && !isMoney\\\">\\n\\n              <h4>Total a Cumplir </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"secondary\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"checkmark-circle\\\"></ion-chip-icon>\\n                <ion-label>{{goal.quantitative}} ventas</ion-label>\\n              </ion-chip>\\n              <h4>Total Cumplido </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"dark\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"clipboard\\\"></ion-chip-icon>\\n                <ion-label>{{totalCurrent}} ventas</ion-label>\\n              </ion-chip>\\n              <h4>Fecha de Inicio </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"medium\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n                <ion-label>{{formatDates(goal.timestamp)}}</ion-label>\\n              </ion-chip>\\n              <h4>Fecha de Fin </h4>\\n              <ion-chip class=\\\"chips-detail\\\" color=\\\"medium\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n                <ion-label>{{fortmatDate2(goal.year, goal.month, goal.day)}}</ion-label>\\n              </ion-chip>\\n            </div>\\n\\n\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n    </ng-template>\\n    <ng-template #NoLoad>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n  </ion-grid>\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.goals-number {\\n  margin-left: 10%; }\\n\\n.chips-detail {\\n  font-size: 1.3em; }\\n\\n.icon-chip-detail {\\n  border-radius: 50%;\\n  background-color: black;\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IGoal } from '../../../models/goal.model';\nimport { GoalService } from '../../../services/goal.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { ToastController, Platform } from '@ionic/angular';\nimport { FormatHoursFront, FormatDatesFront } from '../../../_config/_helpers';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\n\n@Component({\n  selector: 'app-detail-goal-admin',\n  templateUrl: './detail-goal-admin.component.html',\n  styleUrls: ['./detail-goal-admin.component.scss'],\n})\nexport class DetailGoalAdminComponent implements OnInit {\n  percent = 1;\n  isLoad = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  goal: IGoal;\n  isDesktop = true;\n  user: IUserSession;\n  titleCard: string;\n  totalCurrent: number;\n  isMoney: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private goalService: GoalService,\n    private userSessionService: UserSessionService,\n    public toastController: ToastController,\n    private platform: Platform,\n    private userSession: UserSessionService,\n    private oneSignalService: OnesignalService,\n    private salesService: SaleService,\n  ) {\n    this.user = userSession.userSession.value;\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.getGoalById(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getGoalById(id: string) {\n    this.isLoad = false;\n    this.goalService.getGoaltById(id).subscribe(async goal => {\n      this.goal = goal;\n      if (goal.typeOfGoal === 'goals') {\n        this.getPercent(goal.goals);\n        this.titleCard = 'Lista de Objetivos';\n      } else if (goal.typeOfGoal === 'rentTotal') {\n        this.isMoney = false;\n        this.titleCard = 'Rentas Totales';\n        //  arr sales con filtros de asesores\n        const sales = await this.getTotalSalesRent(goal);\n        //  conteo de ventas\n        this.totalCurrent = sales.length;\n        //  % de la meta\n        this.getPercentNotGoals(goal.quantitative, sales.length);\n      } else if (goal.typeOfGoal === 'costOfRent') {\n        this.isMoney = true;\n        // obtiene las ventas de los asesores\n        this.titleCard = 'Total Recaudado en Rentas';\n        const sales = await this.getTotalSalesRent(goal);\n        // total numerico\n        const total = this.getSumOfNumber(sales.map(s => s.price));\n        this.totalCurrent = total;\n        // % de la meta\n        this.getPercentNotGoals(goal.quantitative, total);\n      } else if (goal.typeOfGoal === 'salesTotal') {\n        this.isMoney = false;\n        //  obtiene ventas asesores\n        this.titleCard = 'Total de Ventas';\n        //  arr sales con filtros de asesores\n        const sales = await this.getTotalSalesNoRent(goal);\n        //  conteo de ventas\n        this.totalCurrent = sales.length;\n        //  % de la meta\n        this.getPercentNotGoals(goal.quantitative, sales.length);\n      } else if (goal.typeOfGoal === 'costOfSales') {\n        this.isMoney = true;\n        this.titleCard = 'Total Recaudado en Ventas';\n        const sales = await this.getTotalSalesNoRent(goal);\n        // total numerico\n        const total = this.getSumOfNumber(sales.map(s => s.price));\n        this.totalCurrent = total;\n        // % de la meta\n        this.getPercentNotGoals(goal.quantitative, total);\n      } else if (goal.typeOfGoal === 'rentSalesTotal') {\n        this.isMoney = false;\n        this.titleCard = 'Total de Ventas y Rentas';\n        //  arr sales con filtros de asesores\n        const sales = await this.getTotalSalesRentSale(goal);\n        //  conteo de ventas\n        this.totalCurrent = sales.length;\n        //  % de la meta\n        this.getPercentNotGoals(goal.quantitative, sales.length);\n      } else if (goal.typeOfGoal === 'rentSalesCost') {\n        this.isMoney = true;\n        this.titleCard = 'Total Recaudado en Ventas y Rentas';\n        const sales = await this.getTotalSalesRentSale(goal);\n        // total numerico\n        const total = this.getSumOfNumber(sales.map(s => s.price));\n        this.totalCurrent = total;\n        // % de la meta\n        this.getPercentNotGoals(goal.quantitative, total);\n      }\n      this.isLoad = true;\n    });\n  }\n  async getTotalSalesRent(goal: IGoal) {\n    const sale = await this.salesService.getSale().toPromise();\n    const dateStart = new Date(goal.timestamp).getTime();\n    const dateEnd = new Date(goal.year, goal.month, goal.day).getTime();\n    const salesFilter: ISale[] = [];\n    for (const adv of goal.adviser) {\n      sale\n        .filter(\n          s =>\n            s.adviser.some(a => a._id === adv._id) &&\n            s.isRent &&\n            (dateStart <= new Date(s.timestamp).getTime() &&\n              dateEnd > new Date(s.timestamp).getTime()),\n        )\n        .forEach(s => {\n          const isFinded = salesFilter.some(\n            saleFilter => saleFilter._id === s._id,\n          );\n          if (!isFinded) {\n            salesFilter.push(s);\n          }\n        });\n    }\n    return salesFilter;\n  }\n  async getTotalSalesRentSale(goal: IGoal) {\n    const sale = await this.salesService.getSale().toPromise();\n    const dateStart = new Date(goal.timestamp).getTime();\n    const dateEnd = new Date(goal.year, goal.month, goal.day).getTime();\n    const salesFilter: ISale[] = [];\n    for (const adv of goal.adviser) {\n      sale.filter(s => s.adviser.some(a => a._id === adv._id)).forEach(s => {\n        const isFinded = salesFilter.some(\n          saleFilter =>\n            saleFilter._id === s._id &&\n            (dateStart <= new Date(s.timestamp).getTime() &&\n              dateEnd > new Date(s.timestamp).getTime()),\n        );\n        if (!isFinded) {\n          salesFilter.push(s);\n        }\n      });\n    }\n    return salesFilter;\n  }\n  async getTotalSalesNoRent(goal: IGoal) {\n    const sale = await this.salesService.getSale().toPromise();\n    console.log(sale);\n    console.log(new Date('2018-10-16T17:42:09.777Z'));\n    const dateStart = new Date(goal.timestamp).getTime();\n    const dateEnd = new Date(goal.year, goal.month, goal.day).getTime();\n    const salesFilter: ISale[] = [];\n    for (const adv of goal.adviser) {\n      sale\n        .filter(\n          s =>\n            s.adviser.some(a => a._id === adv._id) &&\n            s.isRent === false &&\n            (dateStart <= new Date(s.timestamp).getTime() &&\n              dateEnd > new Date(s.timestamp).getTime()),\n        )\n        .forEach(s => {\n          const isFinded = salesFilter.some(\n            saleFilter => saleFilter._id === s._id,\n          );\n          if (!isFinded) {\n            salesFilter.push(s);\n          }\n        });\n    }\n    return salesFilter;\n  }\n  getSumOfNumber(arrNum: number[]): number {\n    let sum = 0;\n    for (const num of arrNum) {\n      sum = sum + num;\n    }\n    return sum;\n  }\n  getPercent(\n    goals: [\n      {\n        nameGoal: string;\n        isComplete: boolean;\n      }\n    ],\n  ) {\n    let numOfComplete = 0;\n    goals.forEach(goal => {\n      if (goal.isComplete) {\n        numOfComplete++;\n      }\n    });\n    this.percent = (numOfComplete * 100) / goals.length;\n  }\n  getPercentNotGoals(finalNumber, currentNumber) {\n    this.percent = (currentNumber * 100) / finalNumber;\n  }\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n    });\n    toast.present();\n  }\n  changeGoal(e) {\n    this.goal.isComplete = false;\n    this.goalService.putGoal(this.goal).subscribe(() => {\n      this.getPercent(this.goal.goals);\n      if (this.percent === 100) {\n        this.goal.isComplete = true;\n        this.goalService.putGoal(this.goal).subscribe(() => {\n          this.presentToast('Se ha completado un objetivo');\n        });\n        if (this.user.type !== 'adviser') {\n          this.notification(\n            'Meta lograda',\n            `Se ha completado la meta: \"${this.goal.title}\"`,\n            'azul',\n            'celebrate',\n            undefined,\n            this.goal.adviser.map(a => a._id),\n          );\n        }\n      } else {\n        if (this.user.type !== 'adviser' && e.checked) {\n          this.notification(\n            'Objetivo Cumplido',\n            `Se ha completado una meta de el objetivo: \"${this.goal.title}\"`,\n            'rojo',\n            'celebrate',\n            undefined,\n            this.goal.adviser.map(a => a._id),\n          );\n        }\n      }\n\n      this.presentToast('Se ha modificado una meta');\n    });\n  }\n  formatDates(dateInput: Date): string {\n    return FormatDatesFront(dateInput);\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  fortmatDate2(year, montn, day) {\n    const date = new Date(year, montn, day);\n    return this.formatDates(date);\n  }\n  // noti\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(c => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Objetivo\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'back'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Preventa'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then: Load; else: NoLoad\\\"></ng-container>\\n    <ng-template #Load>\\n      <h1>Detalles de: {{ preBuild.name }}</h1>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{ 'desktop-card': isDesktop }\\\">\\n            <!-- [ngClass]=\\\"{'desktop-card': isDesktop }\\\" -->\\n            <ion-card-header>\\n              <ion-card-title> Progreso </ion-card-title>\\n              <ion-card-content>\\n                <app-goal-progress\\n                  subtitle=\\\"Progreso\\\"\\n                  [percent]=\\\"percent\\\"\\n                  [outerStrokeColor]=\\\"'#0091ea'\\\"\\n                ></app-goal-progress>\\n                <ion-list lines=\\\"none\\\">\\n                  <ion-list-header>Constructores de la Obra</ion-list-header>\\n                  <ion-item lines=\\\"none\\\" *ngFor=\\\"let adv of preBuild.preBuyer\\\">\\n                    {{ adv.name }} {{ adv.lastName }}\\n                  </ion-item>\\n                </ion-list>\\n              </ion-card-content>\\n            </ion-card-header>\\n          </ion-card>\\n        </ion-col>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{ 'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <ion-card-title> Lista de Fases </ion-card-title>\\n              <ion-card-subtitle *ngIf=\\\"checkAdminRol(user.type)\\\"\\n                >Seleccione una fase para completar</ion-card-subtitle\\n              >\\n            </ion-card-header>\\n            <div *ngIf=\\\"checkAdminRol(user.type)\\\" class=\\\"flex-container\\\">\\n              <mat-checkbox\\n                (change)=\\\"changeStatus($event.checked)\\\"\\n                *ngFor=\\\"let item of preBuild.timeLine; let i = index\\\"\\n                [(ngModel)]=\\\"item.isComplete\\\"\\n              >\\n                <h3>{{ item.namePhase }}</h3>\\n                <div>{{ item.notes }}</div>\\n                <div>\\n                  Inicio:\\n                  {{\\n                    formatDates(\\n                      item.yearToStart,\\n                      item.monthToStart,\\n                      item.dayToStart\\n                    )\\n                  }}\\n                </div>\\n                <div>\\n                  Fin:\\n                  {{\\n                    formatDates(item.yearToEnd, item.monthToEnd, item.dayToEnd)\\n                  }}\\n                </div>\\n              </mat-checkbox>\\n            </div>\\n            <span *ngIf=\\\"!checkAdminRol(user.type)\\\">\\n              <mat-list *ngFor=\\\"let item of preBuild.timeLine; let i = index\\\">\\n                <h3 matSubheader>\\n                  <b> {{ item.namePhase }} </b>\\n                </h3>\\n                <mat-list-item>\\n                  <mat-icon\\n                    [ngClass]=\\\"{\\n                      'color-complete': item.isComplete,\\n                      'color-incomplete': !item.isComplete\\n                    }\\\"\\n                    matListIcon\\n                    >{{\\n                      item.isComplete\\n                        ? 'assignment_turned_in'\\n                        : 'assignment_late'\\n                    }}</mat-icon\\n                  >\\n                  <h4 matLine>\\n                    <b>\\n                      {{ item.isComplete ? 'Completada' : 'Sin Completar' }}\\n                    </b>\\n                  </h4>\\n                  <p matLine>\\n                    Inicio:\\n                    {{\\n                      formatDates(\\n                        item.yearToStart,\\n                        item.monthToStart,\\n                        item.dayToStart\\n                      )\\n                    }}\\n                  </p>\\n                  <p matLine>\\n                    Fin:\\n                    {{\\n                      formatDates(\\n                        item.yearToEnd,\\n                        item.monthToEnd,\\n                        item.dayToEnd\\n                      )\\n                    }}\\n                  </p>\\n                  <p matLine>{{ item.notes }}</p>\\n                </mat-list-item>\\n              </mat-list>\\n            </span>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n      <!-- Options grid -->\\n      <div *ngIf=\\\"checkAdminRol(user.type)\\\" class=\\\"conteiner-buttons\\\">\\n        <p style=\\\"text-align: left;\\\">Fotos de Fase</p>\\n        <mat-button-toggle-group (change)=\\\"changeGrid($event)\\\">\\n          <mat-button-toggle [checked]=\\\"!isList\\\" value=\\\"column\\\">\\n            <mat-icon color=\\\"accent\\\">view_column</mat-icon>\\n          </mat-button-toggle>\\n          <mat-button-toggle [checked]=\\\"isList\\\" color=\\\"primary\\\" value=\\\"list\\\">\\n            <mat-icon color=\\\"accent\\\">view_list</mat-icon>\\n          </mat-button-toggle>\\n        </mat-button-toggle-group>\\n      </div>\\n      <ng-container *ngIf=\\\"isList; then: List; else: Column\\\"></ng-container>\\n      <ng-template #List>\\n        <!-- Contenedor List -->\\n        <ion-list style=\\\"margin-top: 1%\\\">\\n          <ion-list-header> {{ getCurrentPhaseName() }} </ion-list-header>\\n          <!-- img ya cargadas -->\\n          <ion-item *ngFor=\\\"let img of preBuild.imgUrls\\\">\\n            <ion-thumbnail slot=\\\"start\\\">\\n              <ion-img [src]=\\\"img\\\"></ion-img>\\n            </ion-thumbnail>\\n            <ion-label text-wrap>\\n              <h3>{{ getCurrentPhaseData().namePhase }}</h3>\\n              <p><b>Notas: </b>{{ getCurrentPhaseData().notes }}</p>\\n            </ion-label>\\n            <ion-button\\n              (click)=\\\"presentAlertConfirm(img)\\\"\\n              shape=\\\"round\\\"\\n              fill=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n            >\\n              <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\n              Borrar\\n            </ion-button>\\n          </ion-item>\\n          <!-- /img ya cargadas -->\\n          <!-- img antes de subir -->\\n          <span *ngFor=\\\"let prev of imgToUpload; let ii = index\\\">\\n            <ion-item>\\n              <ion-thumbnail slot=\\\"start\\\">\\n                <ion-img [src]=\\\"prev.srcPrev\\\"></ion-img>\\n              </ion-thumbnail>\\n              <span>\\n                <ion-label>\\n                  <h3>Subir Foto</h3>\\n                  <p></p>\\n                </ion-label>\\n                <!--\\n                  <ion-input\\n                    [(ngModel)]=\\\"prev.notes\\\"\\n                    placeholder=\\\"Escribe algo referente\\\"\\n                  ></ion-input>\\n                -->\\n                <ion-button\\n                  shape=\\\"round\\\"\\n                  fill=\\\"outline\\\"\\n                  (click)=\\\"uploadImg(prev)\\\"\\n                  color=\\\"success\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n                  Subir\\n                </ion-button>\\n                <ion-button\\n                  (click)=\\\"discartImg(ii)\\\"\\n                  shape=\\\"round\\\"\\n                  fill=\\\"outline\\\"\\n                  color=\\\"danger\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\n                  Descartar\\n                </ion-button>\\n              </span>\\n            </ion-item>\\n          </span>\\n          <!-- /img antes de subir -->\\n          <!-- boton para subir file -->\\n          <input\\n            id=\\\"imagen1\\\"\\n            accept=\\\"image/*\\\"\\n            name=\\\"imagen1\\\"\\n            type=\\\"file\\\"\\n            hidden\\n            (change)=\\\"fileChangeEvent($event)\\\"\\n          />\\n          <ion-button\\n            (click)=\\\"link()\\\"\\n            shape=\\\"round\\\"\\n            fill=\\\"outline\\\"\\n            color=\\\"secondary\\\"\\n          >\\n            <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n            Agregar\\n          </ion-button>\\n          <!--\\n            <ion-button\\n              *ngIf=\\\"isCordova\\\"\\n              (click)=\\\"cameraIonic()\\\"\\n              shape=\\\"round\\\"\\n              fill=\\\"outline\\\"\\n              color=\\\"secondary\\\"\\n            >\\n              <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\n              Camara\\n            </ion-button>\\n          -->\\n        </ion-list>\\n      </ng-template>\\n      <ng-template #Column>\\n        <!-- Contenedor de fases -->\\n        <div class=\\\"conteiner-phases\\\">\\n          <!-- fase titulo -->\\n          <h2>{{ getCurrentPhaseName() }}</h2>\\n          <!-- contenedor imagenes -->\\n          <div class=\\\"flex-img\\\">\\n            <img *ngFor=\\\"let img of preBuild.imgUrls\\\" [src]=\\\"img\\\" />\\n          </div>\\n          <!--\\n            <button style=\\\"margin-left: 1%;\\\" mat-stroked-button color=\\\"accent\\\">\\n              <mat-icon color=\\\"accent\\\">add</mat-icon>\\n              Agregar\\n            </button>\\n          -->\\n          <!-- /contenedor imagenes -->\\n        </div>\\n\\n        <!-- /Contenedor de fases -->\\n      </ng-template>\\n    </ng-template>\\n    <ng-template #NoLoad>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.flex-img {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.flex-img > * {\\n  padding: 1%;\\n  width: 300px;\\n  height: 300px; }\\n\\n.conteiner-buttons {\\n  padding: 3% 3% 0% 3%;\\n  text-align: right;\\n  margin-top: 8%; }\\n\\n/* .conteiner-buttons>* {\\n  // background-color: var(--ion-color-primary);\\n\\n} */\\n\\n.conteiner-phases {\\n  padding: 1%; }\\n\\n.flex-img > .item {\\n  align-self: flex-end; }\\n\\n.color-complete {\\n  color: var(--ion-color-success); }\\n\\n.color-incomplete {\\n  color: var(--ion-color-warning); }\\n\\n@media (max-width: 900px) {\\n  .flex-img > * {\\n    padding: 1%;\\n    width: 100%;\\n    height: unset; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PreBuildService } from '../../../services/pre-build.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { IPreBuild } from '../../../models/preBuild';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport {\n  ToastController,\n  AlertController,\n  LoadingController\n} from '@ionic/angular';\nimport { FormatDatesFront } from '../../../_config/_helpers';\nimport { BuildService } from '../../../services/build.service';\nimport { END_POINT } from '../../../_config/api.end-points';\ninterface TimeLine {\n  dayToStart?: number;\n  monthToStart?: number;\n  yearToStart?: number;\n  dayToEnd?: number;\n  monthToEnd?: number;\n  yearToEnd?: number;\n  notes?: string;\n  namePhase?: string;\n  isComplete?: boolean;\n  imgUrls?: string[];\n  _id?: any;\n}\n@Component({\n  selector: 'app-detail-pre-build',\n  templateUrl: './detail-pre-build.component.html',\n  styleUrls: ['./detail-pre-build.component.scss']\n})\nexport class DetailPreBuildComponent implements OnInit {\n  user: IUserSession;\n  isDesktop = true;\n  isLoad: boolean;\n  preBuild: IPreBuild;\n  percent: number;\n  isList: boolean;\n  imgName = '';\n  imgToUpload: {\n    srcPrev: string;\n    srcBlob: Blob;\n    name: string;\n  }[] = [];\n\n  constructor(\n    private preBuildService: PreBuildService,\n    private route: ActivatedRoute,\n    private userSession: UserSessionService,\n    private oneSignalService: OnesignalService,\n    public toastController: ToastController,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private buildService: BuildService\n  ) {\n    this.user = userSession.userSession.value;\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.getPreBuild(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getPreBuild(id: string) {\n    this.isLoad = false;\n    this.preBuildService.getBuildById(id).subscribe(build => {\n      this.preBuild = build;\n      this.getPercent(build.timeLine);\n      this.isLoad = true;\n    });\n  }\n  getPercent(timeLine) {\n    let numOfComplete = 0;\n    timeLine.forEach(tl => {\n      if (tl.isComplete) {\n        numOfComplete++;\n      }\n    });\n    this.percent = (numOfComplete * 100) / timeLine.length;\n  }\n  checkAdminRol(userType: string): boolean {\n    if (userType === 'preBuyer') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  changeStatus(e: boolean) {\n    this.preBuildService.putBuild(this.preBuild).subscribe(() => {\n      this.getPercent(this.preBuild.timeLine);\n      if (e) {\n        // borrar img\n        if (this.preBuild.imgUrls && this.preBuild.imgUrls.length) {\n          this.preBuild.imgUrls.forEach(img => {\n            this.deletedImg(img);\n          });\n          this.preBuild.imgUrls = [];\n          this.preBuildService.putBuild(this.preBuild).subscribe();\n        }\n        if (this.percent === 100) {\n          this.notification(\n            'Obra Terminada',\n            `Se ha completado la obra: \"${this.preBuild.name}\"`,\n            'azul',\n            'celebrate',\n            undefined,\n            this.preBuild.preBuyer.map(a => a._id)\n          );\n        } else {\n          this.notification(\n            'Fase Concluida',\n            `Se ha completado una fase de la obra: \"${this.preBuild.name}\"`,\n            'rojo',\n            'celebrate',\n            undefined,\n            this.preBuild.preBuyer.map(a => a._id)\n          );\n        }\n      }\n      this.presentToast(\n        this.percent === 100 ? 'Obra Terminada' : 'Se ha modificado una fase'\n      );\n    });\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(c => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n  formatDates(year, month, day): string {\n    const date = new Date(year, month, day);\n    return FormatDatesFront(date);\n  }\n  formatDates2(date: Date): string {\n    return FormatDatesFront(date);\n  }\n  changeGrid(value) {\n    this.isList = !this.isList;\n  }\n  getCurrentPhaseName() {\n    const currentPhase = this.preBuild.timeLine.find(\n      tl => tl.isComplete === false\n    );\n    if (currentPhase) {\n      return currentPhase.namePhase;\n    } else {\n      return 'Completada';\n    }\n  }\n  getCurrentPhaseData(): TimeLine {\n    const currentPhase = this.preBuild.timeLine.find(\n      tl => tl.isComplete === false\n    );\n    if (currentPhase) {\n      return currentPhase;\n    } else {\n      return undefined;\n    }\n  }\n  // subir foto\n  fileChangeEvent(fileInput) {\n    const imgToUpload = <File>fileInput.target.files[0];\n    // img name\n    this.imgName = imgToUpload.name.slice(0, imgToUpload.name.indexOf('.'));\n    // preview\n    const reader = new FileReader();\n    reader.onload = r => {\n      this.render(reader.result);\n    };\n    reader.readAsDataURL(imgToUpload);\n  }\n  // render\n  render(src) {\n    const MAX_HEIGHT = 400;\n    const image = new Image();\n    image.onload = r => {\n      const canvas = document.createElement('canvas');\n      if (image.height > MAX_HEIGHT) {\n        image.width *= MAX_HEIGHT / image.height;\n        image.height = MAX_HEIGHT;\n      }\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, image.width, image.height);\n      canvas.toBlob(\n        c => {\n          if (c.size > 200000) {\n            this.presentAlertImg(\n              'La imagen excede el límite de tamaño',\n              'Imagen no válida'\n            );\n          } else {\n            this.imgToUpload.push({\n              srcPrev: src,\n              name: this.imgName,\n              srcBlob: c\n            });\n          }\n          // tipo, calidad\n        },\n        'image/jpeg',\n        0.75\n      );\n    };\n    image.src = src;\n  }\n  // alerts\n  async presentAlertImg(message, header) {\n    const alert = await this.alertController.create({\n      header: header,\n      message: message,\n      buttons: [\n        {\n          text: 'Ok',\n          role: 'ok',\n          handler: () => {}\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async presentLoadingWithOptions(message) {\n    const loading = await this.loadingController.create({\n      message: message,\n      translucent: true\n    });\n    return await loading;\n  }\n  // /alerts\n\n  link() {\n    const input = document.getElementById('imagen1').click();\n  }\n  /**\n   * Subir imagen Confirmado\n   * @param imgToUp imagen subir\n   * @param index index del prev\n   * @param notes notas\n   */\n  async uploadImg(imgToUp: { srcPrev: string; srcBlob: Blob; name: string }) {\n    // subir no cordova\n    const load = await this.presentLoadingWithOptions('Subiendo Foto...');\n    load.present();\n    // construir archivo\n    const file = new File([imgToUp.srcBlob], imgToUp.name + '.jpg', {\n      type: imgToUp.srcBlob.type,\n      lastModified: new Date().getTime()\n    });\n    // construir form\n    const formData = new FormData();\n    formData.append('imagen1', file);\n    // subir al server\n    // espera respuesta\n    const arrStr = await this.buildService.uploadImg(formData).toPromise();\n    if (arrStr.length > 0) {\n      this.notification(\n        'Nueva Foto',\n        `Se ha subido una foto de la preventa ${this.preBuild.name}`,\n        'amarillo',\n        'build',\n        undefined,\n        this.preBuild.preBuyer.map(m => m._id)\n      );\n      this.putBuild(imgToUp);\n      load.dismiss();\n      this.presentToast('Imagen Subida');\n    }\n  }\n  putBuild(imgToUp: { srcPrev: string; srcBlob: Blob; name: string }): any {\n    if (this.preBuild.imgUrls && this.preBuild.imgUrls.length) {\n      this.preBuild.imgUrls.push(END_POINT.IP + imgToUp.name + '.jpg');\n    } else {\n      const arr = [END_POINT.IP + imgToUp.name + '.jpg'];\n      this.preBuild.imgUrls = arr;\n    }\n    this.preBuildService.putBuild(this.preBuild).subscribe(() => {\n      const index = this.imgToUpload.findIndex(\n        img => img.name === imgToUp.name\n      );\n      this.imgToUpload.splice(index, 1);\n    });\n  }\n\n  discartImg(index: number) {\n    this.imgToUpload.splice(index, 1);\n  }\n  deletedImg(imgURL: string) {\n    const imgName = imgURL.slice(imgURL.lastIndexOf('/') + 1, imgURL.length);\n    this.buildService.deletedImg(imgName).subscribe(() => {\n      const index = this.preBuild.imgUrls.findIndex(img => img === imgURL);\n      this.preBuild.imgUrls.splice(index, 1);\n\n      this.preBuildService.putBuild(this.preBuild).subscribe(() => {\n        this.presentToast('Imagen Borrada');\n      });\n    });\n  }\n  async presentAlertConfirm(url: string) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Imagen',\n      message: `¿Desea eliminar imagen?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          }\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deletedImg(url);\n      }\n    });\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Detalles Propiedades'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <h1> Característica </h1>\\n\\n      <ion-card>\\n\\n        <ion-card-header>\\n          <ion-card-title> {{property.name}} </ion-card-title>\\n        </ion-card-header>\\n        <!-- Principales -->\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col>\\n              <!-- Renta/venta -->\\n              <ion-chip *ngIf=\\\"property.isRent\\\" style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n                <ion-label>Renta</ion-label>\\n              </ion-chip>\\n              <ion-chip *ngIf=\\\"!property.isRent\\\" style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n                <ion-label>Venta</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"expand\\\"></ion-chip-icon>\\n                <ion-label>Espacio {{property.space}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n                <ion-label>Fecha {{property.dateToBuy}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"water\\\"></ion-chip-icon>\\n                <ion-label>Baños {{property.numBathrooms}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n                <ion-label>Max ${{property.maxPrice}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n                <ion-label>Min ${{property.minPrice}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"car\\\"></ion-chip-icon>\\n                <ion-label>Estacionamiento {{property.numCars}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n            <ion-col>\\n              <ion-chip style=\\\"background-color: #F58634\\\">\\n                <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"bed\\\"></ion-chip-icon>\\n                <ion-label>Cuartos {{property.numRooms}}</ion-label>\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n        <!-- otros -->\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Otras</ion-card-subtitle>\\n        <div class=\\\"container-details-property\\\">\\n          <ion-item *ngIf=\\\"property.allServices\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Todos los servicios</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!property.allServices\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin los servicios</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.hasElevator\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Elevador</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!property.hasElevator\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin Elevador</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.hasGarden\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Jardin</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!property.hasGarden\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin Jardin</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.isClose\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Fraccionamineto Cerrado</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!property.isClose\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Sin Fraccionamineto Cerrado</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!property.isOld\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Nuevo</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.isOld\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Usado</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.isLowLevel\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Planta Baja</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!property.isLowLevel\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label>Cualquier num de piso</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.wayToBuy\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap> Forma de Compra: {{property.wayToBuy}}</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.zone\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap>Zona: {{property.zone}}</ion-label>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"property.typeOfProperty\\\">\\n            <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n            <ion-label text-wrap>Tipo de Propiedad: {{property.typeOfProperty}}</ion-label>\\n          </ion-item>\\n        </div>\\n        <!-- files -->\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Documentos</ion-card-subtitle>\\n        <div class=\\\"container-details-property\\\">\\n          <div *ngFor=\\\"let doc of property.files\\\">\\n            <p>{{doc }}</p>\\n          </div>\\n        </div>\\n\\n        <!-- tag -->\\n        <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Etiquetas</ion-card-subtitle>\\n        <div class=\\\"container-details-property\\\">\\n          <div *ngFor=\\\"let tag of property.tag\\\">\\n            # {{tag }}\\n          </div>\\n        </div>\\n\\n      </ion-card>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 order-md-2 mb-4\\\">\\n          <h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n            <span class=\\\"text-muted\\\">Personas Interesadas</span>\\n            <span class=\\\"badge badge-secondary badge-pill\\\">{{sbp.length}}</span>\\n          </h4>\\n          <ul class=\\\"list-group mb-3\\\">\\n            <li class=\\\"list-group-item d-flex justify-content-between lh-condensed\\\" *ngFor=\\\"let item of sbp\\\">\\n              <div>\\n                <h6 class=\\\"my-0\\\">{{item.buyer.name}}</h6>\\n                <small class=\\\"text-muted\\\">{{dateFormat(item.timestamp)}}</small>\\n              </div>\\n              <span class=\\\"badge badge-pill\\\" style=\\\"height: 15%; color: white \\\" [ngClass]=\\\"\\n              {'background-verde': item.status === 'verde', \\n             'background-amarillo':  item.status === 'amarillo',\\n             'background-rojo':  item.status === 'rojo',\\n             'background-gris': item.status === 'gris',\\n             'background-azul':  item.status === 'azul' }\\\">\\n                {{item.status\\n                === 'rojo' ? 'Cierre' : item.status\\n                === 'verde' ? 'Interés': item.status\\n                === 'amarillo' ? 'Seguimiento': item.status\\n                === 'azul' ? 'Post Venta' : ''}}</span>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n\\n    </ng-template>\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n\\n    </ng-template>\\n  </ion-grid>\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab *ngIf=\\\"isLoad && !property.isBuy\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"presentAlertCheckbox()\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"person-add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".container-details-property {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 0% 10% 3% 10%; }\\n\\n.flex-title {\\n  display: flex;\\n  align-items: baseline;\\n  width: 100% !important; }\\n\\n.mb-3,\\n.my-3 {\\n  margin-bottom: 1rem !important; }\\n\\n.badge-secondary {\\n  color: #fff;\\n  background-color: #F5811E; }\\n\\n.list-group-item {\\n  border-top-left-radius: .25rem;\\n  border-top-right-radius: .25rem; }\\n\\n.lh-condensed {\\n  line-height: 1.25; }\\n\\n.justify-content-between {\\n  justify-content: space-between !important; }\\n\\n.d-flex {\\n  display: flex !important; }\\n\\n.list-group-item {\\n  position: relative;\\n  display: block;\\n  padding: .75rem 1.25rem;\\n  margin-bottom: -1px;\\n  background-color: #fff;\\n  border: 1px solid rgba(0, 0, 0, 0.125); }\\n\\n.badge-pill {\\n  padding-right: .6em;\\n  padding-left: .6em;\\n  border-radius: 10rem; }\\n\\n.row {\\n  width: 30%; }\\n\\nul {\\n  padding: 0%; }\\n\\n@media (max-width: 900px) {\\n  .row {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../models/property.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { PropertyService } from '../../../services/property.service';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { IStatusBuyerPropertyGet } from '../../../models/statusBuyerProperty.model';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { AlertInput } from '@ionic/core';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { FormatDatesFront } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-detail-prop-admin',\n  templateUrl: './detail-prop-admin.component.html',\n  styleUrls: ['./detail-prop-admin.component.scss'],\n})\nexport class DetailPropAdminComponent implements OnInit {\n  property: IProperty;\n  isLoad = false;\n  isLiked = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  sbp: IStatusBuyerPropertyGet[] = [];\n  constructor(\n    private route: ActivatedRoute,\n    private propertyService: PropertyService,\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    public toastController: ToastController,\n    private statusBPService: StatusBuyerPropertyService,\n    public alertController: AlertController,\n    private oneSignalService: OnesignalService,\n    private sBPService: StatusBuyerPropertyService,\n  ) {\n    this.route.queryParams.subscribe(params => {\n      console.log(params.id);\n      if (params.id) {\n        this.getPropertyById(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getPropertyById(id: string) {\n    this.propertyService.getPropertyById(id).subscribe(async property => {\n      this.property = property;\n      this.sbp = await this.getBuyersProp(id);\n      console.log('sbp', this.sbp);\n      this.isLoad = true;\n    });\n  }\n  async getBuyersProp(id) {\n    const sBP = await this.statusBPService.getStatusBuyerProperty().toPromise();\n    return <IStatusBuyerPropertyGet[]>(\n      sBP.filter((s: any) => s.property._id === id)\n    );\n  }\n  setPropToBuyer(data: string[]) {\n    data.forEach(buyerId => {\n      if (buyerId !== '') {\n        // noti\n        this.notification(\n          'Sugerencia de Propiedad',\n          `Se ha sugerido la propiedad ${this.property.name}`,\n          'gris',\n          'property',\n          buyerId,\n        );\n        this.buyerService.getBuyerById(buyerId).subscribe(b => {\n          b.property.push(<any>this.property._id);\n          this.buyerService.putBuyer(b).subscribe(() => {\n            this.presentToast('Propiedad Agregada a Cliente');\n          });\n        });\n      }\n    });\n  }\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n    });\n    toast.present();\n  }\n  async getBuyers() {\n    return await this.buyerService.getBuyerAll().toPromise();\n  }\n  async presentAlertCheckbox() {\n    const buyers = await this.getBuyers();\n    const inputsBuyer: AlertInput[] = [];\n    buyers.forEach(b => {\n      const findIndex = b.property.findIndex(p => p._id === this.property._id);\n      if (findIndex !== -1) {\n        inputsBuyer.push({\n          name: b.name,\n          type: 'checkbox',\n          label: b.name,\n          checked: true,\n          disabled: true,\n        });\n      } else {\n        inputsBuyer.push({\n          name: b.name,\n          type: 'checkbox',\n          label: b.name,\n          value: b._id,\n        });\n      }\n    });\n    const alert = await this.alertController.create({\n      header: 'Sugerir a Clientes',\n      inputs: inputsBuyer,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('');\n          },\n        },\n        {\n          text: 'Ok',\n          role: 'ok',\n          handler: () => {\n            console.log('');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.setPropToBuyer(res.data.values);\n      }\n    });\n  }\n  // noti\n  private notification(title, message, status, type, receiversId: string) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      receiversId: [receiversId],\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, undefined, [receiversId])\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  dateFormat(date: string) {\n    return FormatDatesFront(new Date(date));\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles de Apartado\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Detalles de Apartado'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <h2>Propiedad apartada: {{sBP.property.name}}</h2>\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <ion-card-title>Detalles del Apartado</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list lines=\\\"none\\\">\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Cliente:</b> </p>\\n                    <p>{{sBP.buyer.name}}\\n                    </p>\\n                  </ion-label>\\n                </ion-item>\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>La propiedad fue apartado por:</b></p>\\n                    <p> {{isCredit ? 'Crédito':'Oferta'}}</p>\\n                  </ion-label>\\n                </ion-item>\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Fecha de apartado:</b> </p>\\n                    <p>{{formatDates(sBP.timestamp)}}</p>\\n                  </ion-label>\\n                </ion-item>\\n\\n              </ion-list>\\n            </ion-card-content>\\n            <ion-card-content></ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n          <ion-card *ngIf=\\\"dayRest\\\" [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <ion-card-title text-wrap>Tiempo Restante: {{dayRest}} dias</ion-card-title>\\n              <ion-card-content>\\n                <app-goal-progress [outerStrokeColor]=\\\"outerStrokeColor\\\" subtitle=\\\"Tiempo de espera\\\" [percent]=\\\"percent\\\"></app-goal-progress>\\n\\n              </ion-card-content>\\n            </ion-card-header>\\n          </ion-card>\\n          <ion-card *ngIf=\\\"!dayRest\\\" [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <div class=\\\"alert\\n            alert-danger\\\">\\n              Se ha agotado el tiempo de espera\\n            </div>\\n            <ion-card-content>\\n              <h3>El tiempo de espera es de 15 dias, la propiedad ya no esta en estado de apartada </h3>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n      <!-- Credito / oferta -->\\n      <ion-row>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let credit of getCredits(sBP)\\\">\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <div style=\\\"text-align: right; margin-right: 2%\\\">\\n                <ion-button slot=\\\"end\\\" [disabled]=\\\"!dayRest\\\" (click)=\\\"presentAlertPrompt('Crédito')\\\" color=\\\"danger\\\"\\n                  fill=\\\"outline\\\">Firmar</ion-button>\\n              </div>\\n              <ion-card-title>Detalles del Crédito</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list lines=\\\"none\\\">\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Notas:</b> </p>\\n                    <p>{{credit.notes}}\\n                    </p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"document\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Documentos:</b> </p>\\n                    <p *ngFor=\\\"let file of credit.files\\\">{{file}}</p>\\n                  </ion-label>\\n                </ion-item>\\n\\n              </ion-list>\\n            </ion-card-content>\\n            <ion-card-content></ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n        <ion-col size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let ofert of getOferts(sBP)\\\">\\n          <ion-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n            <ion-card-header>\\n              <div style=\\\"text-align: right; margin-right: 2%\\\">\\n                <ion-button [disabled]=\\\"!dayRest\\\" (click)=\\\"presentAlertPrompt('Oferta', ofert.ofertPrice)\\\" slot=\\\"end\\\"\\n                  color=\\\"danger\\\" fill=\\\"outline\\\">Firmar</ion-button>\\n              </div>\\n              <ion-card-title text-wrap>Detalles de la Oferta</ion-card-title>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-list lines=\\\"none\\\">\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Precio:</b> </p>\\n                    <p>{{ofert.ofertPrice}}\\n                    </p>\\n                  </ion-label>\\n                </ion-item>\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Notas:</b></p>\\n                    <p> {{ofert.notes}}</p>\\n                  </ion-label>\\n                </ion-item>\\n\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"document\\\"></ion-icon>\\n                  <ion-label text-wrap>\\n                    <p><b>Documentos:</b> </p>\\n                    <p *ngFor=\\\"let file of ofert.files\\\">{{file}}</p>\\n                  </ion-label>\\n                </ion-item>\\n\\n              </ion-list>\\n            </ion-card-content>\\n            <ion-card-content></ion-card-content>\\n\\n          </ion-card>\\n        </ion-col>\\n\\n      </ion-row>\\n\\n\\n\\n    </ng-template>\\n    <ng-template #elseTemplate>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n\\n  </ion-grid>\\n  <!-- <button (click)=\\\"presentAlertCheckbox()\\\" class=\\\"mdc-fab mdc-fab--extended app-fab--absolute\\\">\\n    <span class=\\\"material-icons mdc-fab__icon\\\">done</span>\\n    <span class=\\\"mdc-fab__label\\\">Frimar</span>\\n  </button> -->\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%;\\n  margin: 5%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.alert {\\n  position: relative;\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 1rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem; }\\n\\n.alert-danger {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb; }\\n\\n.app-fab--absolute {\\n  position: fixed !important;\\n  bottom: 1rem;\\n  right: 1rem; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { PropertyService } from '../../../services/property.service';\nimport { Platform, ToastController, AlertController } from '@ionic/angular';\nimport { IProperty } from '../../../models/property.model';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport {\n  IStatusBuyerProperty,\n  IStatusBuyerPropertyGet,\n} from '../../../models/statusBuyerProperty.model';\nimport { FormatDatesFront } from '../../../_config/_helpers';\nimport { AlertInput } from '@ionic/core';\nimport { IOfert } from '../../../models/ofert.model';\nimport { ICredit } from '../../../models/credit.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { map } from 'rxjs/operators';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { INotification } from '../../../models/notification.model';\nimport { SellerService } from '../../../services/seller.service';\nimport { IBuyer } from '../../../models/buyer.model';\n\n@Component({\n  selector: 'app-detail-salesprop-admin',\n  templateUrl: './detail-salesprop-admin.component.html',\n  styleUrls: ['./detail-salesprop-admin.component.scss'],\n})\nexport class DetailSalespropAdminComponent implements OnInit {\n  isLoad = false;\n  isDesktop = false;\n  sBP: IStatusBuyerPropertyGet;\n  isOfert: boolean;\n  isCredit: boolean;\n  percent: number;\n  dayRest: number;\n  outerStrokeColor = '#f5811e';\n  idsNotification: string[] = [];\n  constructor(\n    private statusBPService: StatusBuyerPropertyService,\n    private userSession: UserSessionService,\n    private propertyService: PropertyService,\n    private platform: Platform,\n    public toastController: ToastController,\n    public alertController: AlertController,\n    public route: ActivatedRoute,\n    public byuerService: BuyerService,\n    public saleService: SaleService,\n    private router: Router,\n    private oneSignalService: OnesignalService,\n    private sellerService: SellerService,\n  ) {\n    this.isDesktop = platform.is('desktop');\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        if (params['ofert'] === 'false') {\n          this.isOfert = false;\n        } else {\n          this.isOfert = true;\n        }\n        if (params['credit'] === 'false') {\n          this.isCredit = false;\n        } else {\n          this.isCredit = true;\n        }\n\n        this.getSBPById(params['id'], this.statusBPService.timeToBuy);\n      }\n    });\n  }\n  getSBPById(id: string, timestamp) {\n    this.statusBPService.getStatusBuyerPropertyById(id).subscribe(sBP => {\n      this.isLoad = true;\n      // 15 dias - 100%\n      const diffDays = 15 - this.deDiffDays(timestamp);\n      if (diffDays > 0) {\n        this.dayRest = diffDays;\n        this.percent = (diffDays * 100) / 15;\n      }\n      this.sBP = <any>sBP;\n      this.getOferts(this.sBP).forEach(ofert => {\n        this.idsNotification = this.idsNotification.concat(\n          ofert.notificationOneSignal,\n        );\n      });\n      this.getCredits(this.sBP).forEach(cred => {\n        this.idsNotification = this.idsNotification.concat(\n          cred.notificationOneSignal,\n        );\n      });\n    });\n  }\n  private deDiffDays(dateToDiference: Date) {\n    const date1 = new Date(dateToDiference);\n    const date2 = new Date();\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\n    const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n    return diffDays;\n  }\n  getOferts(sBP: IStatusBuyerPropertyGet): IOfert[] {\n    // rojo por oferta\n    return sBP.buyer.ofert.filter(\n      ofert => ofert.status === 'rojo' && ofert.property === sBP.property._id,\n    );\n  }\n  getCredits(sBP: IStatusBuyerPropertyGet): ICredit[] {\n    // rojo por credito\n    return sBP.buyer.credit.filter(\n      credit =>\n        credit.status === 'rojo' && credit.property === sBP.property._id,\n    );\n  }\n  async getAdv() {\n    return await this.byuerService\n      .getBuyerById(this.sBP.buyer._id)\n      .pipe(map(data => data.adviser))\n      .toPromise();\n  }\n\n  async presentAlertPrompt(str, oferPrice?) {\n    const propInput: AlertInput[] = [\n      {\n        name: 'price',\n        type: 'number',\n        value: this.isOfert ? oferPrice : this.sBP.property.maxPrice.toString(),\n        label: 'Costo Final',\n        placeholder: 'Costo Final',\n      },\n      {\n        name: 'note',\n        type: 'text',\n        placeholder: 'Notas',\n        value: str,\n      },\n      {\n        name: 'property',\n        type: 'text',\n        id: 'property-id',\n        value: this.sBP.property.name,\n        disabled: true,\n      },\n      {\n        name: 'buyer',\n        type: 'text',\n        value: this.sBP.buyer.name + this.sBP.buyer.fatherLastName,\n        placeholder: 'Consumidor',\n        disabled: true,\n      },\n    ];\n    const alert = await this.alertController.create({\n      header: 'Firmar',\n      subHeader: 'Llene los campos',\n      message: 'Al momento de aceptar la propiedad cambiará de estado',\n      inputs: propInput,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('');\n          },\n        },\n        {\n          text: 'Aceptar',\n          role: 'ok',\n          handler: () => {\n            console.log('');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.presentAlertCheckbox(res.data.values.price, res.data.values.note);\n      }\n    });\n  }\n  // asigna adv\n  async presentAlertCheckbox(price, note) {\n    const advInput: AlertInput[] = [];\n    const advisers: IAdviser[] = await this.getAdv();\n    advisers.forEach(adv => {\n      advInput.push({\n        name: 'adviser',\n        type: 'checkbox',\n        label: adv.name,\n        value: adv._id,\n      });\n    });\n    const alert = await this.alertController.create({\n      header: 'Asesor',\n      subHeader: 'Seleccione Asesores de renta/compra',\n      inputs: advInput,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('');\n          },\n        },\n        {\n          text: 'Firmar',\n          role: 'ok',\n          handler: () => {\n            console.log('');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.changeStatus(res.data.values, note, price);\n      }\n    });\n  }\n  // cambiar status\n  async changeStatus(advs: any[], note, price) {\n    const seller = await this.getSellerOfProperty(this.sBP.property._id);\n    const Sale = {\n      adviser: advs,\n      isRent: this.sBP.property.isRent,\n      buyer: this.sBP.buyer._id,\n      property: this.sBP.property._id,\n      note: note,\n      price: +price,\n    };\n    this.statusBPService.upgradeStatus(this.sBP._id, 'azul').subscribe(() => {\n      this.saleService.newSale(<any>Sale).subscribe(sale => {\n        const prop = { _id: this.sBP.property._id, isBuy: true };\n        this.propertyService.putProperty(prop).subscribe(() => {\n          // Propiedad Adquirida => sirve para modal con estrella\n          this.notification(\n            'Propiedad Adquirida',\n            `La propiedad: ${\n              this.sBP.property.name\n            } ha sido adquirida por el cliente: \"${this.sBP.buyer.name}\"`,\n            'azul',\n            'property',\n            ['administrator', 'office'],\n            seller === undefined\n              ? [...[Sale.buyer], ...Sale.adviser]\n              : [...[seller._id, Sale.buyer], ...Sale.adviser],\n          );\n          this.deleteNotification(this.idsNotification);\n          const toast: NavigationExtras = {\n            queryParams: { res: 'Venta Concretada' },\n          };\n          this.router\n            .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n            .then(() => this.router.navigate(['list-salesprop-admin'], toast));\n        });\n      });\n    });\n  }\n  formatDates(date: Date) {\n    return FormatDatesFront(date);\n  }\n  deleteNotification(ids: string[]) {\n    ids.forEach(id => {\n      this.oneSignalService\n        .deleteOneSignalSchedule(id)\n        .subscribe(c => console.log(c));\n    });\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  private async getSellerOfProperty(propertyId) {\n    return await this.sellerService\n      .getSellerAll()\n      .pipe(\n        map(sellers =>\n          sellers.find(s => !!s.property.find(p => p._id === propertyId)),\n        ),\n      )\n      .toPromise();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Detalles Propietarios'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <h1> Detalles de Propietario </h1>\\n\\n      <ion-card>\\n\\n\\n        <ion-card-header>\\n          <ion-card-subtitle> {{seller.name}} {{seller.lastName}} </ion-card-subtitle>\\n          <ion-card-title> {{seller.name}} </ion-card-title>\\n        </ion-card-header>\\n        <ion-item>\\n          <ion-label>Ciudad: {{seller.city}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label *ngIf=\\\"!seller.isRenter\\\">Tipo: Vendedor</ion-label>\\n          <ion-label *ngIf=\\\"seller.isRenter\\\">Tipo: Renta</ion-label>\\n        </ion-item>\\n\\n      </ion-card>\\n      <!-- prop -->\\n      <h1 *ngIf=\\\"seller.property && seller.property.length > 0\\\">Propiedades </h1>\\n      <ion-card *ngFor=\\\"let prop  of seller.property \\\">\\n        <ion-item>\\n          <ion-label>Nombre {{prop.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Zona {{prop.zone}}</ion-label>\\n        </ion-item>\\n      </ion-card>\\n      <!-- schedule -->\\n      <!--   <h1 *ngIf=\\\"adviser.schedule && adviser.schedule.length > 0\\\"> Citas </h1>\\n      <ion-card *ngFor=\\\"let schedule  of adviser.schedule \\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\n      'state-amarillo': schedule.status === 'amarillo',\\n      'state-rojo': schedule.status === 'rojo',\\n      'state-azul': schedule.status === 'azul' }\\\">\\n        <ion-item>\\n          <ion-label>Propiedad {{schedule.property.name}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Fecha {{schedule.day}}/{{schedule.month}}/{{schedule.year}}</ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"schedule.minute < 10\\\" text-wrap>Hora:\\n          {{schedule.hour}}:0{{schedule.minute}}</ion-item>\\n        <ion-item *ngIf=\\\"schedule.minute >= 10\\\" text-wrap>Hora:\\n          {{schedule.hour}}:{{schedule.minute}}</ion-item>\\n        <ion-item>\\n          <ion-label>Lugar {{schedule.address}}</ion-label>\\n        </ion-item>\\n      </ion-card> -->\\n\\n    </ng-template>\\n    <ng-template #elseTemplate style=\\\"text-align: center\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n\\n    </ng-template>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ISeller } from '../../../models/seller.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { SellerService } from '../../../services/seller.service';\n\n@Component({\n  selector: 'app-detail-seller-admin',\n  templateUrl: './detail-seller-admin.component.html',\n  styleUrls: ['./detail-seller-admin.component.scss'],\n})\nexport class DetailSellerAdminComponent implements OnInit {\n  isLoad = false;\n  isLiked = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  seller: ISeller;\n  constructor(\n    private route: ActivatedRoute,\n    private sellerService: SellerService,\n  ) {\n    this.route.queryParams.subscribe(params => {\n      console.log(params.id);\n      if (params.id) {\n        this.getAdviserById(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getAdviserById(id: string) {\n    this.isLoad = false;\n    this.sellerService.getSellerById(id).subscribe(seller => {\n      this.seller = seller;\n\n      console.log(this.seller);\n      this.isLoad = true;\n    });\n  }\n  formatDates(dateInput: Date): string {\n    const day: string = new Date(dateInput).getDate().toString();\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\n    const year: string = new Date(dateInput).getFullYear().toString();\n    const date = day + '/' + month + '/' + year;\n    return date;\n  }\n}\n","module.exports = \"<ion-header>\\n  <!--  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Asesores\\n    </ion-title>\\n\\n\\n  </ion-toolbar> -->\\n  <ion-header>\\n    <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Asesores'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n      [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n  </ion-header>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-filter-adviser (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getAdviserAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-adviser>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Asesores </h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailAdv($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips,\n} from '../../../models/tableColums.model';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { AdviserService } from '../../../services/adviser.service';\nimport {\n  Platform,\n  MenuController,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { OnlyDates } from '../../../_config/_helpers';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\n\n@Component({\n  selector: 'app-list-adviser-admin',\n  templateUrl: './list-adviser-admin.component.html',\n  styleUrls: ['./list-adviser-admin.component.scss'],\n})\nexport class ListAdviserAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // buyers\n  adviser: IAdviser[] = [];\n  realData: IAdviser[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private adviserService: AdviserService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n    private salesService: SaleService,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: 'Apellido',\n        prop: 'lastName',\n        type: 'normal',\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: '# De Consumidores',\n        prop: 'numOfBuyers',\n        type: 'normal',\n      },\n      {\n        name: 'Disponibilidad',\n        prop: 'range',\n        type: 'normal',\n      },\n      /* {\n        name: '# Renta/Venta',\n        prop: 'numOfSale',\n        type: 'normal',\n      }, */\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n        buttonDetails: true,\n      },\n    ];\n    this.getAdviserAll();\n  }\n  getAdviserAll() {\n    this.numOfFilters = 0;\n    this.adviserService.getAdviserAll().subscribe(adv => {\n      this.realData = adv;\n      this.adviser = adv;\n      this.setRows(this.realData);\n    });\n  }\n  async setRows(advisers: IAdviser[]) {\n    const rows = [];\n\n    advisers.forEach((adviser, i) => {\n      let numOfBuyers = 0;\n      const range = `De ${adviser.hourStart} a ${adviser.hourEnd}`;\n      if (adviser.buyer) {\n        numOfBuyers = adviser.buyer.length;\n      }\n      rows.push({\n        _id: adviser._id,\n        name: adviser.name,\n        lastName: adviser.lastName,\n        timestamp: adviser.timestamp,\n        numOfBuyers: numOfBuyers,\n        range: range,\n        // numOfSale: arr[i],\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  getNumOfSales(advisers: IAdviser[]) {\n    const arrNum: number[] = [];\n    advisers.forEach(async adviser => {\n      const sale = await this.salesService\n        .getSaleByIdAdv(adviser._id)\n        .toPromise();\n      arrNum.push(sale.length);\n    });\n    return arrNum;\n  }\n  newBuyer() {\n    const data: NavigationExtras = {\n      queryParams: { id: 'new' },\n    };\n    this.router.navigate(['new-edit-adviser']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-adviser'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(adviser: IAdviser) {\n    this.adviserService\n      .deletedAdviserById(adviser._id)\n      .toPromise()\n      .then(() => {\n        this.getAdviserAll();\n      });\n  }\n  detailAdv(buyer: IAdviser) {\n    const data: NavigationExtras = {\n      queryParams: { id: buyer._id },\n    };\n    this.router.navigate(['detail-adviser-admin'], data);\n  }\n  async presentAlertConfirm(adviser: IAdviser) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar usuario: <strong>${adviser.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(adviser);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    status: string;\n    hourStart?: number;\n    hourEnd?: number;\n  }) {\n    const advFinded = this.adviser.filter(adv => OnlyDates(adv, filters));\n    console.log(advFinded);\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.status) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Obras\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Obras'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer2 class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-filter-build (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getBuildAll()\\\" (closeMenu)=\\\"drawer2.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-build>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer2.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer2.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer2.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Obras </h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailBuild($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuild()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { IBuild } from '../../../models/build.model';\nimport { BuildService } from '../../../services/build.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { FilerBuild } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-list-build-admin',\n  templateUrl: './list-build-admin.component.html',\n  styleUrls: ['./list-build-admin.component.scss'],\n})\nexport class ListBuildAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // buildings\n  buildings: IBuild[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private buildService: BuildService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: '#Constructores',\n        prop: 'maker',\n        type: 'number',\n      },\n      {\n        name: 'Ciudad',\n        prop: 'city',\n        type: 'normal',\n      },\n      {\n        name: 'Fecha Inicio',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Fecha Fin',\n        prop: 'dateToEnd',\n        type: 'date',\n      },\n      {\n        name: 'Completado',\n        prop: 'isComplete',\n        type: 'boolean',\n      },\n      {\n        name: 'notas',\n        prop: 'notes',\n        type: 'normal',\n      },\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n        buttonDetails: true,\n      },\n    ];\n    this.getBuildAll();\n  }\n  getBuildAll() {\n    this.numOfFilters = 0;\n    this.buildService.getBuildAll().subscribe(buildings => {\n      this.buildings = buildings;\n      console.log(buildings);\n      this.setRows(this.buildings);\n    });\n  }\n  setRows(buildings: IBuild[]) {\n    const rows = [];\n\n    buildings.forEach(build => {\n      let dateToEnd = new Date();\n      let isComplete = true;\n      if (build.timeLine) {\n        const lastIndex = build.timeLine.length - 1;\n        if (build.timeLine.length > 0) {\n          build.timeLine.forEach(tl => {\n            if (tl.isComplete === false || tl.isComplete === undefined) {\n              isComplete = false;\n            }\n          });\n          const lastPhase = build.timeLine[lastIndex];\n          dateToEnd = new Date(\n            lastPhase.yearToEnd,\n            lastPhase.monthToEnd,\n            lastPhase.dayToEnd,\n          );\n        }\n      }\n      rows.push({\n        _id: build._id,\n        name: build.name,\n        maker: build.maker.length,\n        city: build.city,\n        notes: build.notes,\n        timestamp: build.timestamp,\n        dateToEnd: dateToEnd,\n        isComplete: isComplete,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  newBuild() {\n    this.router.navigate(['new-edit-build']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-build'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(prop: IBuild) {\n    this.buildService\n      .deltedBuildById(prop._id)\n      .toPromise()\n      .then(() => {\n        this.getBuildAll();\n      });\n  }\n  detailBuild(prop: IBuild) {\n    const data: NavigationExtras = {\n      queryParams: { id: prop._id },\n    };\n    this.router.navigate(['detail-build-admin'], data);\n  }\n  async presentAlertConfirm(prop: IBuild) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Obra',\n      message: `¿Desea eliminar obra: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(prop);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  getFilters(filters) {\n    console.log(filters);\n    const advFinded = this.buildings.filter(b => FilerBuild(b, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isComplete !== undefined || filters.isComplete !== null) {\n      numFilters++;\n    }\n    if (filters.day2) {\n      numFilters++;\n    }\n    if (filters.month2) {\n      numFilters++;\n    }\n    if (filters.year2) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n}\n","module.exports = \"<ion-header>\\n  <!-- <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Clientes\\n    </ion-title>\\n\\n  </ion-toolbar> -->\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Clientes'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-general-filter-buyer (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getBuyerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\" [propertiesName]=\\\"propertiesName\\\"></app-general-filter-buyer>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Clientes </h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailBuyer($event)\\\" [showLoader]=\\\"showLoaderTable\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab *ngIf=\\\"user.type !== 'seller'\\\" vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n<!-- Solo vendedor y asesor -->\\n<ion-footer *ngIf=\\\"(user.type === 'adviser' || user.type === 'seller') && sales\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"sendToTotalSales()\\\" fill=\\\"solid\\\" color=\\\"secondary\\\">\\n        Ventas<ion-badge color=\\\"dark\\\" style=\\\" margin-left: 2%;\\\">{{sales.length}}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\\n.toast-adv {\\n  --background: #f5bd8d;\\n  --color: black;\\n  font-size: 15px; }\\n\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  AfterViewInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips,\n} from '../../../models/tableColums.model';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport {\n  Platform,\n  MenuController,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { BuyersFilters } from '../../../_config/_helpers';\nimport { MatDrawer } from '@angular/material';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { Storage } from '@ionic/storage';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\nimport { SellerService } from '../../../services/seller.service';\nimport { ISeller } from '../../../models/seller.model';\nimport { PropertyService } from '../../../services/property.service';\n\n@Component({\n  selector: 'app-list-buyer-admin',\n  templateUrl: './list-buyer-admin.component.html',\n  styleUrls: ['./list-buyer-admin.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ListBuyerAdminComponent implements OnInit {\n  drawer: MatDrawer;\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  rows$: Observable<IBuyer[]>;\n  isDesktop = false;\n  openMenu: boolean;\n  // buyers\n  buyers: IBuyer[] = [];\n  realData: IBuyer[] = [];\n  // numofFilters\n  numOfFilters = 0;\n  user: IUserSession;\n  sales: ISale[];\n  // filtros\n  propertiesName: any[];\n  showLoaderTable: boolean;\n  constructor(\n    private buyerService: BuyerService,\n    private sBPService: StatusBuyerPropertyService,\n    private platform: Platform,\n    public menuCtr: MenuController,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    private userSession: UserSessionService,\n    private storage: Storage,\n    private saleService: SaleService,\n    private sellerService: SellerService,\n    private propertyService: PropertyService,\n  ) {\n    this.user = userSession.userSession.value;\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: 'Apellido',\n        prop: 'fatherLastName',\n        type: 'normal',\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Teléfono',\n        prop: 'phone',\n        type: 'phone',\n      },\n      {\n        name: 'Estado',\n        prop: 'properties',\n        type: 'status',\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted:\n          this.user.type === 'administrator' || this.user.type === 'office'\n            ? true\n            : false,\n        buttonDetails: true,\n      },\n    ];\n    this.getBuyerAll();\n    this.getProperty();\n  }\n  async getProperty() {\n    const p = await this.propertyService.getAllSpecial().toPromise();\n    this.propertiesName = p.map(property => property.name);\n  }\n  getBuyerAll() {\n    this.numOfFilters = 0;\n    this.showLoaderTable = true;\n    if (this.user.type === 'administrator' || this.user.type === 'office') {\n      // si es admin\n      this.buyerService.getBuyerAll().subscribe(buyers => {\n        this.realData = buyers;\n        this.buyers = buyers;\n        this.setRows(this.realData);\n      });\n    } else if (this.user.type === 'adviser') {\n      // si es adviser\n      this.toastPresent(`Bienvenido ${this.user.name}`);\n      this.buyerService.getBuyerAll().subscribe(buyers => {\n        // filtra por id en buyer !!!\n        const buyerFilter = buyers.filter(b => {\n          return !!b.adviser.find(adv => adv._id === this.user.id);\n        });\n        this.realData = buyerFilter;\n        this.buyers = buyerFilter;\n        this.setRows(this.realData);\n        this.getTotalSalesByAdv();\n      });\n    } else if (this.user.type === 'seller') {\n      // si es seller\n      this.toastPresent(`Bienvenido ${this.user.name}`);\n      this.buyerService.getBuyerAll().subscribe(buyers => {\n        this.sellerService.getSellerById(this.user.id).subscribe(seller => {\n          console.log(buyers);\n          console.log(seller);\n          // todos lo que le dieron me guta a las propiedades del seller\n          const buyerFilter = buyers.filter(b => {\n            return !!b.statusBuyerProperty.find(sbp => {\n              return !!seller.property.find(p => p._id === sbp.property._id);\n            });\n          });\n          console.log(buyerFilter);\n          this.setRows(buyerFilter);\n          this.getTotalSalesBySeller(seller);\n        });\n      });\n    }\n  }\n  setRows(buyers: IBuyer[]) {\n    /* this.rows = [];\n    this.rows.length = 0; */\n    const rows = [];\n\n    buyers.forEach(buyer => {\n      const properties: TableStatusChips[] = [];\n      if (buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0) {\n        buyer.statusBuyerProperty.forEach(sBP => {\n          properties.push({\n            name: sBP.property.name,\n            status: sBP.status,\n          });\n        });\n      } else {\n        properties.push({\n          name: 'Sin interés',\n          status: 'gris',\n        });\n      }\n      rows.push({\n        _id: buyer._id,\n        name: buyer.name,\n        fatherLastName: buyer.fatherLastName,\n        timestamp: buyer.timestamp,\n        phone: buyer.phone,\n        properties: properties,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n    this.showLoaderTable = false;\n  }\n  newBuyer() {\n    /* this.router.navigate(['new-buyer']);\n    this.rows.length = 0; */\n    this.router.navigate(['new-buyer']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-buyer'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(buyer: IBuyer) {\n    this.buyerService\n      .deletedBuyer(buyer)\n      .toPromise()\n      .then(() => {\n        this.getBuyerAll();\n      });\n  }\n  detailBuyer(buyer: IBuyer) {\n    const data: NavigationExtras = {\n      queryParams: { id: buyer._id },\n    };\n    this.router.navigate(['detail-buyer-admin'], data);\n  }\n  getTotalSalesByAdv() {\n    this.saleService.getSaleByIdAdv(this.user.id).subscribe(sales => {\n      this.sales = sales;\n    });\n  }\n  getTotalSalesBySeller(seller: ISeller) {\n    this.saleService.getSale().subscribe(sales => {\n      this.sales = sales.filter(s => {\n        return !!seller.property.find(p => p._id === s.property._id);\n      });\n    });\n  }\n  sendToTotalSales() {\n    if (this.sales.length > 0) {\n      this.router.navigate(['list-sales-admin']);\n    }\n  }\n  async presentAlertConfirm(buyer: IBuyer) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar usuario: <strong>${buyer.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {},\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(buyer);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    status: string;\n    property: string;\n  }) {\n    const buyersFinded = this.buyers.filter(buyer =>\n      BuyersFilters(buyer, filters),\n    );\n    //  setea buyers\n    this.setRows(buyersFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.status) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n  async toastPresent(m = 'Eventos pendientes hoy') {\n    const isPresent = await this.storage.get('alert-adv');\n    if (+isPresent !== new Date().getDate()) {\n      const toast = await this.toastController.create(<any>{\n        message: m,\n        position: 'bottom',\n        showCloseButton: false,\n        cssClass: 'toast-adv',\n        duration: 4000,\n      });\n      toast.present();\n      toast.onWillDismiss().then(() => {\n        this.storage.set('alert-adv', new Date().getDate());\n      });\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Créditos\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Créditos'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n      </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Créditos</h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab> -->\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips,\n} from '../../../models/tableColums.model';\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\nimport { CreditService } from '../../../services/credit.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { ISeller } from '../../../models/seller.model';\nimport { SellerFilter } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-list-credit-admin',\n  templateUrl: './list-credit-admin.component.html',\n  styleUrls: ['./list-credit-admin.component.scss'],\n})\nexport class ListCreditAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // credit\n  credits: ICreditGet[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private creditService: CreditService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre Consumidor',\n        prop: 'buyerName',\n        type: 'normal',\n      },\n      {\n        name: 'Nombre Prop',\n        prop: 'propertyName',\n        type: 'normal',\n      },\n      {\n        name: 'Notas',\n        prop: 'notes',\n        type: 'normal',\n      },\n      {\n        name: 'Modificado',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Estado',\n        prop: 'properties',\n        type: 'status',\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n      },\n    ];\n    this.getCreditAll();\n  }\n  getCreditAll() {\n    this.numOfFilters = 0;\n    this.creditService.getCredit().subscribe(credits => {\n      this.credits = <any>credits;\n      console.log(credits);\n      this.setRows(this.credits);\n    });\n  }\n  setRows(credits: ICreditGet[]) {\n    const rows = [];\n\n    credits.forEach(credit => {\n      const properties: TableStatusChips[] = [];\n      if (credit.status) {\n        if (credit.status === 'verde') {\n          properties.push({\n            name: 'Interés',\n            status: credit.status,\n          });\n        } else if (credit.status === 'amarillo') {\n          properties.push({\n            name: 'Negociación',\n            status: credit.status,\n          });\n        } else if (credit.status === 'rojo') {\n          properties.push({\n            name: 'Respuesta',\n            status: credit.status,\n          });\n        } else if (credit.status === 'azul') {\n          properties.push({\n            name: 'Post Venta',\n            status: credit.status,\n          });\n        }\n      }\n      rows.push({\n        _id: credit._id,\n        buyerName: credit.buyer.name,\n        propertyName: credit.property.name,\n        notes: credit.notes,\n        timestamp: credit.timestamp,\n        properties: properties,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  edit(item) {\n    console.log(item);\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-credit'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(c: ICredit) {\n    this.creditService\n      .deleteCredit(c._id)\n      .toPromise()\n      .then(() => {\n        this.getCreditAll();\n      });\n  }\n  async presentAlertConfirm(c) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Credito',\n      message: `¿Desea eliminar credito ?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(c);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  /*   getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    isRenter: boolean;\n  }) {\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isRenter) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  } */\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Objetivos\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Objetivos'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n            [opened]=\\\"openMenu\\\">\\n            <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n              [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n          </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n            </ion-button>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n            </ion-button>\\n          </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Objetivos</h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detail($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newOfert()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips,\n} from '../../../models/tableColums.model';\nimport { IGoal } from '../../../models/goal.model';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { ToastController, AlertController, Platform } from '@ionic/angular';\nimport { OfertService } from '../../../services/ofert.service';\nimport { IOfert } from '../../../models/ofert.model';\nimport { GoalService } from '../../../services/goal.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\n\n@Component({\n  selector: 'app-list-goals',\n  templateUrl: './list-goals.component.html',\n  styleUrls: ['./list-goals.component.scss'],\n})\nexport class ListGoalsComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // goals\n  goals: IGoal[] = [];\n  // numofFilters\n  numOfFilters = 0;\n  user: IUserSession;\n  constructor(\n    private goalService: GoalService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public route: ActivatedRoute,\n    private userSession: UserSessionService,\n  ) {\n    this.user = userSession.userSession.value;\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Titulo Objetivo',\n        prop: 'title',\n        type: 'normal',\n      },\n      {\n        name: 'Número de Asesores',\n        prop: 'numAdviser',\n        type: 'number',\n      },\n      {\n        name: 'Grupal',\n        prop: 'isByManagement',\n        type: 'boolean',\n      },\n      {\n        name: 'Inicio',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Fin',\n        prop: 'dateToFinish',\n        type: 'date',\n      },\n      {\n        name: 'Contenido',\n        prop: 'content',\n        type: 'normal',\n      },\n      {\n        name: 'Estado',\n        prop: 'status',\n        type: 'status',\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n        buttonDetails: true,\n      },\n    ];\n    this.getGoalAll();\n  }\n  getGoalAll() {\n    this.isLoading = false;\n    this.numOfFilters = 0;\n    if (this.user.type === 'adviser') {\n      this.goalService.getGoal().subscribe(goal => {\n        this.goals = goal.filter(g => {\n          return !!g.adviser.find(adv => adv._id === this.user.id);\n        });\n        this.setRows(this.goals);\n      });\n    } else {\n      this.goalService.getGoal().subscribe(goal => {\n        this.goals = goal;\n        this.setRows(this.goals);\n      });\n    }\n  }\n  newOfert() {\n    this.router.navigate(['new-edit-goal']);\n  }\n  setRows(goals: IGoal[]) {\n    const rows = [];\n\n    goals.forEach(goal => {\n      const properties: TableStatusChips[] = [];\n      if (goal.status) {\n        if (goal.status === 'amarillo') {\n          properties.push({\n            name: 'Media',\n            status: goal.status,\n          });\n        } else if (goal.status === 'gris') {\n          properties.push({\n            name: 'En Espera',\n            status: goal.status,\n          });\n        } else if (goal.status === 'verde') {\n          properties.push({\n            name: 'Baja',\n            status: goal.status,\n          });\n        } else if (goal.status === 'rojo') {\n          properties.push({\n            name: 'Urgente',\n            status: goal.status,\n          });\n        } else if (goal.status === 'azul') {\n          properties.push({\n            name: 'Cumplida',\n            status: goal.status,\n          });\n        }\n      }\n      console.log(properties);\n      rows.push({\n        _id: goal._id,\n        numAdviser: goal.adviser.length,\n        adviser: goal.adviser,\n        isByManagement: goal.isByManagement,\n        title: goal.title,\n        content: goal.content,\n        timestamp: goal.timestamp,\n        dateToFinish: new Date(goal.year, goal.month, goal.day),\n        status: properties,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  edit(item: IGoal) {\n    console.log(item);\n    if (item.isByManagement && this.user.type !== 'adviser') {\n      const data: NavigationExtras = {\n        queryParams: { id: item._id },\n      };\n      this.router.navigate(['new-edit-goal'], data);\n    } else if (item.isByManagement && this.user.type === 'adviser') {\n      this.presentToast('Acceso denegado');\n    }\n    if (!item.isByManagement) {\n      const isFind = item.adviser.find(adv => adv._id === this.user.id);\n      if (isFind) {\n        const data: NavigationExtras = {\n          queryParams: { id: item._id },\n        };\n        this.router.navigate(['new-edit-goal'], data);\n      } else {\n        this.presentToast('Acceso denegado');\n      }\n    }\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(c: IGoal) {\n    this.goalService\n      .deleteGoal(c._id)\n      .toPromise()\n      .then(() => {\n        this.getGoalAll();\n      });\n  }\n  detail(item: IGoal) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['detail-goal-admin'], data);\n  }\n  async presentAlertConfirm(c) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Meta',\n      message: `¿Desea eliminar meta ?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(c);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  /*   getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    isRenter: boolean;\n  }) {\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isRenter) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  } */\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Constructores\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Constructores'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n      </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Constructores</h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuild()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { IMaker } from '../../../models/maker.model';\nimport { MakerService } from '../../../services/maker.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-list-maker-admin',\n  templateUrl: './list-maker-admin.component.html',\n  styleUrls: ['./list-maker-admin.component.scss'],\n})\nexport class ListMakerAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // makers\n  makers: IMaker[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private makerService: MakerService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: 'Apellido',\n        prop: 'lastName',\n        type: 'normal',\n      },\n      {\n        name: 'Obra',\n        prop: 'build',\n        type: 'normal',\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Ciudad',\n        prop: 'city',\n        type: 'normal',\n      },\n      {\n        name: 'Correo',\n        prop: 'email',\n        type: 'normal',\n      },\n      {\n        name: 'Teléfono',\n        prop: 'phone',\n        type: 'phone',\n      },\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n      },\n    ];\n    this.getMakerAll();\n  }\n  getMakerAll() {\n    this.isLoading = false;\n    this.numOfFilters = 0;\n    this.makerService.getMakerAll().subscribe(makers => {\n      this.makers = makers;\n      console.log(makers);\n      this.setRows(this.makers);\n    });\n  }\n  setRows(makers: IMaker[]) {\n    const rows = [];\n\n    makers.forEach(maker => {\n      let nameBuild;\n      if (maker.build && maker.build.name) {\n        nameBuild = maker.build.name;\n      } else {\n        nameBuild = 'Sin Obra Asignada';\n      }\n      rows.push({\n        _id: maker._id,\n        name: maker.name,\n        lastName: maker.lastName,\n        build: nameBuild,\n        city: maker.city,\n        email: maker.email,\n        phone: maker.phone,\n        timestamp: maker.timestamp,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  newBuild() {\n    this.router.navigate(['new-edit-maker']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-maker'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(prop: IMaker) {\n    this.makerService\n      .deltedMakerById(prop._id)\n      .toPromise()\n      .then(() => {\n        this.getMakerAll();\n      });\n  }\n  detailBuild(prop: IMaker) {\n    const data: NavigationExtras = {\n      queryParams: { id: prop._id },\n    };\n    this.router.navigate(['detail-build-admin'], data);\n  }\n  async presentAlertConfirm(prop: IMaker) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Constructor',\n      message: `¿Desea eliminar constructor: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(prop);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  /*  getFilters(filters) {\n    console.log(filters);\n    const advFinded = this.buildings.filter(b => FilerBuild(b, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isComplete !== undefined || filters.isComplete !== null) {\n      numFilters++;\n    }\n    if (filters.day2) {\n      numFilters++;\n    }\n    if (filters.month2) {\n      numFilters++;\n    }\n    if (filters.year2) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  } */\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Oficinista\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'menu'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Gerentes'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then: Load; else: noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!--\\n        <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n          [opened]=\\\"openMenu\\\">\\n          <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n            [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n        </mat-drawer>\\n      -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!--\\n        <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n          </ion-button>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n          </ion-button>\\n        </ion-item>\\n      -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table -->\\n      <h2>Lista de Gerentes</h2>\\n      <app-general-table\\n        [columns]=\\\"columns\\\"\\n        [rows]=\\\"rows\\\"\\n        [isDesktop]=\\\"isDesktop\\\"\\n        (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"\\n      ></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newOffice()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IManager } from '../../../models/manager.model';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { ManagersService } from '../../../services/managers.service';\n\n@Component({\n  selector: 'app-list-manager-admin',\n  templateUrl: './list-manager-admin.component.html',\n  styleUrls: ['./list-manager-admin.component.scss']\n})\nexport class ListManagerAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // manager\n  manager: IManager[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private managerService: ManagersService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public route: ActivatedRoute\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal'\n      },\n      {\n        name: 'Teléfono',\n        prop: 'phone',\n        type: 'phone'\n      },\n      {\n        name: 'Correo',\n        prop: 'email',\n        type: 'normal'\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date'\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true\n      }\n    ];\n    this.getOfficeAll();\n  }\n  getOfficeAll() {\n    this.isLoading = false;\n    this.numOfFilters = 0;\n    this.managerService.getManagerAll().subscribe(m => {\n      this.manager = m;\n      this.setRows(this.manager);\n    });\n  }\n  newOffice() {\n    this.router.navigate(['new-edit-manager']);\n  }\n  setRows(managers: IManager[]) {\n    const rows = [];\n    managers.forEach(m => {\n      rows.push({\n        _id: m._id,\n        name: m.name,\n        email: m.email,\n        phone: m.phone,\n        timestamp: m.timestamp\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id }\n    };\n    this.router.navigate(['new-edit-manager'], data);\n  }\n  deleted(c: IManager) {\n    this.managerService\n      .deleteManagerById(c._id)\n      .toPromise()\n      .then(() => {\n        this.getOfficeAll();\n      });\n  }\n  async presentAlertConfirm(c) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Gerente',\n      message: `¿Desea eliminar gerente?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {}\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(c);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Ofertas\\n    </ion-title>\\n\\n  </ion-toolbar> \\n</ion-header>-->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Ofertas'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n          [opened]=\\\"openMenu\\\">\\n          <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n            [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n        </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n          </ion-button>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n          </ion-button>\\n        </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Ofertas</h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newOfert()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips\n} from '../../../models/tableColums.model';\nimport { IOfert } from '../../../models/ofert.model';\nimport { OfertService } from '../../../services/ofert.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { ICreditGet, ICredit } from '../../../models/credit.model';\n\n@Component({\n  selector: 'app-list-oferts-admin',\n  templateUrl: './list-oferts-admin.component.html',\n  styleUrls: ['./list-oferts-admin.component.scss']\n})\nexport class ListOfertsAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // ofert\n  oferts: IOfert[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private ofertService: OfertService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre Consumidor',\n        prop: 'buyer',\n        type: 'normal'\n      },\n      {\n        name: 'Nombre Prop',\n        prop: 'property',\n        type: 'normal'\n      },\n      {\n        name: 'Notas',\n        prop: 'notes',\n        type: 'normal'\n      },\n      {\n        name: 'Modificado',\n        prop: 'timestamp',\n        type: 'date'\n      },\n      {\n        name: 'Estado',\n        prop: 'properties',\n        type: 'status'\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true\n      }\n    ];\n    this.getOfertAll();\n  }\n  getOfertAll() {\n    this.numOfFilters = 0;\n    this.ofertService.getOfert().subscribe(oferts => {\n      this.oferts = oferts;\n      console.log(oferts);\n      this.setRows(this.oferts);\n    });\n  }\n  newOfert() {\n    this.router.navigate(['new-edit-ofert']);\n  }\n  setRows(oferts: IOfert[]) {\n    const rows = [];\n\n    oferts.forEach(ofert => {\n      const properties: TableStatusChips[] = [];\n      if (ofert.status) {\n        if (ofert.status === 'amarillo') {\n          properties.push({\n            name: 'Negociación',\n            status: ofert.status\n          });\n        } else if (ofert.status === 'rojo') {\n          properties.push({\n            name: 'Respuesta',\n            status: ofert.status\n          });\n        } else if (ofert.status === 'verde') {\n          properties.push({\n            name: 'Nueva',\n            status: ofert.status\n          });\n        }\n      }\n      rows.push({\n        _id: ofert._id,\n        buyer: ofert.buyer.name,\n        property: ofert.property.name,\n        notes: ofert.notes,\n        timestamp: ofert.timestamp,\n        properties: properties\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  edit(item) {\n    console.log(item);\n    const data: NavigationExtras = {\n      queryParams: { id: item._id }\n    };\n    this.router.navigate(['new-edit-ofert'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(c: IOfert) {\n    this.ofertService\n      .deleteOfertById(c._id)\n      .toPromise()\n      .then(() => {\n        this.getOfertAll();\n      });\n  }\n  async presentAlertConfirm(c) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Oferta',\n      message: `¿Desea eliminar oferta ?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          }\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(c);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n  /*   getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    isRenter: boolean;\n  }) {\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isRenter) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  } */\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Oficinista\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Oficinistas'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!-- <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n          [opened]=\\\"openMenu\\\">\\n          <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n            [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n        </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n          </ion-button>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n          </ion-button>\\n        </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Oficinistas</h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newOffice()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips,\n} from '../../../models/tableColums.model';\nimport { IOffice } from '../../../models/office.model';\nimport { OfficeService } from '../../../services/office.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-list-office-admin',\n  templateUrl: './list-office-admin.component.html',\n  styleUrls: ['./list-office-admin.component.scss'],\n})\nexport class ListOfficeAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // office\n  office: IOffice[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private officeService: OfficeService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: 'Teléfono',\n        prop: 'phone',\n        type: 'phone',\n      },\n      {\n        name: 'Correo',\n        prop: 'email',\n        type: 'normal',\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date',\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n      },\n    ];\n    this.getOfficeAll();\n  }\n  getOfficeAll() {\n    this.isLoading = false;\n    this.numOfFilters = 0;\n    this.officeService.getOffice().subscribe(officies => {\n      this.office = officies;\n      this.setRows(this.office);\n    });\n  }\n  newOffice() {\n    this.router.navigate(['new-edit-office']);\n  }\n  setRows(offices: IOffice[]) {\n    const rows = [];\n    offices.forEach(office => {\n      rows.push({\n        _id: office._id,\n        name: office.name,\n        email: office.email,\n        phone: office.phone,\n        timestamp: office.timestamp,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-office'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(c: IOffice) {\n    this.officeService\n      .deleteOfficeById(c._id)\n      .toPromise()\n      .then(() => {\n        this.getOfficeAll();\n      });\n  }\n  async presentAlertConfirm(c) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Oficinista',\n      message: `¿Desea eliminar oficinista?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {},\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(c);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  /*   getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    isRenter: boolean;\n  }) {\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isRenter) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  } */\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Obras\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'menu'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Obras'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then: Load; else: noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer\\n        [class.mat-elevation-z1]=\\\"true\\\"\\n        position=\\\"end\\\"\\n        #drawer2\\n        class=\\\"sidenav\\\"\\n        [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\"\\n      >\\n        <app-filter-build\\n          (filters)=\\\"getFilters($event)\\\"\\n          (resetAll)=\\\"getBuildAll()\\\"\\n          (closeMenu)=\\\"drawer2.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"\\n        ></app-filter-build>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button\\n          (click)=\\\"drawer2.toggle()\\\"\\n          slot=\\\"end\\\"\\n          color=\\\"secondary\\\"\\n          fill=\\\"outline\\\"\\n        >\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{ numOfFilters }})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button\\n          (click)=\\\"drawer2.toggle()\\\"\\n          slot=\\\"end\\\"\\n          color=\\\"secondary\\\"\\n          fill=\\\"outline\\\"\\n        >\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros\\n          {{ (drawer2.openedChange | async) ? 'cerrar' : 'abrir' }}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table -->\\n      <h2>Lista de Obras</h2>\\n      <app-general-table\\n        [columns]=\\\"columns\\\"\\n        [rows]=\\\"rows\\\"\\n        [isDesktop]=\\\"isDesktop\\\"\\n        (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"\\n        (detailsButton)=\\\"detailBuild($event)\\\"\\n      ></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuild()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FilerBuild } from '../../../_config/_helpers';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { IPreBuild } from '../../../models/preBuild';\nimport { Platform, AlertController, ToastController } from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { PreBuildService } from '../../../services/pre-build.service';\n\n@Component({\n  selector: 'app-list-pre-build',\n  templateUrl: './list-pre-build.component.html',\n  styleUrls: ['./list-pre-build.component.scss']\n})\nexport class ListPreBuildComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // buildings\n  buildings: IPreBuild[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public route: ActivatedRoute,\n    private preBuildService: PreBuildService\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal'\n      },\n      {\n        name: '#Preventa',\n        prop: 'preBuyer',\n        type: 'number'\n      },\n      {\n        name: 'Ciudad',\n        prop: 'city',\n        type: 'normal'\n      },\n      {\n        name: 'Fecha Inicio',\n        prop: 'timestamp',\n        type: 'date'\n      },\n      {\n        name: 'Fecha Fin',\n        prop: 'dateToEnd',\n        type: 'date'\n      },\n      {\n        name: 'Completado',\n        prop: 'isComplete',\n        type: 'boolean'\n      },\n      {\n        name: 'notas',\n        prop: 'notes',\n        type: 'normal'\n      },\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n        buttonDetails: true\n      }\n    ];\n    this.getBuildAll();\n  }\n  getBuildAll() {\n    this.numOfFilters = 0;\n    this.preBuildService.getAll().subscribe(buildings => {\n      this.buildings = buildings;\n      console.log(buildings);\n      this.setRows(this.buildings);\n    });\n  }\n  setRows(buildings: IPreBuild[]) {\n    const rows = [];\n\n    buildings.forEach(build => {\n      let dateToEnd = new Date();\n      let isComplete = true;\n      if (build.timeLine) {\n        const lastIndex = build.timeLine.length - 1;\n        if (build.timeLine.length > 0) {\n          build.timeLine.forEach(tl => {\n            if (tl.isComplete === false || tl.isComplete === undefined) {\n              isComplete = false;\n            }\n          });\n          const lastPhase = build.timeLine[lastIndex];\n          dateToEnd = new Date(\n            lastPhase.yearToEnd,\n            lastPhase.monthToEnd,\n            lastPhase.dayToEnd\n          );\n        } else {\n          isComplete = false;\n        }\n      }\n      rows.push({\n        _id: build._id,\n        name: build.name,\n        preBuyer: build.preBuyer.length,\n        city: build.city,\n        notes: build.notes,\n        timestamp: build.timestamp,\n        dateToEnd: dateToEnd,\n        isComplete: isComplete\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  newBuild() {\n    this.router.navigate(['new-edit-prebuild']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id }\n    };\n    this.router.navigate(['new-edit-prebuild'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(prop: IPreBuild) {\n    this.preBuildService\n      .deltedBuildById(prop._id)\n      .toPromise()\n      .then(() => {\n        this.getBuildAll();\n      });\n  }\n  detailBuild(prop: IPreBuild) {\n    const data: NavigationExtras = {\n      queryParams: { id: prop._id }\n    };\n    this.router.navigate(['detail-prebuild-admin'], data);\n  }\n  async presentAlertConfirm(prop: IPreBuild) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Obra',\n      message: `¿Desea eliminar obra: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          }\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(prop);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n  getFilters(filters) {\n    console.log(filters);\n    const advFinded = this.buildings.filter(b => FilerBuild(b, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isComplete !== undefined || filters.isComplete !== null) {\n      numFilters++;\n    }\n    if (filters.day2) {\n      numFilters++;\n    }\n    if (filters.month2) {\n      numFilters++;\n    }\n    if (filters.year2) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Obras\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'menu'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Preventa Usuarios'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then: Load; else: noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- Table -->\\n      <h2>Lista de Usuarios</h2>\\n      <app-general-table\\n        [columns]=\\\"columns\\\"\\n        [rows]=\\\"rows\\\"\\n        [isDesktop]=\\\"isDesktop\\\"\\n        (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"\\n      ></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuild()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { PreBuyerService } from '../../../services/pre-buyer.service';\nimport { IPreBuyer } from '../../../models/preBuyer';\n\n@Component({\n  selector: 'app-list-pre-buyer',\n  templateUrl: './list-pre-buyer.component.html',\n  styleUrls: ['./list-pre-buyer.component.scss']\n})\nexport class ListPreBuyerComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // buildings\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n    private preBuyerService: PreBuyerService\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal'\n      },\n      {\n        name: 'Apellido',\n        prop: 'lastName',\n        type: 'normal'\n      },\n      {\n        name: 'Preventa',\n        prop: 'preBuild',\n        type: 'normal'\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date'\n      },\n      {\n        name: 'Telefono',\n        prop: 'phone',\n        type: 'phone'\n      },\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true\n      }\n    ];\n    this.getBuildAll();\n  }\n  getBuildAll() {\n    this.numOfFilters = 0;\n    this.preBuyerService.getAll().subscribe(preBuyers => {\n      console.log(preBuyers);\n      this.setRows(preBuyers);\n    });\n  }\n  setRows(preBuyers: IPreBuyer[]) {\n    this.rows = preBuyers.map(preBuyer => {\n      return {\n        _id: preBuyer._id,\n        name: preBuyer.name,\n        preBuild: preBuyer.preBuild.map(p => p.name).toString(),\n        email: preBuyer.email,\n        lastName: preBuyer.lastName,\n        timestamp: preBuyer.timestamp,\n        phone: preBuyer.phone\n      };\n    });\n    this.isLoading = true;\n  }\n  newBuild() {\n    this.router.navigate(['new-edit-prebuyer']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id }\n    };\n    this.router.navigate(['new-edit-prebuyer'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(prop: IPreBuyer) {\n    this.preBuyerService\n      .deltedBuyerById(prop._id)\n      .toPromise()\n      .then(() => {\n        this.getBuildAll();\n      });\n  }\n  async presentAlertConfirm(prop: IPreBuyer) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar Usuario: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          }\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(prop);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propiedades\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Propiedades'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getPropAll()\\\" (closeMenuMaterial)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"></app-general-filters>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Propiedades </h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailProp($event)\\\" [isIcon]=\\\"!isDesktop\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab *ngIf=\\\"isSuperRol\\\" vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { IProperty } from '../../../models/property.model';\nimport { PropertyService } from '../../../services/property.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { PropertyFilter } from '../../../_config/_helpers';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { SellerService } from '../../../services/seller.service';\n\n@Component({\n  selector: 'app-list-prop-admin',\n  templateUrl: './list-prop-admin.component.html',\n  styleUrls: ['./list-prop-admin.component.scss'],\n})\nexport class ListPropAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // prop\n  properties: IProperty[] = [];\n  // numofFilters\n  numOfFilters = 0;\n  user: IUserSession;\n  isSuperRol: boolean;\n\n  constructor(\n    private propertyService: PropertyService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n    private userSession: UserSessionService,\n    private sellerService: SellerService,\n  ) {\n    this.user = userSession.userSession.value;\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.isSuperRol =\n      this.user.type === 'administrator' ||\n      this.user.type === 'management' ||\n      this.user.type === 'office';\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: 'Precio Max',\n        prop: 'maxPrice',\n        type: 'money',\n      },\n      {\n        name: 'Precio Min',\n        prop: 'minPrice',\n        type: 'money',\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Nuevo',\n        prop: 'isOld',\n        type: 'boolean',\n      },\n      {\n        name: 'Tipo',\n        prop: 'typePop',\n        type: 'normal',\n      },\n      {\n        name: 'Adquirida',\n        prop: 'isBuy',\n        type: 'boolean',\n      },\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: this.isSuperRol,\n        buttonDeleted: this.isSuperRol,\n        buttonDetails: true,\n      },\n    ];\n    this.getPropAll();\n  }\n  getPropAll() {\n    if (this.user.type === 'seller') {\n      this.numOfFilters = 0;\n      this.propertyService.getAllSpecial().subscribe(prop => {\n        this.sellerService.getSellerById(this.user.id).subscribe(seller => {\n          this.properties = prop.filter(p => {\n            return !!seller.property.find(ps => ps._id === p._id);\n          });\n          this.setRows(this.properties);\n        });\n      });\n    } else {\n      this.numOfFilters = 0;\n      this.propertyService.getAllSpecial().subscribe(prop => {\n        this.properties = prop;\n        console.log(prop);\n        this.setRows(prop);\n      });\n    }\n  }\n  setRows(properties: IProperty[]) {\n    const rows = [];\n\n    properties.forEach(property => {\n      let typePop = 'Vende';\n      let iconName;\n      if (property.isRent) {\n        typePop = 'Renta';\n      }\n      if (property.typeOfProperty === 'departamento') {\n        iconName = 'business';\n      }\n      if (property.typeOfProperty === 'casa') {\n        iconName = 'home';\n      }\n      rows.push({\n        _id: property._id,\n        name: property.name,\n        maxPrice: property.maxPrice,\n        minPrice: property.minPrice,\n        isOld: !property.isOld,\n        timestamp: property.timestamp,\n        typePop: typePop,\n        isBuy: property.isBuy,\n        iconName: iconName,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  newBuyer() {\n    const data: NavigationExtras = {\n      queryParams: { id: 'new' },\n    };\n    this.router.navigate(['new-edit-prop']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-prop'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  deleted(prop: IProperty) {\n    this.propertyService\n      .deletedById(prop._id)\n      .toPromise()\n      .then(() => {\n        this.getPropAll();\n      });\n  }\n  detailProp(prop: IProperty) {\n    const data: NavigationExtras = {\n      queryParams: { id: prop._id },\n    };\n    this.router.navigate(['detail-prop-admin'], data);\n  }\n  async presentAlertConfirm(prop: IProperty) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar propiedad: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(prop);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  getFilters(filters: IProperty) {\n    console.log(filters);\n    const advFinded = this.properties.filter(prop => {\n      const temp = PropertyFilter(filters, prop);\n      this.numOfFilters = temp.numOfFilters;\n      return temp.isHope;\n    });\n    //  setea buyers\n    this.setRows(advFinded);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propiedades Adquiridas\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Propiedades Adquiridas'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!--  <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n            [opened]=\\\"openMenu\\\">\\n            <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getPropAll()\\\" (closeMenuMaterial)=\\\"drawer.close()\\\"\\n              [isDesktop]=\\\"isDesktop\\\"></app-general-filters>\\n          </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n            </ion-button>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n            <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n            </ion-button>\\n          </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Propiedades Adquiridas </h2>\\n      <p>Se muestan las propiedades que estan en estado \\\"Azul\\\" y estan compradas/rentadas </p>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\"></app-general-table>\\n      <!-- /Table -->\\n      <!-- Resumen -->\\n      <mat-card [class.mat-elevation-z0]=\\\"true\\\" class=\\\"border-sumary\\\">\\n        <mat-card-title>\\n          Resumen\\n        </mat-card-title>\\n\\n        <mat-card-content>\\n          <mat-chip-list>\\n            <mat-chip class=\\\"background-secondary\\\">Total de Propiedades Adquiridas: {{totalSales}}</mat-chip>\\n            <mat-chip class=\\\"background-secondary\\\">Total de Propiedades Rentadas: {{totalSalesOfRent}}</mat-chip>\\n            <mat-chip class=\\\"background-secondary\\\">Total de Propiedades Vendidas: {{totalSalesOfBuy}}</mat-chip>\\n            <mat-chip class=\\\"background-secondary\\\">Costo Total: ${{totalCost}}</mat-chip>\\n            <mat-chip *ngIf=\\\"user.type !== 'adviser' && advTop\\\" class=\\\"background-secondary\\\">Asesor Mayor Ventas:\\n              {{advTop.name}}</mat-chip>\\n          </mat-chip-list>\\n        </mat-card-content>\\n\\n      </mat-card>\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab> -->\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { IProperty } from '../../../models/property.model';\nimport { PropertyService } from '../../../services/property.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { IStatusBuyerPropertyGet } from '../../../models/statusBuyerProperty.model';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { SellerService } from '../../../services/seller.service';\nimport { AdviserService } from '../../../services/adviser.service';\n\n@Component({\n  selector: 'app-list-sales-admin',\n  templateUrl: './list-sales-admin.component.html',\n  styleUrls: ['./list-sales-admin.component.scss'],\n})\nexport class ListSalesAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // numofFilters\n  numOfFilters = 0;\n  sales: ISale[] = [];\n  advTop: IAdviser;\n  totalSales: number;\n  totalSalesOfRent: number;\n  totalSalesOfBuy: number;\n  totalCost: number;\n  user: IUserSession;\n  constructor(\n    private propertyService: PropertyService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n    private salesService: SaleService,\n    private userSession: UserSessionService,\n    private sellerService: SellerService,\n    private advService: AdviserService,\n  ) {\n    this.user = userSession.userSession.value;\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Consumidor',\n        prop: 'buyer',\n        type: 'normal',\n      },\n      {\n        name: 'Propiedad',\n        prop: 'property',\n        type: 'normal',\n      },\n      {\n        name: 'Asesores',\n        prop: 'advsNames',\n        type: 'normal',\n      },\n      {\n        name: 'Notas',\n        prop: 'note',\n        type: 'normal',\n      },\n      {\n        name: 'Renta',\n        prop: 'isRent',\n        type: 'boolean',\n      },\n      {\n        name: 'Costo',\n        prop: 'price',\n        type: 'money',\n      },\n      {\n        name: 'Fecha Adquisición',\n        prop: 'timestamp',\n        type: 'date',\n      },\n\n      /*  {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonDetails: true,\n      }, */\n    ];\n    this.getSales();\n  }\n  getSales() {\n    this.isLoading = false;\n    if (this.user.type === 'adviser') {\n      this.salesService.getSaleByIdAdv(this.user.id).subscribe(sales => {\n        this.sales = sales;\n        this.setRows(sales);\n        this.getSumary(sales);\n      });\n    } else if (this.user.type === 'seller') {\n      this.salesService.getSale().subscribe(sales => {\n        this.sellerService.getSellerById(this.user.id).subscribe(seller => {\n          this.sales = sales.filter(s => {\n            return !!seller.property.find(p => p._id === s.property._id);\n          });\n          this.setRows(this.sales);\n          this.getSumary(this.sales);\n        });\n      });\n    } else {\n      this.salesService.getSale().subscribe(sales => {\n        this.sales = sales;\n        this.setRows(sales);\n        this.getSumary(sales);\n      });\n    }\n  }\n  setRows(sales: ISale[]) {\n    const rows = [];\n    sales.forEach(sale => {\n      const advsNames = sale.adviser.map(a => a.name).toString();\n      rows.push({\n        _id: sale._id,\n        buyer: sale.buyer.name,\n        property: sale.property.name,\n        adviser: sale.adviser,\n        advsNames: advsNames,\n        isRent: sale.isRent,\n        price: sale.price,\n        note: sale.note,\n        timestamp: sale.timestamp,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  /*  detailProp(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id, credit: item.credit, ofert: item.ofert },\n    };\n    this.router.navigate(['detail-salesprop-admin'], data);\n  } */\n  async presentAlertConfirm(prop: IProperty) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar propiedad: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      /*  if (res.role === 'ok') {\n        this.deleted(prop);\n      } */\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  async getSumary(sales: ISale[]) {\n    const add = (a, b) => a + b;\n    this.totalSales = sales.length;\n    this.totalSalesOfRent = sales.filter(s => s.isRent).length;\n    this.totalSalesOfBuy = sales.filter(s => !s.isRent).length;\n    this.totalCost = sales.map(s => s.price).reduce(add);\n    // adv number\n    let numMax = 0;\n    let arr = [];\n    sales\n      .map(s => s.adviser)\n      .map(adv => adv.map(a => a._id))\n      .forEach(advIds => {\n        arr = [...arr, ...advIds];\n      });\n    let idMayor;\n    arr.forEach(id => {\n      const num = arr.filter(str => str === id).length;\n      if (num > numMax) {\n        numMax = num;\n        idMayor = id;\n      }\n    });\n    this.advTop = await this.getAdvName(idMayor);\n  }\n  getAdvName(id: string) {\n    return this.advService.getAdviserById(id).toPromise();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propiedades\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Propiedades Apartadas'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <!--  <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n          [opened]=\\\"openMenu\\\">\\n          <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getPropAll()\\\" (closeMenuMaterial)=\\\"drawer.close()\\\"\\n            [isDesktop]=\\\"isDesktop\\\"></app-general-filters>\\n        </mat-drawer> -->\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <!-- <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n          </ion-button>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n          <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n          </ion-button>\\n        </ion-item> -->\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Propiedades Apartadas </h2>\\n      <p>Se muestan las propiedades en estado \\\"Cerrado\\\" o \\\"Rojo\\\" debido a una oferta y/o crédito </p>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"true\\\" (deletedButton)=\\\"presentAlertConfirm($event)\\\"\\n        (detailsButton)=\\\"detailProp($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab> -->\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { IProperty } from '../../../models/property.model';\nimport { PropertyService } from '../../../services/property.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { PropertyFilter } from '../../../_config/_helpers';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport {\n  IStatusBuyerProperty,\n  IStatusBuyerPropertyGet,\n} from '../../../models/statusBuyerProperty.model';\n\n@Component({\n  selector: 'app-list-salesprop-admin',\n  templateUrl: './list-salesprop-admin.component.html',\n  styleUrls: ['./list-salesprop-admin.component.scss'],\n})\nexport class ListSalespropAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // prop\n  properties: IProperty[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private propertyService: PropertyService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n    private statusBPService: StatusBuyerPropertyService,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Consumidor',\n        prop: 'buyer',\n        type: 'normal',\n      },\n      {\n        name: 'Propiedad',\n        prop: 'property',\n        type: 'normal',\n      },\n      {\n        name: 'Ofertas',\n        prop: 'ofert',\n        type: 'boolean',\n      },\n      {\n        name: 'Creditos',\n        prop: 'credit',\n        type: 'boolean',\n      },\n      {\n        name: 'Fecha Actualización',\n        prop: 'timestamp',\n        type: 'date',\n      },\n\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonDetails: true,\n      },\n    ];\n    // this.getPropAll();\n    this.getSBP();\n  }\n  /*   getPropAll() {\n    this.numOfFilters = 0;\n    this.propertyService.getAll().subscribe(prop => {\n      this.properties = prop;\n      console.log(prop);\n      this.setRows(prop);\n    });\n  } */\n  getSBP() {\n    this.isLoading = false;\n    this.statusBPService.getStatusBuyerProperty().subscribe(sBPs => {\n      this.setRows(<any>sBPs);\n    });\n  }\n  setRows(sBPs: IStatusBuyerPropertyGet[]) {\n    const rows = [];\n    sBPs.filter(s => s.status === 'rojo').forEach(sBP => {\n      let date: Date;\n      // rojo por credito\n      const isCredidRed = sBP.buyer.credit.find(\n        credit =>\n          credit.status === 'rojo' &&\n          credit.property === sBP.property._id &&\n          credit.isAccept,\n      );\n      // rojo por oferta\n      const isOfertRed = sBP.buyer.ofert.find(\n        ofert =>\n          ofert.status === 'rojo' &&\n          ofert.property === sBP.property._id &&\n          ofert.isAccept,\n      );\n      if (isOfertRed && isCredidRed) {\n        date =\n          new Date(isCredidRed.timestamp).getTime() >\n          new Date(isOfertRed.timestamp).getTime()\n            ? new Date(isCredidRed.timestamp)\n            : new Date(isOfertRed.timestamp);\n      } else if (isOfertRed) {\n        date = new Date(isOfertRed.timestamp);\n      } else if (isCredidRed) {\n        date = new Date(isCredidRed.timestamp);\n      }\n      if (isOfertRed || isCredidRed) {\n        rows.push({\n          _id: sBP._id,\n          buyer: sBP.buyer.name,\n          property: sBP.property.name,\n          credit: !!isCredidRed,\n          ofert: !!isOfertRed,\n          timestamp: date,\n        });\n      }\n    });\n    rows.sort((a, b) => {\n      // Turn your strings into dates, and then subtract them\n      // to get a value that is either negative, positive, or zero.\n      return <any>new Date(b.timestamp) - <any>new Date(a.timestamp);\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  detailProp(item) {\n    // por servicio para seguridad\n    this.statusBPService.timeToBuy = item.timestamp;\n    const data: NavigationExtras = {\n      queryParams: {\n        id: item._id,\n        credit: item.credit,\n        ofert: item.ofert,\n      },\n    };\n    this.router.navigate(['detail-salesprop-admin'], data);\n  }\n  async presentAlertConfirm(prop: IProperty) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar propiedad: <strong>${prop.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      /*  if (res.role === 'ok') {\n        this.deleted(prop);\n      } */\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  getFilters(filters: IProperty) {\n    console.log(filters);\n    const advFinded = this.properties.filter(prop => {\n      const temp = PropertyFilter(filters, prop);\n      this.numOfFilters = temp.numOfFilters;\n      return temp.isHope;\n    });\n    //  setea buyers\n    this.setRows(advFinded);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar translucent color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Calendario\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Calendario'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button *ngIf=\\\"showFullCalendar || showSpecific\\\" (click)=\\\"backOne()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center\\\">\\n      {{showFullCalendar\\n      ? month[monthNumber] + ' ' + year\\n      : month[titleNavBar.getMonth()] + ' ' + titleNavBar.getFullYear()}}</ion-title>\\n    <ion-buttons *ngIf=\\\"isDesktop\\\" slot=\\\"end\\\">\\n      <!-- opciones de vista -->\\n      <!--  <button mat-icon-button>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon> Primary\\n      </button> -->\\n\\n      <ion-button *ngIf=\\\"(showFullCalendar || showSpecific === false) && !dayItem \\\" (click)=\\\"showFullCalendar = false; showSpecific = true\\\"\\n        slot=\\\"end\\\">\\n        Agenda\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons\\\">assignment</i>\\n\\n      </ion-button>\\n      <!-- especial -->\\n      <ion-button *ngIf=\\\"(showFullCalendar || showSpecific === false) && dayItem \\\" (click)=\\\"showFullCalendar = false; showSpecific = true; getEvents()\\\"\\n        slot=\\\"end\\\">\\n        Agenda\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"clipboard\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons\\\">assignment</i>\\n\\n      </ion-button>\\n      <!-- /especial -->\\n\\n      <ion-button *ngIf=\\\"(showFullCalendar || showSpecific === true) && !dayItem \\\" (click)=\\\"showFullCalendar = false; showSpecific = false;\\\"\\n        slot=\\\"end\\\">\\n        Lista\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"reorder\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons\\\">view_list</i>\\n\\n      </ion-button>\\n      <!-- especial -->\\n      <ion-button *ngIf=\\\"!showFullCalendar && showSpecific === true && !showWeek && dayItem\\\" (click)=\\\"showFullCalendar = false; showSpecific = false; calendarSelect(dayItem, true)\\\"\\n        slot=\\\"end\\\">\\n        Lista Dia\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"reorder\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">view_list</i>\\n      </ion-button>\\n      <!-- /especial -->\\n\\n      <ion-button *ngIf=\\\"!showFullCalendar\\\" (click)=\\\"showFullCalendar = true; showSpecific = true; getEvents() \\\" slot=\\\"end\\\">\\n        Calendario\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"calendar\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">date_range</i>\\n\\n      </ion-button>\\n\\n      <ion-button *ngIf=\\\"!showFullCalendar && showSpecific \\\" (click)=\\\"showWeek = !showWeek;\\\" slot=\\\"end\\\">{{showWeek\\n        ?\\n        'Día' :\\n        'Semana'}}\\n        <!-- <ion-icon slot=\\\"icon-only\\\" [name]=\\\"showWeek ? 'today' : 'clipboard'\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">{{showWeek ? 'view_agenda' : 'view_week'}}</i>\\n\\n\\n\\n      </ion-button>\\n      <ion-button *ngIf=\\\"showFullCalendar || showSpecific\\\" (click)=\\\"fowardOne()\\\" slot=\\\"end\\\">\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <!-- movil -->\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"showFullCalendar || showSpecific\\\" (click)=\\\"fowardOne()\\\" slot=\\\"end\\\">\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <!-- movil -->\\n  <ion-toolbar *ngIf=\\\"!isDesktop\\\" color=\\\"secondary\\\">\\n    <ion-buttons justify-content-center>\\n      <!-- opciones de vista -->\\n\\n      <ion-button *ngIf=\\\"(showFullCalendar || showSpecific === false) && !dayItem \\\" (click)=\\\"showFullCalendar = false; showSpecific = true\\\"\\n        slot=\\\"end\\\">\\n        Agenda\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"clipboard\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons\\\">assignment</i>\\n\\n      </ion-button>\\n      <!-- especial -->\\n      <ion-button *ngIf=\\\"(showFullCalendar || showSpecific === false) && dayItem \\\" (click)=\\\"showFullCalendar = false; showSpecific = true; getEvents()\\\"\\n        slot=\\\"end\\\">\\n        Agenda\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"clipboard\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons\\\">assignment</i>\\n\\n      </ion-button>\\n      <!-- /especial -->\\n\\n      <ion-button *ngIf=\\\"(showFullCalendar || showSpecific === true) && !dayItem \\\" (click)=\\\"showFullCalendar = false; showSpecific = false;\\\"\\n        slot=\\\"end\\\">\\n        Lista\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"reorder\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">view_list</i>\\n\\n      </ion-button>\\n      <!-- especial -->\\n      <ion-button *ngIf=\\\"!showFullCalendar && showSpecific === true && !showWeek && dayItem\\\" (click)=\\\"showFullCalendar = false; showSpecific = false; calendarSelect(dayItem, true)\\\"\\n        slot=\\\"end\\\">\\n        Lista Dia\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"reorder\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">view_list</i>\\n\\n      </ion-button>\\n      <!-- /especial -->\\n\\n      <ion-button *ngIf=\\\"!showFullCalendar\\\" (click)=\\\"showFullCalendar = true; showSpecific = true; getEvents() \\\" slot=\\\"end\\\">\\n        Calendario\\n        <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"calendar\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">date_range</i>\\n\\n      </ion-button>\\n      <ion-button *ngIf=\\\"!showFullCalendar && showSpecific \\\" (click)=\\\"showWeek = !showWeek;\\\" slot=\\\"end\\\">{{showWeek\\n        ?\\n        'Día' :\\n        'Semana'}}\\n        <!-- <ion-icon slot=\\\"icon-only\\\" [name]=\\\"showWeek ? 'today' : 'clipboard'\\\"></ion-icon> -->\\n        <i slot=\\\"icon-only\\\" class=\\\"material-icons \\\">{{showWeek ? 'view_agenda' : 'view_week'}}</i>\\n\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid fixed style=\\\"height: 100%;\\\">\\n    <span *ngIf=\\\"isLoad\\\">\\n      <ng-container *ngIf=\\\"showFullCalendar; then thenTemplate; else elseTemplate\\\"></ng-container>\\n      <ng-template #thenTemplate>\\n        <!-- calendario general -->\\n        <app-general-calendar [year]=\\\"year\\\" [month]=\\\"monthNumber\\\" [schedules]=\\\"schedule\\\" (calendarSelect)=\\\"calendarSelect($event)\\\"\\n          (alertOfToday)=\\\"toastPresent()\\\"></app-general-calendar>\\n      </ng-template>\\n      <ng-template #elseTemplate>\\n        <ng-container *ngIf=\\\"showSpecific; then Specific; else EventsList\\\"></ng-container>\\n        <ng-template #Specific>\\n\\n          <!-- Calendario especifico -->\\n          <app-calendar-specific [currentWeek]=\\\"currentWeek\\\" (newEvent)=\\\"newEventByDate($event)\\\" (editPersonalEvent)=\\\"editEventPersonalById($event)\\\"\\n            (editEvent)=\\\"newEventById($event)\\\" (deletedEvent)=\\\"presentAlertConfirm($event)\\\" [isWeek]=\\\"showWeek\\\"\\n            [schedules]=\\\"schedule\\\" [add]=\\\"fowarkWeek\\\" [remove]=\\\"backWeek\\\" (titleNavBar)=\\\"titleNavBar = $event\\\"></app-calendar-specific>\\n          <!-- /Calendario especifico -->\\n\\n        </ng-template>\\n        <ng-template #EventsList>\\n          <h2 *ngIf=\\\"isAll\\\">Todos los Eventos</h2>\\n          <h2 *ngIf=\\\"!isAll\\\">Mostrando Eventos del {{dateDaySelect}}</h2>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-button *ngIf=\\\"!isAll\\\" shape=\\\"round\\\" color=\\\"secondary\\\" (click)=\\\"getEvents(); isAll=true; \\\">Mostrar\\n              todos</ion-button>\\n            <ion-button *ngIf=\\\"!isAll\\\" shape=\\\"round\\\" (click)=\\\"newEventByDate(dayItem)\\\">Crear Evento este\\n              día</ion-button>\\n            <ion-button *ngIf=\\\"isAll\\\" shape=\\\"round\\\" (click)=\\\"newEventByDate()\\\">Crear Evento Nuevo</ion-button>\\n          </ion-item>\\n\\n          <!-- Eventos -->\\n          <mat-accordion *ngFor=\\\"let item of schedule\\\" style=\\\"margin: 1%\\\">\\n            <mat-expansion-panel [ngClass]=\\\"{'state-verde': item.status === 'verde', \\n                'state-amarillo':  item.status === 'amarillo',\\n                'state-rojo':  item.status === 'rojo',\\n                'state-gris': item.status === 'gris',\\n                'state-azul':  item.status === 'azul' }\\\">\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  <b>{{formatState(item.status)}}</b>\\n                </mat-panel-title>\\n                <mat-panel-description *ngIf=\\\" !item.administrator && !item.personal \\\">\\n                  {{item.buyer.name}} {{item.adviser ? 'con ' + item.adviser.name : ''}}\\n                </mat-panel-description>\\n                <mat-panel-description *ngIf=\\\"item.administrator || item.personal \\\">\\n                  {{item.title}}\\n                </mat-panel-description>\\n              </mat-expansion-panel-header>\\n              <!-- listado -->\\n              <ion-list lines=\\\"none\\\">\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.buyer\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Cliente:</b> </p>\\n                    <p>{{item.buyer.name}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.adviser\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Asesor:</b> </p>\\n                    <p>{{item.adviser.name}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.seller\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Propietario:</b> </p>\\n                    <p>{{item.seller.name}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.property\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Propiedad:</b> </p>\\n                    <p>{{item.property.name}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.address\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"pin\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Lugar:</b> </p>\\n                    <p>{{item.address}}</p>\\n                    <!-- <a [href]=\\\"'http://maps.google.com/?q='+item.address+', Puebla'\\\">Ver mapa</a> -->\\n                    <app-maps-button slot=\\\"end\\\" [address]=\\\"item.address\\\"></app-maps-button>\\n                    <!-- <a (click)=\\\"openMaps(item.address)\\\">Ver mapa</a> -->\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.day\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Fecha del Evento:</b> </p>\\n                    <p>{{item.day}}/{{item.month + 1}}/{{item.year}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" *ngIf=\\\"item.day\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"time\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Hora del Evento:</b> </p>\\n                    <p>{{formatHours(item.hour,item.minute)}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <!-- <ion-item lines=\\\"none\\\" *ngIf=\\\"item.status\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Estado:</b> </p>\\n                            <p *ngIf=\\\"item.status === 'gris'\\\">Cita Generada</p>\\n                            <p *ngIf=\\\"item.status === 'verde'\\\">Propuesta Cita</p>\\n                            <p *ngIf=\\\"item.status === 'amarillo'\\\">Esperando Visita</p>\\n                            <p *ngIf=\\\"item.status === 'rojo'\\\">Visitada</p>\\n                          </ion-label>\\n                        </ion-item> -->\\n                <ion-item *ngIf=\\\"item.note\\\" lines=\\\"none\\\">\\n                  <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                  <ion-label slot=\\\"start\\\" text-wrap>\\n                    <p><b>Notas:</b> </p>\\n                    <p>{{item.note}}</p>\\n                  </ion-label>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"item.scoreByAdviser\\\" lines=\\\"none\\\">\\n                  <ion-chip [ngClass]=\\\"\\n                            {\\n                            'background-verde': item.scoreByAdviser === 'verde', \\n                            'background-amarillo':  item.scoreByAdviser === 'amarillo',\\n                            'background-rojo':  item.scoreByAdviser === 'rojo',\\n                            'background-gris': item.scoreByAdviser === 'gris',\\n                            'background-azul':  item.scoreByAdviser === 'azul'\\n                          }\\\">\\n                    <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"eye\\\"></ion-chip-icon>\\n                    <ion-label *ngIf=\\\"item.scoreByAdviser ===  'verde'\\\">Poco interés</ion-label>\\n                    <ion-label *ngIf=\\\"item.scoreByAdviser ===  'amarillo'\\\">Oportunidad de venta</ion-label>\\n                    <ion-label *ngIf=\\\"item.scoreByAdviser ===  'rojo'\\\">Venta muy probable</ion-label>\\n                    <ion-label *ngIf=\\\"item.scoreByAdviser ===  'gris'\\\">No hay interés</ion-label>\\n                    <ion-label *ngIf=\\\"item.scoreByAdviser ===  'azul'\\\">Muy bien</ion-label>\\n                  </ion-chip>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-button *ngIf=\\\"!item.administrator && !item.personal && user.type === 'adviser' && item.status === 'amarillo' && comparateDate(item.year, item.month, item.day) \\\"\\n                    (click)=\\\"presentAlertVisit(item)\\\" color=\\\"warning\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                    Calificar <ion-icon name=\\\"clipboard\\\"></ion-icon>\\n                  </ion-button>\\n                  <ion-button *ngIf=\\\"!item.administrator && !item.personal\\\" (click)=\\\"newEventById(item._id)\\\" color=\\\"success\\\"\\n                    fill=\\\"outline\\\" slot=\\\"end\\\">\\n                    Editar <ion-icon name=\\\"create\\\"></ion-icon>\\n                  </ion-button>\\n                  <ion-button *ngIf=\\\"item.administrator || item.personal \\\" (click)=\\\"editEventPersonalById(item._id)\\\"\\n                    color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                    Editar Evento Personal <ion-icon name=\\\"create\\\"></ion-icon>\\n                  </ion-button>\\n                  <ion-button (click)=\\\"presentAlertConfirm(item._id)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                    Borrar <ion-icon name=\\\"trash\\\"></ion-icon>\\n                  </ion-button>\\n\\n                </ion-item>\\n              </ion-list>\\n              <!-- /listado -->\\n\\n\\n            </mat-expansion-panel>\\n          </mat-accordion>\\n          <!-- /eventos -->\\n\\n        </ng-template>\\n      </ng-template>\\n\\n\\n\\n\\n\\n    </span>\\n    <span *ngIf=\\\"!isLoad\\\">\\n      <app-general-skeleton></app-general-skeleton>\\n    </span>\\n\\n  </ion-grid>\\n\\n</ion-content>\\n<!-- Solo vendedor y asesor -->\\n<ion-footer *ngIf=\\\"(user.type === 'adviser' || user.type === 'seller') && sales\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"sendToTotalSales()\\\" fill=\\\"solid\\\" color=\\\"secondary\\\">\\n        Ventas<ion-badge color=\\\"dark\\\" style=\\\" margin-left: 2%;\\\">{{sales.length}}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\"","module.exports = \".icon-chip-detail {\\n  border-radius: 50%;\\n  background-color: black;\\n  color: white; }\\n\\nmat-panel-description {\\n  justify-content: flex-end; }\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport {\n  NavController,\n  AlertController,\n  ToastController,\n  Platform\n} from '@ionic/angular';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { ScheduleService } from '../../../services/schedule.service';\nimport {\n  FormatDatesFront,\n  FormatHoursFront,\n  OpenGoogleMaps\n} from '../../../_config/_helpers';\nimport { Storage } from '@ionic/storage';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { SellerService } from '../../../services/seller.service';\nimport { map } from 'rxjs/operators';\nimport { SaleService } from '../../../services/sale.service';\nimport { ISale } from '../../../models/sale.model';\n\n@Component({\n  selector: 'app-list-schedule-admin',\n  templateUrl: './list-schedule-admin.component.html',\n  styleUrls: ['./list-schedule-admin.component.scss']\n})\nexport class ListScheduleAdminComponent implements OnInit {\n  month = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre'\n  ];\n  year: number;\n  monthNumber: number;\n  schedule: ISchedule[];\n  isLoad = false;\n  showFullCalendar = true;\n  dateDaySelect;\n  isAll: boolean;\n  dayItem;\n  user: IUserSession;\n  sales: ISale[];\n  showSpecific = false;\n  // week\n  showWeek = true;\n  fowarkWeek = 0;\n  backWeek = 0;\n  currentWeek = new Date();\n  isDesktop: boolean;\n  titleNavBar = new Date();\n  constructor(\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    private navController: NavController,\n    private router: Router,\n    private scheduleService: ScheduleService,\n    public alertController: AlertController,\n    private userService: UserSessionService,\n    private toastController: ToastController,\n    private storage: Storage,\n    public route: ActivatedRoute,\n    private oneSignalService: OnesignalService,\n    private sellerService: SellerService,\n    private saleService: SaleService,\n    public platform: Platform\n  ) {\n    this.isDesktop = platform.is('desktop');\n    console.log(this.isDesktop);\n    this.user = userService.userSession.value;\n    this.monthNumber = new Date().getMonth();\n    this.year = new Date().getFullYear();\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.getEvents();\n    this.isAll = true;\n  }\n  ngOnInit() {\n    /* const buyer = this.userSessionService.userSession.value;\n    this.buyerService.getBuyerById(buyer.id).subscribe(b => {\n      this.schedule = b.schedule;\n      this.isLoad = true;\n    }); */\n  }\n  calendarSelect(\n    item: { year: number; month: number; day: number },\n    islist?: boolean\n  ) {\n    if (item.day !== 0) {\n      const isFinded = this.schedule.filter(\n        s =>\n          s.day === item.day && s.month === item.month && s.year === item.year\n      );\n      if (isFinded.length > 0) {\n        this.dateDaySelect = FormatDatesFront(\n          new Date(item.year, item.month, item.day)\n        );\n        if (islist) {\n          this.schedule = isFinded;\n        }\n        this.showFullCalendar = false;\n        this.isAll = false;\n        this.dayItem = item;\n        if (!islist) {\n          this.currentWeek = new Date(item.year, item.month, item.day);\n          this.showWeek = false;\n          this.showSpecific = true;\n        }\n      } else {\n        this.newEventByDate(item);\n      }\n    }\n  }\n  getEvents() {\n    this.isLoad = false;\n    this.dayItem = undefined;\n    this.isAll = true;\n    this.scheduleService.getSchedule().subscribe(schedules => {\n      // console.log('schedules', schedules);\n      const user = this.userService.userSession.value;\n      if (user.type === 'administrator') {\n        this.schedule = schedules.filter(s => !s.personal);\n      } else if (user.type === 'adviser') {\n        this.getTotalSalesByAdv();\n        this.toastPresentAdv(`Bienvenido ${this.user.name}`);\n        this.schedule = schedules.filter(\n          s =>\n            (s.adviser && s.adviser._id === user.id) ||\n            (s.personal && s.personal === user.id)\n        );\n      } else if (user.type === 'office') {\n        this.schedule = schedules.filter(\n          s => !s.administrator || (s.personal && s.personal === user.id)\n        );\n      } else if (user.type === 'seller') {\n        this.schedule = schedules.filter(\n          s =>\n            (s.seller && s.seller._id === user.id) ||\n            (s.personal && s.personal === user.id)\n        );\n      }\n      this.schedule.sort((a, b) => {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return <any>new Date(b.timestamp) - <any>new Date(a.timestamp);\n      });\n      // console.log(this.schedule);\n      this.isLoad = true;\n    });\n  }\n  newEventByDate(date?: {\n    year: number;\n    month: number;\n    day: number;\n    hour?: number;\n  }) {\n    if (date) {\n      const data: NavigationExtras = {\n        queryParams: {\n          day: date.day,\n          month: date.month,\n          year: date.year,\n          hour: date.hour\n        }\n      };\n      this.router.navigate(['new-edit-schedule'], data);\n    } else {\n      this.router.navigate(['new-edit-schedule']);\n    }\n  }\n  newEventById(id: string) {\n    const data: NavigationExtras = {\n      queryParams: { id: id }\n    };\n    this.router.navigate(['new-edit-schedule'], data);\n  }\n  editEventPersonalById(id: string) {\n    const data: NavigationExtras = {\n      queryParams: { id: id }\n    };\n    this.router.navigate(['personal-schedule'], data);\n  }\n  async deleteEvent(id) {\n    const schedule = await this.scheduleService.getScheduleById(id).toPromise();\n    if (schedule.notificationOneSignal) {\n      schedule.notificationOneSignal.forEach(idN => {\n        this.oneSignalService.deleteOneSignalSchedule(idN).subscribe();\n      });\n    }\n    this.scheduleService\n      .deltedScheduleById(id)\n      .toPromise()\n      .then(() => {\n        this.getEvents();\n      });\n  }\n  // dialogs\n  async presentAlertConfirm(id) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar evento',\n      message: `¿Desea eliminar evento?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {}\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleteEvent(id);\n      }\n    });\n  }\n  /**\n   * Calificar visita\n   */\n  async presentAlertVisit(schedule: ISchedule) {\n    const alert = await this.alertController.create({\n      header: 'Calificar',\n      subHeader: 'Califica la visita realizada',\n      inputs: [\n        {\n          name: 'radio2',\n          type: 'radio',\n          label: 'No hay interés',\n          value: 'gris'\n        },\n        {\n          name: 'radio3',\n          type: 'radio',\n          label: 'Poco interés',\n          value: 'verde'\n        },\n        {\n          name: 'radio4',\n          type: 'radio',\n          label: 'Oportunidad de venta',\n          value: 'amarillo'\n        },\n        {\n          name: 'radio5',\n          type: 'radio',\n          label: 'Venta muy probable',\n          value: 'rojo'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {}\n        },\n        {\n          text: 'Ok',\n          role: 'ok',\n          handler: () => {}\n        }\n      ]\n    });\n\n    await alert.present();\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        schedule.scoreByAdviser = res.data.values;\n        schedule.status = 'rojo';\n        this.putEvent(schedule);\n      }\n    });\n  }\n  async getSellerOfProperty(propId) {\n    return await this.sellerService\n      .getSellerAll()\n      .pipe(\n        map(sellers =>\n          sellers.find(s => !!s.property.find(p => p._id === propId))\n        )\n      )\n      .toPromise();\n  }\n  // end dialogs\n  async putEvent(schedule: ISchedule) {\n    const seller = await this.getSellerOfProperty(schedule.property._id);\n    this.notification(\n      'Calificación de Visita',\n      `El asesor ${\n        this.userSessionService.userSession.value.name\n      } calificó como \"${\n        schedule.scoreByAdviser === 'rojo'\n          ? 'Venta muy probable'\n          : schedule.scoreByAdviser === 'amarillo'\n            ? 'Oportunidad de venta'\n            : schedule.scoreByAdviser === 'verde'\n              ? 'Poco interés'\n              : 'Sin interés'\n      }\" la visita a la propiedad ${schedule.property.name} con el comprador ${\n        schedule.buyer.name\n      }`,\n      'rojo',\n      'schedule',\n      ['administrator', 'office'],\n      seller === undefined ? undefined : [seller._id]\n    );\n    this.scheduleService\n      .putSchedule(schedule)\n      .toPromise()\n      .then(() => {\n        this.getEvents();\n      });\n  }\n  async toastPresent(m = 'Eventos pendientes hoy') {\n    const isPresent = await this.storage.get('alert-today');\n    console.log(isPresent);\n    if (+isPresent !== new Date().getDate()) {\n      const toast = await this.toastController.create({\n        message: m,\n        showCloseButton: true,\n        position: 'bottom',\n        closeButtonText: 'OK',\n        cssClass: 'toast-alert',\n        duration: 5000\n      });\n      toast.present();\n      toast.onWillDismiss().then(() => {\n        this.storage.set('alert-today', new Date().getDate());\n      });\n    }\n  }\n  async toastPresentAdv(m) {\n    const isPresent = await this.storage.get('alert-adv');\n    if (+isPresent !== new Date().getDate()) {\n      const toast = await this.toastController.create(<any>{\n        message: m,\n        position: 'bottom',\n        showCloseButton: false,\n        cssClass: 'toast-adv',\n        duration: 4000\n      });\n      toast.present();\n      toast.onWillDismiss().then(() => {\n        this.storage.set('alert-adv', new Date().getDate());\n      });\n    }\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  // _helpers\n  backOne() {\n    if (this.showFullCalendar === false) {\n      this.backWeek++;\n    } else {\n      if (this.monthNumber === 0) {\n        this.year--;\n        this.monthNumber = 11;\n      } else {\n        this.monthNumber--;\n      }\n    }\n  }\n  fowardOne() {\n    if (this.showFullCalendar === false) {\n      this.fowarkWeek++;\n    } else {\n      if (this.monthNumber === 11) {\n        this.year++;\n        this.monthNumber = 0;\n      } else {\n        this.monthNumber++;\n      }\n    }\n  }\n  formatDate(item) {\n    return FormatDatesFront(item);\n  }\n  formatState(state: string) {\n    if (state === 'verde') {\n      return 'En espera de confirmación';\n    } else if (state === 'amarillo') {\n      return 'Confirmada en espera de asistencia';\n    } else if (state === 'rojo') {\n      return 'Cita pasada';\n    } else if (state === 'azul') {\n    } else if (state === undefined) {\n      return 'Evento Personal';\n    } else if (state === 'gris') {\n      return 'Solicitud de Cita';\n    }\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  comparateDate(year, month, day): boolean {\n    const today = new Date().getTime();\n    const date = new Date(year, month, day).getTime();\n    return date < today;\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  getTotalSalesByAdv() {\n    this.saleService.getSaleByIdAdv(this.user.id).subscribe(sales => {\n      this.sales = sales;\n    });\n  }\n  sendToTotalSales() {\n    if (this.sales.length > 0) {\n      this.router.navigate(['list-sales-admin']);\n    }\n  }\n  openMaps(schedule) {\n    OpenGoogleMaps(schedule);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propietarios\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Propietarios'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then Load; else noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer [class.mat-elevation-z1]=true position=\\\"end\\\" #drawer class=\\\"sidenav\\\" [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\">\\n        <app-filter-seller (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getSellerAll()\\\" (closeMenu)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"></app-filter-seller>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilters}})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button (click)=\\\"drawer.toggle()\\\" slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros {{(drawer.openedChange | async) ? 'cerrar' : 'abrir'}}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table  -->\\n      <h2>Lista de Dueños </h2>\\n      <app-general-table [columns]=\\\"columns\\\" [rows]=\\\"rows\\\" [isDesktop]=\\\"isDesktop\\\" (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\" (detailsButton)=\\\"detailSeller($event)\\\"></app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n\\n\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newBuyer()\\\" *ngIf=\\\"isLoading\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ISeller } from '../../../models/seller.model';\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { SellerService } from '../../../services/seller.service';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { OnlyDates, SellerFilter } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-list-seller-admin',\n  templateUrl: './list-seller-admin.component.html',\n  styleUrls: ['./list-seller-admin.component.scss'],\n})\nexport class ListSellerAdminComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // sellers\n  seller: ISeller[] = [];\n  // numofFilters\n  numOfFilters = 0;\n\n  constructor(\n    private sellerService: SellerService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n  ) {\n    console.log('init');\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal',\n      },\n      {\n        name: 'Apellido',\n        prop: 'lastName',\n        type: 'normal',\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date',\n      },\n      {\n        name: 'Tipo',\n        prop: 'typeSeller',\n        type: 'normal',\n      },\n      {\n        name: 'Propiedades',\n        prop: 'property',\n        type: 'normal',\n      },\n      {\n        name: 'Notas',\n        prop: 'notes',\n        type: 'normal',\n      },\n      {\n        name: 'Acciones',\n        prop: 'acction',\n        type: 'buttons',\n        buttonEdit: true,\n        buttonDeleted: true,\n        buttonDetails: true,\n      },\n    ];\n    this.getSellerAll();\n  }\n  getSellerAll() {\n    this.isLoading = false;\n    this.numOfFilters = 0;\n    this.sellerService.getSellerAll().subscribe(seller => {\n      this.seller = seller;\n      console.log(seller);\n      this.setRows(seller);\n    });\n  }\n  setRows(sellers: ISeller[]) {\n    const rows = [];\n\n    sellers.forEach(seller => {\n      const prop = seller.property\n        .map(p => p.name)\n        .slice(0, 4)\n        .toString();\n      let typeSeller = 'Vende';\n      if (seller.isRenter) {\n        typeSeller = 'Renta';\n      }\n      rows.push({\n        _id: seller._id,\n        name: seller.name,\n        lastName: seller.lastName,\n        timestamp: seller.timestamp,\n        typeSeller: typeSeller,\n        property: prop,\n        notes: seller.notes,\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n  }\n  newBuyer() {\n    const data: NavigationExtras = {\n      queryParams: { id: 'new' },\n    };\n    // this.navCtr.navigateRoot('new-edit-seller');\n    this.router.navigate(['new-edit-seller']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id },\n    };\n    this.router.navigate(['new-edit-seller'], data);\n    // this.router\n    //   .navigateByUrl('/list-seller-admin', { skipLocationChange: true })\n    //   .then(() => this.router.navigate(['new-edit-seller'], data));\n    // this.isLoading = false;\n\n    // this.navCtr.navigateRoot('new-edit-seller', false, data);\n  }\n  deleted(seller: ISeller) {\n    this.sellerService\n      .deletedSellerById(seller._id)\n      .toPromise()\n      .then(() => {\n        this.getSellerAll();\n      });\n  }\n  detailSeller(buyer: ISeller) {\n    const data: NavigationExtras = {\n      queryParams: { id: buyer._id },\n    };\n    this.router.navigate(['detail-seller-admin'], data);\n  }\n  async presentAlertConfirm(seller: ISeller) {\n    const alert = await this.alertController.create({\n      header: 'Eliminar Usuario',\n      message: `¿Desea eliminar usuario: <strong>${seller.name}</strong>?`,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Sí',\n          role: 'ok',\n          handler: () => {\n            /* this.deleted(buyer);\n            this.getBuyerAll(); */\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n    // IMPORTANTE ASYNC !!!!!\n    await alert.onWillDismiss().then(res => {\n      if (res.role === 'ok') {\n        this.deleted(seller);\n      }\n    });\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n  getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    isRenter: boolean;\n  }) {\n    const advFinded = this.seller.filter(adv => SellerFilter(adv, filters));\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.isRenter) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n}\n","module.exports = \"<ion-header>\\n  <!--  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Administrador\\n    </ion-title>\\n\\n  </ion-toolbar> -->\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Administrador'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n  <ion-toolbar [ngClass]=\\\"{'desktop-tabs': isDesktop}\\\" color=\\\"primary\\\">\\n    <ion-segment color=\\\"secondary\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n      <ion-segment-button checked value=\\\"movementsSegment\\\">\\n        Movimientos\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"eventsSegment\\\">\\n        Citas\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <!-- <ion-grid [ngClass]=\\\"{'desktop-grid': isDesktop}\\\"> -->\\n  <ion-grid>\\n    <ng-container *ngIf=\\\"isLoad; then thenLoad; else elseLoad\\\"></ng-container>\\n    <!-- cargado -->\\n    <ng-template #thenLoad>\\n\\n\\n      <span [ngSwitch]=\\\"segment\\\">\\n        <!-- movementsSegment -->\\n        <span *ngSwitchCase=\\\"'movementsSegment'\\\">\\n          <!-- titulos -->\\n          <h2>Movimientos en el Sistema </h2>\\n          <p>Se muestra cada acción realizada en el sistema con su estado</p>\\n          <!-- filtros -->\\n          <div class=\\\"filters-conteiner\\\">\\n            <div class=\\\"filters-day\\\">\\n              <mat-form-field appearance=\\\"fill\\\">\\n                <mat-label>Filtrar por tiempo</mat-label>\\n                <mat-select #time [(ngModel)]=\\\"filterTime\\\" (valueChange)=\\\"filterTime = time.value; getFiltersGeneral()\\\"\\n                  placeholder=\\\"Fitrar Días\\\">\\n                  <mat-option value=7>\\n                    7 Días\\n                  </mat-option>\\n                  <mat-option value=14>\\n                    14 Días\\n                  </mat-option>\\n                  <mat-option value=30>\\n                    Último mes\\n                  </mat-option>\\n                  <mat-option value='dateSpecific'>\\n                    Rango de Fecha\\n                  </mat-option>\\n                </mat-select>\\n                <button mat-button *ngIf=\\\"filterTime\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"filterTime = undefined; startDate= undefined; endDate= undefined; getFiltersGeneral()\\\">\\n                  <mat-icon>close</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <!-- inicio -->\\n              <mat-form-field *ngIf=\\\"isCalendar\\\" appearance=\\\"fill\\\">\\n                <mat-label>Fecha Inicio</mat-label>\\n                <input (dateChange)=\\\"dateSelectStart($event)\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\"\\n                  placeholder=\\\"Selecciona Fecha\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n              <!-- fecha fin -->\\n\\n              <mat-form-field *ngIf=\\\"isCalendar\\\" appearance=\\\"fill\\\">\\n                <mat-label>Fecha Fin</mat-label>\\n                <input (dateChange)=\\\"dateSelectEnd($event)\\\" (focus)=\\\"pickerEnd.open()\\\" matInput [matDatepicker]=\\\"pickerEnd\\\"\\n                  placeholder=\\\"Selecciona Fecha\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerEnd\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerEnd></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"filters-toogle\\\">\\n              <mat-button-toggle-group [value]=\\\"matButtonToggleGroup\\\" style=\\\"flex-wrap: wrap\\\" (change)=\\\"matButtonToggleGroup = $event.value; getFiltersGeneral(); \\\">\\n                <mat-button-toggle value=\\\"schedule\\\">Citas</mat-button-toggle>\\n                <mat-button-toggle value=\\\"ofert\\\">Ofertas</mat-button-toggle>\\n                <mat-button-toggle value=\\\"sbp\\\">Estados</mat-button-toggle>\\n                <mat-button-toggle value=\\\"credit\\\">Créditos</mat-button-toggle>\\n                <mat-button-toggle value=\\\"all\\\">Todos</mat-button-toggle>\\n              </mat-button-toggle-group>\\n            </div>\\n\\n          </div>\\n\\n\\n          <!-- <ion-row justify-content-around> -->\\n          <ion-row>\\n            <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" *ngFor=\\\"let item of allData\\\">\\n              <!-- \\n              decide que carta\\n              ofert\\n              schedule\\n              credit\\n              sbp\\n            -->\\n              <span [ngSwitch]=\\\"item.type\\\">\\n                <span *ngSwitchCase=\\\"'ofert'\\\">\\n                  <!-- oferta -->\\n                  <mat-accordion>\\n                    <mat-expansion-panel [ngClass]=\\\"{'state-verde': item.data.oferts.status === 'verde', \\n                    'state-amarillo':  item.data.oferts.status === 'amarillo',\\n                    'state-rojo':  item.data.oferts.status === 'rojo',\\n                    'state-gris': item.data.oferts.status === 'gris',\\n                    'state-azul':  item.data.oferts.status === 'azul'}\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          <b>Oferta</b>\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          {{item.data.oferts.buyer.name}}\\n                        </mat-panel-description>\\n                        <mat-panel-description>\\n                          {{formatDates(item.time)}}\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n\\n                      <!-- listado -->\\n                      <ion-list lines=\\\"none\\\">\\n                        <ion-item lines=\\\"none\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Notas:</b> </p>\\n                            <p>{{item.data.oferts.notes}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Precio:</b> </p>\\n                            <p>${{item.data.oferts.ofertPrice}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Cliente:</b> </p>\\n                            <p>{{item.data.oferts.buyer.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Propiedad:</b> </p>\\n                            <p>{{item.data.oferts.property.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                      </ion-list>\\n                      <!-- /listado -->\\n                    </mat-expansion-panel>\\n                  </mat-accordion>\\n                  <!-- /ofertas -->\\n\\n                </span>\\n                <span *ngSwitchCase=\\\"'schedule'\\\">\\n\\n                  <!-- Citas -->\\n                  <mat-accordion>\\n                    <mat-expansion-panel [ngClass]=\\\"{'state-verde': item.data.schedules.status === 'verde', \\n                    'state-amarillo':  item.data.schedules.status === 'amarillo',\\n                    'state-rojo':  item.data.schedules.status === 'rojo',\\n                    'state-gris': item.data.schedules.status === 'gris',\\n                    'state-azul':  item.data.schedules.status === 'azul'}\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          <b>Cita</b>\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          {{item.data.schedules.buyer.name}}\\n                        </mat-panel-description>\\n                        <mat-panel-description>\\n                          {{formatDates(item.time)}}\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n                      <!-- listado -->\\n                      <ion-list lines=\\\"none\\\">\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.buyer\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Cliente:</b> </p>\\n                            <p>{{item.data.schedules.buyer.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.adviser\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Asesor:</b> </p>\\n                            <p>{{item.data.schedules.adviser.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.seller\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Vendedor:</b> </p>\\n                            <p>{{item.data.schedules.seller.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.property\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Propiedad:</b> </p>\\n                            <p>{{item.data.schedules.property.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.address\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"pin\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Lugar:</b> </p>\\n                            <p>{{item.data.schedules.address}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.day\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Fecha del Evento:</b> </p>\\n                            <p>{{item.data.schedules.day}}/{{item.data.schedules.month +\\n                              1}}/{{item.data.schedules.year}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.hour\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"time\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Hora del Evento:</b> </p>\\n                            <p> {{formatHours(item.data.schedules.hour,item.data.schedules.minute)}} </p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.schedules.status\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Estado:</b> </p>\\n                            <p *ngIf=\\\"item.data.schedules.status === 'gris'\\\">Cita Generada</p>\\n                            <p *ngIf=\\\"item.data.schedules.status === 'verde'\\\">Propuesta Cita</p>\\n                            <p *ngIf=\\\"item.data.schedules.status === 'amarillo'\\\">Esperando Visita</p>\\n                            <p *ngIf=\\\"item.data.schedules.status === 'rojo'\\\">Visitada</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item *ngIf=\\\"item.data.schedules.note\\\" lines=\\\"none\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Notas:</b> </p>\\n                            <p>{{item.data.schedules.note}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                      </ion-list>\\n                      <!-- /listado -->\\n\\n\\n                    </mat-expansion-panel>\\n                  </mat-accordion>\\n                  <!-- /Citas -->\\n\\n\\n\\n                </span>\\n                <span *ngSwitchCase=\\\"'credit'\\\">\\n                  <!-- creditos -->\\n                  <mat-accordion>\\n                    <mat-expansion-panel [ngClass]=\\\"{'state-verde': item.data.credits.status === 'verde', \\n                    'state-amarillo':  item.data.credits.status === 'amarillo',\\n                    'state-rojo':  item.data.credits.status === 'rojo',\\n                    'state-gris': item.data.credits.status === 'gris',\\n                    'state-azul':  item.data.credits.status === 'azul' }\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          <b>Crédito</b>\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          {{item.data.credits.buyer.name}}\\n                        </mat-panel-description>\\n                        <mat-panel-description>\\n                          {{formatDates(item.time)}}\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n\\n                      <!-- listado -->\\n                      <ion-list lines=\\\"none\\\">\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.credits.buyer\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Cliente:</b> </p>\\n                            <p>{{item.data.credits.buyer.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.credits.property\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Propiedad:</b> </p>\\n                            <p>{{item.data.credits.property.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <p><b>Notas:</b> </p>\\n                        <ion-label text-wrap>\\n                          {{item.data.credits.notes}}\\n                        </ion-label>\\n                      </ion-list>\\n                      <!-- /listado -->\\n                    </mat-expansion-panel>\\n                  </mat-accordion>\\n                  <!-- /creditos -->\\n\\n\\n                </span>\\n                <span *ngSwitchCase=\\\"'sbp'\\\">\\n                  <!-- sbp -->\\n                  <mat-accordion>\\n                    <mat-expansion-panel [ngClass]=\\\"{'state-verde': item.data.sbps.status === 'verde', \\n                    'state-amarillo':  item.data.sbps.status === 'amarillo',\\n                    'state-rojo':  item.data.sbps.status === 'rojo',\\n                    'state-gris': item.data.sbps.status === 'gris',\\n                    'state-azul':  item.data.sbps.status === 'azul' }\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          <b>Progreso</b>\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          {{item.data.sbps.buyer.name}}\\n                        </mat-panel-description>\\n                        <mat-panel-description>\\n                          {{formatDates(item.time)}}\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n\\n                      <!-- listado -->\\n                      <ion-list lines=\\\"none\\\">\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.sbps.buyer\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Cliente:</b> </p>\\n                            <p>{{item.data.sbps.buyer.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" *ngIf=\\\"item.data.sbps.property\\\">\\n                          <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\n                          <ion-label slot=\\\"start\\\" text-wrap>\\n                            <p><b>Propiedad:</b> </p>\\n                            <p>{{item.data.sbps.property.name}}</p>\\n                          </ion-label>\\n                        </ion-item>\\n                        <!-- Progreso -->\\n                        <p><b>Progreso:</b> </p>\\n                        <ng-container *ngIf=\\\"isiOS; then thenTemplate; else elseTemplate\\\"></ng-container>\\n                        <ng-template #thenTemplate>\\n                          <p> <span class=\\\"status-point\\\" [ngClass]=\\\"\\n                            {'background-verde': item.data.sbps.status === 'verde', \\n                           'background-amarillo': item.data.sbps.status === 'amarillo',\\n                           'background-rojo':  item.data.sbps.status === 'rojo',\\n                           'background-gris': item.data.sbps.status === 'gris',\\n                           'background-azul':  item.data.sbps.status === 'azul' }\\\"></span>\\n                            {{item.data.sbps.status\\n                            === 'rojo' ? 'Cierre' : item.data.sbps.status\\n                            === 'verde' ? 'Interés': item.data.sbps.status\\n                            === 'amarillo' ? 'Seguimiento': item.data.sbps.status\\n                            === 'azul' ? 'Post Venta' : ''}}</p>\\n                        </ng-template>\\n                        <ng-template #elseTemplate>\\n                          <div class=\\\"container\\\">\\n                            <ul class=\\\"progressbar\\\">\\n                              <li class=\\\"item \\\" [ngClass]=\\\"\\n                                  {'active-verde': item.data.sbps.status === 'verde', \\n                            'active-amarillo':  item.data.sbps.status === 'amarillo',\\n                            'active-rojo':  item.data.sbps.status === 'rojo',\\n                            'active-azul':  item.data.sbps.status === 'azul' }\\\">Información</li>\\n                              <li class=\\\"item\\\" [ngClass]=\\\"\\n                                  { \\n                            'active-amarillo':  item.data.sbps.status === 'amarillo',\\n                            'active-rojo':  item.data.sbps.status === 'rojo',\\n                            'active-azul':  item.data.sbps.status === 'azul' }\\\">Seguimiento</li>\\n                              <li class=\\\"item\\\" [ngClass]=\\\"\\n                                  {\\n                            'active-rojo':  item.data.sbps.status === 'rojo',\\n                            'active-azul':  item.data.sbps.status === 'azul' }\\\">Cierre</li>\\n                              <li class=\\\"item\\\" [ngClass]=\\\"\\n                                  {\\n                            'active-azul':  item.data.sbps.status === 'azul' }\\\">PostVenta</li>\\n                            </ul>\\n                          </div>\\n                        </ng-template>\\n\\n\\n                      </ion-list>\\n                      <!-- /listado -->\\n                    </mat-expansion-panel>\\n                  </mat-accordion>\\n                  <!-- /sbp -->\\n                </span>\\n              </span>\\n\\n            </ion-col>\\n\\n\\n          </ion-row>\\n          <!-- Cargar mas -->\\n          <div style=\\\"text-align: center; margin-top: 1%\\\">\\n            <ion-button (click)=\\\"loadMore();getFiltersGeneral()\\\" shape=\\\"round\\\">\\n              <ion-spinner *ngIf=\\\"isSpinner\\\" style=\\\"color: white\\\" name=\\\"bubbles\\\"></ion-spinner>\\n              {{titleButton}}\\n            </ion-button>\\n          </div>\\n        </span>\\n        <!-- eventsSegment -->\\n        <span *ngSwitchCase=\\\"'eventsSegment'\\\">\\n          <!-- Toggles in a List -->\\n          <ng-container *ngIf=\\\"scheduleToShow.length !== 0; then showSchedule; else noShow\\\"></ng-container>\\n          <ng-template #showSchedule>\\n            <h2>Citas Personales </h2>\\n\\n            <ion-list lines=\\\"none\\\" *ngIf=\\\"!isOne\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-button (click)=\\\"isAll = !isAll;getAllSchedule(); \\\">{{isAll ? 'Mostrar Citas de hoy':'Mostrar\\n                  todos'}}</ion-button>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"!isAll\\\">\\n                <ion-chip color=\\\"secondary\\\">\\n                  <ion-label>Mostrando Citas de hoy\\n                  </ion-label>\\n                </ion-chip>\\n              </ion-item>\\n\\n            </ion-list>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\" size=\\\"12\\\" *ngFor=\\\"let schedule of scheduleToShow\\\">\\n                  <ion-card [ngClass]=\\\"{\\n                'desktop-card': isDesktop  }\\\">\\n                    <ion-card-header>\\n                      <ion-card-subtitle text-wrap>Fecha del Cita:\\n                        {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-card-subtitle>\\n                      <ion-card-subtitle>Hora: {{formatHours(schedule.hour,schedule.minute)}} </ion-card-subtitle>\\n\\n                      <ion-card-title text-wrap>{{schedule.title}}</ion-card-title>\\n                    </ion-card-header>\\n                    <ion-card-content text-wrap>\\n                      <ion-item lines=\\\"none\\\">\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                        <ion-label text-wrap><b>Detalles del evento:</b>\\n                          <p>\\n                            {{schedule.note}}\\n                          </p>\\n                        </ion-label>\\n                      </ion-item>\\n                      <ion-item lines=\\\"none\\\">\\n                        <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"pin\\\"></ion-icon>\\n                        <ion-label text-wrap><b>Dirección: </b>\\n                          <p>{{schedule.address}}</p>\\n                          <!-- <a [href]=\\\"'http://maps.google.com/?q='+schedule.address+', Puebla'\\\">Ver mapa</a> -->\\n                          <!-- <a (click)=\\\"openMaps(schedule.address)\\\">Ver mapa</a> -->\\n                          <!-- https://www.google.com/maps/search/?api=1&parameters -->\\n                          <app-maps-button slot=\\\"end\\\" [address]=\\\"schedule.address\\\"></app-maps-button>\\n                        </ion-label>\\n                      </ion-item>\\n\\n                    </ion-card-content>\\n                  </ion-card>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n\\n\\n          </ng-template>\\n          <ng-template #noShow>\\n            <ion-list lines=\\\"none\\\" *ngIf=\\\"!isOne\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-button (click)=\\\"isAll = !isAll;getAllSchedule(); \\\">Mostrar Todos</ion-button>\\n              </ion-item>\\n            </ion-list>\\n            <ion-card>\\n              <ion-card-header>\\n                <ion-card-title> No hay Citas hoy</ion-card-title>\\n              </ion-card-header>\\n            </ion-card>\\n          </ng-template>\\n        </span>\\n        <!-- /event -->\\n      </span>\\n    </ng-template>\\n    <!-- nocargado -->\\n    <ng-template #elseLoad>\\n      <ion-skeleton-text width=40px></ion-skeleton-text>\\n      <ion-skeleton-text width=200px></ion-skeleton-text>\\n      <ion-skeleton-text width=600px></ion-skeleton-text>\\n      <ion-skeleton-text width=100px></ion-skeleton-text>\\n      <ion-skeleton-text width=80px></ion-skeleton-text>\\n    </ng-template>\\n  </ion-grid>\\n\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button [routerLink]=\\\"['/personal-schedule']\\\" *ngIf=\\\"segment === 'eventsSegment'\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"calendar\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".status-point {\\n  touch-action: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  -webkit-user-drag: none;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 50%;\\n  display: inline-block;\\n  margin: 2px; }\\n\\n.filters-conteiner {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 1% 3% 0% 3%; }\\n\\n.filters-toogle {\\n  display: flex;\\n  align-items: center;\\n  width: 50%;\\n  justify-content: flex-end; }\\n\\n.filters-day {\\n  display: flex;\\n  align-items: center;\\n  width: 50%; }\\n\\n.filters-day > * {\\n  margin: 1%; }\\n\\n.mat-button-toggle-label-content {\\n  padding: 0 4px !important; }\\n\\n@media (max-width: 900px) {\\n  .filters-toogle {\\n    display: flex;\\n    align-items: center;\\n    width: 100%;\\n    justify-content: center; }\\n  .filters-day {\\n    display: flex;\\n    align-items: center;\\n    width: 100%;\\n    justify-content: center;\\n    flex-wrap: wrap; } }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.description-panel {\\n  margin-right: 2%; }\\n\\n.desktop-tabs {\\n  padding: 0% 30% 0% 30%; }\\n\\n.desktop-grid {\\n  padding: 0% 20% 0% 20%; }\\n\\n.container {\\n  width: 100%; }\\n\\n.progressbar {\\n  counter-reset: step; }\\n\\n.progressbar .item {\\n  position: relative;\\n  float: left;\\n  width: 20.33%;\\n  list-style: none;\\n  text-align: center;\\n  font-size: smaller; }\\n\\n.progressbar .item:before {\\n  content: counter(step);\\n  counter-increment: step;\\n  display: block;\\n  width: 30px;\\n  height: 30px;\\n  margin: 0 auto 10px auto;\\n  border: 1px solid #ddd;\\n  border-radius: 50%;\\n  background-color: #fff;\\n  text-align: center;\\n  line-height: 30px; }\\n\\n.progressbar .item:after {\\n  content: '';\\n  position: absolute;\\n  /*width: 80%;*/\\n  width: 100%;\\n  height: 1px;\\n  top: 15px;\\n  /*left: -40%;*/\\n  left: -50%;\\n  z-index: -1;\\n  background-color: #ddd; }\\n\\n.progressbar .item:first-child:after {\\n  content: none; }\\n\\n.progressbar .item.active {\\n  color: green; }\\n\\n.progressbar .item.active:before {\\n  border-color: green; }\\n\\n.progressbar .item.active + .item:after {\\n  background-color: green; }\\n\\n.progressbar .item.active-verde {\\n  color: var(--ion-color-success); }\\n\\n.progressbar .item.active-verde:before {\\n  border-color: var(--ion-color-success); }\\n\\n.progressbar .item.active-verde + .item:after {\\n  background-color: var(--ion-color-success); }\\n\\n.progressbar .item.active-amarillo {\\n  color: var(--ion-color-warning); }\\n\\n.progressbar .item.active-amarillo:before {\\n  border-color: var(--ion-color-warning); }\\n\\n.progressbar .item.active-amarillo + .item:after {\\n  background-color: var(--ion-color-warning); }\\n\\n.progressbar .item.active-rojo {\\n  color: var(--ion-color-danger); }\\n\\n.progressbar .item.active-rojo:before {\\n  border-color: var(--ion-color-danger); }\\n\\n.progressbar .item.active-rojo + .item:after {\\n  background-color: var(--ion-color-danger); }\\n\\n.progressbar .item.active-azul {\\n  color: var(--ion-color-blue); }\\n\\n.progressbar .item.active-azul:before {\\n  border-color: var(--ion-color-blue); }\\n\\n.progressbar .item.active-azul + .item:after {\\n  background-color: var(--ion-color-blue); }\\n\\n/* ol.progtrckr {\\n    // margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n}\\n\\nol.progtrckr li {\\n    display: inline-block;\\n    text-align: center;\\n    line-height: 3em;\\n}\\n\\nol.progtrckr li.progtrckr-done {\\n    color: black;\\n    border-bottom: 4px solid yellowgreen;\\n}\\n\\nol.progtrckr li.progtrckr-todo {\\n    color: silver;\\n    border-bottom: 4px solid silver;\\n}\\n\\nol.progtrckr li:after {\\n    content: \\\"\\\\00a0\\\\00a0\\\";\\n}\\n\\nol.progtrckr li:before {\\n    position: relative;\\n    bottom: -2.5em;\\n    float: left;\\n    left: 50%;\\n    line-height: 1em;\\n}\\n\\nol.progtrckr li.progtrckr-done:before {\\n    content: \\\"\\\\2713\\\";\\n    color: white;\\n    background-color: yellowgreen;\\n    height: 1.2em;\\n    width: 1.2em;\\n    line-height: 1.2em;\\n    border: none;\\n    border-radius: 1.2em;\\n}\\n\\nol.progtrckr li.progtrckr-todo:before {\\n    content: \\\"\\\\039F\\\";\\n    color: silver;\\n    background-color: white;\\n    font-size: 1.5em;\\n    bottom: -1.6em;\\n}\\n */\\n\\n/* .progressbar {\\n    margin-bottom: 30px;\\n    margin-top: 10px;\\n    counter-reset: step;\\n    clear: both;\\n    list-style: none;\\n}\\n\\n.progressbar li {\\n    font-size: 12px;\\n    width: 24%;\\n    float: left;\\n    position: relative;\\n    text-align: center;\\n}\\n\\n.progressbar li:before {\\n    content: counter(step);\\n    counter-increment: step;\\n    width: 25px;\\n    line-height: 25px;\\n    display: block;\\n    font-size: 12px;\\n    color: transparent;\\n    border: 6px solid #ececec;\\n    background: #27ae60;\\n    border-radius: 19px;\\n    margin: 0 auto 4px;\\n}\\n\\n.progressbar li:after {\\n    content: '';\\n    width: 85%;\\n    height: 3px;\\n    background: #B9B9B9;\\n    position: absolute;\\n    left: -42%;\\n    top: 17px;\\n    z-index: 0;\\n}\\n\\n.progressbar li:first-child:after {\\n    content: none;\\n}\\n\\n.progress-payment li {\\n    width: 50%;\\n}\\n\\n.progressbar li.active:after,\\n.progressbar li.active:before {\\n    background: #27ae60;\\n    color: white;\\n}\\n\\n.progressbar li.complete:after {\\n    background: #27ae60;\\n}\\n\\n.progressbar li.half-complete:after {\\n    background: linear-gradient(to right, #27ae60 50%, #B9B9B9 50%);\\n    color: white;\\n} */\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n// import { fuseAnimations } from '../../../_config/_animations';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { AdministratorService } from '../../../services/administrator.service';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { OfertService } from '../../../services/ofert.service';\nimport { CreditService } from '../../../services/credit.service';\nimport { ScheduleService } from '../../../services/schedule.service';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { IOfert } from '../../../models/ofert.model';\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\nimport {\n  IStatusBuyerProperty,\n  IStatusBuyerPropertyGet,\n} from '../../../models/statusBuyerProperty.model';\nimport { Platform } from '@ionic/angular';\nimport {\n  FormatHoursFront,\n  DiffDays,\n  OpenGoogleMaps,\n} from '../../../_config/_helpers';\nimport { map, timeInterval } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-admin',\n  templateUrl: './main-admin.component.html',\n  styleUrls: ['./main-admin.component.scss'],\n  // animations: fuseAnimations,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MainAdminComponent implements OnInit {\n  segment = 'movementsSegment';\n  isLoad = false;\n  schedule: ISchedule[];\n  scheduleToShow: ISchedule[] = [];\n  isAll: boolean;\n  allData: {\n    data: {\n      oferts?: IOfert;\n      credits?: ICreditGet;\n      schedules?: ISchedule;\n      sbps?: IStatusBuyerPropertyGet;\n    };\n    type: string;\n    time: any;\n  }[] = [];\n  allDataBackUp: {\n    data: {\n      oferts?: IOfert;\n      credits?: ICreditGet;\n      schedules?: ISchedule;\n      sbps?: IStatusBuyerPropertyGet;\n    };\n    type: string;\n    time: any;\n  }[] = [];\n  isDesktop = false;\n  pageNumber = 1;\n  titleButton = 'Cargar más';\n  matButtonToggleGroup: 'ofert' | 'schedule' | 'credit' | 'sbp' | 'all' = 'all';\n  filterTime: 7 | 14 | 30;\n  isSpinner = false;\n  isCalendar: boolean;\n  startDate: Date;\n  endDate: Date;\n  isiOS: boolean;\n  constructor(\n    private userSessionService: UserSessionService,\n    private adminService: AdministratorService,\n    private ofertService: OfertService,\n    private creditService: CreditService,\n    private scheduleService: ScheduleService,\n    private sbpService: StatusBuyerPropertyService,\n    private platform: Platform,\n  ) {\n    this.isDesktop = platform.is('desktop');\n    this.isiOS = platform.is('ios');\n    console.log(this.isDesktop);\n    //  schedule de hoy y vincularlo a calendario general\n    this.getScheduleToday();\n\n    // historial de movimientos\n    // this.getOfert();\n    this.getAll(this.pageNumber);\n  }\n\n  ngOnInit() {}\n  getAll(pageNumber) {\n    this.adminService.getAdminEvents(pageNumber).subscribe(allData => {\n      if (allData.length > 0) {\n        if (pageNumber === 1) {\n          this.allData = <any>allData;\n          this.allDataBackUp = this.allData;\n        } else {\n          this.allData = <any>[...this.allData, ...allData];\n          this.allDataBackUp = this.allData;\n        }\n      } else {\n        this.titleButton = 'Son todos los Eventos';\n      }\n      this.isSpinner = false;\n      this.isLoad = true;\n    });\n  }\n  loadMore() {\n    this.matButtonToggleGroup = 'all';\n    this.filterTime = undefined;\n    this.startDate = undefined;\n    this.endDate = undefined;\n    this.isSpinner = true;\n    this.allData = this.allDataBackUp;\n    this.pageNumber++;\n    this.getAll(this.pageNumber);\n  }\n\n  // filters\n  getFiltersGeneral() {\n    this.allData = this.allDataBackUp;\n    this.getByType(this.matButtonToggleGroup);\n    this.getByTime(this.filterTime);\n  }\n  getByType(type: 'ofert' | 'schedule' | 'credit' | 'sbp' | 'all') {\n    if (type === 'all') {\n    } else {\n      const filter = this.allData.filter(data => data.type === type);\n      this.allData = filter;\n    }\n  }\n  getByTime(time: 7 | 14 | 30 | 'dateSpecific') {\n    if (time !== undefined && time !== 'dateSpecific') {\n      console.log(time);\n      this.isCalendar = false;\n      const filterDay = (timeData: Date) => {\n        const diff = DiffDays(timeData);\n        if (diff <= time) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n      const filter = this.allData.filter(data => filterDay(data.time));\n      this.allData = filter;\n      // console.log('time', filter);\n    } else if (time === 'dateSpecific') {\n      this.isCalendar = true;\n      if (this.startDate && this.endDate) {\n        this.allData = this.allData.filter(data =>\n          this.getRangeDate(data.time),\n        );\n      } else if (this.startDate && !this.endDate) {\n        this.allData = this.allData.filter(data =>\n          this.getRangeByStartDate(data.time),\n        );\n      } else if (!this.startDate && this.endDate) {\n        this.allData = this.allData.filter(data =>\n          this.getRangeByEndDate(data.time),\n        );\n      }\n    } else {\n      this.isCalendar = false;\n    }\n  }\n\n  formatDates(dateInput: Date): string {\n    const day: string = new Date(dateInput).getDate().toString();\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\n    const year: string = new Date(dateInput).getFullYear().toString();\n    const date = day + '/' + month + '/' + year;\n    return date;\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  segmentChanged(segment) {\n    this.segment = segment.detail.value;\n  }\n  getScheduleToday() {\n    const adminId = this.userSessionService.userSession.value.id;\n    this.scheduleService\n      .getSchedule()\n      .pipe(\n        map(s => s.filter(f => f.administrator && f.administrator === adminId)),\n      )\n      .subscribe(schedule => {\n        this.schedule = schedule;\n        const dateToday = new Date();\n        this.getByDay(\n          dateToday.getFullYear(),\n          dateToday.getMonth(),\n          dateToday.getDate(),\n        );\n      });\n  }\n  getByDay(year: number, month: number, day: number) {\n    const isFinded = this.schedule.filter(\n      s => s.day === day && s.month === month && s.year === year,\n    );\n    this.scheduleToShow = isFinded;\n  }\n  // _helpers\n  dateSelectStart(event) {\n    if (event) {\n      this.startDate = new Date(\n        event.value._i.year,\n        event.value._i.month,\n        event.value._i.date,\n      );\n      this.getFiltersGeneral();\n    }\n  }\n  dateSelectEnd(event) {\n    if (event) {\n      this.endDate = new Date(\n        event.value._i.year,\n        event.value._i.month,\n        event.value._i.date,\n      );\n      this.getFiltersGeneral();\n    }\n  }\n  getRangeDate(allData: Date): boolean {\n    const date = new Date(allData).getTime();\n    if (date >= this.startDate.getTime() && date <= this.endDate.getTime()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getRangeByStartDate(allData: Date): boolean {\n    const date = new Date(allData).getTime();\n    if (date >= this.startDate.getTime()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getRangeByEndDate(allData: Date): boolean {\n    const date = new Date(allData).getTime();\n    if (date <= this.endDate.getTime()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getAllSchedule() {\n    if (this.isAll === true) {\n      this.scheduleToShow = this.schedule;\n    } else {\n      const dateToday = new Date();\n      this.getByDay(\n        dateToday.getFullYear(),\n        dateToday.getMonth(),\n        dateToday.getDate(),\n      );\n    }\n  }\n  openMaps(schedule) {\n    OpenGoogleMaps(schedule);\n  }\n}\n\n/*   getOfert() {\n    this.ofertService.getOfert().subscribe(oferts => {\n      this.creditService.getCredit().subscribe(credits => {\n        this.scheduleService.getSchedule().subscribe(s => {\n          this.sbpService.getStatusBuyerProperty().subscribe(sbps => {\n            this.allData = <any>this.getMerge(oferts, credits, s, sbps);\n            this.allDataBackUp = this.allData;\n            this.isLoad = true;\n          });\n        });\n      });\n    });\n  } */\n/*  getMerge(\n    oferts: IOfert[],\n    credits: ICredit[],\n    schedules: ISchedule[],\n    sbps: IStatusBuyerProperty[],\n  ) {\n    const allData: {\n      data: {\n        oferts?: IOfert;\n        credits?: ICredit;\n        schedules?: ISchedule;\n        sbps?: IStatusBuyerProperty;\n      };\n      type: string;\n      time: any;\n    }[] = [];\n    oferts.forEach(ofert => {\n      allData.push({\n        type: 'ofert',\n        time: ofert.timestamp,\n        data: { oferts: ofert },\n      });\n    });\n    schedules.forEach(schedule => {\n      if (!schedule.administrator && !schedule.personal) {\n        allData.push({\n          type: 'schedule',\n          time: schedule.timestamp.toString(),\n          data: { schedules: schedule },\n        });\n      }\n    });\n    credits.forEach(credit => {\n      allData.push({\n        type: 'credit',\n        time: credit.timestamp.toString(),\n        data: { credits: credit },\n      });\n    });\n    sbps.forEach(sbp => {\n      allData.push({\n        type: 'sbp',\n        time: sbp.timestamp.toString(),\n        data: { sbps: sbp },\n      });\n    });\n    allData.sort((a, b) => {\n      // Turn your strings into dates, and then subtract them\n      // to get a value that is either negative, positive, or zero.\n      return <any>new Date(b.time) - <any>new Date(a.time);\n    });\n    console.log(allData);\n    return allData;\n  } */\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Simulador\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Simulador'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isSimulate; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <h1>Propiedades Sugeridas</h1>\\n      <ion-label>Se muestran las coincidencias con tu perfil</ion-label>\\n      <ion-list lines=\\\"full\\\">\\n        <ion-item lines=\\\"inset\\\" *ngFor=\\\"let property of propertiesMatch\\\">\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'departamento'\\\" style=\\\"color: #F5811E\\\" name=\\\"business\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'casa'\\\" style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label text-wrap>\\n            <h2>{{property.name}}</h2>\\n            <p>{{property.zone}}</p>\\n            <ion-chip *ngIf=\\\"property.percentage > 60\\\" class=\\\"high\\\">\\n              <ion-label>Alta coincidencia</ion-label>\\n            </ion-chip>\\n            <ion-chip *ngIf=\\\"property.percentage <= 60 && property.percentage > 30 \\\" class=\\\"medium\\\">\\n              <ion-label>Media coincidencia</ion-label>\\n            </ion-chip>\\n            <ion-chip *ngIf=\\\"property.percentage <= 30\\\" class=\\\"low\\\">\\n              <ion-label>Baja coincidencia</ion-label>\\n            </ion-chip>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </ng-template>\\n    <ng-template #elseTemplate>\\n      <h1>Simulador de Búsqueda Match</h1>\\n      <p>Llene los campos para encontrar propiedades de acuerdo al perfil</p>\\n\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <div class=\\\"flex-container\\\">\\n              <!-- isRent  -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Venta o Renta</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.isRent\\\" #isRent=\\\"ngModel\\\" id=\\\"isRent\\\" name=\\\"isRent\\\" required>\\n                  <mat-option [value]=true>\\n                    Renta\\n                  </mat-option>\\n                  <mat-option [value]=false>\\n                    Venta\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"isRent.dirty || isRent.touched\\\">Selecciona una</mat-error>\\n              </mat-form-field>\\n              <!-- typeOfProperty -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Tipo de Vivienda</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.typeOfProperty\\\" #typeOfProperty=\\\"ngModel\\\" id=\\\"typeOfProperty\\\" name=\\\"typeOfProperty\\\"\\n                  required>\\n                  <mat-option value=\\\"casa\\\">Casa\\n                  </mat-option>\\n                  <mat-option value=\\\"departamento\\\">Departamento\\n                  </mat-option>\\n                  <mat-option value=\\\"nave industrial\\\">Nave Industrial\\n                  </mat-option>\\n                  <mat-option value=\\\"terreno\\\">Terreno\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"typeOfProperty.dirty || typeOfProperty.touched\\\">Anotar Correo</mat-error>\\n              </mat-form-field>\\n              <!-- space-->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Espacio</mat-label>\\n                <input matInput type=\\\"number\\\" [(ngModel)]=\\\"property.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"\\n                  required>\\n                <mat-error *ngIf=\\\"space.dirty || space.touched\\\">Anotar Espacio</mat-error>\\n              </mat-form-field>\\n              <!-- Fecha a comprar -->\\n              <!-- Fecha -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Fecha para ser adquirido</mat-label>\\n                <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\"\\n                  placeholder=\\\"Selecciona Fecha\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n              <!-- zone -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Zona</mat-label>\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"property.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\"\\n                  required>\\n                <mat-error *ngIf=\\\"zone.dirty || zone.touched\\\">Anotar Zona</mat-error>\\n              </mat-form-field>\\n              <!-- minPrice -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Precio Minimo</mat-label>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\"\\n                  name=\\\"minPrice\\\" required>\\n                <mat-error *ngIf=\\\"minPrice.dirty || minPrice.touched\\\">Anotar Numero</mat-error>\\n              </mat-form-field>\\n              <!-- max -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Precio Maximo</mat-label>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\"\\n                  name=\\\"maxPrice\\\" required>\\n                <mat-error *ngIf=\\\"maxPrice.dirty || maxPrice.touched\\\">Anotar Numero</mat-error>\\n              </mat-form-field>\\n              <!-- numRooms -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Numero de Cuartos</mat-label>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numRooms\\\" #numRooms=\\\"ngModel\\\" id=\\\"numRooms\\\"\\n                  name=\\\"numRooms\\\" required>\\n                <mat-error *ngIf=\\\"numRooms.dirty || numRooms.touched\\\">Anotar Numero</mat-error>\\n              </mat-form-field>\\n              <!-- numBathrooms -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Numero de Baños</mat-label>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\"\\n                  id=\\\"numBathrooms\\\" name=\\\"numBathrooms\\\" required>\\n                <mat-error *ngIf=\\\"numBathrooms.dirty || numBathrooms.touched\\\">Anotar Numero</mat-error>\\n              </mat-form-field>\\n              <!-- numCars -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Lugares Estacionamiento</mat-label>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numCars\\\" #numCars=\\\"ngModel\\\" id=\\\"numCars\\\"\\n                  name=\\\"numCars\\\" required>\\n                <mat-error *ngIf=\\\"numCars.dirty || numCars.touched\\\">Anotar Numero</mat-error>\\n              </mat-form-field>\\n              <!-- isOld -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Estado</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.isOld\\\" #isOld=\\\"ngModel\\\" id=\\\"isOld\\\" name=\\\"isOld\\\" required>\\n                  <mat-option [value]=false>Nuevo\\n                  </mat-option>\\n                  <mat-option [value]=true>Usado\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"isOld.dirty || isOld.touched\\\">Selecciona uno</mat-error>\\n              </mat-form-field>\\n              <!-- isClose -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Tipo Fraccionamiento</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.isClose\\\" #isClose=\\\"ngModel\\\" id=\\\"isClose\\\" name=\\\"isClose\\\" required>\\n                  <mat-option [value]=false>Abierto\\n                  </mat-option>\\n                  <mat-option [value]=true>Cerrado\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"isClose.dirty || isClose.touched\\\">Selecciona uno</mat-error>\\n              </mat-form-field>\\n              <!-- hasGarden -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Con Jardin</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.hasGarden\\\" #hasGarden=\\\"ngModel\\\" id=\\\"hasGarden\\\" name=\\\"hasGarden\\\"\\n                  required>\\n                  <mat-option [value]=true>Sí\\n                  </mat-option>\\n                  <mat-option [value]=false>No\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"hasGarden.dirty || hasGarden.touched\\\">Selecciona uno</mat-error>\\n              </mat-form-field>\\n              <!-- isLowLevel -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Planta Baja</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.isLowLevel\\\" #isLowLevel=\\\"ngModel\\\" id=\\\"isLowLevel\\\" name=\\\"isLowLevel\\\"\\n                  required>\\n                  <mat-option [value]=true>Sí\\n                  </mat-option>\\n                  <mat-option [value]=false>No\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"isLowLevel.dirty || isLowLevel.touched\\\">Selecciona uno</mat-error>\\n              </mat-form-field>\\n              <!-- hasElevator -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Con Elevador</mat-label>\\n                <mat-select [(ngModel)]=\\\"property.hasElevator\\\" #hasElevator=\\\"ngModel\\\" id=\\\"hasElevator\\\" name=\\\"hasElevator\\\"\\n                  required>\\n                  <mat-option [value]=true>Sí\\n                  </mat-option>\\n                  <mat-option [value]=false>No\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"hasElevator.dirty || hasElevator.touched\\\">Selecciona uno</mat-error>\\n              </mat-form-field>\\n              <!-- allServices -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Todos los Servicios </mat-label>\\n                <mat-select [(ngModel)]=\\\"property.allServices\\\" #allServices=\\\"ngModel\\\" id=\\\"allServices\\\" name=\\\"allServices\\\"\\n                  required>\\n                  <mat-option [value]=true>Sí\\n                  </mat-option>\\n                  <mat-option [value]=false>No\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"allServices.dirty || allServices.touched\\\">Selecciona uno</mat-error>\\n              </mat-form-field>\\n              <!-- wayToBuy FOVISSTE, IMSS, contado, PEMEX, Infonavit, aliados, otros -->\\n\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Forma de Venta/Renta </mat-label>\\n                <mat-select [(ngModel)]=\\\"property.wayToBuy\\\" #wayToBuy=\\\"ngModel\\\" id=\\\"wayToBuy\\\" name=\\\"wayToBuy\\\" required\\n                  placeholder=\\\"Selecciona\\\">\\n                  <mat-option value=\\\"FOVISSTE\\\">FOVISSTE</mat-option>\\n                  <mat-option value=\\\"IMSS\\\">IMSS</mat-option>\\n                  <mat-option value=\\\"contado\\\">contado</mat-option>\\n                  <mat-option value=\\\"PEMEX\\\">Pemex</mat-option>\\n                  <mat-option value=\\\"infonavit\\\">Infonavit</mat-option>\\n                  <mat-option value=\\\"infonavit\\\">Aliados</mat-option>\\n                  <mat-option value=\\\"otros\\\">Otros</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <!-- tag -->\\n            <app-form-str-list nameTitle=\\\"Lista Etiquetas\\\" nameItems=\\\"Etiqueta\\\" [arrStr]=\\\"property.tag\\\" (arrList)=\\\"property.tag = $event\\\">\\n            </app-form-str-list>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin: 3%\\\">\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                  <ion-button shape=\\\"round\\\" style=\\\"margin: 3%\\\" id=\\\"submitUser\\\" color=\\\"primary\\\" (click)=\\\"startSimulate()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Simular Búsqueda</ion-button>\\n                </span>\\n              </div>\\n\\n\\n            </mat-card-actions>\\n\\n          </mat-card>\\n        </form>\\n\\n      </div>\\n    </ng-template>\\n\\n\\n  </ion-grid>\\n\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button *ngIf=\\\"isSimulate\\\" color=\\\"secondary\\\" (click)=\\\"isSimulate = false\\\">\\n    <ion-icon name=\\\"refresh\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".flex-container {\\n  /* display: flex;\\n    flex-direction: column;\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../models/property.model';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { PropertyService } from '../../../services/property.service';\nimport { CalcPercentage } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-simulate-search-admin',\n  templateUrl: './simulate-search-admin.component.html',\n  styleUrls: ['./simulate-search-admin.component.scss'],\n})\nexport class SimulateSearchAdminComponent implements OnInit {\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  property: IProperty = {};\n  words: string;\n  files: string;\n  daySelect: any;\n  monthSelect: any;\n  yearSelect: any;\n  isSimulate = false;\n  propertiesMatch: IProperty[] = [];\n  percentage = 10;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private propertyService: PropertyService,\n  ) {\n    const arrStr = [''];\n    this.property.tag = arrStr;\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.propertyService.getPropertyById(params['id']).subscribe(prop => {\n          console.log(prop);\n          this.property = prop;\n          this.words = '';\n          this.property.tag.forEach((word, i) => {\n            if (this.property.tag.length === i + 1) {\n              this.words += word;\n            } else {\n              this.words += word + ',';\n            }\n          });\n          this.files = '';\n          this.property.files.forEach((f, i) => {\n            if (this.property.files.length === i + 1) {\n              this.files += f;\n            } else {\n              this.files += f + ',';\n            }\n          });\n          const date = this.property.dateToBuy.split('/');\n          this.daySelect = +date[0];\n          this.monthSelect = +date[1];\n          this.yearSelect = +date[2];\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n      }\n    });\n  }\n  startSimulate() {\n    this.isSimulate = false;\n    console.log(this.property);\n    this.property.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\n      this.yearSelect\n    }`;\n    console.log(this.property);\n    this.propertyService\n      .getPropertySimulate(this.property, this.percentage)\n      .subscribe(properties => {\n        this.propertiesMatch = CalcPercentage(\n          this.property,\n          properties,\n          this.percentage,\n        );\n        this.isSimulate = true;\n      });\n  }\n  reset() {\n    this.isSimulate = false;\n  }\n  dateSelect(event) {\n    if (event) {\n      this.daySelect = event.value._i.date;\n      this.monthSelect = event.value._i.month;\n      this.yearSelect = event.value._i.year;\n    }\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"isNew ? 'Nuevo Asesor': 'Editar Asesor'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid fixed>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n            <!-- name -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Nombre</mat-label>\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"adviser.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\n            </mat-form-field>\\n            <!-- lastname -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Apellido</mat-label>\\n              <input matInput [(ngModel)]=\\\"adviser.lastName\\\" #lastName=\\\"ngModel\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" required>\\n              <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\">Anotar Apellido</mat-error>\\n            </mat-form-field>\\n            <!-- email -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Correo</mat-label>\\n              <input matInput [(ngModel)]=\\\"adviser.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\n            </mat-form-field>\\n            <!-- hora inicio -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Hora de Inicio (24Hrs)</mat-label>\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"adviser.hourStart\\\" #hourStart=\\\"ngModel\\\" id=\\\"hourStart\\\" name=\\\"hourStart\\\"\\n                required>\\n              <mat-error *ngIf=\\\"hourStart.dirty || hourStart.touched\\\">Anotar Horas</mat-error>\\n            </mat-form-field>\\n            <!-- hora fin -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Hora Fin (24Hrs)</mat-label>\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"adviser.hourEnd\\\" #hourEnd=\\\"ngModel\\\" id=\\\"hourEnd\\\" name=\\\"hourEnd\\\"\\n                required>\\n              <mat-error *ngIf=\\\"hourEnd.dirty || hourEnd.touched\\\">Anotar Horas</mat-error>\\n            </mat-form-field>\\n            <!-- city -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Ciudad</mat-label>\\n              <mat-select [(ngModel)]=\\\"adviser.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\n                <mat-option value=\\\"puebla\\\">\\n                  Puebla\\n                </mat-option>\\n                <mat-option value=\\\"mexico\\\">\\n                  México\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\n            </mat-form-field>\\n            <!-- pass -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Contraseña</mat-label>\\n              <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"adviser.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\"\\n                name=\\\"password\\\" required>\\n              <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n            </mat-form-field>\\n            <!-- buyers -->\\n            <div *ngIf=\\\"user.type !== 'adviser'\\\" class=\\\"flex-container2\\\">\\n              <div *ngIf=\\\"adviser.buyer && adviser.buyer.length > 0\\\">\\n                <mat-list role=\\\"list\\\">\\n                  <h3 mat-subheader>Clientes del Asesor</h3>\\n                  <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let buyer of adviser.buyer\\\">\\n                    {{buyer.name}}\\n                    <!-- <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"schedule.adviser=undefined\\\"></button> -->\\n                    <button mat-icon-button (click)=\\\"deleteBuyer(buyer._id)\\\">\\n                      <mat-icon color=\\\"warn\\\">clear</mat-icon>\\n                    </button>\\n                  </mat-list-item>\\n                  <mat-divider style=\\\"position: relative;\\\"></mat-divider>\\n                </mat-list>\\n              </div>\\n              <!--    <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Asignar Clientes</mat-label>\\n                <mat-select [(ngModel)]=\\\"buyerInput\\\" [value]=\\\"buyerInput\\\" #b=\\\"ngModel\\\" id=\\\"b\\\" name=\\\"b\\\" multiple>\\n                  <mat-option *ngFor=\\\"let buyer of buyers$ | async\\\" [value]=\\\"buyer\\\">\\n                    {{buyer.name}} {{buyer.fatherLastName}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field> -->\\n              <mat-list>\\n                <h3 mat-subheader>{{buyerInput.length === 0 ? 'Asignar Nuevos clientes' : 'Clientes Nuevos\\n                  Seleccionados'}}\\n                </h3>\\n                <mat-list-item *ngFor=\\\"let buyer of buyerInput; let i=index\\\">{{ buyer.name }} {{ buyer.fatherLastName\\n                  }}\\n                  <button mat-icon-button (click)=\\\"buyerInput.splice(i, 1)\\\">\\n                    <mat-icon color=\\\"warn\\\">clear</mat-icon>\\n                  </button>\\n                </mat-list-item>\\n              </mat-list>\\n              <div style=\\\"margin-bottom: 1%;\\\">\\n                <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"searchBuyers()\\\">\\n                  <ion-spinner *ngIf=\\\"isSpinner\\\" color=\\\"secondary\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                  Buscar Clientes\\n                </button>\\n              </div>\\n\\n            </div>\\n\\n          </div>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editCustomer()\\\">Editar</button>\\n              </span>\\n            </div>\\n\\n\\n          </mat-card-actions>\\n\\n        </mat-card>\\n      </form>\\n\\n    </div>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { NavComponent } from '@ionic/core';\nimport { NavController } from '@ionic/angular';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SearchSelectComponent,\n  SearchDialog,\n} from '../../general/search-select/search-select.component';\n\n@Component({\n  selector: 'app-new-edit-adviser',\n  templateUrl: './new-edit-adviser.component.html',\n  styleUrls: ['./new-edit-adviser.component.scss'],\n})\nexport class NewEditAdviserComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  adviser: IAdviser = {};\n  buyers$: Observable<IBuyer[]>;\n  buyerSelect$: Observable<IBuyer>;\n  buyerInput: IBuyer[] = [];\n  user: IUserSession;\n  isSpinner = false;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private adviserService: AdviserService,\n    private buyerService: BuyerService,\n    private navCtr: NavController,\n    private userSession: UserSessionService,\n    private oneSignalService: OnesignalService,\n    public dialog: MatDialog,\n  ) {\n    this.user = userSession.userSession.value;\n  }\n\n  ngOnInit() {\n    this.getBuyers();\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.adviserService.getAdviserById(params['id']).subscribe(adv => {\n          console.log(adv);\n          this.adviser = adv;\n        });\n        this.isNew = false;\n      } else if (this.user.type === 'adviser') {\n        this.adviserService.getAdviserById(this.user.id).subscribe(adv => {\n          console.log(adv);\n          this.adviser = adv;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n      }\n    });\n  }\n  getBuyers() {\n    this.buyers$ = this.buyerService.getBuyerAll();\n  }\n  newCustomer() {\n    this.adviser.buyer = <any>this.buyerInput;\n    this.adviserService.newAdviser(this.adviser).subscribe(adv => {\n      this.buyerInput.forEach(buyer => {\n        const indexFinded = buyer.adviser.findIndex(ad => ad._id === adv._id);\n        if (indexFinded === -1) {\n          const arr = buyer.adviser.map(ad => ad._id);\n          arr.push(adv._id);\n          buyer.adviser = <any>arr;\n          // noti\n          this.notification(\n            'Nuevo Cliente Asignado',\n            `Se le ha asignado el cliente: ${buyer.name}`,\n            'verde',\n            'buyer',\n            undefined,\n            [adv._id],\n          );\n          this.buyerService.putBuyer(buyer).subscribe(() => {});\n        }\n      });\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Nuevo Asesor Agregado' },\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-adviser-admin'], toast));\n    });\n  }\n  deleteBuyer(buyerId) {\n    console.log(buyerId);\n    // buyer\n    this.buyerService.getBuyerById(buyerId).subscribe(b => {\n      const indexAdvBuyer = b.adviser.findIndex(\n        ab => ab._id === this.adviser._id,\n      );\n      console.log(indexAdvBuyer);\n      b.adviser.splice(indexAdvBuyer, 1);\n      console.log(b);\n      this.buyerService.putBuyer(b).subscribe(() => {\n        // adviser\n        this.adviserService.getAdviserById(this.adviser._id).subscribe(adv => {\n          const indexBA = adv.buyer.findIndex(bu => bu._id === buyerId);\n          console.log(indexBA);\n          adv.buyer.splice(indexBA, 1);\n          this.adviserService.putAdviser(adv).subscribe(() => {\n            this.adviser.buyer = adv.buyer;\n            console.log(this.adviser);\n          });\n        });\n      });\n    });\n  }\n  editCustomer() {\n    if (this.buyerInput && this.buyerInput.length > 0) {\n      this.buyerInput.forEach(b => {\n        const index = this.adviser.buyer.findIndex(ab => ab._id === b._id);\n        if (index === -1) {\n          this.adviser.buyer.push(<any>b._id);\n        }\n        this.newAdviserToBuyer(b, this.adviser._id);\n      });\n    }\n\n    console.log(this.adviser);\n    this.adviserService.putAdviser(this.adviser).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Asesor Editado' },\n      };\n      /**\n       * Es para recargar el componente previo\n       */\n      if (this.user.type === 'adviser') {\n        this.router.navigate(['list-buyer-admin'], toast);\n      } else {\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-adviser-admin'], toast));\n      }\n    });\n  }\n  newAdviserToBuyer(buyer: IBuyer, adviserId: string) {\n    const indexFinded = buyer.adviser.findIndex(adv => adv._id === adviserId);\n    if (indexFinded === -1) {\n      const arr = buyer.adviser.map(adv => adv._id);\n      arr.push(adviserId);\n      buyer.adviser = <any>arr;\n      // noti\n      this.notification(\n        'Nuevo Cliente Asignado',\n        `Se le ha asignado el cliente: ${buyer.name}`,\n        'verde',\n        'buyer',\n        undefined,\n        [adviserId],\n      );\n      this.buyerService.putBuyer(buyer).subscribe(() => console.log('act'));\n    }\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  // dialog\n  public async searchBuyers() {\n    this.isSpinner = true;\n    const buyers = await this.buyerService.getBuyerAll().toPromise();\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n        minWidth: '20%', */\n      data: <SearchDialog>{\n        header:\n          'Buscar clientes para asignar un asesor, seleccione uno o varios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: true,\n        filtersDetail: true,\n        itemsIdDisable:\n          this.adviser.buyer !== undefined\n            ? [\n                ...this.buyerInput.map(b => b._id),\n                ...this.adviser.buyer.map(b => b._id),\n              ]\n            : this.buyerInput.map(b => b._id),\n        rows: buyers,\n        typeFilter: 'filter-buyer',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Apellido',\n            prop: 'fatherLastName',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n          {\n            name: 'Estado',\n            prop: 'statusBuyerProperty',\n            type: 'statusBuyerProperty',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      console.log(res);\n      if (res.options) {\n        this.buyerInput = [...res.arrSelect, ...this.buyerInput];\n        console.log(this.buyerInput);\n      }\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Obra\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'back'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Obra'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <h1 *ngIf=\\\"isNew\\\">Nueva Obra</h1>\\n    <h1 *ngIf=\\\"!isNew\\\">Editar Obra</h1>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n            <!-- makers -->\\n            <div>\\n              <mat-form-field style=\\\"width: 100%\\\" appearance=\\\"outline\\\">\\n                <mat-label>Constructores de la obra</mat-label>\\n                <mat-select\\n                  [(value)]=\\\"maker\\\"\\n                  [(ngModel)]=\\\"maker\\\"\\n                  #property=\\\"ngModel\\\"\\n                  id=\\\"property\\\"\\n                  name=\\\"property\\\"\\n                  multiple\\n                >\\n                  <mat-option\\n                    [disabled]=\\\"prop.build\\\"\\n                    *ngFor=\\\"let prop of makers\\\"\\n                    [value]=\\\"prop._id\\\"\\n                  >\\n                    {{ prop.name }}\\n                    <small *ngIf=\\\"prop.build\\\"\\n                      >Pertenece a: {{ prop.build.name }}\\n                    </small>\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"property.dirty || property.touched\\\"\\n                  >Selcciona</mat-error\\n                >\\n              </mat-form-field>\\n              <div>\\n                <button\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  (click)=\\\"searchBuyers()\\\"\\n                >\\n                  <ion-spinner\\n                    *ngIf=\\\"isSpinner\\\"\\n                    style=\\\"color: white\\\"\\n                    name=\\\"bubbles\\\"\\n                  ></ion-spinner>\\n                  Buscar Constructores\\n                </button>\\n              </div>\\n            </div>\\n\\n            <!-- name -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Nombre</mat-label>\\n              <input\\n                matInput\\n                placeholder=\\\"\\\"\\n                [(ngModel)]=\\\"build.name\\\"\\n                #name=\\\"ngModel\\\"\\n                id=\\\"name\\\"\\n                name=\\\"name\\\"\\n                required\\n              />\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\"\\n                >Anotar Nombre</mat-error\\n              >\\n            </mat-form-field>\\n            <!-- city -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Ciudad</mat-label>\\n              <mat-select\\n                [(ngModel)]=\\\"build.city\\\"\\n                #city=\\\"ngModel\\\"\\n                id=\\\"city\\\"\\n                name=\\\"city\\\"\\n                required\\n              >\\n                <mat-option value=\\\"puebla\\\"> Puebla </mat-option>\\n                <mat-option value=\\\"mexico\\\"> México </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\"\\n                >Anotar Ciudad</mat-error\\n              >\\n            </mat-form-field>\\n            <!-- notas -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Notas</mat-label>\\n              <textarea\\n                matInput\\n                [(ngModel)]=\\\"build.notes\\\"\\n                #notes=\\\"ngModel\\\"\\n                id=\\\"notes\\\"\\n                name=\\\"notes\\\"\\n              ></textarea>\\n            </mat-form-field>\\n          </div>\\n          <!-- faeses List -->\\n          <app-form-str-list\\n            [forms]=\\\"forms\\\"\\n            nameTitle=\\\"Fases de la Obra\\\"\\n            nameItems=\\\"Fase\\\"\\n            nameItems2=\\\"Notas\\\"\\n            (arrOutput)=\\\"getPhases($event)\\\"\\n            [arrStr]=\\\"arrStr\\\"\\n            [arrStr2]=\\\"arrStr2\\\"\\n            [arrDate]=\\\"arrDate\\\"\\n            [arrDate2]=\\\"arrDate2\\\"\\n            [numOfItems]=\\\"isNew ? 2 : arrStr.length\\\"\\n            [isDesktop]=\\\"isDesktop\\\"\\n            [isRequired]=\\\"true\\\"\\n          ></app-form-str-list>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span\\n                [matTooltip]=\\\"errorToShow\\\"\\n                [matTooltipClass]=\\\"'tooltip-size'\\\"\\n                (mouseenter)=\\\"getPopMessage($event)\\\"\\n              >\\n                <button\\n                  *ngIf=\\\"isNew\\\"\\n                  id=\\\"submitUser\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  (click)=\\\"newCustomer()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid || !isPhasesValid\\\"\\n                >\\n                  Crear\\n                </button>\\n                <button\\n                  *ngIf=\\\"!isNew\\\"\\n                  id=\\\"submitUser\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid || !isPhasesValid\\\"\\n                  (click)=\\\"editCustomer()\\\"\\n                >\\n                  Editar\\n                </button>\\n              </span>\\n            </div>\\n          </mat-card-actions>\\n        </mat-card>\\n      </form>\\n    </div>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \".flex-container {\\n  /* display: flex;\\n    flex-direction: column;\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IBuild } from '../../../models/build.model';\nimport { IMaker } from '../../../models/maker.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { NavController, Platform } from '@ionic/angular';\nimport { PropertyService } from '../../../services/property.service';\nimport { BuildService } from '../../../services/build.service';\nimport { MakerService } from '../../../services/maker.service';\nimport { FormStr } from '../../general/form-str-list/form-str-list.component';\nimport { INotification } from '../../../models/notification.model';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { FormatDatesFront } from '../../../_config/_helpers';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SearchSelectComponent,\n  SearchDialog,\n} from '../../general/search-select/search-select.component';\nimport { map } from 'rxjs/internal/operators/map';\n\n@Component({\n  selector: 'app-new-edit-build',\n  templateUrl: './new-edit-build.component.html',\n  styleUrls: ['./new-edit-build.component.scss'],\n})\nexport class NewEditBuildComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  build: IBuild = {};\n  makers: IMaker[];\n  maker;\n  forms = {\n    arrStr: true,\n    arrStr2: true,\n    arrDate: true,\n    arrDate2: true,\n  };\n  arrStr = [];\n  arrStr2 = [];\n  arrDate = [];\n  arrDate2 = [];\n  isDesktop: any;\n  isPhasesValid = false;\n  isSpinner: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private buildService: BuildService,\n    private makerService: MakerService,\n    private platform: Platform,\n    private userSessionService: UserSessionService,\n    private oneSignalService: OnesignalService,\n    public dialog: MatDialog,\n  ) {\n    this.isDesktop = platform.is('desktop');\n  }\n\n  ngOnInit() {\n    this.getMakers();\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.buildService.getBuildById(params['id']).subscribe(build => {\n          this.maker = build.maker.map(m => m._id);\n          this.build = build;\n          console.log(build);\n          // generar arr inputs\n          // arrStr\n          this.arrStr = build.timeLine.map(tl => tl.namePhase);\n          this.arrStr2 = build.timeLine.map(tl => tl.notes);\n          this.arrDate = build.timeLine.map(\n            tl => new Date(tl.yearToStart, tl.monthToStart, tl.dayToStart),\n          );\n          this.arrDate2 = build.timeLine.map(\n            tl => new Date(tl.yearToEnd, tl.monthToEnd, tl.dayToEnd),\n          );\n        });\n        this.isNew = false;\n      } else {\n        this.build.timeLine = [{}];\n        this.isNew = true;\n      }\n    });\n  }\n  getMakers() {\n    this.makerService.getMakerAll().subscribe(m => {\n      console.log(m);\n      this.makers = m;\n    });\n  }\n  getPhases(phases: FormStr) {\n    this.isPhasesValid = phases.isValid;\n    phases.arrStr.forEach((str, i) => {\n      const phaseObj = {\n        namePhase: str,\n        notes: phases.arrStr2[i],\n        dayToStart: phases.arrDate[i] ? phases.arrDate[i].getDate() : undefined,\n        monthToStart: phases.arrDate[i]\n          ? phases.arrDate[i].getMonth()\n          : undefined,\n        yearToStart: phases.arrDate[i]\n          ? phases.arrDate[i].getFullYear()\n          : undefined,\n        dayToEnd: phases.arrDate2[i] ? phases.arrDate2[i].getDate() : undefined,\n        monthToEnd: phases.arrDate2[i]\n          ? phases.arrDate2[i].getMonth()\n          : undefined,\n        yearToEnd: phases.arrDate2[i]\n          ? phases.arrDate2[i].getFullYear()\n          : undefined,\n      };\n      if (this.build && this.build.timeLine && this.build.timeLine[i]) {\n        this.build.timeLine[i] = phaseObj;\n      } else {\n        this.build.timeLine.push(phaseObj);\n      }\n    });\n  }\n  newCustomer() {\n    this.build.maker = this.maker;\n    this.buildService.newBuild(this.build).subscribe(b => {\n      this.notification(\n        'Nueva Obra',\n        `Se le ha asignado: ${this.build.name}`,\n        'verde',\n        'build',\n        undefined,\n        <any>b.maker,\n      );\n      b.timeLine.forEach(tm => {\n        this.notificationBySchedule(tm, b.name, b);\n      });\n\n      b.maker.forEach(m => {\n        console.log(m);\n        const maker = { _id: m, build: b };\n        this.makerService.putMaker(<any>maker).subscribe(() => {});\n      });\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Nuevo Obra Agregada' },\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-build-admin'], toast));\n    });\n  }\n  editCustomer() {\n    this.build.notificationOneSignal = this.deleteOneSignal(this.build);\n    this.setMakers();\n    // this.build.maker = this.maker;\n    this.buildService.putBuild(this.build).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Obra Editada' },\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-build-admin'], toast));\n    });\n  }\n  setMakers() {\n    // noti\n    this.notification(\n      'Asignación de Obra',\n      `Se le ha asignado: ${this.build.name}`,\n      'verde',\n      'build',\n      undefined,\n      <any>this.maker,\n    );\n    this.maker.forEach(element => {\n      const indexFinded = this.build.maker.findIndex(m => m._id === element);\n      if (indexFinded === -1) {\n        this.build.maker.push(element);\n        const maker = { _id: element, build: this.build };\n        this.makerService.putMaker(maker).subscribe(() => console.log('add'));\n      }\n    });\n  }\n  // dialog\n  public async searchBuyers() {\n    this.isSpinner = true;\n    const makers: any = await this.makerService\n      .getMakerAll()\n      .pipe(\n        map(arr =>\n          arr.map((maker: any) => {\n            if (maker.build) {\n              maker.buildName = <any>maker.build.name;\n            } else {\n              maker.buildName = <any>'';\n            }\n            return maker;\n          }),\n        ),\n      )\n      .toPromise();\n    console.log(makers);\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n        minWidth: '20%', */\n      data: <SearchDialog>{\n        header:\n          'Buscar constructores para asignarle una obra, seleccione uno o varios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: true,\n        filtersDetail: false,\n        itemsIdDisable: makers.filter(m => m.buildName !== '').map(m => m._id),\n        rows: makers,\n        typeFilter: 'filter-makers',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Apellido',\n            prop: 'lastName',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n          {\n            name: 'Obra',\n            prop: 'buildName',\n            type: 'normal',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      if (res.options) {\n        this.maker = res.arrSelect.map(r => r._id);\n      }\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  private notificationBySchedule(timeLine, buildName, build: IBuild) {\n    const date = this.getDate(\n      timeLine.dayToEnd,\n      timeLine.monthToEnd,\n      timeLine.yearToEnd,\n    );\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de Fase',\n        `La fase \"${\n          timeLine.namePhase\n        }\" de la obra ${buildName} llegó a la fecha límite: ${date}`,\n        new Date(\n          timeLine.yearToEnd,\n          timeLine.monthToEnd,\n          timeLine.dayToEnd,\n          10,\n          40,\n        ),\n        ['office', 'administrator'],\n        build.maker === undefined ? undefined : build.maker.map(m => m._id),\n      )\n      .subscribe(data => {\n        if (!build.notificationOneSignal) {\n          build.notificationOneSignal = [];\n        }\n        build.notificationOneSignal.push(data.id);\n        this.buildService.putBuild(build).subscribe();\n      });\n  }\n  private deleteOneSignal(build: IBuild) {\n    /* const schedule = await this.scheduleService\n      .getScheduleById(scheduleId)\n      .toPromise(); */\n    if (build.notificationOneSignal && build.notificationOneSignal.length > 0) {\n      build.notificationOneSignal.forEach((idN, i) => {\n        this.oneSignalService.deleteOneSignalSchedule(idN).subscribe();\n      });\n      return (build.notificationOneSignal = []);\n    }\n  }\n  getDate(day, month, year) {\n    return FormatDatesFront(new Date(year, month, day));\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar translucent color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Calendario\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [buttonNotification]=\\\"'notifications'\\\" [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Calendario'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"backOne()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center\\\">{{month[monthNumber]}} {{year}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"getEvents()\\\" slot=\\\"end\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"clipboard\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"fowardOne()\\\" slot=\\\"end\\\">\\n        <ion-icon mode=\\\"ios\\\" slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid fixed style=\\\"height: 100%;\\\">\\n    <span *ngIf=\\\"isLoad\\\">\\n      <app-general-calendar [year]=\\\"year\\\" [month]=\\\"monthNumber\\\" [schedules]=\\\"schedule\\\" (calendarSelect)=\\\"calendarSelect($event)\\\"\\n        (alertOfToday)=\\\"toastPresent()\\\"></app-general-calendar>\\n    </span>\\n\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \"/* .cal_calendar {\\n    border: 1px solid black;\\n    padding: 1px;\\n    background-color: #4594ff;\\n    width: 300px;\\n    margin: auto;\\n    height: 246px;\\n    background-image: url('http://www.webestools.com/ftp/ybouane/scripts_tutorials/javascript/calendar/bak-300-250.gif');\\n}\\n\\n.cal_calendar th {\\n    border: 1px solid black;\\n    background-color: #ffffff;\\n    width: 36px;\\n}\\n\\n.cal_calendar td {\\n    border: 1px solid black;\\n    background-color: #ffffff;\\n    text-align: center;\\n    width: 36px;\\n    height: 36px;\\n}\\n\\n.cal_today {\\n    color: #ff0000;\\n    font-weight: bold;\\n}\\n\\n.cal_days_bef_aft {\\n    color: #5a779e;\\n} */\\n/* .currentmonth {\\n    color: blue;\\n    text-align: center;\\n}\\n\\n.currentday {\\n    border: 1px solid black;\\n    color: #00FF00;\\n    text-align: center;\\n}\\n\\ntable.calendar {\\n    margin: 1em 1em 2em 1em;\\n}\\n\\ntable.calendar td,\\ntable.calendar th {\\n    padding: 0.5em;\\n}\\n\\ntable.calendar {\\n    display: inline-block;\\n    *display: inline;\\n    zoom: 1;\\n    vertical-align: top;\\n} */\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-calendar-buyer',\n  templateUrl: './calendar-buyer.component.html',\n  styleUrls: ['./calendar-buyer.component.scss'],\n})\nexport class CalendarBuyerComponent implements OnInit {\n  month = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  year: number;\n  monthNumber: number;\n  schedule: ISchedule[];\n  isLoad = false;\n  constructor(\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    private navController: NavController,\n    private router: Router,\n    private adviserService: AdviserService,\n    private storage: Storage,\n    private toastController: ToastController,\n  ) {\n    this.monthNumber = new Date().getMonth();\n    this.year = new Date().getFullYear();\n  }\n  ngOnInit() {\n    const user = this.userSessionService.userSession.value;\n    if (user.type === 'buyer') {\n      // buyer\n      this.buyerService.getBuyerById(user.id).subscribe(b => {\n        this.schedule = b.schedule;\n        this.isLoad = true;\n      });\n    } else if ((user.type = 'adviser')) {\n      // adv\n      this.adviserService.getAdviserById(user.id).subscribe(b => {\n        this.schedule = b.schedule;\n        this.isLoad = true;\n      });\n    }\n  }\n  calendarSelect(item: { year: number; month: number; day: number }) {\n    if (item.day !== 0) {\n      const isFinded = this.schedule.filter(\n        s =>\n          s.day === item.day && s.month === item.month && s.year === item.year,\n      );\n      if (isFinded.length > 0) {\n        const data: NavigationExtras = { queryParams: item };\n        this.router.navigate(['event-detail-buyer'], data);\n      }\n    }\n  }\n  getEvents() {\n    this.router.navigate(['event-detail-buyer']);\n  }\n  backOne() {\n    if (this.monthNumber === 0) {\n      this.year--;\n      this.monthNumber = 11;\n    } else {\n      this.monthNumber--;\n    }\n  }\n  fowardOne() {\n    if (this.monthNumber === 11) {\n      this.year++;\n      this.monthNumber = 0;\n    } else {\n      this.monthNumber++;\n    }\n  }\n  async toastPresent(m = 'Eventos pendientes hoy') {\n    const isPresent = await this.storage.get('alert-today');\n    if (+isPresent !== new Date().getDate()) {\n      const toast = await this.toastController.create({\n        message: m,\n        showCloseButton: true,\n        position: 'bottom',\n        closeButtonText: 'OK',\n        cssClass: 'toast-alert',\n        duration: 50000,\n      });\n      toast.present();\n      toast.onWillDismiss().then(() => {\n        this.storage.set('alert-today', new Date().getDate());\n      });\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [buttonNotification]=\\\"'notifications'\\\" [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Créditos y Eventos'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <!-- cargar -->\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <!-- si cargado -->\\n  <ng-template #thenTemplate>\\n    <!-- credito -->\\n    <div style=\\\"text-align: center\\\">\\n      <ion-chip class=\\\"chips-detail\\\" color=\\\"secondary\\\">\\n        <ion-label>Créditos</ion-label>\\n      </ion-chip>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"hasCredit; then Credit; else noCredit\\\"></ng-container>\\n    <ng-template #Credit>\\n\\n      <ion-card [ngClass]=\\\"{'state-verde': credit.status === 'verde', \\n        'state-amarillo': credit.status === 'amarillo',\\n        'state-rojo': credit.status === 'rojo',\\n        'state-azul': credit.status === 'azul' }\\\">\\n\\n        <span *ngIf=\\\"credit.status === 'verde'\\\">\\n          <ion-card-header>\\n            <ion-card-subtitle>Estado: Interés</ion-card-subtitle>\\n            <ion-card-title text-wrap>En espera</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content text-wrap>\\n            En poco tiempo recibirá respuesta de la solicitud\\n          </ion-card-content>\\n\\n        </span>\\n\\n        <span *ngIf=\\\"credit.status === 'amarillo'\\\">\\n          <ion-card-header>\\n            <ion-card-subtitle>Estado: Negociación</ion-card-subtitle>\\n            <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content text-wrap>\\n            <ion-label text-wrap>Detalles de la oferta : {{credit.notes}}</ion-label>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-list-header text-wrap> Documentos Requeridos:</ion-list-header>\\n              <ion-item lines=\\\"none\\\" *ngFor=\\\"let doc of credit.files\\\">{{doc}}</ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n          <!-- Poner en notes Aceptado o Denagado -->\\n\\n          <ion-item lines=\\\"none\\\">\\n            <ion-button (click)=\\\"respondOfert('Aceptado', true)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n              Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"respondOfert('Denagado', false)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n              Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n            </ion-button>\\n\\n          </ion-item>\\n\\n        </span>\\n\\n        <span *ngIf=\\\"credit.status === 'rojo'\\\">\\n          <ion-card-header>\\n            <ion-card-subtitle>Estado: Respuesta de Crédito</ion-card-subtitle>\\n            <!-- Poner en notes Aceptado o Denagado -->\\n            <ion-card-title text-wrap> Crédito: {{credit.notes}}</ion-card-title>\\n            <ion-card-content text-wrap>\\n            </ion-card-content>\\n          </ion-card-header>\\n        </span>\\n\\n      </ion-card>\\n    </ng-template>\\n    <ng-template #noCredit>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title style=\\\"display: flex; align-items: center;\\\">\\n            <ion-icon name=\\\"paper\\\"></ion-icon> Solicitar Crédito\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-label text-wrap><b>Aún no cuentas con algún credito para esta propiedad</b></ion-label>\\n          <ion-label text-wrap>Solicita uno de manera gratuita presionando en el botón:</ion-label>\\n        </ion-card-content>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button (click)=\\\"createCredit()\\\" color=\\\"secondary\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Solicitar Crédito <ion-icon name=\\\"send\\\"></ion-icon>\\n          </ion-button>\\n        </ion-item>\\n      </ion-card>\\n    </ng-template>\\n    <!-- /credito -->\\n    <!-- schedule -->\\n    <div style=\\\"text-align: center\\\">\\n      <ion-chip class=\\\"chips-detail\\\" color=\\\"secondary\\\">\\n        <ion-label>Citas</ion-label>\\n      </ion-chip>\\n    </div>\\n    <ion-card *ngFor=\\\"let schedule of schedules\\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\n        'state-amarillo': schedule.status === 'amarillo',\\n        'state-rojo': schedule.status === 'rojo',\\n        'state-gris': schedule.status === 'gris',\\n        'state-azul': schedule.status === 'azul' }\\\">\\n      <span *ngIf=\\\"schedule.status === 'gris'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Cita Generada</ion-card-subtitle>\\n          <ion-card-title text-wrap>En espera</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content text-wrap>\\n          En poco tiempo recibirá respuesta de la cita solicitada\\n        </ion-card-content>\\n\\n      </span>\\n\\n      <span *ngIf=\\\"schedule.status === 'verde'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Propuesta Cita</ion-card-subtitle>\\n          <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content text-wrap>\\n          <ion-label text-wrap>Detalles de la cita : {{schedule.note}}</ion-label>\\n          <ion-list lines=\\\"none\\\">\\n            <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-item>\\n            <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}}</ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n        <!-- Poner en notes Aceptado o Denagado -->\\n\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button (click)=\\\"respondSchedule('Aceptado', schedule)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button (click)=\\\"respondSchedule('Denagado', schedule)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n          </ion-button>\\n\\n        </ion-item>\\n\\n      </span>\\n\\n\\n      <span *ngIf=\\\"schedule.status === 'amarillo'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Cita Agendada</ion-card-subtitle>\\n          <ion-card-title text-wrap>Favor de asistir</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content text-wrap>\\n          <ion-label text-wrap>Detalles de la cita : {{schedule.note}}</ion-label>\\n          <ion-list lines=\\\"none\\\">\\n            <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-item>\\n            <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}} </ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n        <!-- Poner en notes Aceptado o Denagado -->\\n\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button [routerLink]=\\\"['/calendar-buyer']\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Ver agenda <ion-icon name=\\\"calendar\\\"></ion-icon>\\n          </ion-button>\\n\\n        </ion-item>\\n\\n      </span>\\n\\n      <span *ngIf=\\\"schedule.status === 'rojo'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Visitada</ion-card-subtitle>\\n          <!-- Poner en notes Visitada o No Visitada -->\\n          <ion-card-title text-wrap> Cita Pasada</ion-card-title>\\n          <ion-card-content text-wrap>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-item>\\n              <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour, schedule.minute)}} </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card-header>\\n      </span>\\n\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title style=\\\"display: flex; align-items: center;\\\">\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> Solicitar Visita\\n        </ion-card-title>\\n      </ion-card-header>\\n      <!-- form -->\\n      <form #loginForm2=\\\"ngForm\\\">\\n        <ion-card-content>\\n          <ion-label text-wrap><b>Propuesta de Visita</b></ion-label>\\n          <ion-label text-wrap>Solicita una de manera gratuita anotando la posible fecha y presionando en el botón:</ion-label>\\n          <!-- fecha -->\\n          <mat-form-field>\\n            <input matInput (dateChange)=\\\"dateSelect($event)\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\"\\n              placeholder=\\\"Fecha\\\" required>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker></mat-datepicker>\\n          </mat-form-field>\\n          <!-- day -->\\n          <!-- <mdc-text-field label=\\\"Dia\\\" type=\\\"number\\\" [(ngModel)]=\\\"daySelect\\\" #d=\\\"ngModel\\\" id=\\\"d\\\" name=\\\"d\\\" required\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"d.dirty || d.touched\\\">Anota Dia</span>\\n            </mdc-text-field-helper-text> -->\\n          <!-- mm -->\\n          <!--  <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\" style=\\\"    margin-right: 10%;\\\">\\n              <ion-label>Mes</ion-label>\\n              <ion-select [(ngModel)]=\\\"monthSelect\\\" #me=\\\"ngModel\\\" id=\\\"me\\\" name=\\\"me\\\" required>\\n                <ion-select-option *ngFor=\\\"let m of months; let i = index\\\" [value]=\\\"i\\\">{{m}}</ion-select-option>\\n              </ion-select>\\n            </ion-item> -->\\n          <!-- aa -->\\n          <!-- <mdc-text-field label=\\\"Año\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearSelect\\\" #y=\\\"ngModel\\\" id=\\\"y\\\" name=\\\"y\\\" required\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"y.dirty || y.touched\\\">Anota Año</span>\\n            </mdc-text-field-helper-text> -->\\n          <!-- hh -->\\n          <mdc-text-field label=\\\"Hora (formato 24hrs)\\\" type=\\\"number\\\" [(ngModel)]=\\\"hourSelect\\\" #h=\\\"ngModel\\\" id=\\\"h\\\" name=\\\"h\\\"\\n            required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n            <span *ngIf=\\\"h.dirty || h.touched\\\">Anota Hora</span>\\n          </mdc-text-field-helper-text>\\n\\n\\n        </ion-card-content>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button [disabled]=\\\"!hourSelect && !yearSelect\\\" (click)=\\\"createSchedule()\\\" color=\\\"secondary\\\" fill=\\\"outline\\\"\\n            slot=\\\"end\\\">\\n            Solicitar Cita <ion-icon name=\\\"send\\\"></ion-icon>\\n          </ion-button>\\n        </ion-item>\\n      </form>\\n    </ion-card>\\n    <!-- /Schedule -->\\n\\n\\n  </ng-template>\\n  <!-- no cargado -->\\n  <ng-template #elseTemplate>\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\n  </ng-template>\\n  <!-- /cargar -->\\n</ion-content>\"","module.exports = \".state-verde {\\n  border-left: 4px solid var(--ion-color-success); }\\n\\n.state-amarillo {\\n  border-left: 4px solid var(--ion-color-warning); }\\n\\n.state-rojo {\\n  border-left: 4px solid var(--ion-color-danger); }\\n\\n.state-azul {\\n  border-left: 4px solid var(--ion-color-blue); }\\n\\n.chips-detail {\\n  padding: 15px;\\n  font-size: 1.3em; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PropertyService } from '../../../services/property.service';\nimport { IProperty } from '../../../models/property.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { CreditService } from '../../../services/credit.service';\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { ToastController } from '@ionic/angular';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { ScheduleService } from '../../../services/schedule.service';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { FormatHoursFront } from '../../../_config/_helpers';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { map } from 'rxjs/operators';\nimport { SellerService } from '../../../services/seller.service';\n\n@Component({\n  selector: 'app-credit-event-buyer',\n  templateUrl: './credit-event-buyer.component.html',\n  styleUrls: ['./credit-event-buyer.component.scss']\n})\nexport class CreditEventBuyerComponent implements OnInit {\n  propertyId: string;\n  isLoad = false;\n  hasCredit = false;\n  hasSchedule = false;\n  credit: ICredit;\n  statusBuyerPropertyId;\n  daySelect: number;\n  monthSelect: number;\n  yearSelect: number;\n  hourSelect: number;\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre'\n  ];\n  buyer: IBuyer;\n  schedules = [];\n  constructor(\n    private route: ActivatedRoute,\n    private propertyService: PropertyService,\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    private creditService: CreditService,\n    public toastController: ToastController,\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\n    private scheduleService: ScheduleService,\n    private oneSignalService: OnesignalService,\n    private sellerService: SellerService\n  ) {\n    console.log(userSessionService.userSession.value);\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.propertyId = params.id;\n        this.statusBuyerPropertyId = params.statusId;\n        this.getBuyerById(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  /**\n   *\n   * @param propertyId id de propiedad\n   */\n  getBuyerById(propertyId) {\n    const buyerId = this.userSessionService.userSession.value.id;\n    this.buyerService.getBuyerById(buyerId).subscribe(buyer => {\n      this.buyer = buyer;\n      const buyerGet = <any>buyer;\n      const isCreditFinded = buyerGet.credit.find(\n        credit => credit.property._id === propertyId\n      );\n      // cambiar a filters si tine varias\n      const isScheduleFinded = buyer.schedule.filter(\n        s => s.property._id === propertyId\n      );\n      if (isCreditFinded) {\n        this.credit = isCreditFinded;\n        this.hasCredit = true;\n      }\n      this.schedules = isScheduleFinded;\n      this.isLoad = true;\n    });\n  }\n  createCredit() {\n    this.propertyService\n      .getPropertyById(this.propertyId)\n      .subscribe(property => {\n        const buyerId = this.userSessionService.userSession.value.id;\n        const buyerName = this.userSessionService.userSession.value.name;\n        const credit: ICredit = {\n          buyer: buyerId,\n          property: this.propertyId,\n          status: 'verde',\n          notes: `El cliente \"${buyerName}\" requiere info. para adquirir un crédito para la propiedad: \"${\n            property.name\n          }\"`\n        };\n        // Crear notif\n        this.notification(\n          'Solicitud de crédito',\n          credit.notes,\n          credit.status,\n          'credit',\n          ['office', 'administrator'],\n          undefined\n        );\n        this.creditService.newCredit(credit).subscribe(c => {\n          if (c) {\n            this.buyerService.getBuyerById(buyerId).subscribe(b => {\n              const arr = b.credit.map(item => item._id);\n              arr.push(c._id);\n              const buyer: any = {\n                _id: buyerId,\n                credit: arr\n              };\n              this.buyerService.putBuyer(buyer).subscribe(() => {\n                this.getBuyerById(this.propertyId);\n                this.presentToast('Solicitud enviada');\n              });\n            });\n          }\n        });\n      });\n  }\n  respondOfert(str: string, isAcept: boolean) {\n    const buyerName = this.userSessionService.userSession.value.name;\n    this.statusBuyerPropertyService\n      .upgradeStatus(this.statusBuyerPropertyId, 'rojo')\n      .subscribe();\n    this.credit.status = 'rojo';\n    this.credit.notes = str;\n    this.credit.isAccept = isAcept;\n    this.creditService.putCredit(this.credit).subscribe(async res => {\n      const seller = await this.getSellerOfProperty(this.propertyId);\n      const prop = await this.getPropById(this.propertyId);\n      const arr = this.buyer.adviser\n        .map(a => a._id)\n        .concat(seller === undefined ? undefined : seller._id);\n      const dateToSchedule = new Date(new Date().getTime() + 15 * 86400000);\n      // Crear notif\n      this.notification(\n        'Respuesta de crédito',\n        `El cliente ${buyerName} ha ${str} un crédito para la propiedad: ${\n          prop.name\n        }`,\n        this.credit.status,\n        'credit',\n        ['office', 'administrator'],\n        arr\n      );\n      if (isAcept) {\n        prop.dateToApart = dateToSchedule;\n        this.propertyService.putProperty(prop).subscribe();\n        this.notificationByApart(\n          'Tiempo de Apartado Superado',\n          `El tiempo de espera ha superado los 15 dias para el crédito de la propiedad: ${\n            prop.name\n          } del cliente ${this.userSessionService.userSession.value.name}`,\n          ['office', 'administrator'],\n          arr,\n          dateToSchedule,\n          this.credit\n        );\n      }\n      if (res) {\n        this.getBuyerById(this.propertyId);\n        this.presentToast('Crédito ' + str);\n      }\n    });\n  }\n  dateSelect(event) {\n    if (event) {\n      this.daySelect = event.value._i.date;\n      this.monthSelect = event.value._i.month;\n      this.yearSelect = event.value._i.year;\n    }\n  }\n  // Schedules\n  createSchedule() {\n    this.propertyService\n      .getPropertyById(this.propertyId)\n      .subscribe(property => {\n        const buyer = this.userSessionService.userSession.value;\n\n        const newSchedule: any = {\n          status: 'gris',\n          note: `El cliente \"${\n            buyer.name\n          }\" requiere una cita para conocer la propiedad: \"${property.name}\"`,\n          buyer: buyer.id,\n          property: this.propertyId,\n          year: this.yearSelect,\n          month: this.monthSelect,\n          day: this.daySelect,\n          hour: this.hourSelect\n        };\n        // Crear notif\n        this.notification(\n          'Solicitud de visita',\n          newSchedule.note,\n          newSchedule.status,\n          'schedule',\n          ['office', 'administrator'],\n          undefined\n        );\n        this.scheduleService.newSchedule(newSchedule).subscribe(s => {\n          if (s) {\n            this.buyerService.getBuyerById(buyer.id).subscribe(b => {\n              const arr = b.schedule.map(item => item._id);\n              arr.push(s._id);\n              const buyerEdit: any = {\n                _id: buyer.id,\n                schedule: arr\n              };\n              this.buyerService.putBuyer(buyerEdit).subscribe(() => {\n                this.getBuyerById(this.propertyId);\n                this.presentToast('Cita Solicitada');\n              });\n            });\n          }\n        });\n      });\n  }\n  respondSchedule(str: string, schedule: ISchedule) {\n    const buyerName = this.userSessionService.userSession.value.name;\n    if (str === 'Aceptado') {\n      schedule.status = 'amarillo';\n      // noti schedule\n      this.notificationBySchedule(schedule);\n      // subir de nivel\n      this.statusBuyerPropertyService\n        .upgradeStatus(this.statusBuyerPropertyId, 'amarillo')\n        .subscribe();\n    } else {\n      schedule.status = 'gris';\n    }\n    schedule.note = str;\n    // Crear notif\n    this.notification(\n      'Respuesta de visita',\n      `El cliente ${buyerName} ha ${str} la visita a ${schedule.property.name}`,\n      schedule.status,\n      'schedule',\n      ['office', 'administrator'],\n      [schedule.adviser._id]\n    );\n    this.scheduleService.putSchedule(schedule).subscribe(res => {\n      if (res) {\n        this.getBuyerById(this.propertyId);\n        this.presentToast('Cita ' + str);\n      }\n    });\n  }\n  // toast\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  public notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(\n        notification.title,\n        message,\n        status === 'rojo' ? ['office', 'administrator'] : ['office'],\n        receiversId\n      )\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  public notificationBySchedule(schedule?: ISchedule) {\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de evento',\n        `Tienes un evento con direccion ${schedule.address} en propiedad: ${\n          schedule.property.name\n        } a las ${schedule.hour}hrs`,\n        new Date(\n          schedule.year,\n          schedule.month,\n          schedule.day,\n          schedule.hour,\n          schedule.minute\n        ),\n        undefined,\n        [this.userSessionService.userSession.value.id, schedule.adviser._id]\n      )\n      .subscribe(data => {\n        if (!schedule.notificationOneSignal) {\n          schedule.notificationOneSignal = [];\n        }\n        schedule.notificationOneSignal.push(data.id);\n        this.scheduleService.putSchedule(schedule).subscribe();\n      });\n    /*  this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de evento',\n        `sch`,\n        new Date(2018, 9, 2, 11, 45),\n        [],\n        ['5b9be3590ec7e6001335105c', '5baba37a0beeaa15d074e954'],\n      )\n      .subscribe(e => {\n        console.log(e);\n      }); */\n  }\n  private notificationByApart(\n    title,\n    message,\n    tags: string[],\n    reciversId: string[],\n    date: Date,\n    credit: ICredit\n  ) {\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(title, message, date, tags, reciversId)\n      .subscribe(data => {\n        if (!credit.notificationOneSignal) {\n          credit.notificationOneSignal = [];\n        }\n        console.log(credit);\n        credit.notificationOneSignal.push(data.id);\n        this.creditService.putCredit(this.credit).subscribe();\n      });\n  }\n  async getSellerOfProperty(id) {\n    return await this.sellerService\n      .getSellerAll()\n      .pipe(\n        map(sellers => sellers.find(s => !!s.property.find(p => p._id === id)))\n      )\n      .toPromise();\n  }\n  async getPropById(id) {\n    return await this.propertyService.getPropertyById(id).toPromise();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Detalles\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Detalles de Propiedad'\\\"\\n    [buttonUser]=\\\"'person'\\\" [buttonNotification]=\\\"'notifications'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n    <h1> Característica </h1>\\n\\n    <ion-card>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-badge *ngIf=\\\"property.numOfLikes > 0\\\">\\n          {{property.numOfLikes}} me gusta\\n        </ion-badge>\\n        <ion-button (click)=\\\"setLikeProperty(property._id)\\\" color=\\\"secondary\\\" [fill]=\\\"isLiked === true ? 'solid': 'outline'\\\"\\n          slot=\\\"end\\\">\\n          <ion-icon [name]=\\\"isLiked === true ? 'heart': 'heart-empty'\\\" [color]=\\\"isLiked === true ? 'dark': 'secondary'\\\"></ion-icon>{{isLiked\\n          === true ? 'Te gusta' :'Me gusta'}}\\n        </ion-button>\\n      </ion-item>\\n\\n\\n      <ion-card-header>\\n        <ion-card-subtitle *ngIf=\\\"property.dateToApart && showApart\\\">Apartada hasta:\\n          {{formatDates(property.dateToApart)}}\\n        </ion-card-subtitle>\\n        <ion-card-title> {{property.name}} </ion-card-title>\\n      </ion-card-header>\\n      <!-- Principales -->\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <!-- Renta/venta -->\\n            <ion-chip *ngIf=\\\"property.isRent\\\" style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n              <ion-label>Renta</ion-label>\\n            </ion-chip>\\n            <ion-chip *ngIf=\\\"property.isRent\\\" style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n              <ion-label>Renta</ion-label>\\n            </ion-chip>\\n            <ion-chip *ngIf=\\\"!property.isRent\\\" style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cart\\\"></ion-chip-icon>\\n              <ion-label>Venta</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"expand\\\"></ion-chip-icon>\\n              <ion-label>Espacio {{property.space}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"calendar\\\"></ion-chip-icon>\\n              <ion-label>Fecha {{property.dateToBuy}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"water\\\"></ion-chip-icon>\\n              <ion-label>Baños {{property.numBathrooms}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n              <ion-label>Max ${{property.maxPrice}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"cash\\\"></ion-chip-icon>\\n              <ion-label>Min ${{property.minPrice}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"car\\\"></ion-chip-icon>\\n              <ion-label>Estacionamiento {{property.numCars}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n          <ion-col>\\n            <ion-chip style=\\\"background-color: #F58634\\\">\\n              <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"bed\\\"></ion-chip-icon>\\n              <ion-label>Cuartos {{property.numRooms}}</ion-label>\\n            </ion-chip>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <!-- otros -->\\n      <ion-card-subtitle style=\\\"margin-left: 8%;\\\">Otras</ion-card-subtitle>\\n      <ion-item *ngIf=\\\"property.allServices\\\">\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n        <ion-label>Todos los servicios</ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"property.hasElevator\\\">\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n        <ion-label>Elevador</ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"property.hasGarden\\\">\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n        <ion-label>Jardin</ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"property.isClose\\\">\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n        <ion-label>Fraccionamineto Cerrado</ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!property.isOld\\\">\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n        <ion-label>Nuevo</ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"property.isLowLevel\\\">\\n        <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n        <ion-label>Planta Baja</ion-label>\\n      </ion-item>\\n      <!-- tag -->\\n      <ion-card-subtitle style=\\\"margin: 8% 0% 2% 8%;\\\">Etiquetas</ion-card-subtitle>\\n      <ion-grid style=\\\"margin-left: 8%;\\\">\\n        <ion-row>\\n          <ion-col *ngFor=\\\"let tag of property.tag\\\">\\n            {{tag}}\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n\\n    </ion-card>\\n\\n  </ng-template>\\n  <ng-template #elseTemplate style=\\\"text-align: center\\\">\\n    <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n\\n  </ng-template>\\n  <!-- <button (click)=\\\"notification()\\\">algo</button> -->\\n</ion-content>\"","module.exports = \".icon-chip-detail {\\n  border-radius: 50%;\\n  background-color: black;\\n  color: white; }\\n\"","import { IBuyer } from './../../../models/buyer.model';\nimport { BuyerService } from './../../../services/buyer.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PropertyService } from '../../../services/property.service';\nimport { IProperty } from '../../../models/property.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { ToastController } from '@ionic/angular';\nimport { IStatusBuyerProperty } from '../../../models/statusBuyerProperty.model';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { SellerService } from '../../../services/seller.service';\nimport { map } from 'rxjs/operators';\nimport { INotification } from '../../../models/notification.model';\nimport {\n  FormatDatesFront,\n  DiffDays,\n  DiffDaysNoABS,\n} from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-detail-prop-buyer',\n  templateUrl: './detail-prop-buyer.component.html',\n  styleUrls: ['./detail-prop-buyer.component.scss'],\n})\nexport class DetailPropBuyerComponent implements OnInit {\n  property: IProperty;\n  isLoad = false;\n  isLiked = false;\n  arrPropLikes: string[] = [];\n  arrSBP: string[] = [];\n  showApart: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private propertyService: PropertyService,\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    public toastController: ToastController,\n    private statusBPService: StatusBuyerPropertyService,\n    private oneSignalService: OnesignalService,\n    private sellerService: SellerService,\n  ) {\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.getPropertyById(params.id);\n        this.getlikeProperty(params.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getPropertyById(id: string) {\n    this.propertyService.getPropertyById(id).subscribe(property => {\n      this.property = property;\n      this.showApart = new Date() < new Date(property.dateToApart);\n      console.log(property.numOfLikes);\n      this.isLoad = true;\n    });\n  }\n  async getSellerOfProperty() {\n    return await this.sellerService\n      .getSellerAll()\n      .pipe(\n        map(sellers =>\n          sellers.find(\n            s => !!s.property.find(p => p._id === this.property._id),\n          ),\n        ),\n      )\n      .toPromise();\n  }\n  getlikeProperty(id: string) {\n    const buyer = this.userSessionService.userSession.value;\n    this.buyerService.getBuyerById(buyer.id).subscribe((b: any) => {\n      if (b.statusBuyerProperty && b.statusBuyerProperty.length > 0) {\n        this.arrSBP = b.statusBuyerProperty.map(\n          buyerProperty => buyerProperty._id,\n        );\n        this.arrPropLikes = b.statusBuyerProperty.map(\n          buyerProperty => buyerProperty.property._id,\n        );\n        if (b.statusBuyerProperty) {\n          const findIndex = this.arrPropLikes.findIndex(prop => prop === id);\n          if (findIndex !== -1) {\n            this.isLiked = true;\n          } else {\n            this.isLiked = false;\n          }\n        }\n      }\n    });\n  }\n  setLikeProperty(propertyId: string) {\n    const buyerId = this.userSessionService.userSession.value.id;\n    const sBP: IStatusBuyerProperty = {\n      buyer: buyerId,\n      property: propertyId,\n      status: 'verde',\n    };\n    const buyer: IBuyer = {\n      _id: buyerId,\n      statusBuyerProperty: this.arrSBP,\n    };\n    if (this.isLiked) {\n      const findeIndex = this.arrPropLikes.findIndex(\n        prop => prop === propertyId,\n      );\n      this.statusBPService\n        .deletedStatusBuyerProperty(this.arrSBP[findeIndex])\n        .subscribe(res => {\n          if (res) {\n            const findeIndexBuyer = buyer.statusBuyerProperty.findIndex(\n              item => item === this.arrSBP[findeIndex],\n            );\n            buyer.statusBuyerProperty.splice(findeIndexBuyer, 1);\n            this.buyerService.putBuyer(buyer).subscribe(val => {\n              this.property.numOfLikes = this.property.numOfLikes - 1;\n              this.propertyService.putProperty(this.property).subscribe();\n              this.presentToast('Te ha dejado de gustar esta propiedad');\n            });\n          }\n        });\n    } else {\n      this.statusBPService.newStatusBuyerProperty(sBP).subscribe(res => {\n        buyer.statusBuyerProperty.push(res._id);\n        this.buyerService.putBuyer(buyer).subscribe(val => {\n          this.property.numOfLikes = this.property.numOfLikes + 1;\n          this.propertyService.putProperty(this.property).subscribe();\n          // crar noti\n          this.notification();\n          if (val) {\n            this.presentToast('Te ha gustado esta propiedad');\n          }\n        });\n      });\n    }\n    this.isLiked = !this.isLiked;\n  }\n  public async notification() {\n    // seller\n    const seller = await this.getSellerOfProperty();\n    // mensaje\n    const m = `${\n      this.userSessionService.userSession.value.name\n    } ha indicado que le gusta ${this.property.name}`;\n    // notificacion\n    const notification: INotification = {\n      title: 'Interés en una Propiedad',\n      message: m,\n      tags: ['office', 'administrator'],\n      receiversId: seller === undefined ? undefined : [seller._id],\n      senderId: this.userSessionService.userSession.value.id,\n      status: 'verde',\n      type: 'like',\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(\n        notification.title,\n        m,\n        ['office'],\n        notification.receiversId,\n      )\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  // _helpers\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n    });\n    toast.present();\n  }\n  formatDates(date: Date): string {\n    return FormatDatesFront(date);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar translucent color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button style=\\\"color: white !important\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Eventos\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [buttonNotification]=\\\"'notifications'\\\" [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Eventos'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <!-- Toggles in a List -->\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <!--  <ion-label>Mostrar Todos</ion-label>\\n      <ion-toggle [(ngModel)]=\\\"isAll\\\" (ionChange)=\\\"getAllSchedule();getActualSchedule()\\\"></ion-toggle> -->\\n      <ion-button (click)=\\\"isAll = !isAll;getAllSchedule();getActualSchedule()\\\">{{isAll ? 'Mostrando Todos':'Mostrando\\n        Actuales'}}</ion-button>\\n    </ion-item>\\n    <!--  <ion-item lines=\\\"none\\\" *ngIf=\\\"!isAll\\\">\\n      <ion-chip color=\\\"secondary\\\">\\n        <ion-label>Mostrando Actuales\\n        </ion-label>\\n      </ion-chip>\\n    </ion-item> -->\\n\\n  </ion-list>\\n  <!-- eventos -->\\n  <ng-container *ngIf=\\\"scheduleToShow.length > 0; then data; else noData\\\"></ng-container>\\n  <ng-template #data>\\n    <ion-card *ngFor=\\\"let schedule of scheduleToShow\\\" [ngClass]=\\\"{'state-verde': schedule.status === 'verde', \\n        'state-amarillo': schedule.status === 'amarillo',\\n        'state-rojo': schedule.status === 'rojo',\\n        'state-gris': schedule.status === 'gris',\\n        'state-azul': schedule.status === 'azul' }\\\">\\n      <span *ngIf=\\\"schedule.status === 'gris'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Cita Generada</ion-card-subtitle>\\n          <ion-card-title text-wrap>En espera</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content text-wrap>\\n          En poco tiempo recibirá respuesta de la cita solicitada\\n        </ion-card-content>\\n\\n      </span>\\n\\n      <span *ngIf=\\\"schedule.status === 'verde'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Propuesta Cita</ion-card-subtitle>\\n          <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content text-wrap>\\n          <ion-label text-wrap>Detalles de la cita : {{schedule.note}}</ion-label>\\n          <ion-list lines=\\\"none\\\">\\n            <ion-item lines=\\\"none\\\" text-wrap> Fecha: {{schedule.day}}/{{schedule.month + 1 }}/{{schedule.year}}</ion-item>\\n            <ion-item lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour,\\n              schedule.minute)}}</ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button (click)=\\\"respondSchedule('Aceptado', schedule._id)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button (click)=\\\"respondSchedule('Denagado',  schedule._id)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n          </ion-button>\\n\\n        </ion-item>\\n\\n      </span>\\n      <span *ngIf=\\\"!schedule.status || schedule.status === 'amarillo'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Cita: {{schedule.day}}/{{schedule.month + 1}}/{{schedule.year}}</ion-card-subtitle>\\n          <ion-card-subtitle lines=\\\"none\\\" text-wrap>Hora: {{formatHours(schedule.hour,\\n            schedule.minute)}}</ion-card-subtitle>\\n          <ion-card-title>{{schedule.property.name}}</ion-card-title>\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n          <ion-label>\\n            <ion-icon name=\\\"person\\\"></ion-icon>\\n            <b>Tiene una cita con {{schedule.adviser ? schedule.adviser.name : schedule.seller.name}}</b>\\n          </ion-label>\\n          <ion-icon name=\\\"pin\\\"></ion-icon>\\n          Direccion {{schedule.address}}\\n          <!-- maps LINK -->\\n          <ion-item lines=\\\"none\\\">\\n            <!-- <ion-button [href]=\\\"'https://www.google.com/maps/search/?api=1&&q='+schedule.address+', Puebla'\\\" fill=\\\"outline\\\"\\n              target=\\\"_blank\\\" slot=\\\"end\\\">\\n              Ver Mapa <ion-icon name=\\\"navigate\\\"></ion-icon>\\n            </ion-button> \\n            <ion-button (click)=\\\"openMaps(schedule.address)\\\" fill=\\\"outline\\\" target=\\\"_blank\\\" slot=\\\"end\\\">\\n              Ver Mapa<ion-icon name=\\\"navigate\\\"></ion-icon>\\n            </ion-button>-->\\n            <app-maps-button slot=\\\"end\\\" [address]=\\\"schedule.address\\\"></app-maps-button>\\n          </ion-item>\\n        </ion-card-content>\\n      </span>\\n      <span *ngIf=\\\"schedule.status === 'rojo'\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle>Estado: Visitado</ion-card-subtitle>\\n          <!-- Poner en notes Visitada o No Visitada -->\\n          <ion-card-title text-wrap> Evento Pasado </ion-card-title>\\n          <ion-card-content text-wrap>\\n          </ion-card-content>\\n        </ion-card-header>\\n      </span>\\n\\n    </ion-card>\\n  </ng-template>\\n  <!-- sin evento -->\\n  <ng-template #noData>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>No hay eventos</ion-card-title>\\n      </ion-card-header>\\n    </ion-card>\\n\\n  </ng-template>\\n\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { ScheduleService } from '../../../services/schedule.service';\nimport {\n  FormatHoursFront,\n  FormatDatesFront,\n  OpenGoogleMaps\n} from '../../../_config/_helpers';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { INotification } from '../../../models/notification.model';\nimport {\n  LaunchNavigator,\n  LaunchNavigatorOptions\n} from '@ionic-native/launch-navigator/ngx';\nimport { Platform } from '@ionic/angular';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\ndeclare var launchnavigator: any;\n\n@Component({\n  selector: 'app-event-detail-buyer',\n  templateUrl: './event-detail-buyer.component.html',\n  styleUrls: ['./event-detail-buyer.component.scss']\n})\nexport class EventDetailBuyerComponent implements OnInit {\n  schedule: ISchedule[];\n  scheduleToShow: ISchedule[] = [];\n  isAll: boolean;\n  isOne: boolean;\n  user: IUserSession;\n  constructor(\n    private route: ActivatedRoute,\n    private userSessionService: UserSessionService,\n    private buyerService: BuyerService,\n    private scheduleService: ScheduleService,\n    private adviserService: AdviserService,\n    private oneSignalService: OnesignalService,\n    private launchNavigator: LaunchNavigator,\n    private platform: Platform,\n    private statusBuyerPropertyService: StatusBuyerPropertyService\n  ) {\n    this.user = this.userSessionService.userSession.value;\n    if (this.user.type === 'buyer') {\n      this.inti(this.user);\n    } else if (this.user.type === 'adviser') {\n      this.initAdv(this.user);\n    }\n  }\n\n  private inti(buyer: IUserSession) {\n    this.buyerService.getBuyerById(buyer.id).subscribe(b => {\n      this.schedule = b.schedule;\n      this.route.queryParams.subscribe(params => {\n        if (params.year) {\n          this.isOne = true;\n          this.getByDay(+params.year, +params.month, +params.day);\n        } else {\n          this.isAll = false;\n          this.getActualSchedule();\n        }\n      });\n    });\n  }\n  private initAdv(adv: IUserSession) {\n    this.adviserService.getAdviserById(adv.id).subscribe(b => {\n      console.log(b);\n      this.schedule = b.schedule;\n      this.route.queryParams.subscribe(params => {\n        if (params.year) {\n          this.isOne = true;\n          this.getByDay(+params.year, +params.month, +params.day);\n        } else {\n          this.isAll = false;\n          this.getActualSchedule();\n        }\n      });\n    });\n  }\n\n  ngOnInit() {}\n  getByDay(year: number, month: number, day: number) {\n    const isFinded = this.schedule.filter(\n      s => s.day === day && s.month === month && s.year === year\n    );\n    if (isFinded.length > 0) {\n      this.scheduleToShow = isFinded;\n    }\n    this.isAll = false;\n  }\n  getAllSchedule() {\n    if (this.isAll === true) {\n      this.scheduleToShow = this.schedule;\n      console.log(this.scheduleToShow);\n    }\n  }\n  getActualSchedule() {\n    if (this.isAll === false) {\n      const date = new Date();\n      const isFinded = this.schedule.filter(\n        s => new Date(s.year, s.month, s.day) >= date\n      );\n      this.scheduleToShow = isFinded;\n    }\n  }\n  respondSchedule(str: string, scheduleId: string) {\n    const schedule = this.schedule.find(s => s._id === scheduleId);\n    console.log(schedule);\n    if (str === 'Aceptado') {\n      schedule.status = 'amarillo';\n      // noti schedule\n      this.notificationBySchedule(schedule);\n      // subir de nivel\n      this.statusBuyerPropertyService\n        .searchSpecial(this.user.id, schedule.property._id)\n        .subscribe(sbp => {\n          this.statusBuyerPropertyService\n            .upgradeStatus(sbp._id, 'amarillo')\n            .subscribe();\n        });\n\n      // Crear notif\n      this.notification(\n        'Respuesta de visita',\n        `El cliente ${\n          this.userSessionService.userSession.value.name\n        } ha ${str} la visita a ${schedule.property.name}`,\n        schedule.status,\n        'schedule',\n        ['office', 'administrator'],\n        [schedule.adviser ? schedule.adviser._id : schedule.seller._id]\n      );\n    } else {\n      schedule.status = 'gris';\n    }\n    schedule.note = str;\n    this.scheduleService.putSchedule(schedule).subscribe(res => {\n      if (res) {\n        this.inti(this.user);\n      }\n    });\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  formatDates(year, month, day) {\n    const date = new Date();\n    FormatDatesFront(date);\n  }\n  // noti\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  public notificationBySchedule(schedule?: ISchedule) {\n    console.log(schedule);\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de evento',\n        `Tienes un evento con direccion ${schedule.address} en propiedad: ${\n          schedule.property.name\n        } a las ${schedule.hour}hrs`,\n        new Date(\n          schedule.year,\n          schedule.month,\n          schedule.day,\n          schedule.hour,\n          schedule.minute\n        ),\n        undefined,\n        [\n          this.userSessionService.userSession.value.id,\n          schedule.adviser ? schedule.adviser._id : schedule.seller._id\n        ]\n      )\n      .subscribe(() => {});\n  }\n  // implementar en todos !!\n  openMaps(schedule) {\n    const isCordova = this.platform.is('cordova');\n    if (isCordova) {\n      const options: LaunchNavigatorOptions = {\n        app: launchnavigator.APP.GOOGLE_MAPS\n      };\n\n      this.launchNavigator\n        .navigate(schedule, options)\n        .then(\n          success => console.log('Launched navigator'),\n          error => console.log('Error launching navigator', error)\n        );\n    } else {\n      OpenGoogleMaps(schedule);\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Lista de Deseos\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Lista de Deseos'\\\" [buttonUser]=\\\"'person'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n\\n    <h2>Selecciona uno para mayor información</h2>\\n    <ion-card *ngFor=\\\"let item of sBP | async\\\" [ngClass]=\\\"{'state-verde': item.status === 'verde', 'state-amarillo': item.status === 'amarillo','state-rojo': item.status === 'rojo','state-azul': item.status === 'azul' }\\\"\\n      (click)=\\\"itemDetail(item.property, item._id)\\\">\\n      <ion-card-header>\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'verde'\\\">Estado: Interés</ion-card-subtitle>\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'amarillo'\\\">Estado: Negociación</ion-card-subtitle>\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'rojo'\\\">Estado: Oferta Aceptada</ion-card-subtitle>\\n        <ion-card-subtitle *ngIf=\\\"item.status === 'azul'\\\">Estado: Post Venta</ion-card-subtitle>\\n        <ion-card-title>{{item.property.name}}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-icon style=\\\"color:  #F5811E\\\" name=\\\"arrow-forward\\\" slot=\\\"end\\\"></ion-icon>\\n          <ion-label text-wrap>Ver estado de crédito o agendar citas</ion-label>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\n  </ng-template>\\n\\n\\n</ion-content>\"","module.exports = \".user-select-contenet {\\n  margin: 3% 30% 2% 30%; }\\n\\n.state-verde {\\n  border-left: 4px solid var(--ion-color-success); }\\n\\n.state-amarillo {\\n  border-left: 4px solid var(--ion-color-warning); }\\n\\n.state-rojo {\\n  border-left: 4px solid var(--ion-color-danger); }\\n\\n.state-azul {\\n  border-left: 4px solid var(--ion-color-blue); }\\n\\n@media (max-width: 900px) {\\n  .user-select-contenet {\\n    margin: 1% 1% 1% 1%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { map } from 'rxjs/operators';\nimport { IStatusBuyerPropertyGet } from '../../../models/statusBuyerProperty.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IProperty } from '../../../models/property.model';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-inter-prop-buyer',\n  templateUrl: './inter-prop-buyer.component.html',\n  styleUrls: ['./inter-prop-buyer.component.scss']\n})\nexport class InterPropBuyerComponent implements OnInit {\n  sBP: Observable<IStatusBuyerPropertyGet[]>;\n  isLoad = false;\n\n  constructor(\n    private buyerService: BuyerService,\n    private userSessionService: UserSessionService,\n    private router: Router\n  ) {\n    this.getLikes();\n  }\n\n  ngOnInit() {}\n  getLikes() {\n    const buyerId = this.userSessionService.userSession.value.id;\n    this.sBP = this.buyerService\n      .getBuyerById(buyerId)\n      .pipe(map(res => res.statusBuyerProperty));\n    this.isLoad = true;\n  }\n  itemDetail(item: IProperty, statusId: string) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id, statusId: statusId }\n    };\n    this.router.navigate(['credit-event-buyer'], data);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propiedades\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [buttonNotification]=\\\"'notifications'\\\" [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Propiedades'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <!-- cargar o no -->\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n    <!--  Segment -->\\n    <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" color=\\\"secondary\\\">\\n      <ion-segment-button value=\\\"match\\\" checked>\\n        Sugeridas\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"search\\\">\\n        Todas\\n      </ion-segment-button>\\n    </ion-segment>\\n\\n    <!-- match -->\\n    <ng-container *ngIf=\\\"segment === 'match'; then matchTemplate; else searchTemplate\\\"></ng-container>\\n    <ng-template #matchTemplate>\\n      <h1>Propiedades Sugeridas</h1>\\n      <ion-label>Se muestran las coincidencias con tu perfil</ion-label>\\n      <ion-list lines=\\\"full\\\">\\n        <ion-item lines=\\\"inset\\\" detail *ngFor=\\\"let property of properties\\\" (click)=\\\"itemDetail(property)\\\">\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'departamento'\\\" style=\\\"color: #F5811E\\\" name=\\\"business\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-icon *ngIf=\\\"property.typeOfProperty === 'casa'\\\" style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label text-wrap>\\n            <h2>{{property.name}}</h2>\\n            <p>{{property.zone}}</p>\\n            <ion-chip *ngIf=\\\"property.percentage > 60\\\" class=\\\"high\\\">\\n              <ion-label>{{property.percentage.toFixed(0)}}% de coincidencia</ion-label>\\n            </ion-chip>\\n            <ion-chip *ngIf=\\\"property.percentage <= 60 && property.percentage > 30 \\\" class=\\\"medium\\\">\\n              <ion-label>{{property.percentage.toFixed(0)}}% de coincidencia</ion-label>\\n            </ion-chip>\\n            <ion-chip *ngIf=\\\"property.percentage <= 30\\\" class=\\\"low\\\">\\n              <ion-label>{{property.percentage.toFixed(0)}}% de coincidencia</ion-label>\\n            </ion-chip>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </ng-template>\\n\\n    <!-- search -->\\n    <ng-template #searchTemplate>\\n\\n      <!-- menu end -->\\n      <ion-menu contentId=\\\"menu-end\\\" menuId=\\\"filters\\\" side=\\\"end\\\" type=\\\"overlay\\\">\\n        <app-general-filters (filters)=\\\"getFilters($event)\\\" (resetAll)=\\\"getAllProperty()\\\"></app-general-filters>\\n      </ion-menu>\\n\\n\\n      <!-- Contenido a desplazar listas -->\\n      <div id='menu-end'>\\n        <h1>Todas las Propiedades </h1>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button (click)=\\\"menuCtr.open('filters')\\\" color=\\\"secondary\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{numOfFilers}})\\n          </ion-button>\\n        </ion-item>\\n        <ng-container *ngIf=\\\" (allProperties | async)?.length ; then dataDisplay; else noDataDisplay \\\"></ng-container>\\n        <ng-template #dataDisplay>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-item lines=\\\"inset\\\" detail *ngFor=\\\"let property of allProperties | async\\\" (click)=\\\"itemDetail(property)\\\">\\n              <ion-icon *ngIf=\\\"property.typeOfProperty === 'departamento'\\\" style=\\\"color: #F5811E\\\" name=\\\"business\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-icon *ngIf=\\\"property.typeOfProperty === 'casa'\\\" style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-label text-wrap>\\n                <h2>{{property.name}}</h2>\\n                <p>{{property.zone}}</p>\\n                <p>\\n                  <span *ngFor=\\\"let tag of property.tag\\\">\\n                    {{'#'+tag+ ' '}}\\n                  </span>\\n                </p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ng-template>\\n        <ng-template #noDataDisplay>\\n          <ion-label>No hay datos con los filtros aplicados</ion-label>\\n\\n        </ng-template>\\n\\n\\n      </div>\\n\\n\\n    </ng-template>\\n\\n\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <!-- <ion-spinner name=\\\"bubbles\\\"></ion-spinner> -->\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\n  </ng-template>\\n\\n</ion-content>\"","module.exports = \".high {\\n  background-color: #0cd1e8; }\\n\\n.medium {\\n  background-color: #ffce00; }\\n\\n.low {\\n  background-color: #989aa2; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { PropertyService } from '../../../services/property.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { CalcPercentage, DiffDays } from '../../../_config/_helpers';\nimport { IProperty } from '../../../models/property.model';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\nimport { Observable, from } from 'rxjs';\n// import { fuseAnimations } from '../../../_config/_animations';\nimport { map, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list-prop-buyer',\n  templateUrl: './list-prop-buyer.component.html',\n  styleUrls: ['./list-prop-buyer.component.scss'],\n  // animations: fuseAnimations,\n})\nexport class ListPropBuyerComponent implements OnInit {\n  properties: IProperty[] = [];\n  allProperties: Observable<IProperty[]>;\n  isLoad = false;\n  segment = 'match';\n  numOfFilers = 0;\n  constructor(\n    private buyerService: BuyerService,\n    private propertyService: PropertyService,\n    private userSessionService: UserSessionService,\n    private router: Router,\n    public menuCtr: MenuController,\n  ) {\n    this.getPropertyMatch();\n    this.getAllProperty();\n  }\n\n  ngOnInit() {}\n  getPropertyMatch() {\n    const buyer = this.userSessionService.userSession.value;\n    this.propertyService.matchSearch(buyer.id).subscribe(val => {\n      if (val) {\n        console.log(val);\n        this.getBuyer(buyer.id);\n      }\n    });\n  }\n  getAllProperty() {\n    /*  this.allProperties = this.propertyService\n      .getAll() */\n    this.allProperties = new Observable<IProperty[]>(ob => {\n      this.propertyService.getAll().subscribe(data => {\n        ob.next(data.filter(p => !p.isBuy));\n      });\n    });\n    this.numOfFilers = 0;\n  }\n  getBuyer(id) {\n    this.buyerService.getBuyerById(id).subscribe(buyer => {\n      console.log(buyer);\n      const isApart = date => {\n        if (date) {\n          const days = 15 - DiffDays(date);\n          if (days > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      };\n      // si apartado  debe de aparecer\n      this.properties = CalcPercentage(buyer, buyer.property, 10).filter(\n        p => !p.isBuy,\n      );\n      // si apartado NO debe de aparecer\n      /* this.properties = CalcPercentage(buyer, buyer.property, 10).filter(\n        p => !p.isBuy && !isApart(p.dateToApart),\n      ); */\n      this.isLoad = true;\n    });\n  }\n  itemDetail(item: IProperty) {\n    const data: NavigationExtras = { queryParams: { id: item._id } };\n    this.router.navigate(['buyer-property-detail'], data);\n  }\n  segmentChanged(event) {\n    this.segment = event.detail.value;\n  }\n  openMenu() {\n    this.menuCtr.open('filters');\n  }\n  getFilters(hopeProperty: IProperty) {\n    this.getAllProperty();\n    const filters = this.setFilters(hopeProperty);\n    // !!! crea obs\n    this.allProperties = new Observable<IProperty[]>(ob => {\n      ob.next(filters.propRes);\n    });\n  }\n  setFilters(\n    hopeProperty: IProperty,\n  ): { propRes: IProperty[]; numFilters: number } {\n    const propRes: IProperty[] = [];\n    let numFilters = 0;\n    let num = 0;\n    this.allProperties.subscribe(properties => {\n      properties.forEach(prop => {\n        numFilters = 0;\n        let isHope = true;\n        // condiciones ve si existe\n        if (hopeProperty.wayToBuy) {\n          numFilters++;\n          // ve si coincide\n          if (hopeProperty.wayToBuy !== prop.wayToBuy) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.zone) {\n          numFilters++;\n          // ve si coincide\n          if (hopeProperty.zone !== prop.zone) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.typeOfProperty) {\n          numFilters++;\n          // ve si coincide\n          if (hopeProperty.typeOfProperty !== prop.typeOfProperty) {\n            isHope = false;\n          }\n        }\n        // solo ve si coincide\n        if (hopeProperty.allServices !== undefined) {\n          numFilters++;\n          if (hopeProperty.allServices !== prop.allServices) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.hasElevator !== undefined) {\n          numFilters++;\n          if (hopeProperty.hasElevator !== prop.hasElevator) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.isLowLevel !== undefined) {\n          numFilters++;\n          if (hopeProperty.isLowLevel !== prop.isLowLevel) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.hasGarden !== undefined) {\n          numFilters++;\n          if (hopeProperty.hasGarden !== prop.hasGarden) {\n            isHope = false;\n          }\n        }\n\n        if (prop.numBathrooms < hopeProperty.numBathrooms) {\n          isHope = false;\n        }\n        if (hopeProperty.numBathrooms > 0) {\n          numFilters++;\n        }\n        if (hopeProperty.isClose !== undefined) {\n          numFilters++;\n          if (prop.isClose !== hopeProperty.isClose) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.isOld !== undefined) {\n          numFilters++;\n          if (prop.isOld !== hopeProperty.isOld) {\n            isHope = false;\n          }\n        }\n\n        if (prop.numCars < hopeProperty.numCars) {\n          numFilters++;\n          isHope = false;\n        }\n        if (hopeProperty.numCars > 0) {\n          numFilters++;\n        }\n        if (prop.numRooms < hopeProperty.numRooms) {\n          isHope = false;\n        }\n        if (hopeProperty.numRooms > 0) {\n          numFilters++;\n        }\n        if (prop.space < hopeProperty.space) {\n          isHope = false;\n        }\n        if (hopeProperty.space > 0) {\n          numFilters++;\n        }\n        if (hopeProperty.isRent !== undefined) {\n          numFilters++;\n          if (prop.isRent !== hopeProperty.isRent) {\n            isHope = false;\n          }\n        }\n\n        if (hopeProperty.maxPrice) {\n          numFilters++;\n          if (prop.maxPrice > hopeProperty.maxPrice) {\n            isHope = false;\n          }\n        }\n        if (hopeProperty.minPrice > prop.minPrice) {\n          isHope = false;\n        }\n        if (hopeProperty.minPrice > 0) {\n          numFilters++;\n        }\n        // end condiciones\n        // ve si sigue siendo true\n        if (isHope) {\n          num = numFilters;\n          propRes.push(prop);\n        }\n        // end for\n      });\n      this.numOfFilers = numFilters;\n    });\n    return { propRes: propRes, numFilters: num };\n  }\n  // helpers\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button *ngIf=\\\"!isEdit\\\" style=\\\"color: white !important\\\"></ion-back-button>\\n      <ion-menu-button *ngIf=\\\"isEdit\\\" style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Registro\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-grid fixed>\\n    <form #loginForm=\\\"ngForm\\\">\\n      <ng-container *ngIf=\\\"user.id !== undefined; then OldUser; else NewUser\\\"></ng-container>\\n      <ng-template #OldUser>\\n        <!-- Usuario ya registrado -->\\n        <ion-card *ngIf=\\\"!isCorrect || isEdit\\\">\\n          <ion-card-header>\\n            <ion-card-title text-wrap> Ingrese Datos del Cliente</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n\\n            <!-- email -->\\n            <mdc-text-field label=\\\"Correo\\\" [(ngModel)]=\\\"newBuyer.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\"\\n              required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"email.dirty || email.touched\\\">Anota Correo</span>\\n            </mdc-text-field-helper-text>\\n\\n          </ion-card-content>\\n          <ion-button *ngIf=\\\"isCorrect === false\\\" color=\\\"warning\\\">Usuario Repetido Verifique\\n            los datos</ion-button>\\n          <div style=\\\"text-align: right\\\">\\n            <ion-button [disabled]=\\\"!loginForm.form.valid\\\" *ngIf=\\\"!isCorrect\\\" color=\\\"primary\\\" (click)=\\\"check()\\\" slot=\\\"end\\\">Verificar</ion-button>\\n            <ion-button *ngIf=\\\"isCorrect === true\\\" color=\\\"success\\\" (click)=\\\"check()\\\" slot=\\\"end\\\">Correcto, puede\\n              continuar</ion-button>\\n\\n\\n          </div>\\n        </ion-card>\\n      </ng-template>\\n      <ng-template #NewUser>\\n        <!-- Nuevo usuario -->\\n        <ion-card>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"isCorrectEmail === false\\\">\\n            El correo ya esta en uso, intente uno distinto\\n          </div>\\n          <ion-card-header>\\n            <ion-card-title> Ingrese su Correo</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n\\n            <!-- email -->\\n            <mdc-text-field label=\\\"Correo\\\" [(ngModel)]=\\\"newBuyer.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\"\\n              required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"email.dirty || email.touched\\\">Anota Correo</span>\\n            </mdc-text-field-helper-text>\\n          </ion-card-content>\\n          <div style=\\\"text-align: right\\\">\\n            <ion-button [disabled]=\\\"!loginForm.form.valid || isCorrectEmail\\\" [color]=\\\"isCorrectEmail !== true ? 'secondary' : 'success' \\\"\\n              (click)=\\\"checkAndSend()\\\" slot=\\\"end\\\">\\n              <ion-spinner *ngIf=\\\"loadButton\\\" color=\\\"dark\\\"></ion-spinner>\\n              <ion-icon *ngIf=\\\"isCorrectEmail\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n              {{isCorrectEmail !== true ? 'Registrar':'Registrado'}}\\n            </ion-button>\\n          </div>\\n        </ion-card>\\n        <ion-card *ngIf=\\\"isCorrectEmail\\\">\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"isCorrectCode === false\\\">\\n            Código no válido, intente de nuevo\\n          </div>\\n          <div class=\\\"alert alert-success\\\" *ngIf=\\\"isCorrectCode === true\\\">\\n            Correcto puede continuar\\n          </div>\\n          <ion-card-header>\\n            <ion-card-title> Ingrese su Código</ion-card-title>\\n          </ion-card-header>\\n\\n          <ion-card-content>\\n            <!-- code -->\\n            <mdc-text-field label=\\\"Código\\\" [(ngModel)]=\\\"code\\\" #codeInput=\\\"ngModel\\\" id=\\\"codeInput\\\" name=\\\"codeInput\\\" type=\\\"number\\\"\\n              required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"email.dirty || email.touched\\\">Anota Código</span>\\n            </mdc-text-field-helper-text>\\n          </ion-card-content>\\n          <div style=\\\"text-align: right\\\">\\n            <ion-button [disabled]=\\\"!codeInput.value || isCorrectCode \\\" [color]=\\\"isCorrectCode !== true ? 'secondary' : 'success' \\\"\\n              (click)=\\\"checkCode()\\\" slot=\\\"end\\\">\\n              <ion-spinner *ngIf=\\\"loadButtonV\\\" color=\\\"dark\\\"></ion-spinner>\\n              <ion-icon *ngIf=\\\"isCorrectCode\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n              {{isCorrectCode !== true ? 'Verificar': 'Verificado'}}\\n            </ion-button>\\n            <ion-button color=\\\"primary\\\" [disabled]=\\\"!email.value|| isCorrectCode\\\" (click)=\\\"checkAndSend(); code= undefined\\\"\\n              slot=\\\"end\\\">\\n              <ion-spinner *ngIf=\\\"loadButton\\\" color=\\\"dark\\\"></ion-spinner>\\n              Generar Nuevo\\n            </ion-button>\\n          </div>\\n        </ion-card>\\n\\n      </ng-template>\\n\\n\\n    </form>\\n    <!--  -->\\n    <form #loginForm2=\\\"ngForm\\\">\\n      <div *ngIf=\\\"isCorrect\\\">\\n        <!-- Info personal -->\\n        <div class=\\\"flex-container\\\" *ngIf=\\\"numOfForm === 0\\\">\\n          <div class=\\\"flex-title\\\">\\n            <h3><span class=\\\"numberCircle\\\">1</span></h3>\\n            <h3>Información Personal</h3>\\n          </div>\\n          <!-- nombre -->\\n          <mdc-text-field label=\\\"Nombre\\\" [(ngModel)]=\\\"newBuyer.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required\\n            [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n            <span *ngIf=\\\"name.dirty || name.touched\\\">Anota nombre</span>\\n          </mdc-text-field-helper-text>\\n          <!-- 1 apellido -->\\n          <mdc-text-field label=\\\"Apellido Paterno\\\" [(ngModel)]=\\\"newBuyer.fatherLastName\\\" #fatherLastName=\\\"ngModel\\\" id=\\\"fatherLastName\\\"\\n            name=\\\"fatherLastName\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n            <span *ngIf=\\\"fatherLastName.dirty || fatherLastName.touched\\\">Anota Apellido</span>\\n          </mdc-text-field-helper-text>\\n          <!-- 2 apellido -->\\n\\n          <mdc-text-field label=\\\"Apellido Materno\\\" [(ngModel)]=\\\"newBuyer.motherLastName\\\" #motherLastName=\\\"ngModel\\\" id=\\\"motherLastName\\\"\\n            name=\\\"motherLastName\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n          <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n            <span *ngIf=\\\"motherLastName.dirty || motherLastName.touched\\\">Anota Apellido</span>\\n          </mdc-text-field-helper-text>\\n          <div>\\n            <!-- telefono -->\\n            <mdc-text-field label=\\\"Telefono\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.phone\\\" #phone=\\\"ngModel\\\" id=\\\"phone\\\"\\n              name=\\\"phone\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"phone.dirty || phone.touched\\\">Anota telefono</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!--password -->\\n          <div>\\n            <mdc-text-field label=\\\"Contraseña\\\" [(ngModel)]=\\\"newBuyer.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\" name=\\\"password\\\"\\n              type=\\\"password\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"password.dirty || password.touched\\\">Anota Contraseña</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!--years -->\\n          <div>\\n            <mdc-text-field label=\\\"Edad\\\" [(ngModel)]=\\\"newBuyer.years\\\" #years=\\\"ngModel\\\" id=\\\"years\\\" name=\\\"years\\\" type=\\\"number\\\"\\n              required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"years.dirty || years.touched\\\">Anota Edad</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- numOfFamily -->\\n          <div>\\n            <mdc-text-field label=\\\"Número de familiares\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numOfFamily\\\" #numOfFamily=\\\"ngModel\\\"\\n              id=\\\"numOfFamily\\\" name=\\\"numOfFamily\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"numOfFamily.dirty || numOfFamily.touched\\\">Anota Numero</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- isMale -->\\n          <div>\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n              <ion-label>Género</ion-label>\\n              <ion-select [(ngModel)]=\\\"newBuyer.isMale\\\" #isMale=\\\"ngModel\\\" id=\\\"isMale\\\" name=\\\"isMale\\\" required>\\n                <ion-select-option value=\\\"false\\\">Mujer</ion-select-option>\\n                <ion-select-option value=\\\"true\\\">Hombre</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n\\n\\n          <!-- isSingle -->\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>\\n              Soltero\\n            </ion-label>\\n            <ion-toggle [(ngModel)]=\\\"newBuyer.isSingle\\\" #isSingle=\\\"ngModel\\\" id=\\\"isSingle\\\" name=\\\"isSingle\\\" mode=\\\"md\\\"\\n              slot=\\\"end\\\"></ion-toggle>\\n          </ion-item>\\n          <div class=\\\"flex-button \\\">\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"numOfForm = numOfForm + 1\\\" slot=\\\"end\\\">Continuar</ion-button>\\n          </div>\\n\\n\\n\\n        </div>\\n        <!-- carct -->\\n        <div class=\\\"flex-container\\\" *ngIf=\\\"numOfForm === 1\\\">\\n          <div class=\\\"flex-title\\\">\\n            <h3><span class=\\\"numberCircle\\\">2</span></h3>\\n            <h3>Características de la Propiedad</h3>\\n          </div>\\n          <!-- tipo de propiedad\\n                    casa\\n        departamento\\n        terreno\\n        nave industrial\\n                   -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Tipo de Propiedad</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.typeOfProperty\\\" #typeOfProperty=\\\"ngModel\\\" id=\\\"typeOfProperty\\\" name=\\\"typeOfProperty\\\"\\n              required placeholder=\\\"Tipo\\\">\\n              <ion-select-option value=\\\"casa\\\">Casa</ion-select-option>\\n              <ion-select-option value=\\\"departamento\\\">Departamento</ion-select-option>\\n              <ion-select-option value=\\\"nave industrial\\\">Nave Industrial</ion-select-option>\\n              <ion-select-option value=\\\"terreno\\\">Terreno</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n\\n          <!-- space -->\\n          <div>\\n            <mdc-text-field label=\\\"Espacio(metros)\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\"\\n              name=\\\"space\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"space.dirty || space.touched\\\">Anota Espacio</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- Compra/renta -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label text-wrap>Comprar/Rentar</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.isRenter\\\" #isRenter=\\\"ngModel\\\" id=\\\"isRenter\\\" name=\\\"isRenter\\\" required>\\n              <ion-select-option value=\\\"false\\\">Comprar</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Rentar</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- Nuevo/Usado -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Estado</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.isOld\\\" #isOld=\\\"ngModel\\\" id=\\\"isOld\\\" name=\\\"isOld\\\" required>\\n              <ion-select-option value=\\\"false\\\">Nuevo</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Usado</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- minPrice -->\\n          <div>\\n            <mdc-text-field label=\\\"Precio Minimo\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\"\\n              name=\\\"minPrice\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"minPrice.dirty || minPrice.touched\\\">Anota Precio</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- maxPrice -->\\n          <div>\\n            <mdc-text-field label=\\\"Precio Máximo\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\"\\n              name=\\\"maxPrice\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"maxPrice.dirty || maxPrice.touched\\\">Anota Precio</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n          <div class=\\\"flex-button \\\">\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" (click)=\\\"numOfForm = numOfForm - 1\\\" slot=\\\"end\\\">Regresar</ion-button>\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"numOfForm = numOfForm + 1\\\" slot=\\\"end\\\">Continuar</ion-button>\\n          </div>\\n        </div>\\n        <div class=\\\"flex-container\\\" *ngIf=\\\"numOfForm === 2\\\">\\n          <div class=\\\"flex-title\\\">\\n            <h3><span class=\\\"numberCircle\\\">3</span></h3>\\n            <h3>Propiedad Ideal</h3>\\n          </div>\\n\\n\\n          <!-- numRooms -->\\n          <div>\\n            <mdc-text-field label=\\\"Num. mínimo cuartos\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numRooms\\\" #numRooms=\\\"ngModel\\\"\\n              id=\\\"numRooms\\\" name=\\\"numRooms\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"numRooms.dirty || numRooms.touched\\\">Anota Cuartos</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- numCars -->\\n          <div>\\n            <mdc-text-field label=\\\"lugares estacionamiento\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numCars\\\" #numCars=\\\"ngModel\\\"\\n              id=\\\"numCars\\\" name=\\\"numCars\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"numCars.dirty || numCars.touched\\\">Anota Número</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- numBathrooms -->\\n          <div>\\n            <mdc-text-field label=\\\"Baños\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBuyer.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\" id=\\\"numBathrooms\\\"\\n              name=\\\"numBathrooms\\\" required [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"numBathrooms.dirty || numBathrooms.touched\\\">Anota Número</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n\\n          <!-- isClose -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label text-wrap>Fraccionamiento</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.isClose\\\" #isClose=\\\"ngModel\\\" id=\\\"isClose\\\" name=\\\"isClose\\\" required>\\n              <ion-select-option value=\\\"false\\\">Abierto</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Cerrado</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- hasGarden -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Jardin</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.hasGarden\\\" #hasGarden=\\\"ngModel\\\" id=\\\"hasGarden\\\" name=\\\"hasGarden\\\" required>\\n              <ion-select-option value=\\\"false\\\">Sin Jardin</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Con Jardin</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- isLowLevel -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Planta Baja</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.isLowLevel\\\" #isLowLevel=\\\"ngModel\\\" id=\\\"isLowLevel\\\" name=\\\"isLowLevel\\\"\\n              required>\\n              <ion-select-option value=\\\"false\\\">Cualquiera</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Planta Baja</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- hasElevator -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Elevador</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.hasElevator\\\" #hasElevator=\\\"ngModel\\\" id=\\\"hasElevator\\\" name=\\\"hasElevator\\\"\\n              required>\\n              <ion-select-option value=\\\"false\\\">No importa</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Con Elevador</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- allServices -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Servicios</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.allServices\\\" #allServices=\\\"ngModel\\\" id=\\\"allServices\\\" name=\\\"allServices\\\"\\n              required>\\n              <ion-select-option value=\\\"false\\\">No importa</ion-select-option>\\n              <ion-select-option value=\\\"true\\\">Todos los servicios</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <div class=\\\"flex-button \\\">\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" (click)=\\\"numOfForm = numOfForm - 1\\\" slot=\\\"end\\\">Regresar</ion-button>\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"numOfForm = numOfForm + 1\\\" slot=\\\"end\\\">Continuar</ion-button>\\n          </div>\\n        </div>\\n        <div class=\\\"flex-container\\\" *ngIf=\\\"numOfForm === 3\\\">\\n          <div class=\\\"flex-title\\\">\\n            <h3><span class=\\\"numberCircle\\\">4</span></h3>\\n            <h3>Ubicación y fecha</h3>\\n          </div>\\n          <!-- Fecha a comprar -->\\n          <div>\\n            <ion-label text-wrap>Anota la posible fecha de compra o renta</ion-label>\\n            <!-- day -->\\n            <mdc-text-field label=\\\"Dia\\\" type=\\\"number\\\" [(ngModel)]=\\\"daySelect\\\" #d=\\\"ngModel\\\" id=\\\"d\\\" name=\\\"d\\\" required\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"d.dirty || d.touched\\\">Anota Dia</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <!-- mm -->\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Mes</ion-label>\\n            <ion-select [(ngModel)]=\\\"monthSelect\\\" #me=\\\"ngModel\\\" id=\\\"me\\\" name=\\\"me\\\" required>\\n              <ion-select-option *ngFor=\\\"let m of months; let i = index\\\" [value]=\\\"i + 1\\\">{{m}}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- aa -->\\n          <div>\\n            <mdc-text-field label=\\\"Año\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearSelect\\\" #y=\\\"ngModel\\\" id=\\\"y\\\" name=\\\"y\\\" required\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"y.dirty || y.touched\\\">Anota Año</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n          <!-- <mat-form-field>\\n            <input matInput (dateChange)=\\\"dateSelect($event)\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\"\\n              placeholder=\\\"Fecha\\\" required>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker></mat-datepicker>\\n          </mat-form-field> -->\\n\\n          <!-- city -->\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label>Ciudad</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\n              <ion-select-option value=\\\"puebla\\\">Puebla</ion-select-option>\\n              <ion-select-option value=\\\"mexico\\\">Mexico</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <!-- zone -->\\n          <div>\\n            <mdc-text-field label=\\\"Zona\\\" [(ngModel)]=\\\"newBuyer.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\" required\\n              [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n            <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n              <span *ngIf=\\\"zone.dirty || zone.touched\\\">Anota Zona</span>\\n            </mdc-text-field-helper-text>\\n          </div>\\n\\n          <div class=\\\"flex-button \\\">\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" (click)=\\\"numOfForm = numOfForm - 1\\\" slot=\\\"end\\\">Regresar</ion-button>\\n            <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"numOfForm = numOfForm + 1\\\" slot=\\\"end\\\">Continuar</ion-button>\\n          </div>\\n        </div>\\n        <div class=\\\"flex-container\\\" *ngIf=\\\"numOfForm === 4\\\">\\n          <div class=\\\"flex-title\\\">\\n            <h3><span class=\\\"numberCircle\\\">5</span></h3>\\n            <h3>Forma de Compra</h3>\\n          </div>\\n          <!-- wayToBuy FOVISSTE, IMSS, contado, PEMEX, Infonavit, aliados, otros -->\\n\\n          <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n            <ion-label text-wrap>Forma de Comprar</ion-label>\\n            <ion-select [(ngModel)]=\\\"newBuyer.wayToBuy\\\" #wayToBuy=\\\"ngModel\\\" id=\\\"wayToBuy\\\" name=\\\"wayToBuy\\\" required>\\n              <ion-select-option value=\\\"FOVISSTE\\\">FOVISSTE</ion-select-option>\\n              <ion-select-option value=\\\"IMSS\\\">IMSS</ion-select-option>\\n              <ion-select-option value=\\\"contado\\\">contado</ion-select-option>\\n              <ion-select-option value=\\\"PEMEX\\\">Pemex</ion-select-option>\\n              <ion-select-option value=\\\"infonavit\\\">Infonavit</ion-select-option>\\n              <ion-select-option value=\\\"infonavit\\\">Aliados</ion-select-option>\\n              <ion-select-option value=\\\"otros\\\">Otros</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <div>\\n            <ion-label text-wrap>Anota palabras clave separadas por comas para una mejor búsqueda (ej: casa,\\n              departamento,\\n              mascotas)</ion-label>\\n            <mdc-textarea [(ngModel)]=\\\"words\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Palabras\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div style=\\\"text-align: right\\\" *ngIf=\\\"isCorrect && numOfForm === 4 \\\">\\n        <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" (click)=\\\"numOfForm = numOfForm - 1\\\" slot=\\\"end\\\">Regresar</ion-button>\\n        <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"checkUser()\\\" slot=\\\"end\\\" *ngIf=\\\"!isEdit\\\">Crear</ion-button>\\n        <ion-button [disabled]=\\\"!loginForm2.form.valid\\\" color=\\\"secondary\\\" (click)=\\\"editUser()\\\" slot=\\\"end\\\" *ngIf=\\\"isEdit\\\">Editar</ion-button>\\n      </div>\\n    </form>\\n    <!--  -->\\n\\n\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".margin-field {\\n  margin-top: 20px; }\\n\\n.flex-container {\\n  /* display: flex;\\n    flex-direction: column;\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n.flex-title {\\n  display: flex;\\n  align-items: baseline;\\n  width: 100% !important; }\\n\\n.chips-detail {\\n  font-size: 1.3em; }\\n\\n.numberCircle {\\n  background: #cccccc;\\n  border-radius: 0.8em;\\n  -moz-border-radius: 0.8em;\\n  -webkit-border-radius: 0.8em;\\n  color: #ffffff;\\n  display: inline-block;\\n  font-weight: bold;\\n  line-height: 1.6em;\\n  margin-right: 5px;\\n  text-align: center;\\n  width: 1.6em; }\\n\\n.flex-button {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-end;\\n  width: 100% !important; }\\n\\n.alert {\\n  position: relative;\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 1rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem; }\\n\\n.alert-danger {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb; }\\n\\n.alert-success {\\n  color: #155724;\\n  background-color: #d4edda;\\n  border-color: #c3e6cb; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { fromEvent } from 'rxjs';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport {\n  NavController,\n  LoadingController,\n  AlertController,\n} from '@ionic/angular';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { MailService } from '../../../services/mail.service';\n\n@Component({\n  selector: 'app-new-buyer',\n  templateUrl: './new-buyer.component.html',\n  styleUrls: ['./new-buyer.component.scss'],\n})\nexport class NewBuyerComponent implements OnInit {\n  newBuyer: IBuyer = {};\n  isCorrect: boolean;\n  isCorrectEmail: boolean;\n  isCorrectCode: boolean;\n  // ver elemento en scroll\n  @ViewChild('product')\n  productSelect: ElementRef;\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  monthSelect: number;\n  yearSelect: number;\n  daySelect: number;\n  words: string;\n  isEdit = false;\n  numOfForm = 0;\n  user: IUserSession;\n  loadButton = false;\n  loadButtonV = false;\n  code: any;\n  constructor(\n    private buyerService: BuyerService,\n    private userSession: UserSessionService,\n    private navController: NavController,\n    public loadingController: LoadingController,\n    private route: ActivatedRoute,\n    private router: Router,\n    private adviseService: AdviserService,\n    private mailService: MailService,\n    private alertController: AlertController,\n  ) {\n    const buyerId = userSession.userSession.value.id;\n    const user = userSession.userSession.value;\n    this.user = user;\n    console.log(user);\n    if (buyerId && user.type === 'buyer') {\n      this.edit(buyerId);\n    }\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.edit(params['id']);\n      }\n    });\n  }\n  edit(id) {\n    this.buyerService.getBuyerById(id).subscribe(buyer => {\n      Object.keys(buyer).forEach(key => {\n        if (buyer[key] === false) {\n          buyer[key] = 'false';\n        } else if (buyer[key] === true) {\n          buyer[key] = 'true';\n        }\n      });\n      this.newBuyer = buyer;\n      this.words = '';\n      this.newBuyer.tag.forEach((word, i) => {\n        if (this.newBuyer.tag.length === i + 1) {\n          this.words += word;\n        } else {\n          this.words += word + ',';\n        }\n      });\n      const date = this.newBuyer.dateToBuy.split('/');\n      this.daySelect = +date[0];\n      this.monthSelect = +date[1];\n      this.yearSelect = +date[2];\n      this.isEdit = true;\n      this.isCorrect = true;\n    });\n  }\n\n  check() {\n    this.buyerService.checkBuyer(this.newBuyer).subscribe(buyer => {\n      if (buyer === null) {\n        this.isCorrect = true;\n      } else {\n        this.isCorrect = false;\n      }\n    });\n  }\n  checkAndSend() {\n    this.loadButton = true;\n    this.buyerService.checkBuyer(this.newBuyer).subscribe(async buyer => {\n      if (buyer === null) {\n        await this.mailService.addEmail(this.newBuyer.email).toPromise();\n        this.presentAlert(\n          'Verificar Correo',\n          this.newBuyer.email,\n          'Se le ha enviado un correo con su código de verificación, favor de revisar en 📧 Spam ',\n          ['OK'],\n        );\n        this.isCorrectEmail = true;\n      } else {\n        this.isCorrectEmail = false;\n      }\n      this.loadButton = false;\n    });\n  }\n  async checkCode() {\n    this.loadButtonV = true;\n    this.isCorrectCode = await this.mailService\n      .findEmail(this.newBuyer.email, this.code)\n      .toPromise();\n    this.loadButtonV = false;\n    if (this.isCorrectCode) {\n      this.isCorrect = this.isCorrectCode;\n    }\n  }\n\n  async checkUser() {\n    const user1 = this.userSession.userSession.value;\n    const load = await this.presentLoadingWithOptions('Registrando...');\n    load.present();\n    if (this.words) {\n      this.newBuyer.tag = this.words.split(',');\n    }\n    this.newBuyer.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\n      this.yearSelect\n    }`;\n    if (user1.type && user1.type === 'adviser') {\n      const arr: any = [user1.id];\n      this.newBuyer.adviser = arr;\n    }\n    this.buyerService.newBuyer(this.newBuyer).subscribe(buyer => {\n      const user = this.userSession.userSession.value;\n      // data  administrator buyer seller adviser management\n      // ADMIN\n      if (\n        user.type &&\n        (user.type === 'administrator' || user.type === 'office')\n      ) {\n        // this.router.navigate(['list-buyer-admin']);\n        const toast: NavigationExtras = {\n          queryParams: { res: ' Comprador Creado' },\n        };\n        /**\n         * Es para recargar el componente previo\n         */\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-buyer-admin'], toast));\n        // ADVISER\n      } else if (user.type && user.type === 'adviser') {\n        this.adviseService.getAdviserById(user.id).subscribe(adv => {\n          adv.buyer.push(buyer);\n          this.adviseService.putAdviser(adv).subscribe(() => {\n            const toast: NavigationExtras = {\n              queryParams: { res: ' Comprador Creado' },\n            };\n            /**\n             * Es para recargar el componente previo\n             */\n            this.router\n              .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n              .then(() => this.router.navigate(['list-buyer-admin'], toast));\n          });\n        });\n        // NEW\n      } else {\n        if (buyer) {\n          this.userSession\n            .logginUserSession(buyer.email, buyer.password)\n            .subscribe(data => {\n              // data  administrator buyer seller adviser management\n              if (data !== 'error') {\n                this.userSession.setUserSession(\n                  data.data[0].name,\n                  data.type,\n                  data.data[0]._id,\n                  data.data[0].password,\n                  data.data[0].email,\n                  data.token,\n                );\n                this.navController.navigateRoot('list-prop-buyer', false);\n              }\n            });\n          /*   console.log(buyer);\n          this.userSession.setUserSession(\n            buyer.name,\n            'buyer',\n            buyer._id,\n            buyer.password,\n            buyer.email,\n            data.token\n\n          );\n          this.navController.navigateRoot('list-prop-buyer', false); */\n        }\n      }\n\n      load.dismiss();\n    });\n  }\n  async editUser() {\n    const load = await this.presentLoadingWithOptions('Editando...');\n    load.present();\n    this.newBuyer.tag = this.words.split(',');\n    this.newBuyer.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\n      this.yearSelect\n    }`;\n    this.buyerService.putBuyer(this.newBuyer).subscribe(val => {\n      const user = this.userSession.userSession.value;\n      // data  administrator buyer seller adviser management\n      if (user.type && user.type !== 'buyer') {\n        // this.navController.navigateRoot('list-buyer-admin');\n        // this.router.navigate('/list-buyer-admin');\n        const toast: NavigationExtras = {\n          queryParams: { res: ' Comprador Editado' },\n        };\n        /**\n         * Es para recargar el componente previo\n         */\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-buyer-admin'], toast));\n      } else {\n        if (val) {\n          this.navController.navigateRoot('list-prop-buyer', false);\n        }\n      }\n\n      load.dismiss();\n    });\n  }\n  async presentLoadingWithOptions(message) {\n    const loading = await this.loadingController.create({\n      message: message,\n      translucent: true,\n    });\n    return await loading;\n  }\n  async presentAlert(header, subHeader, message, buttons: string[]) {\n    const alert = await this.alertController.create({\n      header: header,\n      subHeader: subHeader,\n      message: message,\n      buttons: buttons,\n    });\n\n    await alert.present();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Ofertas\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'menu'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Ofertas'\\\" [buttonUser]=\\\"'person'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content padding>\\n  <!-- cargar -->\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <!-- si cargado -->\\n  <ng-template #thenTemplate>\\n    <ng-container *ngIf=\\\"hasOfert; then Ofert; else noOfert\\\"></ng-container>\\n    <!-- sin oferta -->\\n    <ng-template #noOfert>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-subtitle>Sin Ofertas</ion-card-subtitle>\\n          <ion-card-title text-wrap>Puede generar una oferta cuando haga una visita a la propiedad de interés</ion-card-title>\\n\\n        </ion-card-header>\\n      </ion-card>\\n    </ng-template>\\n    <!-- con oferta -->\\n    <ng-template #Ofert>\\n      <ion-card *ngFor=\\\"let ofert of oferts\\\" [ngClass]=\\\"\\n        {\\n        'state-amarillo': ofert.status === 'amarillo',\\n        'state-rojo': ofert.status === 'rojo',\\n        'state-verde': ofert.status === 'verde'\\n         }\\\">\\n        <span *ngIf=\\\"ofert.status === 'amarillo'\\\">\\n          <ion-card-header>\\n            <ion-card-subtitle>Estado: Negociación</ion-card-subtitle>\\n            <ion-card-title text-wrap>Favor de Responder</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content text-wrap>\\n            <ion-label text-wrap>Oferta para la propiedad: <b>{{ofert.property.name}}</b></ion-label>\\n            <ion-label text-wrap>Oferta por: <b>${{ofert.ofertPrice}}</b></ion-label>\\n            <ion-label text-wrap>Detalles de la oferta : {{ofert.notes}}</ion-label>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-list-header text-wrap> Documentos Requeridos:</ion-list-header>\\n              <ion-item lines=\\\"none\\\" *ngFor=\\\"let doc of ofert.files\\\">{{doc}}</ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n          <!-- Poner en notes Aceptado o Denagado -->\\n\\n          <ion-item lines=\\\"none\\\">\\n            <ion-button (click)=\\\"respondOfert('Aceptada', ofert, true)\\\" color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n              Aceptar <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"respondOfert('Denagada', ofert, false)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n              Denegar <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n            </ion-button>\\n\\n          </ion-item>\\n\\n        </span>\\n        <span *ngIf=\\\"ofert.status === 'rojo'\\\">\\n          <ion-card-header>\\n            <ion-card-subtitle>Estado: Respuesta de Oferta</ion-card-subtitle>\\n            <!-- Poner en notes Aceptado o Denagado -->\\n            <ion-card-title text-wrap> Oferta: {{ofert.notes}}</ion-card-title>\\n            <ion-card-content text-wrap>\\n              <ion-label text-wrap *ngIf=\\\"ofert.notes === 'Aceptada' \\\"> Propiedad <b>{{ofert.property.name\\n                  }}</b>\\n                Apartada</ion-label>\\n\\n            </ion-card-content>\\n          </ion-card-header>\\n        </span>\\n        <span *ngIf=\\\"ofert.status === 'verde'\\\">\\n          <ion-card-header>\\n            <ion-card-subtitle text-wrap>Estado: En espera de respuesta</ion-card-subtitle>\\n            <!-- Poner en notes Aceptado o Denagado -->\\n            <ion-card-title text-wrap> Oferta Generada </ion-card-title>\\n            <ion-card-content text-wrap>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label text-wrap>\\n                  <b>Oferta por:</b> ${{ofert.apartOfert}}.00\\n                </ion-label>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label text-wrap>\\n                  <b>Propiedad:</b> {{ofert.property.name}}\\n                </ion-label>\\n              </ion-item>\\n\\n            </ion-card-content>\\n          </ion-card-header>\\n        </span>\\n      </ion-card>\\n    </ng-template>\\n    <!-- con posibilidad de generar oferta -->\\n    <div *ngIf=\\\"propForOfert.length > 0\\\">\\n      <ion-card *ngFor=\\\"let sbp of propForOfert; let i = index\\\">\\n        <ion-card-header>\\n          <ion-card-subtitle text-wrap>Generar oferta para {{sbp.property.name}} </ion-card-subtitle>\\n          <ion-card-title text-wrap>Crear Oferta</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-label text-wrap>Apartar <b> {{sbp.property.name}}</b> con:</ion-label>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-range #range id=\\\"range{{i}}\\\" min=\\\"5000\\\" max=\\\"50000\\\" step=\\\"500\\\" color=\\\"secondary\\\" pin=\\\"true\\\">\\n              <ion-icon slot=\\\"start\\\" size=\\\"small\\\" name=\\\"cash\\\"></ion-icon>\\n              <ion-icon slot=\\\"end\\\" name=\\\"cash\\\"></ion-icon>\\n            </ion-range>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label text-wrap slot=\\\"end\\\" *ngIf=\\\"range.value\\\">Monto: {{'$' + range.value + '.00'}}</ion-label>\\n          </ion-item>\\n          <ion-item text-wrap lines=\\\"none\\\">\\n            <ion-label text-wrap>Forma de Pago</ion-label>\\n            <ion-select #wayToBuy text-wrap placeholder=\\\"\\\" cancelText=\\\"Cancelar\\\">\\n              <ion-select-option value=\\\"FOVISSTE\\\">FOVISSTE</ion-select-option>\\n              <ion-select-option value=\\\"IMSS\\\">IMSS</ion-select-option>\\n              <ion-select-option value=\\\"contado\\\">contado</ion-select-option>\\n              <ion-select-option value=\\\"PEMEX\\\">PEMEX</ion-select-option>\\n              <ion-select-option value=\\\"Infonavit\\\">Infonavit</ion-select-option>\\n              <ion-select-option value=\\\"otros\\\">otros</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n\\n        </ion-card-content>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-button [disabled]=\\\"!wayToBuy.value || !range.value \\\" (click)=\\\"makeOfert(wayToBuy.value, range.value, sbp.property )\\\"\\n            color=\\\"secondary\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n            Crear <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n          </ion-button>\\n        </ion-item>\\n\\n      </ion-card>\\n    </div>\\n  </ng-template>\\n  <!-- no cargado -->\\n  <ng-template #elseTemplate>\\n    <ion-skeleton-text width=40px></ion-skeleton-text>\\n    <ion-skeleton-text width=200px></ion-skeleton-text>\\n    <ion-skeleton-text width=600px></ion-skeleton-text>\\n    <ion-skeleton-text width=100px></ion-skeleton-text>\\n    <ion-skeleton-text width=80px></ion-skeleton-text>\\n  </ng-template>\\n\\n  <!-- /cargar -->\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { IOfert } from '../../../models/ofert.model';\nimport { ToastController } from '@ionic/angular';\nimport { OfertService } from '../../../services/ofert.service';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport {\n  IStatusBuyerProperty,\n  IStatusBuyerPropertyGet\n} from '../../../models/statusBuyerProperty.model';\nimport { IProperty } from '../../../models/property.model';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { PropertyService } from '../../../services/property.service';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { map } from 'rxjs/operators';\nimport { SellerService } from '../../../services/seller.service';\n\n@Component({\n  selector: 'app-ofert-buyer',\n  templateUrl: './ofert-buyer.component.html',\n  styleUrls: ['./ofert-buyer.component.scss']\n})\nexport class OfertBuyerComponent implements OnInit {\n  isLoad = false;\n  hasOfert = false;\n  oferts: IOfert[];\n  statusBuyerProperty: IStatusBuyerProperty[];\n  buyer: IBuyer;\n  propForOfert: IStatusBuyerPropertyGet[] = [];\n  newOfert: IOfert = {};\n\n  constructor(\n    private userSessionService: UserSessionService,\n    private buyerService: BuyerService,\n    public toastController: ToastController,\n    private ofertService: OfertService,\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\n    private propertyService: PropertyService,\n    private oneSignalService: OnesignalService,\n    private sellerService: SellerService\n  ) {\n    this.getOfert();\n  }\n\n  ngOnInit() {}\n\n  getOfert() {\n    const buyerId = this.userSessionService.userSession.value.id;\n    this.buyerService.getBuyerById(buyerId).subscribe(buyer => {\n      console.log(buyer);\n      this.buyer = buyer;\n      const findOfertByProp = id => {\n        return buyer.ofert.some(o => o.property._id === id);\n      };\n      // si tiene una prop mayor que verde o si no tiene una oferta generada\n      this.propForOfert = buyer.statusBuyerProperty.filter(\n        sBP => sBP.status !== 'verde' && !findOfertByProp(sBP.property._id)\n      );\n      console.log('ofetas dis', this.propForOfert);\n      if (buyer.ofert.length > 0) {\n        this.hasOfert = true;\n        this.oferts = buyer.ofert;\n        this.statusBuyerProperty = buyer.statusBuyerProperty;\n      }\n      this.isLoad = true;\n    });\n  }\n  respondOfert(str: string, ofert: IOfert, isAccept: boolean) {\n    const buyer = this.userSessionService.userSession.value;\n    const find = this.statusBuyerProperty.find(\n      (s: any) => s.property._id === ofert.property._id\n    );\n    this.statusBuyerPropertyService\n      .upgradeStatus(find._id, 'rojo')\n      .subscribe(c => {\n        /* if (isAccept) {\n          const prop = ofert.property;\n          prop.dateToApart = new Date();\n          this.propertyService\n            .putProperty(prop)\n            .subscribe(() => console.log('date'));\n        } */\n      });\n    ofert.status = 'rojo';\n    ofert.notes = str;\n    ofert.isAccept = isAccept;\n    this.ofertService.putOfert(ofert).subscribe(async res => {\n      // vendedor id notifica\n      const seller = await this.getSellerOfProperty(ofert.property._id);\n      // arr de ids\n      const arr = this.buyer.adviser\n        .map(a => a._id)\n        .concat(seller === undefined ? undefined : seller._id);\n      const dateToSchedule = new Date(new Date().getTime() + 15 * 86400000);\n      if (res) {\n        this.notification(\n          'Respuesta de oferta',\n          `La oferta del ${buyer.name} para la propiedad: \"${\n            ofert.property.name\n          }\" ha sido ${str}`,\n          ofert.status,\n          'ofert',\n          ['office', 'administrator'],\n          seller === undefined ? undefined : [seller._id]\n        );\n        if (isAccept) {\n          ofert.property.dateToApart = dateToSchedule;\n          this.propertyService.putProperty(ofert.property).subscribe();\n          this.notificationBySchedule(\n            'Tiempo de Apartado Superado',\n            `El tiempo de espera ha superado los 15 dias para la oferta de la propiedad: ${\n              ofert.property.name\n            } del cliente ${this.userSessionService.userSession.value.name}`,\n            ['office', 'administrator'],\n            arr,\n            dateToSchedule,\n            ofert\n          );\n        }\n        this.getOfert();\n        this.presentToast('Oferta ' + str);\n      }\n    });\n  }\n  // hacer oferta nueva\n  makeOfert(wayToBuy: string, apartOfert: number, property: IProperty) {\n    const user = this.userSessionService.userSession.value;\n    this.newOfert = {\n      apartOfert,\n      wayToBuy,\n      buyer: <any>user.id,\n      notes: 'Nueva Oferta',\n      status: 'verde',\n      property: <any>property._id\n    };\n    this.ofertService.newOfert(this.newOfert).subscribe(async ofert => {\n      this.buyer.ofert.push(ofert);\n      this.buyerService.putBuyer(this.buyer).subscribe();\n      console.log('new ofert', ofert);\n      // vendedor id notifica\n      const seller = await this.getSellerOfProperty(property._id);\n      // arr de ids\n      /* const arr = this.buyer.adviser\n        .map(a => a._id)\n        .concat(seller === undefined ? undefined : seller._id); */\n      this.notification(\n        'Nueva Oferta',\n        `El comprador: ${user.name} ha generado una oferta para ${\n          property.name\n        }, con un adelanto de $ ${apartOfert}.00`,\n        ofert.status,\n        'ofert',\n        ['office', 'administrator'],\n        seller === undefined ? undefined : [seller._id]\n      );\n      this.getOfert();\n      this.presentToast('Oferta Generada');\n    });\n  }\n  // toast\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n  public notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    reciversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: reciversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(\n        notification.title,\n        message,\n        ['office', 'administrator'],\n        reciversId\n      )\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  private notificationBySchedule(\n    title,\n    message,\n    tags: string[],\n    reciversId: string[],\n    date: Date,\n    ofert: IOfert\n  ) {\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(title, message, date, tags, reciversId)\n      .subscribe(data => {\n        if (!ofert.notificationOneSignal) {\n          ofert.notificationOneSignal = [];\n        }\n        ofert.notificationOneSignal.push(data.id);\n        this.ofertService.putOfert(ofert).subscribe();\n      });\n  }\n  async getSellerOfProperty(id) {\n    return await this.sellerService\n      .getSellerAll()\n      .pipe(\n        map(sellers => sellers.find(s => !!s.property.find(p => p._id === id)))\n      )\n      .toPromise();\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Crédito\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Editar Crédito'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n    <ion-grid fixed>\\n      <h1>Editar Crédito</h1>\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <mat-card-title>Complete los campos</mat-card-title>\\n            <span *ngIf=\\\"credit.buyer.name &&  credit.property.name\\\" class=\\\"flex-container2\\\">\\n              <mat-list role=\\\"list\\\">\\n                <h3 mat-subheader>Nombre del Cliente</h3>\\n                <mat-list-item role=\\\"listitem\\\">{{credit.buyer.name}}</mat-list-item>\\n              </mat-list>\\n              <mat-list role=\\\"list\\\">\\n                <h3 mat-subheader>Nombre de la Propiedad</h3>\\n                <mat-list-item role=\\\"listitem\\\">{{credit.property.name}}</mat-list-item>\\n              </mat-list>\\n            </span>\\n            <div class=\\\"flex-container\\\">\\n              <!-- status -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Estado</mat-label>\\n                <mat-select [(ngModel)]=\\\"credit.status\\\" #status=\\\"ngModel\\\" id=\\\"status\\\" name=\\\"status\\\" required>\\n                  <mat-option value=\\\"verde\\\">\\n                    Interés\\n                  </mat-option>\\n                  <mat-option value=\\\"amarillo\\\">\\n                    Negociación\\n                  </mat-option>\\n                  <mat-option value=\\\"rojo\\\">\\n                    Aceptado\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"status.dirty || status.touched\\\">Selecciona</mat-error>\\n              </mat-form-field>\\n              <!-- files -->\\n              <ion-label text-wrap>Anota los documentos para el crédito separado por comas\\n                (documento1,documento2,etc...)</ion-label>\\n              <mdc-textarea [(ngModel)]=\\\"files\\\" #f=\\\"ngModel\\\" id=\\\"f\\\" name=\\\"f\\\" label=\\\"Ducumentos\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\n              <!-- notas -->\\n              <mdc-textarea [(ngModel)]=\\\"credit.notes\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Notas\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\n\\n            </div>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin-right: 2%\\\">\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                  <!-- <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button> -->\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\n                    (click)=\\\"editCredit()\\\">Editar</button>\\n                </span>\\n              </div>\\n\\n\\n\\n            </mat-card-actions>\\n\\n          </mat-card>\\n        </form>\\n\\n      </div>\\n    </ion-grid>\\n\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\"","module.exports = \".flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ICredit, ICreditGet } from '../../../models/credit.model';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SellerService } from '../../../services/seller.service';\nimport { NavController } from '@ionic/angular';\nimport { PropertyService } from '../../../services/property.service';\nimport { CreditService } from '../../../services/credit.service';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { INotification } from '../../../models/notification.model';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\n\n@Component({\n  selector: 'app-new-edit-credit',\n  templateUrl: './new-edit-credit.component.html',\n  styleUrls: ['./new-edit-credit.component.scss'],\n})\nexport class NewEditCreditComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  credit: ICreditGet = {};\n  files: string;\n  isLoad: boolean;\n  buyer = '';\n  property = '';\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private creditService: CreditService,\n    private navCtr: NavController,\n    private propertyService: PropertyService,\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\n    private userSession: UserSessionService,\n    private oneSignalService: OnesignalService,\n  ) {\n    this.isLoad = false;\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.creditService.getCreditById(params['id']).subscribe(credit => {\n          console.log(credit);\n          this.credit = <any>credit;\n          this.buyer = this.credit.buyer._id;\n          this.property = this.credit.property._id;\n          this.files = '';\n          this.credit.files.forEach((f, i) => {\n            if (this.credit.files.length === i + 1) {\n              this.files += f;\n            } else {\n              this.files += f + ',';\n            }\n          });\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n  editCredit() {\n    this.statusBuyerPropertyService\n      .searchSpecial(this.buyer, this.property)\n      .subscribe(sbp => {\n        console.log(sbp);\n        this.statusBuyerPropertyService\n          .upgradeStatus(sbp._id, this.credit.status)\n          .subscribe(c => console.log(c));\n      });\n    this.credit.files = this.files.split(',');\n    // noti\n    if (this.credit.status === 'amarillo') {\n      this.notification(\n        'Propuesta de crédito',\n        `Nueva propuesta de crédito para ${this.credit.property.name}`,\n        'amarillo',\n        'credit',\n        this.buyer,\n      );\n    }\n\n    this.creditService.putCredit(<ICredit>this.credit).subscribe(s => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Credito Editado' },\n      };\n      // this.router.navigate(['list-credit-admin'], toast);\n      // this.navCtr.navigateRoot('list-credit-admin', true, toast);\n      /**\n       * Es para recargar el componente previo\n       */\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-credit-admin'], toast));\n    });\n  }\n  editCustomer() {\n    /* this.sellerService.putSeller(this.seller).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Propietario Editado' },\n      };\n      this.router.navigate(['list-seller-admin'], toast);\n      this.navCtr.navigateRoot('list-seller-admin', true, toast);\n    }); */\n  }\n  public notification(title, message, status, type, receiversId: string) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      receiversId: [receiversId],\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, undefined, [receiversId])\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <!--\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Asesores\\n      </ion-title>\\n\\n\\n    </ion-toolbar>\\n  -->\\n  <ion-header>\\n    <app-menu-general\\n      [isMenuButton]=\\\"'menu'\\\"\\n      [colorMenuButton]=\\\"'white'\\\"\\n      [titleMenu]=\\\"'Documentos'\\\"\\n      [buttonNotification]=\\\"'notifications'\\\"\\n      [buttonUser]=\\\"'person'\\\"\\n    ></app-menu-general>\\n  </ion-header>\\n</ion-header>\\n<ion-content padding>\\n  <ng-container *ngIf=\\\"isLoading; then: Load; else: noLoad\\\"></ng-container>\\n  <!-- contenido -->\\n\\n  <ng-template #Load class=\\\"my-contenet\\\">\\n    <mat-drawer-container class=\\\"side-container\\\" autosize>\\n      <!-- contenido de filtros -->\\n      <mat-drawer\\n        [class.mat-elevation-z1]=\\\"true\\\"\\n        position=\\\"end\\\"\\n        #drawer\\n        class=\\\"sidenav\\\"\\n        [mode]=\\\"isDesktop ? 'side' : 'over'\\\"\\n        [opened]=\\\"openMenu\\\"\\n      >\\n        <app-document-filter\\n          (filters)=\\\"getFilters($event)\\\"\\n          (resetAll)=\\\"resetAll()\\\"\\n          (closeMenu)=\\\"drawer.close()\\\"\\n          [isDesktop]=\\\"isDesktop\\\"\\n        ></app-document-filter>\\n      </mat-drawer>\\n      <!-- /contenido de filtros -->\\n      <!-- filtros boton -->\\n      <ion-item *ngIf=\\\"!isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button\\n          (click)=\\\"drawer.toggle()\\\"\\n          slot=\\\"end\\\"\\n          color=\\\"secondary\\\"\\n          fill=\\\"outline\\\"\\n        >\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{ numOfFilters }})\\n        </ion-button>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isDesktop\\\" lines=\\\"none\\\">\\n        <ion-button\\n          (click)=\\\"drawer.toggle()\\\"\\n          slot=\\\"end\\\"\\n          color=\\\"secondary\\\"\\n          fill=\\\"outline\\\"\\n        >\\n          <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros\\n          {{ (drawer.openedChange | async) ? 'cerrar' : 'abrir' }}\\n        </ion-button>\\n      </ion-item>\\n\\n      <!-- /filtros boton -->\\n\\n      <!-- Table -->\\n      <h2>Tabla de Usuarios</h2>\\n      <app-general-table\\n        [columns]=\\\"columns\\\"\\n        [rows]=\\\"rows\\\"\\n        [isDesktop]=\\\"isDesktop\\\"\\n        (editButton)=\\\"edit($event)\\\"\\n        (deletedButton)=\\\"presentAlertConfirm($event)\\\"\\n        (checkbox)=\\\"userSelect($event)\\\"\\n        [showChips]=\\\"true\\\"\\n        [showLoader]=\\\"showLoader\\\"\\n      >\\n      </app-general-table>\\n      <!-- /Table -->\\n    </mat-drawer-container>\\n  </ng-template>\\n  <!-- /contenido -->\\n\\n  <!-- Skeleton -->\\n  <ng-template #noLoad>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n</ion-content>\\n<!-- fab placed to the bottom end -->\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button\\n    [disabled]=\\\"!selectedUsers || selectedUsers.length === 0\\\"\\n    (click)=\\\"setEmail()\\\"\\n    *ngIf=\\\"isLoading\\\"\\n    color=\\\"secondary\\\"\\n  >\\n    <ion-icon name=\\\"mail\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\\n.label {\\n  color: white;\\n  padding: 8px; }\\n\\n.success {\\n  background-color: #4CAF50; }\\n\\n/* Green */\\n\\n.info {\\n  background-color: #2196F3; }\\n\\n/* Blue */\\n\\n.warning {\\n  background-color: #ff9800; }\\n\\n/* Orange */\\n\\n.danger {\\n  background-color: #f44336; }\\n\\n/* Red */\\n\\n.other {\\n  background-color: #e7e7e7;\\n  color: black; }\\n\\n/* Gray */\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  TableColumsModel,\n  TableStatusChips,\n  TableTagStyle\n} from '../../models/tableColums.model';\nimport {\n  Platform,\n  AlertController,\n  ToastController,\n  NavController,\n  LoadingController\n} from '@ionic/angular';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { IAdviser } from '../../models/adviser.model';\nimport { SellerService } from '../../services/seller.service';\nimport { BuyerService } from '../../services/buyer.service';\nimport { AdviserService } from '../../services/adviser.service';\nimport { INotification } from '../../models/notification.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogGeneralComponent } from '../general/dialog-general/dialog-general.component';\nimport { MailService } from '../../services/mail.service';\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.scss']\n})\nexport class DocumentsComponent implements OnInit {\n  isLoading = false;\n  columns: TableColumsModel[];\n  rows: any[] = [];\n  isDesktop = false;\n  openMenu: boolean;\n  // numofFilters\n  numOfFilters = 0;\n  allUsers = [];\n  selectedUsers = [];\n  showLoader: boolean;\n\n  constructor(\n    private adviserService: AdviserService,\n    private buyerService: BuyerService,\n    private sellerService: SellerService,\n    private platform: Platform,\n    private router: Router,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public navCtr: NavController,\n    public route: ActivatedRoute,\n    public dialog: MatDialog,\n    private mailService: MailService,\n    public loadingController: LoadingController\n  ) {\n    this.isDesktop = platform.is('desktop');\n    if (this.isDesktop) {\n      this.openMenu = true;\n    } else {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['res']) {\n        this.presentToast(params['res']);\n      }\n    });\n    this.columns = [\n      {\n        name: '',\n        prop: 'checkBox',\n        type: 'checkBox',\n        disabledSort: true\n      },\n      {\n        name: 'Nombre',\n        prop: 'name',\n        type: 'normal'\n      },\n      {\n        name: 'Apellido',\n        prop: 'lastName',\n        type: 'normal'\n      },\n      {\n        name: 'Email',\n        prop: 'email',\n        type: 'normal'\n      },\n      {\n        name: 'Fecha Alta',\n        prop: 'timestamp',\n        type: 'date'\n      },\n      {\n        name: 'Tipo Usuario',\n        prop: 'type',\n        type: 'tags'\n      },\n      {\n        name: 'Estado',\n        prop: 'properties',\n        type: 'status'\n      }\n    ];\n    this.getAllUsers();\n  }\n  async getAllUsers() {\n    this.showLoader = true;\n    this.numOfFilters = 0;\n    const arrBuyer = await this.buyerService.getBuyerAll().toPromise();\n    const arrAdv = await this.adviserService.getAdviserAll().toPromise();\n    const arrSeller = await this.sellerService.getSellerAll().toPromise();\n    arrBuyer.map(b => (b['typeOfUser'] = 'buyer'));\n    arrAdv.map(b => (b['typeOfUser'] = 'adviser'));\n    arrSeller.map(b => (b['typeOfUser'] = 'seller'));\n    this.allUsers = [...arrBuyer, ...arrAdv, ...arrSeller];\n    this.setRows(this.allUsers);\n  }\n  async setRows(allUsers: any[]) {\n    const rows = [];\n\n    allUsers.forEach((user, i) => {\n      const properties: TableStatusChips[] = [];\n      let type = {};\n\n      if (user.typeOfUser === 'buyer') {\n        user['lastName'] = user.fatherLastName;\n        type = {\n          name: 'Consumidor',\n          style: 'buyer'\n        };\n        // propiedades\n        if (user.statusBuyerProperty && user.statusBuyerProperty.length > 0) {\n          user.statusBuyerProperty.forEach(sBP => {\n            properties.push({\n              name: sBP.property.name,\n              status: sBP.status\n            });\n          });\n        } else {\n          properties.push({\n            name: 'Sin interés',\n            status: 'gris'\n          });\n        }\n      } else if (user.typeOfUser === 'adviser') {\n        type = {\n          name: 'Asesor',\n          style: 'adviser'\n        };\n      } else if (user.typeOfUser === 'seller') {\n        type = {\n          name: 'Dueño',\n          style: 'seller'\n        };\n      }\n\n      rows.push({\n        _id: user._id,\n        name: user.name,\n        lastName: user.lastName,\n        timestamp: user.timestamp,\n        email: user.email,\n        phone: user.phone ? user.phone : '',\n        type: type,\n        properties: properties,\n        checkBox: false,\n        nameChip: user.name\n      });\n    });\n    this.rows = rows;\n    this.isLoading = true;\n    this.showLoader = false;\n  }\n  userSelect(event: { isChecked: boolean; row: any }) {\n    const index = this.selectedUsers.findIndex(u => u._id === event.row._id);\n\n    if (event.isChecked) {\n      if (index === -1) {\n        this.selectedUsers.push(event.row);\n      }\n    } else {\n      if (index !== -1) {\n        this.selectedUsers.splice(index, 1);\n      }\n    }\n  }\n  newBuyer() {\n    const data: NavigationExtras = {\n      queryParams: { id: 'new' }\n    };\n    this.router.navigate(['new-edit-adviser']);\n  }\n  edit(item) {\n    const data: NavigationExtras = {\n      queryParams: { id: item._id }\n    };\n    this.router.navigate(['new-edit-adviser'], data);\n    // this.navCtr.navigateRoot('new-buyer', false, data);\n  }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n  async presentLoadingWithOptions() {\n    const loading = await this.loadingController.create({\n      message: 'Enviando...',\n      translucent: true\n    });\n    return await loading;\n  }\n  getFilters(filters: {\n    isBuyer: boolean;\n    isAdviser: boolean;\n    isSeller: boolean;\n    status: string;\n  }) {\n    const advFinded = this.allUsers.filter(user => {\n      if (filters.isBuyer) {\n        if (user.typeOfUser === 'buyer') {\n          return true;\n        }\n      }\n      if (filters.isAdviser) {\n        if (user.typeOfUser === 'adviser') {\n          return true;\n        }\n      }\n      if (filters.isSeller) {\n        if (user.typeOfUser === 'seller') {\n          return true;\n        }\n      }\n      if (\n        !filters.isBuyer &&\n        !filters.isAdviser &&\n        !filters.isSeller &&\n        !filters.status\n      ) {\n        return true;\n      }\n      if (filters.status !== undefined) {\n        if (user.statusBuyerProperty && user.statusBuyerProperty.length > 0) {\n          const isfinded = user.statusBuyerProperty.some(\n            p => p.status === filters.status\n          );\n          if (isfinded) {\n            return true;\n          }\n        } else if (\n          user.statusBuyerProperty &&\n          user.statusBuyerProperty.length === 0\n        ) {\n          if (filters.status === 'gris') {\n            return true;\n          }\n        }\n      }\n    });\n    //  setea buyers\n    this.setRows(advFinded);\n    // num filters\n    let numFilters = 0;\n    if (filters.isBuyer) {\n      numFilters++;\n    }\n    if (filters.isAdviser) {\n      numFilters++;\n    }\n    if (filters.isSeller) {\n      numFilters++;\n    }\n    if (filters.status) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n  resetAll() {\n    this.getAllUsers();\n  }\n  async setEmail(n) {\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\n      data: {\n        header: 'Documentos',\n        subHeader: `Seleccione documentos a adjuntar`,\n        isform: false,\n        hasFileInput: true,\n        okButton: 'Siguiente'\n      }\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      if (res.button) {\n        this.sendEmail(res.formData);\n      }\n    });\n  }\n  private sendEmail(formData: FormData) {\n    const arr = Array.from(formData.getAll('file'));\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\n      data: {\n        header: 'Mensaje',\n        subHeader: `Escriba un mensaje a los destinatarios`,\n        body: `<p>⚠️ Se enviarán ${arr.length} archivos a ${\n          this.selectedUsers.length\n        } usuarios</p>`,\n        isform: true,\n        formLabel: 'Mensaje',\n        okButton: 'Enviar'\n      }\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(async res => {\n      if (res.button) {\n        formData.append('msg', res.inputValue);\n        formData.append(\n          'mails',\n          this.selectedUsers.map(u => u.email).toString()\n        );\n        console.log(formData.getAll('mails'));\n        console.log(formData.getAll('msg'));\n        console.log(formData.getAll('file'));\n        const load = await this.presentLoadingWithOptions();\n        load.present();\n        const isSend = await this.mailService.sendFiles(formData).toPromise();\n        if (isSend) {\n          load.dismiss();\n          this.presentToast('Correo enviado');\n        } else {\n          load.dismiss();\n          this.presentToast('Error, no se pudo enviar');\n        }\n      }\n    });\n  }\n}\n","module.exports = \"<ng-container *ngIf=\\\"isWeek; then thenTemplate; else elseTemplate\\\"></ng-container>\\n<ng-template #thenTemplate>\\n  <table>\\n    <thead>\\n      <tr>\\n        <th style=\\\"width: 41px;\\\">\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(0)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Dom {{getDays(0)}}\\n          </span>\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(1)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Lun {{getDays(1)}}\\n          </span>\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(2)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Mart {{getDays(2)}}\\n          </span>\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(3)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Mier {{getDays(3)}}\\n          </span>\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(4)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Jue {{getDays(4)}}\\n          </span>\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(5)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Vie {{getDays(5)}}\\n          </span>\\n        </th>\\n        <th [ngClass]=\\\"{'current-day': currenDate === getDays2(6)}\\\" class=\\\"day-past\\\">\\n          <span>\\n            Sab {{getDays(6)}}\\n          </span>\\n        </th>\\n      </tr>\\n    </thead>\\n  </table>\\n\\n  <table id=\\\"myTable\\\">\\n\\n    <tbody>\\n      <tr *ngFor=\\\"let rowHour of hoursOfDay \\\" [hidden]=\\\"showRow !== rowHour.hr &&  rowHour.str === ' ' \\\">\\n\\n        <td style=\\\"width: 41px;\\\">\\n          {{rowHour.str}}\\n        </td>\\n        <!-- Domigo 0, todos los dias -->\\n        <td [hidden]=\\\"rowHour.str === ' '\\\" class=\\\"hour-table\\\" *ngFor=\\\"let numOfDay of numOfdays\\\" [ngClass]=\\\"{'event': getScheduleEvents(rowHour.hr, numOfDay).length > 0,\\n           'event-select': showRow === rowHour.hr && elevationCol === numOfDay && getScheduleEvents(rowHour.hr, numOfDay).length > 0}\\\"\\n          (click)=\\\"showTd(getScheduleEvents(rowHour.hr, numOfDay), rowHour.hr, numOfDay); elevationCol = numOfDay\\\">\\n          <span *ngIf=\\\"getScheduleEvents(rowHour.hr, numOfDay).length > 0\\\">\\n            {{getScheduleEvents(rowHour.hr, numOfDay).length}} {{getScheduleEvents(rowHour.hr, numOfDay).length === 1\\n            ?\\n            'Cita' :\\n            'Citas'}}\\n          </span>\\n        </td>\\n        <td colspan=\\\"7\\\" *ngIf=\\\"showRow === rowHour.hr &&  rowHour.str === ' ' \\\" class=\\\"open-day-event\\\">\\n          <div class=\\\"close-events\\\">\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"showRow = undefined\\\">Cerrar</button>\\n          </div>\\n          <div class=\\\"card-open\\\" *ngFor=\\\"let s of schedulesShow\\\">\\n            <span class=\\\"status-point\\\" [ngClass]=\\\"\\n            {'background-verde': s.status === 'verde', \\n           'background-amarillo':  s.status === 'amarillo',\\n           'background-rojo':  s.status === 'rojo',\\n           'background-gris': s.status === 'gris',\\n           'background-azul':  s.status === 'azul' }\\\"></span>\\n            <p *ngIf=\\\"!s.administrator && !s.personal\\\"> {{s.buyer.name}} en {{s.property.name}}</p>\\n            <p *ngIf=\\\"s.administrator || s.personal\\\"> Evento Personal</p>\\n            <p style=\\\"margin-left: 1%\\\"> <small>{{formatDate(s.year,s.month,s.day,s.hour,s.minute)}}</small></p>\\n            <div style=\\\"margin-left: 58%;\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-button *ngIf=\\\"!s.administrator && !s.personal\\\" (click)=\\\"editEvent.emit(s._id)\\\" color=\\\"success\\\"\\n                  fill=\\\"outline\\\" slot=\\\"end\\\">\\n                  <ion-icon name=\\\"create\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button *ngIf=\\\"s.administrator || s.personal \\\" (click)=\\\"editPersonalEvent.emit(s._id)\\\" color=\\\"success\\\"\\n                  fill=\\\"outline\\\" slot=\\\"end\\\">\\n                  <ion-icon name=\\\"create\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button (click)=\\\"deletedEvent.emit(s._id)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                  <ion-icon name=\\\"trash\\\"></ion-icon>\\n                </ion-button>\\n              </ion-item>\\n            </div>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n\\n  </table>\\n\\n</ng-template>\\n<ng-template #elseTemplate>\\n  <!-- day -->\\n  <table>\\n    <thead>\\n      <tr>\\n        <th style=\\\"width: 41px;\\\">\\n        </th>\\n        <th class=\\\"day-past\\\">\\n          <span>\\n            {{formatDate2(currentWeek)}} <small>Citas: {{getScheduleEventsByDay(currentWeek.getDay()).length}}</small>\\n          </span>\\n        </th>\\n\\n      </tr>\\n    </thead>\\n  </table>\\n  <table>\\n    <tbody>\\n      <tr *ngFor=\\\"let rowHour of hoursOfDay \\\" [hidden]=\\\"rowHour.str === ' '\\\">\\n        <td style=\\\"width: 41px;\\\">\\n          {{rowHour.str}}\\n        </td>\\n        <td class=\\\"hour-table\\\" (click)=\\\"goToNew(rowHour,currentWeek)\\\">\\n          <span *ngIf=\\\"getScheduleEvents(rowHour.hr, currentWeek.getDay()).length > 0\\\">\\n            <!--  {{getScheduleEvents(rowHour.hr, currentWeek.getDay()).length}} {{getScheduleEvents(rowHour.hr,\\n            currentWeek.getDay()).length === 1\\n            ?\\n            'Cita' :\\n            'Citas'}} -->\\n            <!-- Eventos -->\\n            <mat-accordion *ngFor=\\\"let item of getScheduleEvents(rowHour.hr, currentWeek.getDay())\\\" style=\\\"margin-bottom: 1%\\\">\\n              <mat-expansion-panel [ngClass]=\\\"{'state-verde': item.status === 'verde', \\n                  'state-amarillo':  item.status === 'amarillo',\\n                  'state-rojo':  item.status === 'rojo',\\n                  'state-gris': item.status === 'gris',\\n                  'state-azul':  item.status === 'azul' }\\\"\\n                style=\\\"margin-bottom: 1%\\\">\\n                <mat-expansion-panel-header>\\n                  <mat-panel-title>\\n                    <b>{{formatState(item.status)}}</b>\\n                  </mat-panel-title>\\n                  <mat-panel-description *ngIf=\\\" !item.administrator && !item.personal \\\">\\n                    {{item.buyer.name}} {{item.adviser ? 'con ' + item.adviser.name : ''}}\\n                  </mat-panel-description>\\n                  <mat-panel-description *ngIf=\\\"item.administrator || item.personal \\\">\\n                    {{item.title}}\\n                  </mat-panel-description>\\n                </mat-expansion-panel-header>\\n                <!-- listado -->\\n                <ion-list lines=\\\"none\\\">\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.buyer\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Cliente:</b> </p>\\n                      <p>{{item.buyer.name}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.adviser\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Asesor:</b> </p>\\n                      <p>{{item.adviser.name}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.seller\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"contact\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Propietario:</b> </p>\\n                      <p>{{item.seller.name}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.property\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"home\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Propiedad:</b> </p>\\n                      <p>{{item.property.name}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.address\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"pin\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Lugar:</b> </p>\\n                      <p>{{item.address}}</p>\\n                      <!-- <a [href]=\\\"'http://maps.google.com/?q='+item.address+', Puebla'\\\">Ver mapa</a> -->\\n                      <!-- <a (click)=\\\"openMaps(item.address)\\\">Ver mapa</a> -->\\n                      <app-maps-button slot=\\\"end\\\" [address]=\\\"item.address\\\"></app-maps-button>\\n\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.day\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"calendar\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Fecha del Evento:</b> </p>\\n                      <p>{{item.day}}/{{item.month + 1}}/{{item.year}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\" *ngIf=\\\"item.day\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"time\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Hora del Evento:</b> </p>\\n                      <p>{{formatHours(item.hour,item.minute)}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <!-- <ion-item lines=\\\"none\\\" *ngIf=\\\"item.status\\\">\\n                            <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"cash\\\"></ion-icon>\\n                            <ion-label slot=\\\"start\\\" text-wrap>\\n                              <p><b>Estado:</b> </p>\\n                              <p *ngIf=\\\"item.status === 'gris'\\\">Cita Generada</p>\\n                              <p *ngIf=\\\"item.status === 'verde'\\\">Propuesta Cita</p>\\n                              <p *ngIf=\\\"item.status === 'amarillo'\\\">Esperando Visita</p>\\n                              <p *ngIf=\\\"item.status === 'rojo'\\\">Visitada</p>\\n                            </ion-label>\\n                          </ion-item> -->\\n                  <ion-item *ngIf=\\\"item.note\\\" lines=\\\"none\\\">\\n                    <ion-icon slot=\\\"start\\\" class=\\\"color-item-secondary\\\" name=\\\"clipboard\\\"></ion-icon>\\n                    <ion-label slot=\\\"start\\\" text-wrap>\\n                      <p><b>Notas:</b> </p>\\n                      <p>{{item.note}}</p>\\n                    </ion-label>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"item.scoreByAdviser\\\" lines=\\\"none\\\">\\n                    <ion-chip [ngClass]=\\\"\\n                              {\\n                              'background-verde': item.scoreByAdviser === 'verde', \\n                              'background-amarillo':  item.scoreByAdviser === 'amarillo',\\n                              'background-rojo':  item.scoreByAdviser === 'rojo',\\n                              'background-gris': item.scoreByAdviser === 'gris',\\n                              'background-azul':  item.scoreByAdviser === 'azul'\\n                            }\\\">\\n                      <ion-chip-icon class=\\\"icon-chip-detail\\\" name=\\\"eye\\\"></ion-chip-icon>\\n                      <ion-label *ngIf=\\\"item.scoreByAdviser ===  'verde'\\\">Poco interés</ion-label>\\n                      <ion-label *ngIf=\\\"item.scoreByAdviser ===  'amarillo'\\\">Oportunidad de venta</ion-label>\\n                      <ion-label *ngIf=\\\"item.scoreByAdviser ===  'rojo'\\\">Venta muy probable</ion-label>\\n                      <ion-label *ngIf=\\\"item.scoreByAdviser ===  'gris'\\\">No hay interés</ion-label>\\n                      <ion-label *ngIf=\\\"item.scoreByAdviser ===  'azul'\\\">Muy bien</ion-label>\\n                    </ion-chip>\\n                  </ion-item>\\n                  <ion-item lines=\\\"none\\\">\\n                    <!-- <ion-button *ngIf=\\\"!item.administrator && !item.personal && user.type === 'adviser' && item.status === 'amarillo' && comparateDate(item.year, item.month, item.day) \\\"\\n                      (click)=\\\"presentAlertVisit(item)\\\" color=\\\"warning\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                      Calificar <ion-icon name=\\\"clipboard\\\"></ion-icon>\\n                    </ion-button> -->\\n                    <ion-button *ngIf=\\\"!item.administrator && !item.personal\\\" (click)=\\\"editEvent.emit(item._id)\\\" color=\\\"success\\\"\\n                      fill=\\\"outline\\\" slot=\\\"end\\\">\\n                      Editar <ion-icon name=\\\"create\\\"></ion-icon>\\n                    </ion-button>\\n                    <ion-button *ngIf=\\\"item.administrator || item.personal \\\" (click)=\\\"editPersonalEvent.emit(item._id)\\\"\\n                      color=\\\"success\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                      Editar <ion-icon name=\\\"create\\\"></ion-icon>\\n                    </ion-button>\\n                    <ion-button (click)=\\\"deletedEvent.emit(item._id)\\\" color=\\\"danger\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                      Borrar <ion-icon name=\\\"trash\\\"></ion-icon>\\n                    </ion-button>\\n\\n                  </ion-item>\\n                </ion-list>\\n                <!-- /listado -->\\n\\n\\n              </mat-expansion-panel>\\n            </mat-accordion>\\n            <!-- /eventos -->\\n          </span>\\n\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</ng-template>\\n<br>\\n<!-- fab placed to the bottom end -->\\n<ion-fab class=\\\"fix-add\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n  <ion-fab-button (click)=\\\"newEvent.emit()\\\" color=\\\"secondary\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \".day-past {\\n  border: 1px solid #DDD;\\n  text-align: left;\\n  font-weight: 500;\\n  padding: .8rem;\\n  vertical-align: top; }\\n\\n.hour-table {\\n  height: 5rem;\\n  border: 1px solid #DDD;\\n  background-color: #fafafa; }\\n\\nthead {\\n  display: table-header-group;\\n  vertical-align: middle;\\n  border-color: inherit; }\\n\\ntable {\\n  width: 100%;\\n  box-sizing: border-box;\\n  table-layout: fixed;\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n  font-size: 1em; }\\n\\ntd:hover {\\n  background-color: #f5f5f5; }\\n\\n.event {\\n  background-color: #3a87ad;\\n  color: white;\\n  text-align: center; }\\n\\n.event:hover {\\n  background-color: #016394 !important; }\\n\\n.current-day {\\n  background-color: #cdcdce !important; }\\n\\n.open-day-event {\\n  background-color: #039be5;\\n  height: 120px; }\\n\\n.open-day-event:hover {\\n  background-color: #039be5; }\\n\\n.event-select {\\n  background-color: #016394 !important;\\n  box-shadow: 0 5px 6px -3px rgba(0, 0, 0, 0.2), 0 9px 12px 1px rgba(0, 0, 0, 0.14), 0 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n\\n.card-open {\\n  padding-left: 16px;\\n  margin: 8px 16px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: start;\\n  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\\n  transition: box-shadow .3s ease;\\n  background-color: #fff;\\n  height: 40px; }\\n\\n.status-point {\\n  touch-action: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  -webkit-user-drag: none;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 50%;\\n  display: inline-block;\\n  margin: 2px; }\\n\\n.close-events {\\n  text-align: right;\\n  margin-right: 2%; }\\n\\n.fix-add {\\n  position: fixed;\\n  text-align: right;\\n  bottom: 6px;\\n  right: 6px; }\\n\\n@media (max-width: 900px) {\\n  .day-past {\\n    text-align: center;\\n    font-weight: 500;\\n    padding: 0rem;\\n    vertical-align: top;\\n    font-size: small; }\\n  .card-open {\\n    padding: 1% 7% 1% 6%;\\n    margin: 8px 16px;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    align-items: center;\\n    justify-content: start;\\n    box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\\n    transition: box-shadow .3s ease;\\n    background-color: #fff;\\n    height: unset; } }\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { ISchedule } from '../../../models/schedule.model';\nimport {\n  FormatDatesFront,\n  FormatHoursFront,\n  OpenGoogleMaps\n} from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-calendar-specific',\n  templateUrl: './calendar-specific.component.html',\n  styleUrls: ['./calendar-specific.component.scss']\n})\nexport class CalendarSpecificComponent implements OnInit, OnChanges {\n  numOfdays = [0, 1, 2, 3, 4, 5, 6];\n  hoursOfDay = [\n    { str: '6am', hr: 6 },\n    { str: ' ', hr: 6 },\n    { str: '7am', hr: 7 },\n    { str: ' ', hr: 7 },\n    { str: '8am', hr: 8 },\n    { str: ' ', hr: 8 },\n    { str: '9am', hr: 9 },\n    { str: ' ', hr: 9 },\n    { str: '10am', hr: 10 },\n    { str: ' ', hr: 10 },\n    { str: '11am', hr: 11 },\n    { str: ' ', hr: 11 },\n    { str: '12pm', hr: 12 },\n    { str: ' ', hr: 12 },\n    { str: '1pm', hr: 13 },\n    { str: ' ', hr: 13 },\n    { str: '2pm', hr: 14 },\n    { str: ' ', hr: 14 },\n    { str: '3pm', hr: 15 },\n    { str: ' ', hr: 15 },\n    { str: '4pm', hr: 16 },\n    { str: ' ', hr: 16 },\n    { str: '5pm', hr: 17 },\n    { str: ' ', hr: 17 },\n    { str: '6pm', hr: 18 },\n    { str: ' ', hr: 18 },\n    { str: '7pm', hr: 19 },\n    { str: ' ', hr: 19 },\n    { str: '8pm', hr: 20 },\n    { str: ' ', hr: 20 },\n    { str: '9pm', hr: 21 },\n    { str: ' ', hr: 21 },\n    { str: '10pm', hr: 22 },\n    { str: ' ', hr: 22 },\n    { str: '11pm', hr: 23 },\n    { str: ' ', hr: 23 },\n    { str: '12am', hr: 24 },\n    { str: ' ', hr: 24 },\n    { str: '1am', hr: 1 },\n    { str: ' ', hr: 1 },\n    { str: '2am', hr: 2 },\n    { str: ' ', hr: 2 },\n    { str: '3am', hr: 3 },\n    { str: ' ', hr: 3 },\n    { str: '4am', hr: 4 },\n    { str: ' ', hr: 4 },\n    { str: '5am', hr: 5 },\n    { str: ' ', hr: 5 }\n  ];\n  nameDays = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miércoles',\n    'Jueves',\n    'Viernes',\n    'Sábado'\n  ];\n  /**\n   * open event\n   */\n  showRow;\n  schedulesShow: ISchedule[];\n  elevationCol;\n  @Input()\n  isWeek = true;\n  @Input()\n  add;\n  @Input()\n  remove;\n  @Input()\n  schedules: ISchedule[] = [];\n  @Input()\n  currentWeek = new Date();\n  currenDate = new Date().getDate();\n  @Output()\n  editEvent: EventEmitter<string> = new EventEmitter();\n  @Output()\n  newEvent: EventEmitter<{\n    year: number;\n    month: number;\n    day: number;\n    hour: number;\n  }> = new EventEmitter();\n  @Output()\n  editPersonalEvent: EventEmitter<string> = new EventEmitter();\n  @Output()\n  deletedEvent: EventEmitter<string> = new EventEmitter();\n  @Output()\n  titleNavBar: EventEmitter<Date> = new EventEmitter();\n  constructor() {}\n  addWeek() {\n    if (this.isWeek) {\n      this.currentWeek = new Date(this.currentWeek.getTime() + 7 * 86400000);\n    } else {\n      this.currentWeek = new Date(this.currentWeek.getTime() + 1 * 86400000);\n    }\n    this.titleNavBar.emit(this.currentWeek);\n    this.showRow = undefined;\n  }\n  removeWeek() {\n    if (this.isWeek) {\n      this.currentWeek = new Date(this.currentWeek.getTime() - 7 * 86400000);\n    } else {\n      this.currentWeek = new Date(this.currentWeek.getTime() - 1 * 86400000);\n    }\n    this.titleNavBar.emit(this.currentWeek);\n    this.showRow = undefined;\n  }\n\n  ngOnInit() {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.add) {\n      if (changes.add.currentValue) {\n        this.addWeek();\n      }\n    }\n    if (changes.remove) {\n      if (changes.remove.currentValue) {\n        this.removeWeek();\n      }\n    }\n    if (changes.currentWeek) {\n      if (changes.currentWeek.currentValue) {\n        this.currentWeek = changes.currentWeek.currentValue;\n      }\n    }\n  }\n  getDays(numDay: number) {\n    const currentDay = this.currentWeek.getDay();\n    const diffDay = numDay - currentDay;\n    const d = new Date(this.currentWeek.getTime() + diffDay * 86400000);\n    return `${d.getMonth() + 1} / ${d.getDate()} `;\n  }\n  getDays2(numDay: number) {\n    const currentDay = this.currentWeek.getDay();\n    const diffDay = numDay - currentDay;\n    const d = new Date(this.currentWeek.getTime() + diffDay * 86400000);\n    return d.getDate();\n  }\n  getScheduleEvents(hour, numDay): ISchedule[] {\n    const date = this.getDays2(numDay);\n    const events = this.schedules.filter(\n      s =>\n        s.day === date &&\n        s.month === this.currentWeek.getMonth() &&\n        s.year === this.currentWeek.getFullYear() &&\n        s.hour === hour\n    );\n    return events;\n  }\n  getScheduleEventsByDay(numDay): ISchedule[] {\n    const date = this.getDays2(numDay);\n    const events = this.schedules.filter(\n      s =>\n        s.day === date &&\n        s.month === this.currentWeek.getMonth() &&\n        s.year === this.currentWeek.getFullYear()\n    );\n    return events;\n  }\n  showTd(schedules: ISchedule[], hrRow: number, numOfdays) {\n    //  insertNewRow\n    if (schedules.length > 0) {\n      this.showRow = hrRow;\n      this.schedulesShow = schedules;\n    } else {\n      this.newEvent.emit({\n        day: this.getDays2(numOfdays),\n        month: this.currentWeek.getMonth(),\n        year: this.currentWeek.getFullYear(),\n        hour: hrRow\n      });\n    }\n  }\n  // _helpers\n\n  formatDate(y, m, d, hr, min) {\n    return ` ${FormatDatesFront(new Date(y, m, d))} a las ${FormatHoursFront(\n      hr,\n      min\n    )} `;\n  }\n  formatDate2(date: Date) {\n    return `${this.nameDays[date.getDay()]} ${FormatDatesFront(date)}`;\n  }\n  formatState(state: string) {\n    if (state === 'verde') {\n      return 'En espera de confirmación';\n    } else if (state === 'amarillo') {\n      return 'Confirmada en espera de asistencia';\n    } else if (state === 'rojo') {\n      return 'Cita pasada';\n    } else if (state === 'azul') {\n    } else if (state === undefined) {\n      return 'Evento Personal';\n    } else if (state === 'gris') {\n      return 'Solicitud de Cita';\n    }\n  }\n  formatHours(hours, minutes) {\n    return FormatHoursFront(hours, minutes);\n  }\n  goToNew(rowHour, currentWeek) {\n    console.log('gottoo');\n    const isGo =\n      this.getScheduleEvents(rowHour.hr, currentWeek.getDay()).length === 0;\n    if (isGo) {\n      this.newEvent.emit({\n        day: currentWeek.getDate(),\n        month: this.currentWeek.getMonth(),\n        year: this.currentWeek.getFullYear(),\n        hour: rowHour.hr\n      });\n    }\n  }\n  openMaps(schedule) {\n    OpenGoogleMaps(schedule);\n  }\n}\n","module.exports = \"<h2 mat-dialog-title>{{ dataInput.header }}</h2>\\n<h3 mat-dialog-title>{{ dataInput.subHeader }}</h3>\\n<mat-dialog-content>\\n  <span *ngIf=\\\"dataInput.body\\\" [innerHTML]=\\\"dataInput.body\\\"></span>\\n  <span *ngIf=\\\"dataInput.isform\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>{{ dataInput.formLabel }}</mat-label>\\n      <input [(ngModel)]=\\\"inputValue\\\" matInput placeholder=\\\"\\\" />\\n    </mat-form-field>\\n  </span>\\n  <span *ngIf=\\\"dataInput.hasFileInput\\\">\\n    <input\\n      id=\\\"file1\\\"\\n      name=\\\"file1\\\"\\n      type=\\\"file\\\"\\n      hidden\\n      multiple\\n      (change)=\\\"fileChangeEvent($event)\\\"\\n    />\\n    <button (click)=\\\"link()\\\" mat-stroked-button color=\\\"accent\\\">\\n      Seleccionar <i class=\\\"material-icons\\\"> folder_open </i>\\n    </button>\\n    <mat-list>\\n      <mat-list-item *ngFor=\\\"let item of files\\\">{{ item.name }}</mat-list-item>\\n    </mat-list>\\n  </span>\\n</mat-dialog-content>\\n<mat-dialog-actions style=\\\"justify-content: flex-end;\\\">\\n  <button\\n    color=\\\"accent\\\"\\n    (click)=\\\"buttonsResponse(true)\\\"\\n    mat-button\\n    mat-flat-button\\n    mat-dialog-close\\n  >\\n    {{ dataInput.okButton ? dataInput.okButton : 'Ok' }}\\n  </button>\\n  <button\\n    color=\\\"warn\\\"\\n    *ngIf=\\\"!dataInput.hideButtonCancel\\\"\\n    mat-button\\n    mat-dialog-close\\n    mat-stroked-button\\n    (click)=\\\"buttonsResponse(false)\\\"\\n  >\\n    Cancelar\\n  </button>\\n  <!--\\n    The mat-dialog-close directive optionally accepts a value as a result for the dialog.\\n  -->\\n</mat-dialog-actions>\\n\"","module.exports = \"\"","import {\n  Component,\n  OnInit,\n  Inject,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-dialog-general',\n  templateUrl: './dialog-general.component.html',\n  styleUrls: ['./dialog-general.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DialogGeneralComponent implements OnInit {\n  message: string;\n  buttons = new EventEmitter();\n  ratingResult = new EventEmitter();\n  statusChange = new EventEmitter();\n  statusTicket: string;\n  inputValue: string;\n  files: FileList;\n  formData: FormData = new FormData();\n  private ratingStars;\n  public dataInput: {\n    header: string;\n    subHeader?: string;\n    body: string;\n    hideButtonCancel?: boolean;\n    isRating?: boolean;\n    isform?: boolean;\n    formLabel?: string;\n    okButton?: string;\n    hasFileInput?: boolean;\n  };\n  constructor(\n    public dialogRef: MatDialogRef<DialogGeneralComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      header: string;\n      subHeader?: string;\n      body: string;\n      hideButtonCancel?: boolean;\n      isRating?: boolean;\n      isform?: boolean;\n      okButton?: string;\n      formLabel?: string;\n      hasFileInput?: boolean;\n    }\n  ) {\n    this.dataInput = data;\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  buttonsResponse(options: boolean) {\n    if (this.dataInput.hasFileInput) {\n      this.buttons.emit({\n        button: options,\n        formData: this.formData\n      });\n    } else if (this.dataInput.isform) {\n      this.buttons.emit({\n        button: options,\n        inputValue: this.inputValue\n      });\n    } else {\n      this.buttons.emit(options);\n    }\n  }\n\n  ngOnInit() {}\n  link() {\n    const input = document.getElementById('file1').click();\n  }\n  fileChangeEvent(event) {\n    this.files = event.target.files;\n    // file list to array\n    const files = Array.from(event.target.files);\n    files.forEach((f: File, i) => {\n      this.formData.append('file', f);\n    });\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Filtros</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters(); goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset(); goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<div class=\\\"main\\\">\\n  <div class=\\\"flex-checkbox\\\">\\n    <mat-checkbox [(ngModel)]=\\\"isBuyer\\\" (change)=\\\"applyFilters()\\\"\\n      >Consumidor</mat-checkbox\\n    >\\n    <mat-checkbox [(ngModel)]=\\\"isAdviser\\\" (change)=\\\"applyFilters()\\\"\\n      >Asesor</mat-checkbox\\n    >\\n    <mat-checkbox [(ngModel)]=\\\"isSeller\\\" (change)=\\\"applyFilters()\\\"\\n      >Dueño</mat-checkbox\\n    >\\n  </div>\\n  <ion-list>\\n    <ion-radio-group [(ngModel)]=\\\"status\\\" (ionChange)=\\\"applyFilters()\\\">\\n      <ion-list-header> <ion-label>Estado</ion-label> </ion-list-header>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Gris</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"gris\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Verde</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"verde\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Amarillo</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"amarillo\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Rojo</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"rojo\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Azul</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"azul\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</div>\\n\"","module.exports = \".flex-checkbox {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.flex-checkbox > * {\\n  margin: 5%; }\\n\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-document-filter',\n  templateUrl: './document-filter.component.html',\n  styleUrls: ['./document-filter.component.scss']\n})\nexport class DocumentFilterComponent implements OnInit {\n  status: string;\n  isBuyer;\n  isAdviser;\n  isSeller;\n  @Output()\n  filters = new EventEmitter();\n  @Output()\n  resetAll = new EventEmitter();\n  @Output()\n  closeMenu = new EventEmitter();\n  @Input()\n  isDesktop: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n  applyFilters() {\n    this.filters.emit({\n      isBuyer: this.isBuyer,\n      isAdviser: this.isAdviser,\n      isSeller: this.isSeller,\n      status: this.status\n    });\n  }\n  reset() {\n    this.resetAll.emit();\n    this.isBuyer = undefined;\n    this.isAdviser = undefined;\n    this.isSeller = undefined;\n    this.status = undefined;\n  }\n  goBack() {\n    if (!this.isDesktop) {\n      this.closeMenu.emit();\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Filtros</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters(); goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset(); goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<div class=\\\"main\\\">\\n  <!-- <ion-content fullscreen> -->\\n  <ion-list>\\n    <ion-list-header> <ion-label>Fecha</ion-label> </ion-list-header>\\n  </ion-list>\\n  <ion-item>\\n    <ion-label> Dia </ion-label>\\n    <ion-input\\n      (ionChange)=\\\"applyFilters()\\\"\\n      (onkeyup)=\\\"applyFilters()\\\"\\n      type=\\\"number\\\"\\n      [(ngModel)]=\\\"dayInput\\\"\\n      #day=\\\"ngModel\\\"\\n      id=\\\"day\\\"\\n      name=\\\"day\\\"\\n    ></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select\\n        (selectionChange)=\\\"applyFilters()\\\"\\n        [(ngModel)]=\\\"monthInput\\\"\\n        #day=\\\"ngModel\\\"\\n        id=\\\"day\\\"\\n        name=\\\"day\\\"\\n        placeholder=\\\"Mes\\\"\\n      >\\n        <mat-option *ngFor=\\\"let month of months; let i = index\\\" [value]=\\\"i\\\">\\n          {{ month }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <!--\\n      <ion-label>Mes</ion-label>\\n        <ion-select interface=\\\"popover\\\" (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\"\\n          name=\\\"day\\\">\\n          <ion-select-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">{{month}}</ion-select-option>\\n        </ion-select>\\n    -->\\n  </ion-item>\\n  <ion-item>\\n    <ion-label> Año </ion-label>\\n    <ion-input\\n      (ionChange)=\\\"applyFilters()\\\"\\n      type=\\\"number\\\"\\n      [(ngModel)]=\\\"yearInput\\\"\\n      #day=\\\"ngModel\\\"\\n      id=\\\"day\\\"\\n      name=\\\"day\\\"\\n    ></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label> Hora de inicio </ion-label>\\n    <ion-input\\n      (ionChange)=\\\"applyFilters()\\\"\\n      type=\\\"number\\\"\\n      [(ngModel)]=\\\"hourStartInput\\\"\\n      #hs=\\\"ngModel\\\"\\n      id=\\\"hs\\\"\\n      name=\\\"hs\\\"\\n    ></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label> Hora Fin </ion-label>\\n    <ion-input\\n      (ionChange)=\\\"applyFilters()\\\"\\n      type=\\\"number\\\"\\n      [(ngModel)]=\\\"hourEndInput\\\"\\n      #he=\\\"ngModel\\\"\\n      id=\\\"he\\\"\\n      name=\\\"he\\\"\\n    ></ion-input>\\n  </ion-item>\\n  <!-- </ion-content> -->\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-adviser',\n  templateUrl: './filter-adviser.component.html',\n  styleUrls: ['./filter-adviser.component.scss'],\n})\nexport class FilterAdviserComponent implements OnInit {\n  status: string;\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  dayInput: number;\n  monthInput: number;\n  yearInput: number;\n  hourStartInput: number;\n  hourEndInput: number;\n  @Output()\n  filters = new EventEmitter();\n  @Output()\n  resetAll = new EventEmitter();\n  @Output()\n  closeMenu = new EventEmitter();\n  @Input()\n  isDesktop: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n  applyFilters() {\n    this.filters.emit({\n      day: this.dayInput,\n      month: this.monthInput,\n      year: this.yearInput,\n      status: this.status,\n      hourEnd: this.hourEndInput,\n      hourStart: this.hourStartInput,\n    });\n  }\n  reset() {\n    this.resetAll.emit();\n    this.dayInput = null;\n    this.monthInput = null;\n    this.yearInput = null;\n    this.hourEndInput = null;\n    this.hourStartInput = null;\n    this.status = undefined;\n  }\n  goBack() {\n    if (!this.isDesktop) {\n      this.closeMenu.emit();\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Filtros</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<!-- <div class=\\\"main\\\"> -->\\n<ion-content fullscreen>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"isComplete\\\" #isR=\\\"ngModel\\\" id=\\\"isR\\\" name=\\\"isR\\\"\\n        placeholder=\\\"Tipo\\\">\\n        <mat-option [value]=true>\\n          Completado\\n        </mat-option>\\n        <mat-option [value]=false>\\n          En Proceso\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </ion-item>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Fecha inicio</ion-label>\\n    </ion-list-header>\\n  </ion-list>\\n  <ion-item>\\n    <ion-label>\\n      Dia\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\n        placeholder=\\\"Mes\\\">\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\n          {{month}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>\\n      Año\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n  <br>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Fecha Fin</ion-label>\\n    </ion-list-header>\\n  </ion-list>\\n  <ion-item>\\n    <ion-label>\\n      Dia\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput2\\\" #day=\\\"ngModel\\\"\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput2\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\n        placeholder=\\\"Mes\\\">\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\n          {{month}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>\\n      Año\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput2\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n</ion-content>\\n\\n\\n<!-- </div> -->\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-build',\n  templateUrl: './filter-build.component.html',\n  styleUrls: ['./filter-build.component.scss'],\n})\nexport class FilterBuildComponent implements OnInit {\n  isComplete: boolean;\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  dayInput: number;\n  monthInput: number;\n  yearInput: number;\n  dayInput2: number;\n  monthInput2: number;\n  yearInput2: number;\n  @Output()\n  filters = new EventEmitter();\n  @Output()\n  resetAll = new EventEmitter();\n  @Output()\n  closeMenu = new EventEmitter();\n  @Input()\n  isDesktop: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n  applyFilters() {\n    this.filters.emit({\n      day: this.dayInput,\n      month: this.monthInput,\n      year: this.yearInput,\n      day2: this.dayInput2,\n      month2: this.monthInput2,\n      year2: this.yearInput2,\n      isComplete: this.isComplete,\n    });\n  }\n  reset() {\n    this.resetAll.emit();\n    this.dayInput = null;\n    this.monthInput = null;\n    this.yearInput = null;\n    this.yearInput2 = null;\n    this.monthInput2 = null;\n    this.dayInput2 = null;\n    this.isComplete = undefined;\n  }\n  goBack() {\n    if (!this.isDesktop) {\n      this.closeMenu.emit();\n    }\n  }\n}\n","module.exports = \"<p>\\n  filter-maker works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-maker',\n  templateUrl: './filter-maker.component.html',\n  styleUrls: ['./filter-maker.component.scss']\n})\nexport class FilterMakerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Filtros</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<!-- <div class=\\\"main\\\"> -->\\n<ion-content fullscreen>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"isRenter\\\" #isR=\\\"ngModel\\\" id=\\\"isR\\\" name=\\\"isR\\\"\\n        placeholder=\\\"Tipo\\\">\\n        <mat-option [value]=false>\\n          Vende\\n        </mat-option>\\n        <mat-option [value]=true>\\n          Renta\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </ion-item>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Fecha</ion-label>\\n    </ion-list-header>\\n  </ion-list>\\n  <ion-item>\\n    <ion-label>\\n      Dia\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\n        placeholder=\\\"Mes\\\">\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\n          {{month}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <!--  <ion-label>Mes</ion-label>\\n              <ion-select interface=\\\"popover\\\" (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\"\\n                name=\\\"day\\\">\\n                <ion-select-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">{{month}}</ion-select-option>\\n              </ion-select> -->\\n\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>\\n      Año\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n</ion-content>\\n\\n\\n<!-- </div> -->\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-seller',\n  templateUrl: './filter-seller.component.html',\n  styleUrls: ['./filter-seller.component.scss'],\n})\nexport class FilterSellerComponent implements OnInit {\n  isRenter: boolean;\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  dayInput: number;\n  monthInput: number;\n  yearInput: number;\n  @Output()\n  filters = new EventEmitter();\n  @Output()\n  resetAll = new EventEmitter();\n  @Output()\n  closeMenu = new EventEmitter();\n  @Input()\n  isDesktop: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n  applyFilters() {\n    this.filters.emit({\n      day: this.dayInput,\n      month: this.monthInput,\n      year: this.yearInput,\n      isRenter: this.isRenter,\n    });\n  }\n  reset() {\n    this.resetAll.emit();\n    this.dayInput = null;\n    this.monthInput = null;\n    this.yearInput = null;\n    this.isRenter = undefined;\n  }\n  goBack() {\n    if (!this.isDesktop) {\n      this.closeMenu.emit();\n    }\n  }\n}\n","module.exports = \"<div class=\\\"flex-container2\\\">\\n  <h3 mat-subheader>{{nameTitle}}</h3>\\n  <form #newUserForm=\\\"ngForm\\\">\\n    <div *ngFor=\\\"let item of arrInput; let i=index\\\" [ngClass]=\\\"{'more-input': forms.arrStr && forms.arrDate}\\\">\\n      <!-- arrStr default* -->\\n      <mat-form-field appearance=\\\"outline\\\" [ngClass]=\\\"{'one-input': forms.arrStr && !forms.arrDate}\\\">\\n        <mat-label>{{nameItems}} {{i + 1}}</mat-label>\\n        <input matInput placeholder=\\\"\\\" (keyup)=\\\"getStr()\\\" [(ngModel)]=\\\"arrStr[i]\\\" #str=\\\"ngModel\\\" id=\\\"str{{i}}\\\" name=\\\"str{{i}}\\\"\\n          [required]=\\\"isRequired\\\">\\n        <mat-error *ngIf=\\\"(str.dirty || str.touched) && isRequired\\\">Obligatorio</mat-error>\\n      </mat-form-field>\\n      <!-- / arrStr default* -->\\n      <!-- arrStr2 -->\\n      <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"forms.arrStr2\\\">\\n        <mat-label>{{nameItems2}} {{i + 1}}</mat-label>\\n        <input matInput placeholder=\\\"\\\" (keyup)=\\\"getStr()\\\" [(ngModel)]=\\\"arrStr2[i]\\\" #str2=\\\"ngModel\\\" id=\\\"str2{{i}}\\\" name=\\\"str2{{i}}\\\"\\n          [required]=\\\"isRequired\\\">\\n        <mat-error *ngIf=\\\"(str2.dirty || str2.touched) && isRequired\\\">Obligatorio</mat-error>\\n      </mat-form-field>\\n      <!-- arrDate -->\\n      <!-- Fecha -->\\n      <mat-form-field class=\\\"date-input\\\" *ngIf=\\\"forms.arrDate\\\" appearance=\\\"outline\\\">\\n        <mat-label>Inicio</mat-label>\\n        <input (dateChange)=\\\"dateSelect($event, i)\\\" [value]=\\\"arrDate[i]\\\" [(ngModel)]=\\\"arrDate[i]\\\" #date2=\\\"ngModel\\\" id=\\\"date{{i}}\\\"\\n          name=\\\"date{{i}}\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"\\\" [required]=\\\"isRequired\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n      <!-- Fecha2 -->\\n      <mat-form-field class=\\\"date-input\\\" *ngIf=\\\"forms.arrDate2\\\" appearance=\\\"outline\\\">\\n        <mat-label>Fin</mat-label>\\n        <input (dateChange)=\\\"dateSelect2($event, i)\\\" [value]=\\\"arrDate2[i]\\\" [(ngModel)]=\\\"arrDate2[i]\\\" #date2=\\\"ngModel\\\"\\n          id=\\\"date2{{i}}\\\" name=\\\"date2{{i}}\\\" (focus)=\\\"picker.open()\\\" matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"\\\"\\n          [required]=\\\"isRequired\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n      <!-- X -->\\n      <button *ngIf=\\\"isDesktop\\\" matTooltip=\\\"Eliminar\\\" mat-icon-button (click)=\\\"deleteItem(i)\\\">\\n        <mat-icon color=\\\"warn\\\">clear</mat-icon>\\n      </button>\\n      <button *ngIf=\\\"!isDesktop\\\" mat-stroked-button color=\\\"warn\\\" (click)=\\\"deleteItem(i)\\\">\\n        <mat-icon>clear</mat-icon>Eliminar\\n      </button>\\n      <hr *ngIf=\\\"!isDesktop\\\">\\n      <!-- /X -->\\n    </div>\\n  </form>\\n\\n  <div class=\\\"button-add\\\">\\n    <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"addItem()\\\">\\n      <mat-icon color=\\\"accent\\\">add</mat-icon>\\n      Agregar\\n    </button>\\n  </div>\\n</div>\"","module.exports = \".flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\\n.button-add {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 1%; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.one-input {\\n  width: 80%; }\\n\\n.more-input {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  align-items: baseline; }\\n\\n.more-input > * {\\n  padding: 1%; }\\n\\n.more-input > button {\\n  flex: 0; }\\n\\n.date-input {\\n  width: 18%; }\\n\\n@media (max-width: 900px) {\\n  .more-input {\\n    display: flex;\\n    flex-wrap: wrap;\\n    align-items: baseline; }\\n  .date-input {\\n    width: 50%; } }\\n\\nhr {\\n  width: 100%;\\n  height: 0px;\\n  background-color: darkgray;\\n  border-radius: 7px 7px 7px 7px; }\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nexport interface FormStr {\n  arrStr: string[];\n  arrStr2: string[];\n  arrDate: Date[];\n  arrDate2: Date[];\n  isValid: boolean;\n}\n\n@Component({\n  selector: 'app-form-str-list',\n  templateUrl: './form-str-list.component.html',\n  styleUrls: ['./form-str-list.component.scss']\n})\nexport class FormStrListComponent implements OnInit, OnChanges {\n  @ViewChild('newUserForm')\n  newUserForm;\n  @Input()\n  numOfItems = 3;\n  @Input()\n  nameItems = 'Objeto';\n  @Input()\n  nameItems2 = 'Objeto';\n  @Input()\n  nameTitle = 'Lista';\n  @Input()\n  arrStr: string[] = [];\n  @Input()\n  arrStr2: string[] = [];\n  @Input()\n  arrDate: any[] = [];\n  @Input()\n  arrDate2: any[] = [];\n  @Input()\n  isRequired = false;\n  arrInput: number[];\n  @Output()\n  arrList = new EventEmitter<string[]>();\n  @Output()\n  arrOutput = new EventEmitter();\n  @Input()\n  forms = {\n    arrStr: true,\n    arrStr2: false,\n    arrDate: false,\n    arrDate2: false\n  };\n  @Input()\n  isDesktop = true;\n\n  constructor() {\n    this.getArray(this.numOfItems);\n  }\n\n  ngOnInit() {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.numOfItems) {\n      if (changes.numOfItems.currentValue) {\n        this.numOfItems = changes.numOfItems.currentValue;\n        this.getArray(changes.numOfItems.currentValue);\n      }\n    }\n    /*  if (changes.nameItems) {\n      if (changes.nameItems.currentValue) {\n        this.nameItems = changes.nameItems.currentValue;\n      }\n    }\n    if (changes.nameTitle) {\n      if (changes.nameTitle.currentValue) {\n        this.nameTitle = changes.nameTitle.currentValue;\n      }\n    }\n    if (changes.isRequired) {\n      if (changes.isRequired.currentValue) {\n        this.isRequired = changes.isRequired.currentValue;\n      }\n    } */\n  }\n  getArray(num?: number) {\n    this.arrInput = Array(num).fill(1);\n  }\n  getStr(itemStr?) {\n    this.arrList.emit(this.arrStr);\n    this.arrOutput.emit({\n      arrStr: this.arrStr,\n      arrStr2: this.arrStr2,\n      arrDate: this.arrDate,\n      arrDate2: this.arrDate2,\n      isValid: this.newUserForm.valid\n    });\n  }\n  deleteItem(number) {\n    this.numOfItems--;\n    this.arrInput.splice(number, 1);\n    this.arrStr.splice(number, 1);\n    this.arrStr2.splice(number, 1);\n    this.arrDate.splice(number, 1);\n    this.arrDate2.splice(number, 1);\n    this.arrList.emit(this.arrStr);\n    this.getStr();\n  }\n  addItem() {\n    this.numOfItems++;\n    this.getArray(this.numOfItems);\n  }\n  dateSelect(event, i) {\n    if (event) {\n      this.arrDate[i] = new Date(\n        event.value._i.year,\n        event.value._i.month,\n        event.value._i.date\n      );\n      this.getStr();\n    }\n  }\n  dateSelect2(event, i) {\n    if (event) {\n      this.arrDate2[i] = new Date(\n        event.value._i.year,\n        event.value._i.month,\n        event.value._i.date\n      );\n      this.getStr();\n    }\n  }\n}\n","module.exports = \"<div id=\\\"calendar\\\" (click)=\\\"click($event)\\\" style=\\\"height: 100%;\\\"></div>\"","module.exports = \"#calendar .row-number-day {\\n  padding: 15px !important;\\n  text-align: left !important;\\n  border-bottom: 1px solid #ddd;\\n  vertical-align: top; }\\n\\n#calendar .row-name-day {\\n  padding: 2px 15px 15px 0px !important;\\n  height: 10px;\\n  text-align: left !important;\\n  border-bottom: 2px solid #ffb251;\\n  vertical-align: top; }\\n\\n#calendar .row-number-day2 {\\n  padding: 15px 0px !important;\\n  text-align: left !important;\\n  border-bottom: 1px solid #ddd;\\n  vertical-align: top;\\n  width: 15%; }\\n\\n#calendar .current-day {\\n  background-color: #ffb251;\\n  border-radius: 9px;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content; }\\n\\n#calendar .calendar-table {\\n  width: 100%;\\n  height: 100%; }\\n\\n#calendar td {\\n  border-bottom: 1px solid #ddd;\\n  vertical-align: top; }\\n\\n#calendar td:hover {\\n  background-color: #f5f5f5; }\\n\\n#calendar .event-of-day {\\n  background-color: #ffe9cc;\\n  border-left: 5px solid #FFB251;\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-gris {\\n  background-color: #aab4bd;\\n  border-left: 5px solid #47525d;\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-verde {\\n  background-color: #c3f7d7;\\n  border-left: 5px solid var(--ion-color-success);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-amarillo {\\n  background-color: #f7f3e2;\\n  border-left: 5px solid var(--ion-color-warning);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-rojo {\\n  background-color: #f1b9b9;\\n  border-left: 5px solid var(--ion-color-danger);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\\n#calendar .event-of-day-azul {\\n  background-color: #9bd6fb;\\n  border-left: 5px solid var(--ion-color-blue);\\n  border-radius: 7%;\\n  margin-bottom: 4%;\\n  font-size: small; }\\n\"","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-general-calendar',\n  templateUrl: './general-calendar.component.html',\n  styleUrls: ['./general-calendar.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GeneralCalendarComponent implements OnInit, OnChanges {\n  @Input()\n  month: number = new Date().getMonth();\n  @Input()\n  year: number = new Date().getFullYear();\n  @Input()\n  schedules: ISchedule[] = [];\n  @Output()\n  calendarSelect = new EventEmitter<any>();\n  @Output()\n  alertOfToday = new EventEmitter<any>();\n  flag = false;\n  constructor(public toastController: ToastController) {}\n  // tslint:disable:no-var-keyword\n  // tslint:disable:quotemark\n  // tslint:disable:prefer-const\n  // tslint:disable:max-line-length\n\n  ngOnInit() {\n    this.calendar2(new Date().getMonth(), new Date().getFullYear());\n  }\n  click(event) {\n    this.calendarSelect.emit({\n      year: this.year,\n      month: this.month,\n      day: +event.srcElement.id,\n    });\n  }\n  getScheduleEvents(year, month, day): string {\n    let numOfEvent = 0;\n    let str = '';\n    const events = this.schedules.filter(\n      s => s.day === day && s.month === month && s.year === year,\n    );\n    if (events.length > 0) {\n      if (events.length === 1) {\n        if (events[0].status) {\n          str +=\n            '<div class=\"event-of-day-' +\n            events[0].status +\n            '\" id=\"' +\n            day +\n            '\">' +\n            events.length +\n            ' Evento </div>';\n        } else {\n          str +=\n            '<div class=\"event-of-day\" id=\"' +\n            day +\n            '\">' +\n            events.length +\n            ' Evento </div>';\n        }\n      } else {\n        str +=\n          '<div class=\"event-of-day\" id=\"' +\n          day +\n          '\">' +\n          events.length +\n          ' Eventos </div>';\n      }\n    }\n    return str;\n  }\n  presentToast() {\n    this.alertOfToday.emit();\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.month) {\n      if (changes.month.currentValue) {\n        this.calendar2(this.month, this.year);\n      }\n    }\n    if (changes.year) {\n      if (changes.year.currentValue) {\n        this.calendar2(this.month, this.year);\n      }\n    }\n  }\n  calendar2(month: number, year: number) {\n    // Variables to be used later.  Place holders right now.\n    var padding = '';\n    var totalFeb = '';\n    var i = 1;\n    var testing = '';\n\n    var current = new Date();\n    var cmonth = current.getMonth(); // current (today) month\n    var day = current.getDate();\n    var tempMonth = month + 1; // +1; // Used to match up the current month with the correct start date.\n    var prevMonth = month - 1;\n\n    // Determing if Feb has 28 or 29 days in it.\n    if (month === 1) {\n      if ((year % 100 !== 0 && year % 4 === 0) || year % 400 === 0) {\n        totalFeb = '29';\n      } else {\n        totalFeb = '28';\n      }\n    }\n\n    // Setting up arrays for the name of the months, days, and the number of days in the month.\n    var monthNames = [\n      'Jan',\n      'Feb',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'Aug',\n      'Sept',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    var dayNames = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thrusday',\n      'Friday',\n      'Saturday',\n    ];\n    var totalDays = [\n      '31',\n      '' + totalFeb + '',\n      '31',\n      '30',\n      '31',\n      '30',\n      '31',\n      '31',\n      '30',\n      '31',\n      '30',\n      '31',\n    ];\n\n    // Temp values to get the number of days in current month, and previous month. Also getting the day of the week.\n    // var tempDate = new Date(tempMonth + ' 1 ,' + year);\n    var tempDate = new Date(year, month, 1);\n    var tempweekday = tempDate.getDay();\n    var tempweekday2 = tempweekday;\n    var dayAmount = totalDays[month];\n    // After getting the first day of the week for the month, padding the other days for that week with the previous months days.  IE, if the first day of the week is on a Thursday, then this fills in Sun - Wed with the last months dates, counting down from the last day on Wed, until Sunday.\n    while (tempweekday > 0) {\n      padding += '<td ></td>';\n      // preAmount++;\n      tempweekday--;\n    }\n    // Filling in the calendar with the current month days in the correct location along.\n    while (i <= +dayAmount) {\n      // Determining when to start a new row\n\n      if (tempweekday2 > 6) {\n        tempweekday2 = 0;\n        padding += '</tr><tr >';\n      }\n\n      // tslint:disable-next-line:max-line-length\n      // checking to see if i is equal to the current day, if so then we are making the color of that cell a different color using CSS. Also adding a rollover effect to highlight the day the user rolls over. This loop creates the actual calendar that is displayed.\n      const eventsOfDay: string = this.getScheduleEvents(year, month, i);\n      if (eventsOfDay !== '') {\n        if (i === day && month === cmonth) {\n          padding +=\n            '<td class=\"row-number-day2\" id=\"' +\n            i +\n            '\"><div class=\"current-day\">' +\n            i +\n            eventsOfDay +\n            '</div></td>';\n          this.presentToast();\n        } else {\n          padding +=\n            '<td class=\"row-number-day2\" id=\"' +\n            i +\n            '\" >' +\n            i +\n            eventsOfDay +\n            '</td>';\n        }\n      } else {\n        if (i === day && month === cmonth) {\n          padding +=\n            '<td class=\" row-number-day \" id=\"' +\n            i +\n            '\" ><div class=\"current-day\">' +\n            i +\n            '</div></td>';\n        } else {\n          padding +=\n            '<td class=\"row-number-day\" id=\"' + i + '\" >' + i + '</td>';\n        }\n      }\n\n      tempweekday2++;\n\n      i++;\n    }\n    if (tempweekday2 < 7) {\n      let fillEnd = 7 - tempweekday2;\n      while (fillEnd > 0) {\n        padding += '<td ></td>';\n        fillEnd--;\n      }\n    }\n\n    // Outputing the calendar onto the site.  Also, putting in the month name and days of the week.\n    var calendarTable = '<table class=\"calendar-table \" > ';\n    calendarTable +=\n      '<tr class=\"row-name-day \" >  <td class=\"row-name-day \">Do</td>  <td class=\"row-name-day \">Lu</td> <td class=\"row-name-day \">Ma</td> <td class=\"row-name-day \">Mi</td> <td class=\"row-name-day \">Ju</td> <td class=\"row-name-day \">Vi</td> <td class=\"row-name-day \">Sa</td> </tr>';\n    calendarTable += '<tr class=\"row-number-day\" >';\n    calendarTable += padding;\n    calendarTable += '</tr></table>';\n    document.getElementById('calendar').innerHTML = calendarTable;\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"applyFilters(); goBack()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Filtros</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"applyFilters();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<div class=\\\"main\\\">\\n  <!-- <ion-content fullscreen> -->\\n  <ion-list>\\n    <ion-radio-group [(ngModel)]=\\\"status\\\" (ionChange)=\\\"applyFilters()\\\">\\n      <ion-list-header>\\n        <ion-label>Estado</ion-label>\\n      </ion-list-header>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Gris</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"gris\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Verde</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"verde\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Amarillo</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"amarillo\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Rojo</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"rojo\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Azul</ion-label>\\n        <ion-radio mode=\\\"md\\\" value=\\\"azul\\\" slot=\\\"end\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Fecha</ion-label>\\n    </ion-list-header>\\n  </ion-list>\\n  <ion-item>\\n    <ion-label>\\n      Dia\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" (onkeyup)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"dayInput\\\" #day=\\\"ngModel\\\"\\n      id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <mat-form-field>\\n      <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"\\n        placeholder=\\\"Mes\\\">\\n        <mat-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">\\n          {{month}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <!--  <ion-label>Mes</ion-label>\\n          <ion-select interface=\\\"popover\\\" (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"monthInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\"\\n            name=\\\"day\\\">\\n            <ion-select-option *ngFor=\\\"let month of months; let i=index\\\" [value]=\\\"i\\\">{{month}}</ion-select-option>\\n          </ion-select> -->\\n\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>\\n      Año\\n    </ion-label>\\n    <ion-input (ionChange)=\\\"applyFilters()\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearInput\\\" #day=\\\"ngModel\\\" id=\\\"day\\\" name=\\\"day\\\"></ion-input>\\n  </ion-item>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Propiedades</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <mat-form-field>\\n        <mat-select (selectionChange)=\\\"applyFilters()\\\" [(ngModel)]=\\\"propInput\\\" #prop=\\\"ngModel\\\" id=\\\"prop\\\" name=\\\"prop\\\"\\n          placeholder=\\\"Propiedad\\\">\\n          <mat-option *ngFor=\\\"let prop of propertiesName\\\" [value]=\\\"prop\\\">\\n            {{prop}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </ion-item>\\n  </ion-list>\\n  <!-- </ion-content> -->\\n\\n\\n</div>\"","module.exports = \".main {\\n  margin-top: 26%;\\n  /* Add a top margin to avoid content overlay */\\n  overflow: auto; }\\n\\n.top-bar {\\n  position: fixed;\\n  overflow: hidden;\\n  z-index: 10;\\n  width: 15%; }\\n\\n@media (max-width: 900px) {\\n  .top-bar {\\n    position: absolute;\\n    width: 100%;\\n    right: 0; } }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IBuyer } from '../../../models/buyer.model';\n\n@Component({\n  selector: 'app-general-filter-buyer',\n  templateUrl: './general-filter-buyer.component.html',\n  styleUrls: ['./general-filter-buyer.component.scss'],\n})\nexport class GeneralFilterBuyerComponent implements OnInit {\n  status: string;\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  dayInput: number;\n  monthInput: number;\n  yearInput: number;\n  propInput: string;\n  @Output()\n  filters = new EventEmitter();\n  @Output()\n  resetAll = new EventEmitter();\n  @Output()\n  closeMenu = new EventEmitter();\n  @Input()\n  isDesktop: boolean;\n  @Input()\n  propertiesName: string[];\n\n  constructor() {}\n\n  ngOnInit() {}\n  applyFilters() {\n    this.filters.emit({\n      day: this.dayInput,\n      month: this.monthInput,\n      year: this.yearInput,\n      status: this.status,\n      property: this.propInput,\n    });\n  }\n  reset() {\n    this.resetAll.emit();\n    this.dayInput = null;\n    this.monthInput = null;\n    this.yearInput = null;\n    this.status = undefined;\n    this.propInput = undefined;\n  }\n  goBack() {\n    if (!this.isDesktop) {\n      this.closeMenu.emit();\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!isDesktop\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBack()\\\" slot=\\\"start\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Filtros</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"sendFilters();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"reset();goBack()\\\">\\n        <ion-icon mode=\\\"md\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- <div class=\\\"parent20\\\"> -->\\n<ion-content fullscreen>\\n\\n  <ng-container *ngIf=\\\"!isFilterApply; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n\\n    <ion-list lines=\\\"none\\\">\\n      <ion-item lines=\\\"none\\\" (click)=\\\" caseFilter = 'Precio';isFilterApply = !isFilterApply; \\\">\\n        <ion-label>\\n          Precio\\n        </ion-label>\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice === 0 && !hopeProperty.maxPrice\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice !== 0 && !hopeProperty.maxPrice\\\">{{hopeProperty.minPrice}}+</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice === 0 && hopeProperty.maxPrice\\\">{{hopeProperty.maxPrice}}</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.minPrice !== 0 && hopeProperty.maxPrice\\\"> {{hopeProperty.minPrice }}-{{\\n          hopeProperty.maxPrice}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Renta\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"rent\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Venta\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"sell\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\" caseFilter = 'Tipo de Vivienda';isFilterApply = !isFilterApply; \\\">\\n        <ion-label>\\n          Tipo de Vivienda\\n        </ion-label>\\n        <ion-note *ngIf=\\\"!hopeProperty.typeOfProperty\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.typeOfProperty\\\">{{hopeProperty.typeOfProperty}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Espacio'\\\">\\n        <ion-label>\\n          Espacio\\n        </ion-label>\\n        <ion-note *ngIf=\\\"hopeProperty.space === 0\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.space !== 0\\\">{{hopeProperty.space}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Zona'\\\">\\n        <ion-label>\\n          Zona\\n        </ion-label>\\n        <ion-note *ngIf=\\\"!hopeProperty.zone\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.zone\\\">{{hopeProperty.zone}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Cuartos'\\\">\\n        <ion-label>\\n          Número de Cuartos\\n        </ion-label>\\n        <ion-note *ngIf=\\\"hopeProperty.numRooms === 0\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.numRooms !== 0\\\">{{hopeProperty.numRooms}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Carros'\\\">\\n        <ion-label>\\n          Espacio para carros\\n        </ion-label>\\n        <ion-note *ngIf=\\\"hopeProperty.numCars === 0\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.numCars !== 0\\\">{{hopeProperty.numCars}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Usado\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"old\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Nuevo\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"notOld\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Cerrado\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"close\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Abierto\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"open\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Bathrooms'\\\">\\n        <ion-label>\\n          Numero de baños\\n        </ion-label>\\n        <ion-note *ngIf=\\\"hopeProperty.numBathrooms === 0\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.numBathrooms !== 0\\\">{{hopeProperty.numBathrooms}}</ion-note>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Con Jardin\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"garden\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Sin Jardin\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"noGarden\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          En plata baja\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"lowLevel\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Cualquier Nivel\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"noMatterLevel\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Con Elevador\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"elevator\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Sin Elevador\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"noElevator\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Todos los servicios\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"allServices\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          Sin Servicios\\n        </ion-label>\\n        <ion-toggle (ionChange)=\\\"sendFilters()\\\" [(ngModel)]=\\\"notAllServices\\\" mode=\\\"md\\\" slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" (click)=\\\"isFilterApply = !isFilterApply; caseFilter = 'Forma de compra'\\\">\\n        <ion-label>\\n          Forma de compra\\n        </ion-label>\\n        <ion-note *ngIf=\\\"!hopeProperty.wayToBuy\\\">Cualquiera</ion-note>\\n        <ion-note *ngIf=\\\"hopeProperty.wayToBuy\\\">{{hopeProperty.wayToBuy}}</ion-note>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"sendFilters();goBack()\\\">Aplicar</ion-button>\\n\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <!-- Filtros aplicar -->\\n    <span [ngSwitch]=\\\"caseFilter\\\">\\n      <span *ngSwitchCase=\\\"'Precio'\\\">\\n        <ion-item>\\n          <ion-label>Minimo</ion-label>\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\" name=\\\"minPrice\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Maximo</ion-label>\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\" name=\\\"maxPrice\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n      </span>\\n      <span *ngSwitchCase=\\\"'Tipo de Vivienda'\\\">\\n        Seleccione uno\\n        <ion-list>\\n          <ion-radio-group [(ngModel)]=\\\"hopeProperty.typeOfProperty\\\">\\n            <ion-list-header>\\n              <ion-label>Tipo de Vivienda</ion-label>\\n            </ion-list-header>\\n\\n            <ion-item>\\n              <ion-label>Casa</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"casa\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Departamento</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"departamento\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Terreno</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"terreno\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Nave Industrial</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"nave industrial\\\"></ion-radio>\\n            </ion-item>\\n          </ion-radio-group>\\n        </ion-list>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n      </span>\\n      <span *ngSwitchCase=\\\"'Espacio'\\\">\\n        <ion-item>\\n          <ion-label>Espacio</ion-label>\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n\\n      </span>\\n      <span *ngSwitchCase=\\\"'Zona'\\\">\\n        <ion-item>\\n          <ion-label>Zona</ion-label>\\n          <ion-input [(ngModel)]=\\\"hopeProperty.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n\\n      </span>\\n      <span *ngSwitchCase=\\\"'Cuartos'\\\">\\n        <ion-item>\\n          <ion-label>Minimo num. de cuartos </ion-label>\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.numRooms\\\" #numRooms=\\\"ngModel\\\" id=\\\"numRooms\\\" name=\\\"numRooms\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n\\n      </span>\\n      <span *ngSwitchCase=\\\"'Carros'\\\">\\n        <ion-item>\\n          <ion-label>Minimo num. de carros </ion-label>\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.numCars\\\" #numCars=\\\"ngModel\\\" id=\\\"numCars\\\" name=\\\"numCars\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n\\n      </span>\\n      <span *ngSwitchCase=\\\"'Bathrooms'\\\">\\n        <ion-item>\\n          <ion-label>Minimo num.</ion-label>\\n          <ion-input type=\\\"number\\\" [(ngModel)]=\\\"hopeProperty.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\" id=\\\"numBathrooms\\\"\\n            name=\\\"numBathrooms\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n\\n      </span>\\n      <span *ngSwitchCase=\\\"'Forma de compra'\\\">\\n        Seleccione uno\\n        <ion-list>\\n          <ion-radio-group [(ngModel)]=\\\"hopeProperty.wayToBuy\\\">\\n            <ion-list-header>\\n              <ion-label>Forma de compra</ion-label>\\n            </ion-list-header>\\n\\n            <ion-item>\\n              <ion-label>FOVISSTE</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"FOVISSTE\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>IMSS</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"IMSS\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Contado</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"contado\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>PEMEX</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"PEMEX\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Infonavit</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"infonavit\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Aliados</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"aliados\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Otros</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"otros\\\"></ion-radio>\\n            </ion-item>\\n          </ion-radio-group>\\n        </ion-list>\\n        <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"goBack()\\\">Aplicar</ion-button>\\n      </span>\\n\\n      <!--   <p *ngSwitchDefault>\\n  \\n  </p> -->\\n    </span>\\n  </ng-template>\\n</ion-content>\\n\\n<!-- </div> -->\\n\\n<!-- <ion-footer *ngIf=\\\"!isFilterApply\\\">\\n  <ion-toolbar>\\n    <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"sendFilters();goBack()\\\">Aplicar</ion-button>\\n  </ion-toolbar>\\n</ion-footer> -->\"","module.exports = \".parent20 {\\n  height: 563px;\\n  overflow: auto; }\\n\\n.main-container {\\n  height: 75vh;\\n  /* or position:absolute; height:100%; */\\n  display: flex;\\n  flex-direction: column; }\\n\\n/* an arbitrary container of fixed height */\\n\\n.fixed-container {\\n  height: 100px;\\n  padding: 20px;\\n  background-color: #0B5AB0;\\n  color: white; }\\n\\n/* this is the flex container that will take the rest of the height */\\n\\n.content-wrapper {\\n  display: flex;\\n  flex: 1;\\n  min-height: 0px;\\n  /* IMPORTANT: you need this for non-chrome browsers */ }\\n\\n/* the container for our overflowed content */\\n\\n.overflow-container {\\n  flex: 1;\\n  overflow: auto; }\\n\\n/* the overflow content itself */\\n\\n.overflow-content {\\n  height: 2000px;\\n  color: black;\\n  background-color: #ddd;\\n  padding: 20px; }\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { IProperty } from '../../../models/property.model';\n\n@Component({\n  selector: 'app-general-filters',\n  templateUrl: './general-filters.component.html',\n  styleUrls: ['./general-filters.component.scss'],\n})\nexport class GeneralFiltersComponent implements OnInit {\n  @Input()\n  isDesktop = false;\n  @Output()\n  filters = new EventEmitter();\n  @Output()\n  resetAll = new EventEmitter();\n  @Output()\n  closeMenuMaterial = new EventEmitter();\n  constructor(public menuCtr: MenuController) {}\n  isFilterApply = false;\n  caseFilter: string;\n  hopeProperty: IProperty = {\n    minPrice: 0,\n    numBathrooms: 0,\n    numCars: 0,\n    numRooms: 0,\n    space: 0,\n  };\n  rent = false;\n  sell = false;\n  old = false;\n  notOld = false;\n  garden = false;\n  noGarden = false;\n  lowLevel = false;\n  noMatterLevel = false;\n  elevator = false;\n  noElevator = false;\n  allServices = false;\n  notAllServices = false;\n  open = false;\n  close = false;\n\n  ngOnInit() {}\n  goBack() {\n    if (this.isFilterApply) {\n      this.sendFilters();\n      this.isFilterApply = false;\n    } else {\n      this.menuCtr.close('filters');\n      if (!this.isDesktop) {\n        this.closeMenuMaterial.emit();\n      }\n    }\n  }\n  sendFilters() {\n    if (this.rent !== this.sell) {\n      this.hopeProperty.isRent = this.rent;\n    } else {\n      this.hopeProperty.isRent = undefined;\n    }\n    if (this.old !== this.notOld) {\n      this.hopeProperty.isOld = this.old;\n    } else {\n      this.hopeProperty.isOld = undefined;\n    }\n    if (this.garden !== this.noGarden) {\n      this.hopeProperty.hasGarden = this.garden;\n    } else {\n      this.hopeProperty.hasGarden = undefined;\n    }\n    if (this.lowLevel !== this.noMatterLevel) {\n      this.hopeProperty.isLowLevel = this.lowLevel;\n    } else {\n      this.hopeProperty.isLowLevel = undefined;\n    }\n    if (this.elevator !== this.noElevator) {\n      this.hopeProperty.hasElevator = this.elevator;\n    } else {\n      this.hopeProperty.hasElevator = undefined;\n    }\n    if (this.allServices !== this.notAllServices) {\n      this.hopeProperty.allServices = this.allServices;\n    } else {\n      this.hopeProperty.allServices = undefined;\n    }\n    if (this.open !== this.close) {\n      this.hopeProperty.isClose = this.close;\n    } else {\n      this.hopeProperty.isClose = undefined;\n    }\n    console.log(this.hopeProperty);\n    this.filters.emit(this.hopeProperty);\n  }\n  reset() {\n    this.rent = false;\n    this.sell = false;\n    this.old = false;\n    this.notOld = false;\n    this.garden = false;\n    this.noGarden = false;\n    this.lowLevel = false;\n    this.noMatterLevel = false;\n    this.elevator = false;\n    this.noElevator = false;\n    this.allServices = false;\n    this.notAllServices = false;\n    this.open = false;\n    this.close = false;\n    this.hopeProperty = {\n      minPrice: 0,\n      numBathrooms: 0,\n      numCars: 0,\n      numRooms: 0,\n      space: 0,\n    };\n    this.resetAll.emit();\n  }\n}\n","module.exports = \"<ion-skeleton-text width=40px></ion-skeleton-text>\\n<ion-skeleton-text width=200px></ion-skeleton-text>\\n<ion-skeleton-text width=600px></ion-skeleton-text>\\n<ion-skeleton-text width=100px></ion-skeleton-text>\\n<ion-skeleton-text width=80px></ion-skeleton-text>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-general-skeleton',\n  templateUrl: './general-skeleton.component.html',\n  styleUrls: ['./general-skeleton.component.scss']\n})\nexport class GeneralSkeletonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"isDesktop; then: Desktop; else: Device\\\"></ng-container>\\n<ng-template #Desktop>\\n  <mat-card [class.mat-elevation-z0]=\\\"true\\\" class=\\\"border-filter\\\">\\n    <mat-card-title>Búsqueda General</mat-card-title>\\n    <div class=\\\"row\\\">\\n      <mat-form-field style=\\\"margin-right: 1%\\\" appearance=\\\"fill\\\">\\n        <mat-label>Buscar en toda la tabla </mat-label>\\n        <input\\n          matInput\\n          (keyup)=\\\"applyFilter($event.target.value)\\\"\\n          placeholder=\\\"Buscar...\\\"\\n        />\\n      </mat-form-field>\\n      <div>\\n        <mat-chip-list *ngIf=\\\"showChips\\\">\\n          <span *ngFor=\\\"let row of rows\\\">\\n            <mat-chip\\n              *ngIf=\\\"row.checkBox\\\"\\n              [removable]=\\\"true\\\"\\n              [selectable]=\\\"true\\\"\\n              (removed)=\\\"\\n                checkbox.emit({ isChecked: false, row: row });\\n                row.checkBox = false\\n              \\\"\\n              >{{ row.nameChip }}\\n              <mat-icon matChipRemove>cancel</mat-icon>\\n            </mat-chip>\\n          </span>\\n        </mat-chip-list>\\n      </div>\\n    </div>\\n  </mat-card>\\n  <div style=\\\"margin: 1%\\\" class=\\\"mat-elevation-z8\\\">\\n    <mat-progress-bar\\n      *ngIf=\\\"showLoader\\\"\\n      mode=\\\"indeterminate\\\"\\n      color=\\\"accent\\\"\\n    ></mat-progress-bar>\\n    <div\\n      class=\\\"table-container\\\"\\n      style=\\\"overflow-x:auto; \\\"\\n      *ngIf=\\\"rows && dataSource\\\"\\n    >\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <ng-container\\n          *ngFor=\\\"let column of columns\\\"\\n          [cdkColumnDef]=\\\"column.prop\\\"\\n        >\\n          <th\\n            mat-header-cell\\n            mat-sort-header=\\\"{{column.prop}}\\\"\\n            disabled=\\\"{{column.disabledSort ? column.disabledSort : false}}\\\"\\n            [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n            *cdkHeaderCellDef\\n          >\\n            {{ column.name }}\\n            <!-- checkbox all -->\\n            <mat-checkbox\\n              #CheckboxAll\\n              (change)=\\\"changeAllCheckbox($event.checked)\\\"\\n              *ngIf=\\\"column.type === 'checkBox'\\\"\\n            >\\n            </mat-checkbox>\\n          </th>\\n\\n          <!-- check -->\\n          <span *ngIf=\\\"column.type === 'checkBox'\\\">\\n            <td mat-cell *cdkCellDef=\\\"let row\\\">\\n              <mat-checkbox\\n                [checked]=\\\"row[column.prop]\\\"\\n                (change)=\\\"\\n                  checkbox.emit({ isChecked: $event.checked, row: row });\\n                  row[column.prop] = $event.checked\\n                \\\"\\n              ></mat-checkbox>\\n            </td>\\n          </span>\\n          <!-- normal -->\\n          <span *ngIf=\\\"column.type === 'normal'\\\">\\n            <td\\n              mat-cell\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              {{ row[column.prop] }}\\n            </td>\\n          </span>\\n          <!-- date -->\\n          <div *ngIf=\\\"column.type === 'date'\\\">\\n            <td\\n              mat-cell\\n              style=\\\"padding: 0% 1% 0% 1%\\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              {{ formatDates(row[column.prop]) }}\\n            </td>\\n          </div>\\n          <!--\\n            status\\n            name\\n            status\\n          -->\\n          <span *ngIf=\\\"column.type === 'status'\\\">\\n            <td\\n              mat-cell\\n              class=\\\"center-cell \\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              <ion-chip\\n                *ngFor=\\\"let property of row[column.prop]\\\"\\n                [ngClass]=\\\"{\\n                  'background-gris': property.status === 'gris',\\n                  'background-verde': property.status === 'verde',\\n                  'background-amarillo': property.status === 'amarillo',\\n                  'background-rojo': property.status === 'rojo',\\n                  'background-azul': property.status === 'azul'\\n                }\\\"\\n              >\\n                <ion-label>{{ property.name }}</ion-label>\\n              </ion-chip>\\n            </td>\\n          </span>\\n          <!-- boolean -->\\n          <span *ngIf=\\\"column.type === 'boolean'\\\">\\n            <td\\n              mat-cell\\n              class=\\\"center-cell\\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              <span class=\\\"margin-ranking \\\">\\n                <button\\n                  *ngIf=\\\"row[column.prop]\\\"\\n                  (click)=\\\"onSelect(row)\\\"\\n                  mat-icon-button\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\" class=\\\"green-icon\\\"\\n                    >check_circle</mat-icon\\n                  >\\n                </button>\\n                <button\\n                  *ngIf=\\\"!row[column.prop]\\\"\\n                  (click)=\\\"onSelect(row)\\\"\\n                  mat-icon-button\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\" class=\\\"red-icon\\\"\\n                    >cancel</mat-icon\\n                  >\\n                </button>\\n              </span>\\n            </td>\\n          </span>\\n          <!-- ranking -->\\n          <span *ngIf=\\\"column.type === 'ranking'\\\">\\n            <td\\n              mat-cell\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              class=\\\"margin-ranking\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              <div class=\\\"flexbox-ranking\\\">\\n                <span *ngIf=\\\"row[column.prop] > 0\\\">\\n                  <mat-icon\\n                    *ngFor=\\\"let starts of getArray(row[column.prop])\\\"\\n                    class=\\\"secondary-text\\\"\\n                    class=\\\"yellow-icon\\\"\\n                    >star_rate</mat-icon\\n                  >\\n                </span>\\n                <span *ngIf=\\\"row[column.prop] === 0\\\"> Sin calificar </span>\\n              </div>\\n            </td>\\n          </span>\\n          <!-- money -->\\n          <span *ngIf=\\\"column.type === 'money'\\\">\\n            <td\\n              mat-cell\\n              class=\\\"center-cell\\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              $ {{ row[column.prop].toFixed(2) }}\\n            </td>\\n          </span>\\n          <!-- number -->\\n          <span *ngIf=\\\"column.type === 'number'\\\">\\n            <td\\n              mat-cell\\n              class=\\\"center-cell\\\"\\n              style=\\\"text-align: center\\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              {{ row[column.prop] }}\\n            </td>\\n          </span>\\n          <!--\\n            phone\\n            <a href=\\\"tel:+13174562564\\\">317-456-2564</a>\\n          -->\\n          <span *ngIf=\\\"column.type === 'phone'\\\">\\n            <td\\n              mat-cell\\n              class=\\\"center-cell\\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              <a [href]=\\\"'tel:' + row[column.prop]\\\">{{ row[column.prop] }}</a>\\n            </td>\\n          </span>\\n          <!-- tags -->\\n          <span *ngIf=\\\"column.type === 'tags'\\\">\\n            <td\\n              mat-cell\\n              class=\\\"center-cell \\\"\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n            >\\n              <span\\n                class=\\\"label\\\"\\n                [ngClass]=\\\"{\\n                  success: row[column.prop].style == 'buyer',\\n                  info: row[column.prop].style == 'adviser',\\n                  other: row[column.prop].style == 'seller'\\n                }\\\"\\n              >\\n                {{ row[column.prop].name }}\\n              </span>\\n            </td>\\n          </span>\\n          <!-- butons -->\\n          <span *ngIf=\\\"column.type === 'buttons'\\\">\\n            <td\\n              mat-cell\\n              [ngClass]=\\\"{ customWidthClass: column.w }\\\"\\n              *cdkCellDef=\\\"let row\\\"\\n              style=\\\"justify-content: center;\\\"\\n            >\\n              <div class=\\\"flexbox-buttons\\\">\\n                <button\\n                  mat-icon-button\\n                  matTooltip=\\\"Detalles\\\"\\n                  matTooltipPosition=\\\"above\\\"\\n                  color=\\\"primary\\\"\\n                  *ngIf=\\\"column.buttonDetails\\\"\\n                  (click)=\\\"detailsItem(row)\\\"\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\">info</mat-icon>\\n                </button>\\n                <button\\n                  mat-icon-button\\n                  color=\\\"primary\\\"\\n                  matTooltip=\\\"Editar\\\"\\n                  matTooltipPosition=\\\"above\\\"\\n                  *ngIf=\\\"column.buttonEdit\\\"\\n                  (click)=\\\"editItem(row)\\\"\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\">create</mat-icon>\\n                </button>\\n                <button\\n                  mat-icon-button\\n                  color=\\\"warn\\\"\\n                  matTooltip=\\\"Borrar\\\"\\n                  matTooltipPosition=\\\"above\\\"\\n                  *ngIf=\\\"column.buttonDeleted\\\"\\n                  (click)=\\\"deletedItem(row)\\\"\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\">delete</mat-icon>\\n                </button>\\n                <button\\n                  mat-icon-button\\n                  color=\\\"primary\\\"\\n                  matTooltip=\\\"Mensaje\\\"\\n                  matTooltipPosition=\\\"above\\\"\\n                  *ngIf=\\\"column.buttonMail\\\"\\n                  (click)=\\\"mailItem(row)\\\"\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\">mail</mat-icon>\\n                </button>\\n                <button\\n                  mat-icon-button\\n                  color=\\\"primary\\\"\\n                  matTooltip=\\\"Calificar\\\"\\n                  matTooltipPosition=\\\"above\\\"\\n                  *ngIf=\\\"column.buttonRating && row.status === 'Cerrado'\\\"\\n                  (click)=\\\"ratingItem(row)\\\"\\n                >\\n                  <mat-icon class=\\\"secondary-text\\\">stars</mat-icon>\\n                </button>\\n              </div>\\n            </td>\\n          </span>\\n        </ng-container>\\n        <!--\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n        -->\\n        <tr\\n          mat-header-row\\n          *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"\\n        ></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <mat-paginator\\n      [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\n      [pageSize]=\\\"10\\\"\\n    ></mat-paginator>\\n  </div>\\n  <br />\\n</ng-template>\\n<!-- Celular lista -->\\n<ng-template #Device>\\n  <!-- Default Searchbar -->\\n  <ion-searchbar\\n    (ionClear)=\\\"serach(undefined)\\\"\\n    (keyup)=\\\"serach(Search.value)\\\"\\n    placeholder=\\\"Buscar...\\\"\\n    #Search\\n    animated\\n    showCancelButton\\n    cancelButtonText=\\\"Cancelar\\\"\\n  ></ion-searchbar>\\n  <ion-list>\\n    <ion-item lines=\\\"inset\\\" *ngFor=\\\"let row of dataSource.data\\\">\\n      <ion-icon\\n        *ngIf=\\\"isIcon\\\"\\n        style=\\\"color: #F5811E\\\"\\n        [name]=\\\"row.iconName\\\"\\n        slot=\\\"start\\\"\\n      ></ion-icon>\\n      <!--\\n        <ion-icon  style=\\\"color: #F5811E\\\" name=\\\"home\\\" slot=\\\"start\\\"></ion-icon>\\n      -->\\n      <ion-label text-wrap>\\n        <span *ngFor=\\\"let column of columns; let ii = index\\\">\\n          <!-- title -->\\n          <h2 *ngIf=\\\"ii === 0 && column.type === 'normal'\\\">\\n            <b>{{ row[column.prop] }}</b>\\n          </h2>\\n          <!-- normal -->\\n          <p *ngIf=\\\"column.type === 'normal' && ii !== 0\\\">\\n            <b> {{ column.name }}: </b>{{ row[column.prop] }}\\n          </p>\\n          <!-- number -->\\n          <p *ngIf=\\\"column.type === 'number'\\\">\\n            <b> {{ column.name }}: </b>{{ row[column.prop] }}\\n          </p>\\n\\n          <!-- fecha -->\\n          <p *ngIf=\\\"column.type === 'date'\\\">\\n            <b> {{ column.name }}: </b> {{ formatDates(row[column.prop]) }}\\n          </p>\\n          <!-- boolean -->\\n          <span *ngIf=\\\"column.type === 'boolean'\\\">\\n            <button\\n              *ngIf=\\\"row[column.prop]\\\"\\n              (click)=\\\"onSelect(row)\\\"\\n              mat-icon-button\\n            >\\n              <b> {{ column.name }} </b>\\n              <mat-icon class=\\\"secondary-text\\\" class=\\\"green-icon\\\"\\n                >check_circle</mat-icon\\n              >\\n            </button>\\n            <button\\n              *ngIf=\\\"!row[column.prop]\\\"\\n              (click)=\\\"onSelect(row)\\\"\\n              mat-icon-button\\n            >\\n              <b> {{ column.name }} </b>\\n              <mat-icon class=\\\"secondary-text\\\" class=\\\"red-icon\\\"\\n                >cancel</mat-icon\\n              >\\n            </button>\\n          </span>\\n          <!-- money -->\\n          <span *ngIf=\\\"column.type === 'money'\\\">\\n            <p>\\n              <b>{{ column.name }}: </b>$ {{ row[column.prop].toFixed(2) }}\\n            </p>\\n          </span>\\n\\n          <!-- phone -->\\n          <!--\\n            <p *ngIf=\\\"column.type === 'phone'\\\"><a [href]=\\\"'tel:'+row[column.prop]\\\">{{ row[column.prop]}}</a></p>\\n          -->\\n\\n          <!-- status -->\\n          <span *ngIf=\\\"column.type === 'status'\\\">\\n            <ion-chip\\n              *ngFor=\\\"let property of row[column.prop]\\\"\\n              [ngClass]=\\\"{\\n                'background-gris': property.status === 'gris',\\n                'background-verde': property.status === 'verde',\\n                'background-amarillo': property.status === 'amarillo',\\n                'background-rojo': property.status === 'rojo',\\n                'background-azul': property.status === 'azul'\\n              }\\\"\\n            >\\n              <ion-label>{{ property.name }}</ion-label>\\n            </ion-chip>\\n          </span>\\n        </span>\\n      </ion-label>\\n      <!-- botones -->\\n      <div *ngFor=\\\"let column of columns\\\">\\n        <button\\n          *ngIf=\\\"column.type === 'buttons' && column.buttonDetails\\\"\\n          mat-icon-button\\n          color=\\\"primary\\\"\\n          (click)=\\\"detailsItem(row)\\\"\\n        >\\n          <mat-icon>info</mat-icon>\\n        </button>\\n        <a\\n          *ngIf=\\\"column.type === 'phone'\\\"\\n          mat-icon-button\\n          color=\\\"primary\\\"\\n          [href]=\\\"'tel:' + row[column.prop]\\\"\\n        >\\n          <mat-icon>phone</mat-icon>\\n        </a>\\n        <button\\n          *ngIf=\\\"column.type === 'buttons' && column.buttonEdit\\\"\\n          mat-icon-button\\n          color=\\\"primary\\\"\\n          (click)=\\\"editItem(row)\\\"\\n        >\\n          <mat-icon>create</mat-icon>\\n        </button>\\n        <mat-checkbox\\n          [checked]=\\\"row[column.prop]\\\"\\n          (change)=\\\"\\n            checkbox.emit({ isChecked: $event.checked, row: row });\\n            row[column.prop] = $event.checked\\n          \\\"\\n          *ngIf=\\\"column.type === 'checkBox'\\\"\\n        ></mat-checkbox>\\n      </div>\\n    </ion-item>\\n  </ion-list>\\n  <div class=\\\"space-buttons\\\"></div>\\n</ng-template>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.row {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.table-container {\\n  height: 500px;\\n  overflow: auto; }\\n\\n.buttons-movile-container {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 30%; }\\n\\ntd,\\nth {\\n  width: 15%; }\\n\\n.customWidthClass {\\n  flex: 0 0 6%; }\\n\\n.red-icon {\\n  color: red; }\\n\\n.green-icon {\\n  color: green; }\\n\\n.yellow-icon {\\n  size: 1px !important;\\n  color: goldenrod; }\\n\\n.flexbox-ranking {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.flexbox-buttons {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.margin-ranking {\\n  margin-right: 3px;\\n  margin-left: 3px; }\\n\\n.center-cell {\\n  justify-content: center; }\\n\\n.righ-cell {\\n  justify-content: flex-end; }\\n\\n.chip-yellow {\\n  background-color: #ffe57f; }\\n\\n.chip-green {\\n  background-color: #b9f6ca; }\\n\\n.chip-black {\\n  background-color: #546e7a;\\n  color: white; }\\n\\n.tag {\\n  background-color: blue;\\n  color: white;\\n  border-radius: 25%; }\\n\\n.label {\\n  color: white;\\n  padding: 8px;\\n  border-radius: 12px; }\\n\\n.success {\\n  background-color: #f5bd8c;\\n  color: black; }\\n\\n/* Green */\\n\\n.info {\\n  background-color: #2196f3; }\\n\\n/* Blue */\\n\\n.warning {\\n  background-color: #ff9800; }\\n\\n/* Orange */\\n\\n.danger {\\n  background-color: #f44336; }\\n\\n/* Red */\\n\\n.other {\\n  background-color: #47525d; }\\n\\n/* Gray */\\n\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  IterableDiffers,\n  DoCheck\n} from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\nimport { TableColumsModel } from '../../../models/tableColums.model';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Component({\n  selector: 'app-general-table',\n  templateUrl: './general-table.component.html',\n  styleUrls: ['./general-table.component.scss']\n})\nexport class GeneralTableComponent implements OnInit, OnChanges, AfterViewInit {\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre'\n  ];\n  displayedColumns: string[];\n  dataSource: MatTableDataSource<any>;\n  @Input()\n  isIcon = false;\n  @Input()\n  isDesktop = true;\n  @Input()\n  showFilterByStatus = true;\n  @Input()\n  columns: TableColumsModel[];\n  @Input()\n  rows: any[];\n  @Input()\n  showLoader: boolean;\n  @Input()\n  showChips: boolean;\n  @Output()\n  editButton = new EventEmitter<Array<any>>();\n  @Output()\n  deletedButton = new EventEmitter<Array<any>>();\n  @Output()\n  detailsButton = new EventEmitter<Array<any>>();\n  @Output()\n  mailButton = new EventEmitter<Array<any>>();\n  @Output()\n  ratingButton = new EventEmitter<Array<any>>();\n  @Output()\n  checkbox = new EventEmitter<any>();\n  @ViewChild(MatPaginator)\n  paginator: MatPaginator;\n  @ViewChild(MatSort)\n  sort: MatSort;\n  realData;\n  iterableDiffer;\n\n  constructor(private _iterableDiffers: IterableDiffers) {\n    // Assign the data to the data source for the table to render\n    this.iterableDiffer = this._iterableDiffers.find([]).create(null);\n  }\n\n  ngOnInit() {\n    // TICKETS.map(item => item.timestamp);\n    // this.dataSource.sort = this.sort;\n  }\n  // ve los cambios en array lenght = 0\n  /* ngDoCheck() {\n    const changes = this.iterableDiffer.diff(this.rows);\n    if (changes) {\n      console.log(changes);\n      this.dataSource = new MatTableDataSource(changes.collection);\n      this.realData = changes.collection;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  } */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.columns) {\n      if (changes.columns.currentValue) {\n        this.displayedColumns = changes.columns.currentValue.map(\n          colum => colum.prop\n        );\n      }\n    }\n    if (changes.rows) {\n      if (changes.rows.currentValue) {\n        this.dataSource = new MatTableDataSource(changes.rows.currentValue);\n        this.realData = changes.rows.currentValue;\n        // paginator works !!\n        setTimeout(() => (this.dataSource.paginator = this.paginator));\n        this.dataSource.sort = this.sort;\n      }\n    }\n    // loader\n    if (changes.showLoader) {\n      if (changes.showLoader.currentValue) {\n        this.showLoader = changes.showLoader.currentValue;\n      }\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  serach(str: string) {\n    this.dataSource = new MatTableDataSource(this.realData);\n    if (str !== undefined) {\n      const searchString = row => {\n        return (\n          Object.values(row).filter(\n            v =>\n              v\n                .toString()\n                .toLocaleLowerCase()\n                .indexOf(str.toLocaleLowerCase()) >= 0\n          ).length > 0\n        );\n      };\n      const filter = this.dataSource.data.filter(row => searchString(row));\n      this.dataSource = new MatTableDataSource(filter);\n    }\n  }\n  filterByDay(day: number) {\n    this.dataSource = new MatTableDataSource(this.realData);\n    const dayFinded = this.dataSource.data.filter(\n      item => new Date(item.timestamp).getDate() === +day\n    );\n    this.dataSource = new MatTableDataSource(dayFinded);\n    if (!day) {\n      this.dataSource = new MatTableDataSource(this.realData);\n    }\n  }\n  filterByYear(year: number) {\n    this.dataSource = new MatTableDataSource(this.realData);\n    const dayFinded = this.dataSource.data.filter(\n      item => new Date(item.timestamp).getFullYear() === +year\n    );\n    this.dataSource = new MatTableDataSource(dayFinded);\n    if (!year) {\n      this.dataSource = new MatTableDataSource(this.realData);\n    }\n  }\n  filterByMonth(month: number) {\n    this.dataSource = new MatTableDataSource(this.realData);\n    const dayFinded = this.dataSource.data.filter(\n      item => new Date(item.timestamp).getMonth() === +month\n    );\n    this.dataSource = new MatTableDataSource(dayFinded);\n    if (isNaN(month)) {\n      this.dataSource = new MatTableDataSource(this.realData);\n    }\n  }\n  filterByState(status) {\n    if (!status) {\n      this.dataSource = new MatTableDataSource(this.realData);\n    } else {\n      this.dataSource = new MatTableDataSource(this.realData);\n      const stateFinded = this.dataSource.data.filter(\n        item => item.status.toLowerCase() === status.toLowerCase()\n      );\n      this.dataSource = new MatTableDataSource(stateFinded);\n    }\n  }\n  formatDates(dateInput: Date): string {\n    const day: string = new Date(dateInput).getDate().toString();\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\n    const year: string = new Date(dateInput).getFullYear().toString();\n    const date = day + '/' + month + '/' + year;\n    return date;\n  }\n  getArray(numberItems: number): number[] {\n    return Array(numberItems).fill(1);\n  }\n  onSelect(item) {\n    console.log(item);\n  }\n  deletedItem(item) {\n    this.deletedButton.emit(item);\n  }\n  mailItem(item) {\n    this.mailButton.emit(item);\n  }\n  ratingItem(item) {\n    this.ratingButton.emit(item);\n  }\n  editItem(item) {\n    this.editButton.emit(item);\n  }\n  detailsItem(item) {\n    this.detailsButton.emit(item);\n  }\n  changeAllCheckbox(event: boolean) {\n    this.rows.map(r => (r.checkBox = event));\n    this.rows.forEach(row => {\n      this.checkbox.emit({ isChecked: event, row: row });\n    });\n  }\n  // sort despues de iniciar\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","module.exports = \"<circle-progress [percent]=\\\"percent\\\" [radius]=\\\"150\\\" [outerStrokeWidth]=\\\"16\\\" [innerStrokeWidth]=\\\"8\\\" [outerStrokeColor]=\\\"outerStrokeColor\\\"\\n  [animation]=\\\"true\\\" [subtitle]=\\\"subtitle\\\" [animationDuration]=\\\"animationDuration\\\" [titleFontSize]=\\\"titleFontSize\\\"\\n  [unitsFontSize]=\\\"unitsFontSize\\\" [subtitleFontSize]=\\\"subtitleFontSize\\\"></circle-progress>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-goal-progress',\n  templateUrl: './goal-progress.component.html',\n  styleUrls: ['./goal-progress.component.scss'],\n})\nexport class GoalProgressComponent implements OnInit {\n  @Input()\n  percent: number;\n  @Input()\n  subtitle: string;\n  @Input()\n  outerStrokeColor = '#78C000';\n  animationDuration = 1600;\n  @Input()\n  titleFontSize;\n  @Input()\n  unitsFontSize;\n  @Input()\n  subtitleFontSize;\n  isDesktop: boolean;\n\n  constructor(private platform: Platform) {\n    this.isDesktop = this.platform.is('desktop');\n  }\n\n  ngOnInit() {\n    if (this.isDesktop) {\n      this.titleFontSize = '40';\n      this.unitsFontSize = '15';\n      this.subtitleFontSize = '15';\n    } else {\n      this.titleFontSize = '80';\n      this.unitsFontSize = '20';\n      this.subtitleFontSize = '20';\n    }\n  }\n}\n","module.exports = \"<ion-button (click)=\\\"openMaps()\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n  Ver Mapa<ion-icon name=\\\"navigate\\\"></ion-icon>\\n</ion-button>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport {\n  LaunchNavigator,\n  LaunchNavigatorOptions\n} from '@ionic-native/launch-navigator/ngx';\ndeclare var launchnavigator: any;\n\n@Component({\n  selector: 'app-maps-button',\n  templateUrl: './maps-button.component.html',\n  styleUrls: ['./maps-button.component.scss']\n})\nexport class MapsButtonComponent implements OnInit {\n  @Input()\n  address = 'centro';\n  @Input()\n  city = 'Puebla';\n\n  constructor(\n    private platform: Platform,\n    private launchNavigator: LaunchNavigator\n  ) {}\n\n  ngOnInit() {}\n  openMaps() {\n    const isCordova = this.platform.is('cordova');\n    if (isCordova) {\n      const isAndroid = this.platform.is('android');\n      if (isAndroid) {\n        const options: LaunchNavigatorOptions = {\n          app: launchnavigator.APP.GOOGLE_MAPS\n        };\n\n        this.launchNavigator\n          .navigate(this.address, options)\n          .then(\n            success => console.log('Launched navigator'),\n            error => console.log('Error launching navigator', error)\n          );\n      } else {\n        const options: LaunchNavigatorOptions = {\n          app: launchnavigator.LAUNCH_MODE.MAPKIT\n        };\n\n        this.launchNavigator\n          .navigate(this.address)\n          .then(\n            success => console.log('Launched navigator'),\n            error => console.log('Error launching navigator', error)\n          );\n      }\n    } else {\n      window.location.href = `http://maps.google.com/?q=${this.address}, ${\n        this.city\n      }`;\n    }\n  }\n}\n","module.exports = \"<ion-toolbar color=\\\"primary\\\">\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-back-button *ngIf=\\\"isMenuButton === 'back'\\\" [ngStyle]=\\\"{'color': colorMenuButton }\\\"></ion-back-button>\\n    <ion-menu-button *ngIf=\\\"isMenuButton === 'menu'\\\" [ngStyle]=\\\"{'color': colorMenuButton }\\\"></ion-menu-button>\\n  </ion-buttons>\\n  <ion-title>\\n    {{titleMenu}}\\n  </ion-title>\\n  <ion-buttons slot=\\\"end\\\">\\n    <ion-button *ngIf=\\\"buttonNotification &&  (numOfNewNoti | async) > 0 && !isDesktop\\\" id=\\\"cart-btn\\\" [routerDirection]=\\\"'root'\\\"\\n      routerLink=\\\"/list-notification\\\">\\n      <ion-icon slot=\\\"icon-only\\\" [name]=\\\"buttonNotification\\\">\\n      </ion-icon>\\n      <ion-badge *ngIf=\\\" (numOfNewNoti | async) > 0\\\" id=\\\"cart-badge\\\" color=\\\"danger\\\">{{(numOfNewNoti | async)}}</ion-badge>\\n    </ion-button>\\n    <ion-button (click)=\\\"presentPopover($event)\\\" *ngIf=\\\"buttonUser\\\" [ngStyle]=\\\"{'color': colorMenuButton }\\\">\\n      <ion-icon slot=\\\"icon-only\\\" [name]=\\\"buttonUser\\\"></ion-icon>\\n    </ion-button>\\n  </ion-buttons>\\n</ion-toolbar>\"","module.exports = \"#notification-button {\\n  position: relative;\\n  width: 42px;\\n  top: 1px;\\n  right: 1px;\\n  overflow: visible !important; }\\n\\n#cart-btn {\\n  position: relative; }\\n\\n#cart-badge {\\n  position: absolute;\\n  top: 1px;\\n  right: 2px;\\n  font-size: x-small; }\\n\\n.notifications-badge {\\n  background-color: #FF1744;\\n  position: absolute;\\n  top: -3px;\\n  right: -3px;\\n  border-radius: 100%; }\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { SocketIoService } from '../../../services/socket-io.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Platform, PopoverController } from '@ionic/angular';\nimport { PopoverComponent } from '../popover/popover.component';\n\n@Component({\n  selector: 'app-menu-general',\n  templateUrl: './menu-general.component.html',\n  styleUrls: ['./menu-general.component.scss'],\n})\nexport class MenuGeneralComponent implements OnInit, OnChanges {\n  /**\n   *menu,\n   *back\n   */\n  @Input()\n  isMenuButton: string;\n  @Input()\n  colorMenuButton: string;\n  @Input()\n  titleMenu: string;\n  @Input()\n  buttonNotification: string;\n  @Input()\n  buttonUser: string;\n  user: IUserSession;\n  numOfNewNoti: BehaviorSubject<number>;\n  isDesktop: boolean;\n  constructor(\n    private socketIOService: SocketIoService,\n    private platform: Platform,\n    public popoverController: PopoverController,\n  ) {\n    this.isDesktop = this.platform.is('desktop');\n    this.numOfNewNoti = this.socketIOService.numOfNewNoti;\n  }\n\n  ngOnInit() {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.isMenuButton.currentValue) {\n      this.isMenuButton = changes.isMenuButton.currentValue;\n    }\n  }\n  async presentPopover(ev: any) {\n    // await this.popoverController.componentOnReady();\n    const popover = await this.popoverController.create({\n      component: PopoverComponent,\n      event: ev,\n      // translucent: true,\n    });\n    return await popover.present();\n  }\n}\n","module.exports = \"<ion-list lines=\\\"none\\\">\\n  <ion-item\\n    lines=\\\"none\\\"\\n    *ngFor=\\\"let session of sessions\\\"\\n    [ngClass]=\\\"{\\n      'background-item-menu': session.id === user.id && sessions.length > 1\\n    }\\\"\\n  >\\n    <!-- <ion-icon slot=\\\"start\\\" name=\\\"contact\\\"></ion-icon> -->\\n    <ion-label text-wrap>\\n      <p>{{ session.name }}</p>\\n      <small>{{ getType(session.type) }}</small>\\n    </ion-label>\\n\\n    <ion-button\\n      size=\\\"small\\\"\\n      *ngIf=\\\"user.id === session.id\\\"\\n      fill=\\\"outline\\\"\\n      size=\\\"small\\\"\\n      color=\\\"danger\\\"\\n      slot=\\\"end\\\"\\n      (click)=\\\"closeSession(session); presentPopover($event)\\\"\\n    >\\n      <!-- Eliminar -->\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n    </ion-button>\\n    <ion-button\\n      size=\\\"small\\\"\\n      *ngIf=\\\"user.id !== session.id\\\"\\n      fill=\\\"outline\\\"\\n      size=\\\"small\\\"\\n      color=\\\"success\\\"\\n      slot=\\\"end\\\"\\n      (click)=\\\"startSession(session); presentPopover($event)\\\"\\n    >\\n      <!-- Iniciar -->\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"log-in\\\"></ion-icon>\\n    </ion-button>\\n  </ion-item>\\n</ion-list>\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button\\n        [routerLink]=\\\"['/user-session']\\\"\\n        [routerDirection]=\\\"'forward'\\\"\\n        (click)=\\\"presentPopover($event)\\\"\\n        fill=\\\"solid\\\"\\n      >\\n        <ion-icon slot=\\\"start\\\" name=\\\"person-add\\\"></ion-icon>\\n        Agregar Cuenta\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.component.html',\n  styleUrls: ['./popover.component.scss']\n})\nexport class PopoverComponent implements OnInit {\n  sessions: IUserSession[];\n  user: IUserSession;\n\n  constructor(\n    public popoverController: PopoverController,\n    private userSession: UserSessionService,\n    private storage: Storage\n  ) {\n    this.user = userSession.userSession.value;\n    this.getSessions();\n  }\n\n  ngOnInit() {}\n  async presentPopover(ev: any) {\n    const popover = await this.popoverController.getTop();\n    return await popover.dismiss();\n  }\n  async getSessions() {\n    this.sessions = await this.userSession.getSessionsSaved();\n    console.log('sessions', this.sessions);\n  }\n  // cambia de sesion\n  startSession(session: IUserSession) {\n    this.storage.set('userSessionCurrent', session);\n    this.userSession.loggoutWithoutStore();\n  }\n  // cierra solo la sesion actual\n  closeSession(session: IUserSession) {\n    this.userSession.removeSession(session);\n    this.storage.remove('userSessionCurrent');\n    this.userSession.loggoutWithoutStore();\n  }\n  getType(\n    type:\n      | 'administrator'\n      | 'buyer'\n      | 'seller'\n      | 'adviser'\n      | 'management'\n      | 'maker'\n      | 'office'\n      | 'preBuyer'\n  ) {\n    if (type === 'administrator') {\n      return 'Administrador';\n    } else if (type === 'adviser') {\n      return 'Asesor';\n    } else if (type === 'buyer') {\n      return 'Comprador';\n    } else if (type === 'maker') {\n      return 'Construc.';\n    } else if (type === 'management') {\n      return 'Gerente';\n    } else if (type === 'office') {\n      return 'Oficinista';\n    } else if (type === 'seller') {\n      return 'Vendedor';\n    } else if (type === 'preBuyer') {\n      return 'Preventa';\n    }\n  }\n}\n","module.exports = \"<p></p>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-refre',\n  templateUrl: './refre.component.html',\n  styleUrls: ['./refre.component.scss']\n})\nexport class RefreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- contenido -->\\n<mat-progress-bar\\n  *ngIf=\\\"!isLoad\\\"\\n  mode=\\\"indeterminate\\\"\\n  color=\\\"accent\\\"\\n></mat-progress-bar>\\n<mat-drawer-container class=\\\"side-container\\\">\\n  <h2 mat-dialog-title>{{ dataInput.header }}</h2>\\n  <!-- Default Searchbar -->\\n  <ion-searchbar\\n    (ionClear)=\\\"search(undefined)\\\"\\n    (keyup)=\\\"search(Search.value)\\\"\\n    #Search\\n    animated\\n    placeholder=\\\"Buscar\\\"\\n    mat-dialog-title\\n  ></ion-searchbar>\\n\\n  <!-- contenido de filtros -->\\n  <mat-drawer\\n    position=\\\"end\\\"\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    [mode]=\\\"'over'\\\"\\n    [opened]=\\\"false\\\"\\n  >\\n    <app-general-filter-buyer\\n      *ngIf=\\\"dataInput.typeFilter === 'filter-buyer'\\\"\\n      (filters)=\\\"getFilters($event)\\\"\\n      (resetAll)=\\\"getBuyerAll()\\\"\\n      (closeMenu)=\\\"drawer.close()\\\"\\n    ></app-general-filter-buyer>\\n    <app-filter-adviser\\n      *ngIf=\\\"dataInput.typeFilter === 'filter-adv'\\\"\\n      (filters)=\\\"getFiltersAdv($event)\\\"\\n      (resetAll)=\\\"dataInput.rows = advisers\\\"\\n      (closeMenu)=\\\"drawer.close()\\\"\\n      [isDesktop]=\\\"false\\\"\\n    ></app-filter-adviser>\\n  </mat-drawer>\\n  <!-- /contenido de filtros -->\\n  <!-- filtros boton -->\\n  <ion-item *ngIf=\\\"dataInput.filtersDetail\\\" lines=\\\"none\\\">\\n    <ion-button\\n      (click)=\\\"drawer.toggle()\\\"\\n      slot=\\\"end\\\"\\n      color=\\\"secondary\\\"\\n      fill=\\\"outline\\\"\\n    >\\n      <ion-icon name=\\\"funnel\\\"></ion-icon>Filtros({{ numOfFilters }})\\n    </ion-button>\\n  </ion-item>\\n\\n  <!-- /filtros boton -->\\n  <mat-divider> </mat-divider>\\n  <!-- button -->\\n  <mat-dialog-content>\\n    <span *ngIf=\\\"dataInput.body\\\" [innerHTML]=\\\"dataInput.body\\\"></span>\\n    <!-- Multiple -->\\n    <span *ngIf=\\\"dataInput.isMultiple\\\">\\n      <!-- Checkboxes in a List -->\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let row of dataInput.rows; let last = last\\\">\\n          <ion-label text-wrap>\\n            <span *ngFor=\\\"let column of dataInput.columns; let i = index\\\">\\n              <p *ngIf=\\\"column.type === 'normal'\\\">{{ row[column.prop] }}</p>\\n              <p *ngIf=\\\"column.type === 'date'\\\">\\n                {{ formatDates(row[column.prop]) }}\\n              </p>\\n              <span *ngIf=\\\"column.type === 'statusBuyerProperty'\\\">\\n                <ion-chip\\n                  *ngFor=\\\"let sbp of row[column.prop]\\\"\\n                  [ngClass]=\\\"{\\n                    'background-gris': sbp.status === 'gris',\\n                    'background-verde': sbp.status === 'verde',\\n                    'background-amarillo': sbp.status === 'amarillo',\\n                    'background-rojo': sbp.status === 'rojo',\\n                    'background-azul': sbp.status === 'azul'\\n                  }\\\"\\n                >\\n                  <ion-label>{{ sbp.property.name }}</ion-label>\\n                </ion-chip>\\n                <ion-chip\\n                  style=\\\"padding: 2%\\\"\\n                  class=\\\"background-gris\\\"\\n                  *ngIf=\\\"row[column.prop].length === 0\\\"\\n                >\\n                  Sin interés\\n                </ion-chip>\\n              </span>\\n            </span>\\n          </ion-label>\\n          <!--\\n            <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"entry.isChecked\\\"></ion-checkbox>\\n          -->\\n          <ion-checkbox\\n            [disabled]=\\\"isDisable(row._id)\\\"\\n            (ionChange)=\\\"ionChangeCheckBox(row, $event.detail.checked)\\\"\\n            slot=\\\"start\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-list>\\n    </span>\\n    <!-- Solo uno -->\\n    <span *ngIf=\\\"!dataInput.isMultiple\\\">\\n      <ion-list>\\n        <ion-radio-group>\\n          <ion-item *ngFor=\\\"let row of dataInput.rows\\\">\\n            <ion-label text-wrap>\\n              <span *ngFor=\\\"let column of dataInput.columns; let i = index\\\">\\n                <p *ngIf=\\\"column.type === 'normal'\\\">{{ row[column.prop] }}</p>\\n                <p *ngIf=\\\"column.type === 'date'\\\">\\n                  {{ formatDates(row[column.prop]) }}\\n                </p>\\n                <span *ngIf=\\\"column.type === 'statusBuyerProperty'\\\">\\n                  <ion-chip\\n                    *ngFor=\\\"let sbp of row[column.prop]\\\"\\n                    [ngClass]=\\\"{\\n                      'background-gris': sbp.status === 'gris',\\n                      'background-verde': sbp.status === 'verde',\\n                      'background-amarillo': sbp.status === 'amarillo',\\n                      'background-rojo': sbp.status === 'rojo',\\n                      'background-azul': sbp.status === 'azul'\\n                    }\\\"\\n                  >\\n                    <ion-label>{{ sbp.property.name }}</ion-label>\\n                  </ion-chip>\\n                  <ion-chip\\n                    style=\\\"padding: 2%\\\"\\n                    class=\\\"background-gris\\\"\\n                    *ngIf=\\\"row[column.prop].length === 0\\\"\\n                  >\\n                    Sin interés\\n                  </ion-chip>\\n                </span>\\n              </span>\\n            </ion-label>\\n            <ion-radio\\n              [checked]=\\\"isDisable(row._id)\\\"\\n              (click)=\\\"ionChangeRadioButton(row)\\\"\\n              slot=\\\"start\\\"\\n            ></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n    </span>\\n  </mat-dialog-content>\\n  <mat-divider> </mat-divider>\\n  <mat-dialog-actions style=\\\"justify-content: flex-end;\\\">\\n    <button\\n      color=\\\"accent\\\"\\n      (click)=\\\"buttonsResponse(true)\\\"\\n      mat-button\\n      mat-flat-button\\n      mat-dialog-close\\n    >\\n      {{ dataInput.okButton ? dataInput.okButton : 'Ok' }}\\n    </button>\\n    <button\\n      color=\\\"warn\\\"\\n      *ngIf=\\\"!dataInput.hideButtonCancel\\\"\\n      mat-button\\n      mat-dialog-close\\n      mat-stroked-button\\n      (click)=\\\"buttonsResponse(false)\\\"\\n    >\\n      Cancelar\\n    </button>\\n  </mat-dialog-actions>\\n  <br /><br />\\n  <!-- /contenido -->\\n</mat-drawer-container>\\n\"","module.exports = \".side-container {\\n  height: 100%;\\n  background-color: white; }\\n\\n.sidenav {\\n  width: 230px;\\n  margin-bottom: 1%;\\n  margin-right: 0.1%; }\\n\\n/* .mat-dialog-actions {\\n    padding: 25px 0;\\n} */\\n\\n@media (max-width: 900px) {\\n  .sidenav {\\n    width: 73%;\\n    box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); } }\\n\"","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  BuyersFilters,\n  PropertyFilter,\n  OnlyDates\n} from '../../../_config/_helpers';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { PropertyService } from '../../../services/property.service';\nimport { IProperty } from '../../../models/property.model';\nimport { MakerService } from '../../../services/maker.service';\nimport { IMaker } from '../../../models/maker.model';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { IAdviser } from '../../../models/adviser.model';\n\nexport interface SearchDialog {\n  header: string;\n  body?: string;\n  hideButtonCancel?: boolean;\n  okButton?: string;\n  rows?: any[];\n  isMultiple?: boolean;\n  typeFilter:\n    | 'filter-buyer'\n    | 'filter-prop'\n    | 'filter-prop2'\n    | 'filter-makers'\n    | 'filter-adv';\n  columns: {\n    name: string;\n    prop: string;\n    type: string;\n  }[];\n  itemsIdDisable?: string[];\n  filtersDetail?: boolean;\n  selectedItems?: any[];\n}\n\n@Component({\n  selector: 'app-search-select',\n  templateUrl: './search-select.component.html',\n  styleUrls: ['./search-select.component.scss']\n})\nexport class SearchSelectComponent implements OnInit {\n  isLoad = true;\n  numOfFilters = 0;\n  message: string;\n  buttons = new EventEmitter();\n  arrSelect = [];\n  ratingResult = new EventEmitter();\n  statusChange = new EventEmitter();\n  statusTicket: string;\n  buyers: IBuyer[];\n  properties: IProperty[];\n  makers: IMaker[];\n  advisers: IAdviser[];\n  public dataInput: SearchDialog;\n  private dataInput2: SearchDialog;\n  constructor(\n    public dialogRef: MatDialogRef<SearchSelectComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: SearchDialog,\n    private buyerService: BuyerService,\n    private propService: PropertyService,\n    private makersService: MakerService,\n    private advService: AdviserService\n  ) {\n    // recibe items\n    this.dataInput = data;\n    // tipo de items\n    if (this.dataInput.typeFilter === 'filter-buyer') {\n      // busca todos los items\n      buyerService.getBuyerAll().subscribe(b => (this.buyers = b));\n    } else if (this.dataInput.typeFilter === 'filter-prop') {\n      propService.getAllSpecial().subscribe(prop => (this.properties = prop));\n    } else if (this.dataInput.typeFilter === 'filter-prop2') {\n      propService.getAll().subscribe(prop => (this.properties = prop));\n    } else if (this.dataInput.typeFilter === 'filter-makers') {\n      makersService\n        .getMakerAll()\n        .pipe(\n          map(arr =>\n            arr.map((maker: any) => {\n              if (maker.build) {\n                maker.buildName = <any>maker.build.name;\n              } else {\n                maker.buildName = <any>'';\n              }\n              return maker;\n            })\n          )\n        )\n        .subscribe(m => (this.makers = m));\n    } else if (this.dataInput.typeFilter === 'filter-adv') {\n      advService\n        .getAdviserAll()\n        .pipe(\n          map(arr =>\n            arr.map((adviser: any) => {\n              adviser.numOfBuyer = `Número de Clientes: ${\n                adviser.buyer.length\n              }`;\n              adviser.range = `Disponible de ${adviser.hourStart} a ${\n                adviser.hourEnd\n              }`;\n              return adviser;\n            })\n          )\n        )\n        .subscribe(a => (this.advisers = a));\n    }\n  }\n  /*   onNoClick(): void {\n    this.dialogRef.close();\n  } */\n  buttonsResponse(options: boolean) {\n    this.buttons.emit({ options: options, arrSelect: this.arrSelect });\n  }\n\n  ngOnInit() {}\n  // buyers\n  async getFilters(filters: {\n    day: number;\n    month: number;\n    year: number;\n    status: string;\n    property;\n  }) {\n    if (await this.getBuyerAll()) {\n      const buyersFinded = this.dataInput.rows.filter(buyer =>\n        BuyersFilters(buyer, filters)\n      );\n      //  setea buyers\n      this.dataInput.rows = buyersFinded;\n      // num filters\n      let numFilters = 0;\n      if (filters.day) {\n        numFilters++;\n      }\n      if (filters.month) {\n        numFilters++;\n      }\n      if (filters.year) {\n        numFilters++;\n      }\n      if (filters.status) {\n        numFilters++;\n      }\n      this.numOfFilters = numFilters;\n    }\n  }\n  getFiltersProp(filters: IProperty) {\n    const advFinded = this.properties.filter(prop => {\n      const temp = PropertyFilter(filters, prop);\n      this.numOfFilters = temp.numOfFilters;\n      return temp.isHope;\n    });\n    //  setea buyers\n    this.dataInput.rows = advFinded;\n  }\n  getFiltersAdv(filters: {\n    day: number;\n    month: number;\n    year: number;\n    status: string;\n    hourStart: number;\n    hourEnd: number;\n  }) {\n    const advFinded = this.advisers.filter(adv => OnlyDates(adv, filters));\n    //  setea buyers\n    this.dataInput.rows = advFinded;\n    // num filters\n    let numFilters = 0;\n    if (filters.day) {\n      numFilters++;\n    }\n    if (filters.month) {\n      numFilters++;\n    }\n    if (filters.year) {\n      numFilters++;\n    }\n    if (filters.status) {\n      numFilters++;\n    }\n    if (filters.hourEnd) {\n      numFilters++;\n    }\n    if (filters.hourStart) {\n      numFilters++;\n    }\n    this.numOfFilters = numFilters;\n  }\n  async getBuyerAll() {\n    this.isLoad = false;\n    // const buyers = await this.buyerService.getBuyerAll().toPromise();\n    this.dataInput.rows = this.buyers;\n    this.isLoad = true;\n    return await true;\n  }\n  getPropAll() {\n    this.dataInput.rows = this.properties;\n  }\n  formatDates(dateInput: Date): string {\n    const day: string = new Date(dateInput).getDate().toString();\n    const month: string = (new Date(dateInput).getMonth() + 1).toString();\n    const year: string = new Date(dateInput).getFullYear().toString();\n    const date = day + '/' + month + '/' + year;\n    return date;\n  }\n  ionChangeCheckBox(row, isChecked) {\n    if (isChecked) {\n      this.arrSelect.push(row);\n    } else {\n      const index = this.arrSelect.findIndex(item => item._id);\n      if (index !== -1) {\n        console.log(this.arrSelect);\n        this.arrSelect.splice(index, 1);\n        console.log(this.arrSelect);\n      }\n    }\n  }\n  ionChangeRadioButton(row) {\n    this.arrSelect[0] = row;\n  }\n  async search(str: string) {\n    if (this.dataInput.typeFilter === 'filter-buyer') {\n      this.dataInput.rows = this.buyers;\n    } else if (this.dataInput.typeFilter === 'filter-prop') {\n      this.dataInput.rows = this.properties;\n    } else if (this.dataInput.typeFilter === 'filter-prop2') {\n      this.dataInput.rows = this.properties;\n    } else if (this.dataInput.typeFilter === 'filter-makers') {\n      this.dataInput.rows = this.makers;\n    } else if (this.dataInput.typeFilter === 'filter-adv') {\n      this.dataInput.rows = this.advisers;\n    }\n    if (str === undefined) {\n    } else {\n      const searchString = row => {\n        return (\n          Object.values(row).filter(\n            v =>\n              v\n                .toString()\n                .toLocaleLowerCase()\n                .indexOf(str.toLocaleLowerCase()) >= 0\n          ).length > 0\n        );\n      };\n      const filter = this.dataInput.rows.filter(row => searchString(row));\n      this.dataInput.rows = filter;\n    }\n  }\n  // _helpers\n  isDisable(idInput: string) {\n    if (\n      this.dataInput.itemsIdDisable &&\n      this.dataInput.itemsIdDisable.length > 0\n    ) {\n      return this.dataInput.itemsIdDisable.some(id => id === idInput);\n    } else {\n      return false;\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Objetivo\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Objetivo'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <h1 *ngIf=\\\"isNew\\\">Nuevo Objetivo</h1>\\n    <h1 *ngIf=\\\"!isNew\\\">Editar Objetivo</h1>\\n    <p>Complete los campos para asignar una meta</p>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card [ngClass]=\\\"{'desktop-card': isDesktop }\\\">\\n          <mat-card-title>Datos del Objetivo</mat-card-title>\\n\\n\\n\\n          <div class=\\\"flex-container\\\">\\n\\n            <!-- title -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Titulo</mat-label>\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"goal.title\\\" #title=\\\"ngModel\\\" id=\\\"title\\\" name=\\\"title\\\" required>\\n              <mat-error *ngIf=\\\"title.dirty || title.touched\\\">Anotar</mat-error>\\n            </mat-form-field>\\n            <!-- cont -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Contenido</mat-label>\\n              <textarea matInput placeholder=\\\"\\\" [(ngModel)]=\\\"goal.content\\\" #content=\\\"ngModel\\\" id=\\\"content\\\" name=\\\"content\\\"\\n                required></textarea>\\n              <mat-error *ngIf=\\\"content.dirty || content.touched\\\">Anotar</mat-error>\\n            </mat-form-field>\\n            <!-- status -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Estado</mat-label>\\n              <mat-select [(ngModel)]=\\\"goal.status\\\" #status=\\\"ngModel\\\" id=\\\"status\\\" name=\\\"status\\\" required>\\n                <mat-option value=\\\"gris\\\">\\n                  Inicial\\n                </mat-option>\\n                <mat-option value=\\\"verde\\\">\\n                  Bajo\\n                </mat-option>\\n                <mat-option value=\\\"amarillo\\\">\\n                  Medio\\n                </mat-option>\\n                <mat-option value=\\\"rojo\\\">\\n                  Urgente\\n                </mat-option>\\n                <!-- <mat-option value=\\\"azul\\\">\\n                  Cumplido\\n                </mat-option> -->\\n              </mat-select>\\n              <mat-error *ngIf=\\\"status.dirty || status.touched\\\">Selecciona</mat-error>\\n            </mat-form-field>\\n            <!-- isOld -->\\n            <!--  <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Tipo</mat-label>\\n              <mat-select [(ngModel)]=\\\"goal.isByManagement\\\" #isByManagement=\\\"ngModel\\\" id=\\\"isByManagement\\\" name=\\\"isByManagement\\\"\\n                required>\\n                <mat-option [value]=false>Individual\\n                </mat-option>\\n                <mat-option [value]=true>Grupal\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"isByManagement.dirty || isByManagement.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field> -->\\n\\n            <!-- Fecha -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Fecha para ser cumplido</mat-label>\\n              <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" [value]=\\\"getDate(goal.day, goal.month, goal.year)\\\"\\n                matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Selecciona Fecha\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n            <!-- Fecha -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Fecha para mandar recordatorio</mat-label>\\n              <input (dateChange)=\\\"dateSelect2($event)\\\" (focus)=\\\"picker2.open()\\\" matInput [matDatepicker]=\\\"picker2\\\"\\n                placeholder=\\\"Selecciona Fecha\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker2></mat-datepicker>\\n            </mat-form-field>\\n            <!-- hora -->\\n            <mat-label style=\\\"margin-bottom: 2%;\\\">Anote Hora de recordatorio </mat-label>\\n            <div>\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input type=\\\"number\\\" style=\\\"text-align: right;\\\" matInput [(ngModel)]=\\\"hourNoti\\\" #hour=\\\"ngModel\\\" id=\\\"hour\\\"\\n                  name=\\\"hour\\\" required>\\n\\n              </mat-form-field>\\n              :\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"minuteNoti\\\" #minute=\\\"ngModel\\\" id=\\\"minute\\\" name=\\\"minute\\\"\\n                  required>\\n              </mat-form-field>\\n              <!-- pm/am -->\\n              <mat-form-field style=\\\"width: 71px;\\n              margin-left: 1%;\\\" appearance=\\\"outline\\\">\\n                <mat-select value='am' (selectionChange)=\\\"hourFormat(ampm.value)\\\" #ampm>\\n                  <mat-option value=\\\"pm\\\">\\n                    PM\\n                  </mat-option>\\n                  <mat-option value=\\\"am\\\">\\n                    AM\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <div *ngIf=\\\"goal.adviser && goal.adviser.length > 0\\\">\\n              <!-- list adv -->\\n              <h4>Asesores del Objetivo</h4>\\n              <mat-list role=\\\"list\\\">\\n                <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let adv of goal.adviser\\\">\\n                  {{adv.name}} {{adv.lastName}}\\n                  <!-- <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"schedule.adviser=undefined\\\"></button> -->\\n                  <button matTooltip=\\\"Eliminar\\\" mat-icon-button (click)=\\\"deleteAdviserOfGoal(adv._id)\\\">\\n                    <mat-icon color=\\\"warn\\\">clear</mat-icon>\\n                  </button>\\n                </mat-list-item>\\n              </mat-list>\\n            </div>\\n            <!-- adv -->\\n            <h4 *ngIf=\\\"user.type !== 'adviser'\\\">{{adviserSelect.length === 0 ? 'Asignar Nuevos Asesores' : 'Asesores\\n              Nuevos Seleccionados'}}\\n            </h4>\\n            <mat-list *ngIf=\\\"user.type !== 'adviser'\\\">\\n              <mat-list-item *ngFor=\\\"let adv of adviserSelect; let i=index\\\">{{ adv.name }} {{ adv.lastName }}\\n                <button mat-icon-button (click)=\\\"adviserSelect.splice(i, 1)\\\">\\n                  <mat-icon color=\\\"warn\\\">clear</mat-icon>\\n                </button>\\n              </mat-list-item>\\n            </mat-list>\\n            <div *ngIf=\\\"user.type !== 'adviser'\\\" style=\\\"padding: 0 16px; margin-bottom: 2%;\\\">\\n              <button mat-stroked-button color=\\\"accent\\\" (click)=\\\"searchAdv()\\\">\\n                <ion-spinner *ngIf=\\\"isSpinner\\\" color=\\\"secondary\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                Agregar Asesor\\n              </button>\\n            </div>\\n            <!-- START TYPE -->\\n            <!-- toogle -->\\n            <h4>Tipo de Meta</h4>\\n            <div style=\\\"margin-bottom: 2%\\\">\\n              <mat-button-toggle-group [value]=\\\"typeOfGoal\\\" style=\\\"flex-wrap: wrap\\\" (change)=\\\"typeOfGoal = $event.value; goal.typeOfGoal =  $event.value \\\">\\n                <mat-button-toggle value=\\\"goals\\\">Objetivos</mat-button-toggle>\\n                <mat-button-toggle value=\\\"salesTotal\\\">Ventas</mat-button-toggle>\\n                <mat-button-toggle value=\\\"rentTotal\\\">Rentas</mat-button-toggle>\\n                <mat-button-toggle value=\\\"rentSalesTotal\\\">Ventas y Rentas</mat-button-toggle>\\n              </mat-button-toggle-group>\\n            </div>\\n            <!-- GENERAL str list -->\\n            <app-form-str-list *ngIf=\\\"typeOfGoal === 'goals'\\\" nameTitle=\\\"Lista de Objetivos\\\" nameItems=\\\"Objetivo\\\"\\n              (arrList)=\\\"arrList = $event\\\" [arrStr]=\\\"arrList\\\" [numOfItems]=\\\"numOfItems\\\"></app-form-str-list>\\n            <div class=\\\"flex-column\\\" *ngIf=\\\"typeOfGoal === 'salesTotal'\\\">\\n              <!-- Sales -->\\n              <h5>Elige un tipo</h5>\\n              <mat-radio-group (change)=\\\"typeOfGoalSale = $event.value; goal.typeOfGoal = $event.value \\\">\\n                <mat-radio-button [checked]=\\\"typeOfGoalSale === 'salesTotal' \\\" style=\\\"margin-right: 1%\\\" value=\\\"salesTotal\\\">Número\\n                  de Ventas Totales</mat-radio-button>\\n                <mat-radio-button [checked]=\\\"typeOfGoalSale === 'costOfSales' \\\" value=\\\"costOfSales\\\">Suma de Costo Final</mat-radio-button>\\n              </mat-radio-group>\\n              <ng-container *ngIf=\\\"typeOfGoalSale === 'salesTotal' ; then NumOfSales; else SumOfCost\\\"></ng-container>\\n              <ng-template #NumOfSales>\\n                <!-- NumOfSales -->\\n                <mat-form-field>\\n                  <mat-label>Número de Ventas</mat-label>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"goal.quantitative\\\" #quantitative=\\\"ngModel\\\" id=\\\"quantitative\\\"\\n                    name=\\\"quantitative\\\" required>\\n                  <mat-error *ngIf=\\\"quantitative.dirty || quantitative.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n              </ng-template>\\n              <ng-template #SumOfCost>\\n                <!-- costOfSales -->\\n                <mat-form-field>\\n                  <mat-label>Suma de Costo Final</mat-label>\\n                  <span matPrefix>$ &nbsp;</span>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"goal.quantitative\\\" #quantitative=\\\"ngModel\\\" id=\\\"quantitative\\\"\\n                    name=\\\"quantitative\\\" required>\\n                  <mat-error *ngIf=\\\"quantitative.dirty || quantitative.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n              </ng-template>\\n\\n\\n\\n\\n            </div>\\n            <div class=\\\"flex-column\\\" *ngIf=\\\"typeOfGoal === 'rentTotal'\\\">\\n              <!-- Rent -->\\n              <h5>Elige un tipo</h5>\\n              <mat-radio-group (change)=\\\"typeOfGoalRent = $event.value; goal.typeOfGoal = $event.value \\\">\\n                <mat-radio-button [checked]=\\\"typeOfGoalRent === 'rentTotal' \\\" style=\\\"margin-right: 1%\\\" value=\\\"rentTotal\\\">Número\\n                  de Rentas Totales</mat-radio-button>\\n                <mat-radio-button [checked]=\\\"typeOfGoalRent === 'costOfRent' \\\" value=\\\"costOfRent\\\">Suma de Costo Final</mat-radio-button>\\n              </mat-radio-group>\\n              <ng-container *ngIf=\\\"typeOfGoalRent === 'rentTotal' ; then NumOfRent; else SumOfRent\\\"></ng-container>\\n              <ng-template #NumOfRent>\\n                <!-- NumOfSales -->\\n                <mat-form-field>\\n                  <mat-label>Número de Rentas</mat-label>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"goal.quantitative\\\" #quantitative=\\\"ngModel\\\" id=\\\"quantitative\\\"\\n                    name=\\\"quantitative\\\" required>\\n                  <mat-error *ngIf=\\\"quantitative.dirty || quantitative.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n              </ng-template>\\n              <ng-template #SumOfRent>\\n                <!-- costOfSales -->\\n                <mat-form-field>\\n                  <mat-label>Suma de Costo Final </mat-label>\\n                  <span matPrefix>$ &nbsp;</span>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"goal.quantitative\\\" #quantitative=\\\"ngModel\\\" id=\\\"quantitative\\\"\\n                    name=\\\"quantitative\\\" required>\\n                  <mat-error *ngIf=\\\"quantitative.dirty || quantitative.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n              </ng-template>\\n\\n            </div>\\n            <div class=\\\"flex-column\\\" *ngIf=\\\"typeOfGoal === 'rentSalesTotal'\\\">\\n              <!-- 2 -->\\n              <h5>Elige un tipo</h5>\\n              <mat-radio-group (change)=\\\"typeOfGoalBoth = $event.value; goal.typeOfGoal = $event.value \\\">\\n                <mat-radio-button [checked]=\\\"typeOfGoalBoth === 'rentSalesTotal'\\\" style=\\\"margin-right: 1%\\\" value=\\\"rentSalesTotal\\\">Número\\n                  de Rentas y Ventas\\n                  Totales</mat-radio-button>\\n                <mat-radio-button [checked]=\\\"typeOfGoalBoth === 'rentSalesCost'\\\" value=\\\"rentSalesCost\\\">Suma de Costo\\n                  Final</mat-radio-button>\\n              </mat-radio-group>\\n              <ng-container *ngIf=\\\"typeOfGoalBoth === 'rentSalesTotal' ; then NumOfBoth; else SumOfBoth\\\"></ng-container>\\n              <ng-template #NumOfBoth>\\n                <!-- NumOfSales -->\\n                <mat-form-field>\\n                  <mat-label>Número de Rentas y Ventas</mat-label>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"goal.quantitative\\\" #quantitative=\\\"ngModel\\\" id=\\\"quantitative\\\"\\n                    name=\\\"quantitative\\\" required>\\n                  <mat-error *ngIf=\\\"quantitative.dirty || quantitative.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n              </ng-template>\\n              <ng-template #SumOfBoth>\\n                <!-- costOfSales -->\\n                <mat-form-field>\\n                  <mat-label>Suma de Costo Final</mat-label>\\n                  <span matPrefix>$ &nbsp;</span>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"goal.quantitative\\\" #quantitative=\\\"ngModel\\\" id=\\\"quantitative\\\"\\n                    name=\\\"quantitative\\\" required>\\n                  <mat-error *ngIf=\\\"quantitative.dirty || quantitative.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n              </ng-template>\\n\\n            </div>\\n            <!-- /END TYPE -->\\n          </div>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newGoal()\\\" [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\n                  (click)=\\\"editGoal()\\\">Editar</button>\\n              </span>\\n            </div>\\n          </mat-card-actions>\\n        </mat-card>\\n      </form>\\n    </div>\\n  </ion-grid>\\n\\n\\n</ion-content>\"","module.exports = \".flex-container2 {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.desktop-card {\\n  height: 100% !important; }\\n\\n.flex-column {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-top: 3%;\\n  border: 2px solid darkgray;\\n  border-radius: 8px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IGoal } from '../../../models/goal.model';\nimport { GoalService } from '../../../services/goal.service';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { Platform } from '@ionic/angular';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { filter, map } from 'rxjs/operators';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { ISchedule } from '../../../models/schedule.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SearchDialog,\n  SearchSelectComponent,\n} from '../../general/search-select/search-select.component';\nimport { FormatDatesFront } from '../../../_config/_helpers';\n@Component({\n  selector: 'app-new-edit-goal',\n  templateUrl: './new-edit-goal.component.html',\n  styleUrls: ['./new-edit-goal.component.scss'],\n})\nexport class NewEditGoalComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  goal: IGoal = {};\n  files: string;\n  isLoad: boolean;\n  buyer = '';\n  property = '';\n  buyers;\n  adviserSelect: IAdviser[] = [];\n  advisers$: Observable<IAdviser[]>;\n  isDesktop = false;\n  arrList: string[] = [];\n  numOfItems = 3;\n  user: IUserSession;\n  // noti\n  yearNoti: number;\n  monthNoti: number;\n  dayNoti: number;\n  hourNoti: number;\n  minuteNoti: number;\n  isSpinner: boolean;\n  typeOfGoal = 'goals';\n  typeOfGoalSale = 'salesTotal';\n  typeOfGoalRent = 'rentTotal';\n  typeOfGoalBoth = 'rentSalesTotal';\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private goalService: GoalService,\n    private adviserService: AdviserService,\n    private platform: Platform,\n    private userService: UserSessionService,\n    private oneSignalService: OnesignalService,\n    public dialog: MatDialog,\n  ) {\n    this.user = userService.userSession.value;\n    this.isDesktop = platform.is('desktop');\n    this.getAdviser();\n    this.isLoad = false;\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        goalService.getGoaltById(params.id).subscribe(goal => {\n          this.goal = goal;\n          this.typeOfGoal = goal.typeOfGoal;\n          this.typeOfGoalSale = goal.typeOfGoal;\n          this.typeOfGoalRent = goal.typeOfGoal;\n          this.typeOfGoalBoth = goal.typeOfGoal;\n          if (goal.typeOfGoal === 'costOfRent') {\n            this.typeOfGoal = 'rentTotal';\n          } else if (goal.typeOfGoal === 'costOfSales') {\n            this.typeOfGoal = 'salesTotal';\n          } else if (goal.typeOfGoal === 'rentSalesCost') {\n            this.typeOfGoal = 'rentSalesTotal';\n          }\n          if (goal.goals && goal.goals.length > 0) {\n            this.arrList = goal.goals.map(g => g.nameGoal);\n            this.numOfItems = this.arrList.length;\n          }\n        });\n        this.isNew = false;\n        this.isLoad = true;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getAdviser() {\n    if (this.user.type === 'adviser') {\n      const adv: IAdviser = {\n        _id: this.user.id,\n      };\n      this.adviserSelect = [adv];\n    }\n  }\n  editGoal() {\n    this.goal.notificationOneSignal = this.deleteOneSignal(this.goal);\n    // adv\n    this.adviserSelect.forEach(adv => {\n      const findIndex = this.goal.adviser.findIndex(\n        gadv => gadv._id === adv._id,\n      );\n      if (findIndex === -1) {\n        this.adviserService.getAdviserById(adv._id).subscribe(a => {\n          const arr = a.goal.map(g => g._id);\n          arr.push(this.goal._id);\n          a.goal = <any>arr;\n          this.adviserService.putAdviser(a).subscribe(co => console.log('co'));\n        });\n      }\n    });\n    // goal\n    this.getSet();\n    this.goalService.putGoal(this.goal).subscribe(() => {\n      this.notification(\n        'Nueva Meta Actualizada',\n        this.goal.isByManagement\n          ? `Se ha actualizado una  meta grupal \"${this.goal.title}\"`\n          : `Se ha actualizado una  meta individual \"${this.goal.title}\"`,\n        this.goal.status,\n        'goal',\n        undefined,\n        this.goal.adviser.map(a => a._id),\n      );\n      this.notificationBySchedule(this.goal);\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Objetivo Editado' },\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-goals-admin'], toast));\n    });\n  }\n\n  newGoal() {\n    this.getSet();\n    this.goalService.newGoal(this.goal).subscribe(newGoal => {\n      this.notification(\n        'Nueva Meta Asignada',\n        this.goal.isByManagement\n          ? `Se ha creado una nueva meta grupal \"${this.goal.title}\"`\n          : `Se ha creado una nueva meta individual \"${this.goal.title}\"`,\n        this.goal.status,\n        'goal',\n        undefined,\n        this.goal.adviser.map(a => a._id),\n      );\n      this.notificationBySchedule(newGoal);\n      this.adviserSelect.forEach(adv => {\n        this.adviserService.getAdviserById(adv._id).subscribe(a => {\n          const arr = a.goal.map(g => g._id);\n          arr.push(newGoal._id);\n          a.goal = <any>arr;\n          this.adviserService.putAdviser(a).subscribe(co => console.log('co'));\n        });\n      });\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Objetivo Creado' },\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-goals-admin'], toast));\n    });\n  }\n  deleteAdviserOfGoal(adviserId: string) {\n    const index = this.goal.adviser.findIndex(adv => adv._id === adviserId);\n    this.goal.adviser.splice(index, 1);\n    this.adviserService.getAdviserById(adviserId).subscribe(adv => {\n      const indexAdv = adv.goal.findIndex(g => g._id === this.goal._id);\n      adv.goal.splice(indexAdv, 1);\n      this.adviserService.putAdviser(adv).subscribe(() => {\n        console.log('ok');\n      });\n    });\n  }\n  dateSelect(event) {\n    if (event) {\n      this.goal.day = event.value._i.date;\n      this.goal.month = event.value._i.month;\n      this.goal.year = event.value._i.year;\n    }\n  }\n  dateSelect2(event) {\n    if (event) {\n      this.dayNoti = event.value._i.date;\n      this.monthNoti = event.value._i.month;\n      this.yearNoti = event.value._i.year;\n    }\n  }\n  private getSet() {\n    // user\n    const user = this.userService.userSession.value;\n    if (user.type === 'administrator' || user.type === 'office') {\n      this.goal.isByManagement = true;\n    } else {\n      this.goal.isByManagement = false;\n    }\n    // lista adv\n    if (this.goal.adviser && this.goal.adviser.length > 0) {\n      this.adviserSelect.forEach(adv => {\n        const isFinded = this.goal.adviser.findIndex(\n          gad => gad._id === adv._id,\n        );\n        if (isFinded === -1) {\n          this.goal.adviser.push(adv);\n        }\n      });\n    } else {\n      this.goal.adviser = this.adviserSelect;\n    }\n    // lista str goals\n    if (\n      this.goal.typeOfGoal === 'goals' ||\n      this.goal.typeOfGoal === undefined\n    ) {\n      this.goal.typeOfGoal = 'goals';\n      if (this.goal.goals && this.goal.goals.length > 0) {\n        const goals = [];\n        this.arrList.forEach((nameGoal, i) => {\n          goals.push({\n            isComplete: this.goal.goals[i]\n              ? this.goal.goals[i].isComplete\n              : false,\n            nameGoal: nameGoal,\n          });\n        });\n        this.goal.goals = <any>goals;\n        // nuevo\n      } else if (this.arrList.length > 0) {\n        const goals = [];\n        this.arrList.forEach((nameGoal, i) => {\n          goals.push({\n            isComplete: false,\n            nameGoal: nameGoal,\n          });\n        });\n        this.goal.goals = <any>goals;\n      }\n    }\n  }\n\n  getDate(day, month, year) {\n    return new Date(year, month, day);\n  }\n  getDateNoti(day, month, year) {\n    return FormatDatesFront(new Date(year, month, day));\n  }\n  hourFormat(pmAm) {\n    if (pmAm === 'pm' && this.hourNoti && this.hourNoti < 12) {\n      this.hourNoti = this.hourNoti + 12;\n    }\n  }\n  // noti\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userService.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  private notificationBySchedule(goal: IGoal) {\n    const date = this.getDateNoti(goal.day, goal.month, goal.year);\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de meta',\n        `La meta \"${goal.title}\" esta por llegar a la fecha límite: ${date}`,\n        new Date(\n          this.yearNoti,\n          this.monthNoti,\n          this.dayNoti,\n          this.hourNoti,\n          this.minuteNoti,\n        ),\n        goal.isByManagement ? ['office', 'administrator'] : undefined,\n        goal.adviser.map(a => a._id),\n      )\n      .subscribe(data => {\n        if (!goal.notificationOneSignal) {\n          goal.notificationOneSignal = [];\n        }\n        goal.notificationOneSignal.push(data.id);\n        this.goalService.putGoal(goal).subscribe();\n      });\n  }\n  private deleteOneSignal(goal: IGoal) {\n    /* const schedule = await this.scheduleService\n      .getScheduleById(scheduleId)\n      .toPromise(); */\n    if (goal.notificationOneSignal && goal.notificationOneSignal.length > 0) {\n      goal.notificationOneSignal.forEach((idN, i) => {\n        this.oneSignalService.deleteOneSignalSchedule(idN).subscribe();\n      });\n      return (goal.notificationOneSignal = []);\n    }\n  }\n  // dialog\n  public async searchAdv() {\n    this.isSpinner = true;\n    const adv = await this.adviserService\n      .getAdviserAll()\n      .pipe(\n        map(arr =>\n          arr.map((adviser: any) => {\n            adviser.numOfBuyer = `Número de Clientes: ${adviser.buyer.length}`;\n            adviser.range = `Disponible de ${adviser.hourStart} a ${\n              adviser.hourEnd\n            }`;\n            return adviser;\n          }),\n        ),\n      )\n      .toPromise();\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n      minWidth: '20%', */\n      data: <SearchDialog>{\n        header: 'Buscar asesor para objetivo, seleccione uno o varios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: true,\n        itemsIdDisable: this.isNew\n          ? this.adviserSelect.map(a => a._id)\n          : [\n              ...this.goal.adviser.map(a => a._id),\n              ...this.adviserSelect.map(a => a._id),\n            ],\n        filtersDetail: true,\n        rows: adv,\n        typeFilter: 'filter-adv',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Apellido',\n            prop: 'fatherLastName',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n          {\n            name: '# De Consumidores',\n            prop: 'numOfBuyer',\n            type: 'normal',\n          },\n          {\n            name: 'Disponibilidad',\n            prop: 'range',\n            type: 'normal',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      if (res.options) {\n        this.adviserSelect = [...res.arrSelect, ...this.adviserSelect];\n      }\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Ingresar\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<!-- <ion-content fixed>\\n  <form #loginForm=\\\"ngForm\\\">\\n    <mdc-text-field label=\\\"Nombre\\\" [(ngModel)]=\\\"emailInput\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required [outline]=\\\"true\\\"\\n      [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n    <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n      <span *ngIf=\\\"email.dirty || email.touched\\\">Anota nombre</span>\\n    </mdc-text-field-helper-text>\\n    <mdc-text-field label=\\\"Contraseña\\\" type=\\\"password\\\" [(ngModel)]=\\\"passInput\\\" #pass=\\\"ngModel\\\" id=\\\"pass\\\" name=\\\"pass\\\"\\n      required [outline]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n    <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n      <span *ngIf=\\\"pass.dirty || pass.touched\\\">Anota Contraseña</span>\\n    </mdc-text-field-helper-text>\\n    <ion-button color=\\\"primary\\\" (click)=\\\"login()\\\">Ingresar</ion-button>\\n    <ion-button round fill=\\\"outline\\\" color=\\\"secondary\\\">Nuevo Usuario</ion-button>\\n  </form>\\n</ion-content> -->\\n<ng-container *ngIf=\\\"isLogin; then thenTemplate; else elseTemplate\\\"></ng-container>\\n<ng-template #thenTemplate>\\n\\n</ng-template>\\n<ng-template #elseTemplate>\\n  <div class=\\\"center-login\\\">\\n    <img src=\\\"assets/cobian-light.jpg\\\" style=\\\"max-width: 10em\\\" alt=\\\"\\\">\\n  </div>\\n  <div *ngIf=\\\"!isFind\\\" style=\\\"margin-top: 2%; margin-bottom: 2%; text-align: center;\\\">\\n    <span class=\\\"alert alert-danger \\\">\\n      Error usuario y/o contraseña inválido\\n    </span>\\n  </div>\\n  <ng-container *ngIf=\\\"isiOS; then IOS; else notIOS\\\"></ng-container>\\n  <!-- Solo iOS -->\\n  <ng-template #IOS>\\n    <div class=\\\"grandParentContaniner\\\">\\n      <form #loginForm=\\\"ngForm\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">Correo</ion-label>\\n          <ion-input class=\\\"color-text-field\\\" label=\\\"Correo\\\" [(ngModel)]=\\\"emailInput\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\"\\n            required></ion-input>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"(email.dirty || email.touched) && !email.value\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"danger\\\">*Anota Correo</ion-label>\\n        </ion-item>\\n        <!-- Pass -->\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">Contraseña</ion-label>\\n          <ion-input class=\\\"color-text-field\\\" (keyup)=\\\"pressEnter($event)\\\" label=\\\"Contraseña\\\" type=\\\"password\\\"\\n            [(ngModel)]=\\\"passInput\\\" #pass=\\\"ngModel\\\" id=\\\"pass\\\" name=\\\"pass\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"(pass.dirty || pass.touched) && !pass.value\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"danger\\\">*Anota Contraseña</ion-label>\\n        </ion-item>\\n        <div style=\\\"margin-bottom: 15%;\\\"></div>\\n        <ion-button color=\\\"primary\\\" (click)=\\\"login()\\\">Ingresar</ion-button>\\n        <ion-button round fill=\\\"outline\\\" color=\\\"secondary\\\" (click)=\\\"newUser()\\\">Nuevo Usuario</ion-button>\\n      </form>\\n      <div class=\\\"space-buttons\\\"></div>\\n    </div>\\n  </ng-template>\\n  <!-- Any  -->\\n  <ng-template #notIOS>\\n    <div class=\\\"grandParentContaniner\\\">\\n      <form #loginForm=\\\"ngForm\\\">\\n        <mdc-text-field class=\\\"color-text-field\\\" label=\\\"Correo\\\" [(ngModel)]=\\\"emailInput\\\" #email=\\\"ngModel\\\" id=\\\"email\\\"\\n          name=\\\"email\\\" required [outline]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n        <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n          <span *ngIf=\\\"email.dirty || email.touched\\\">Anota correo</span>\\n        </mdc-text-field-helper-text>\\n        <mdc-text-field class=\\\"color-text-field\\\" (keyup)=\\\"pressEnter($event)\\\" label=\\\"Contraseña\\\" type=\\\"password\\\"\\n          [(ngModel)]=\\\"passInput\\\" #pass=\\\"ngModel\\\" id=\\\"pass\\\" name=\\\"pass\\\" required [outline]=\\\"true\\\" [required]=\\\"true\\\"\\n          [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n        <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n          <span *ngIf=\\\"pass.dirty || pass.touched\\\">Anota Contraseña</span>\\n        </mdc-text-field-helper-text>\\n        <ion-button color=\\\"primary\\\" (click)=\\\"login()\\\">Ingresar</ion-button>\\n        <ion-button round fill=\\\"outline\\\" color=\\\"secondary\\\" (click)=\\\"newUser()\\\">Nuevo Usuario</ion-button>\\n      </form>\\n      <div class=\\\"space-buttons\\\"></div>\\n    </div>\\n  </ng-template>\\n\\n\\n</ng-template>\"","module.exports = \".grandParentContaniner {\\n  display: flex;\\n  justify-content: center;\\n  height: 100%; }\\n\\n.center-login {\\n  text-align: center; }\\n\\n.alert {\\n  position: relative;\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 1rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem; }\\n\\n.alert-danger {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserSessionService } from '../../services/user-session.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport {\n  NavController,\n  MenuController,\n  LoadingController,\n  Platform\n} from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { IUserSession } from '../../models/userSession.model';\nimport { IMaker } from '../../models/maker.model';\nimport { IPreBuyer } from '../../models/preBuyer';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  emailInput: string;\n  passInput: string;\n  isFind = true;\n  isDevice: boolean;\n  isLogin: boolean;\n  isiOS: boolean;\n  constructor(\n    private userSession: UserSessionService,\n    private router: Router,\n    private navController: NavController,\n    private menuController: MenuController,\n    private storage: Storage,\n    public loadingController: LoadingController,\n    private platform: Platform\n  ) {\n    platform.ready().then(() => {\n      this.isiOS = platform.is('ios');\n    });\n    this.storage.keys().then(keys => {\n      const keyUserSession = keys.find(key => key === 'userSessionCurrent');\n      if (!keyUserSession) {\n        this.isLogin = false;\n        userSession.loggout();\n      } else {\n        storage.get('userSessionCurrent').then((val: IUserSession) => {\n          this.emailInput = val.email;\n          this.passInput = val.password;\n          this.login();\n        });\n      }\n    });\n  }\n\n  ngOnInit() {}\n  close() {}\n  async login() {\n    const load = await this.presentLoadingWithOptions();\n    load.present();\n    this.userSession\n      .logginUserSession(this.emailInput, this.passInput)\n      .subscribe(data => {\n        // data  administrator buyer seller adviser management\n        if (data !== 'error') {\n          this.userSession.setUserSession(\n            data.data[0].name,\n            data.type,\n            data.data[0]._id,\n            data.data[0].password,\n            data.data[0].email,\n            data.token\n          );\n          this.isFind = true;\n          // seller\n          if (data.type === 'seller') {\n            this.isLogin = true;\n            load.dismiss();\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.navController.navigateRoot('list-buyer-admin', false);\n            }\n          }\n          // office\n          if (data.type === 'office') {\n            this.isLogin = true;\n            load.dismiss();\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.navController.navigateRoot('list-buyer-admin', false);\n            }\n          }\n          // **management\n          if (data.type === 'management') {\n            this.isLogin = true;\n            load.dismiss();\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.navController.navigateRoot('list-buyer-admin', false);\n            }\n          }\n          // adviser\n          if (data.type === 'adviser') {\n            this.isLogin = true;\n            load.dismiss();\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.navController.navigateRoot('list-schedule-admin', false);\n            }\n          }\n          // maker\n          if (data.type === 'maker') {\n            const maker: IMaker[] = data.data;\n            this.isLogin = true;\n            load.dismiss();\n            this.userSession.buildId = <string>maker[0].build;\n            const query: NavigationExtras = {\n              queryParams: { id: maker[0].build }\n            };\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.router.navigate(['detail-build-admin'], query);\n            }\n          }\n          // preBuyer\n          if (data.type === 'preBuyer') {\n            const preBuyer: IPreBuyer[] = data.data;\n            this.isLogin = true;\n            load.dismiss();\n            const query: NavigationExtras = {\n              queryParams: { id: preBuyer[0]._id }\n            };\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.router.navigate(['login-select-user'], query);\n            }\n          }\n          // buyer\n          if (data.type === 'buyer') {\n            this.isLogin = true;\n            load.dismiss();\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.navController.navigateRoot('list-prop-buyer', false);\n            }\n          }\n          //  admin\n          if (data.type === 'administrator') {\n            this.isLogin = true;\n            load.dismiss();\n            const noty = this.userSession.activateMenu.value;\n            if (noty && noty !== '') {\n              this.router.navigate([noty]);\n            } else {\n              this.navController.navigateRoot('main-admin', false);\n            }\n          }\n        } else {\n          load.dismiss();\n          this.isFind = false;\n        }\n      });\n  }\n  async presentLoadingWithOptions() {\n    const loading = await this.loadingController.create({\n      message: 'Iniciando...',\n      translucent: true\n    });\n    return await loading;\n  }\n  newUser() {\n    this.navController.navigateForward('new-buyer', false);\n  }\n  pressEnter(event) {\n    if (event.keyCode === 13) {\n      this.login();\n    }\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title> Selecciona uno </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <div class=\\\"user-select-contenet\\\">\\n    <ng-container\\n      *ngIf=\\\"isLoad; then: thenTemplate; else: elseTemplate\\\"\\n    ></ng-container>\\n    <ng-template #thenTemplate>\\n      <ng-container *ngIf=\\\"preBuyer.preBuild.length > 0; else: elseTemplate2\\\">\\n        <ion-card\\n          class=\\\"user-select-card\\\"\\n          *ngFor=\\\"let build of preBuyer.preBuild\\\"\\n          (click)=\\\"goToBuild(build._id)\\\"\\n        >\\n          <ion-card-header>\\n            <ion-card-title>{{ build.name }}</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-label text-wrap>\\n              <p><b>Fecha Alta</b> {{ formatDates(build.timestamp) }}</p>\\n              <p><b>Ciudad</b> {{ build.city }}</p>\\n              <p><b>Notas</b> {{ build.notes }}</p>\\n            </ion-label>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-icon\\n                style=\\\"color:  #F5811E\\\"\\n                name=\\\"arrow-forward\\\"\\n                slot=\\\"end\\\"\\n              ></ion-icon>\\n              <ion-label text-wrap>Ver propiedad</ion-label>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card>\\n      </ng-container>\\n      <ng-template #elseTemplate2>\\n        <h6>No hay elementos registrados</h6>\\n      </ng-template>\\n    </ng-template>\\n    <ng-template #elseTemplate>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n  </div>\\n</ion-content>\\n\"","module.exports = \".user-select-contenet {\\n  margin: 3% 30% 2% 30%; }\\n\\n.user-select-card {\\n  border-left: 4px solid var(--ion-color-secondary); }\\n\\n.user-select-card:hover {\\n  background-color: var(--ion-color-light); }\\n\\n@media (max-width: 900px) {\\n  .user-select-contenet {\\n    margin: 1% 1% 1% 1%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PreBuyerService } from '../../../services/pre-buyer.service';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IPreBuyer } from '../../../models/preBuyer';\nimport { FormatDatesFront } from '../../../_config/_helpers';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\n\n@Component({\n  selector: 'app-user-select',\n  templateUrl: './user-select.component.html',\n  styleUrls: ['./user-select.component.scss']\n})\nexport class UserSelectComponent implements OnInit {\n  user: IUserSession;\n  preBuyer: IPreBuyer;\n  isLoad: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private preBuyerService: PreBuyerService,\n    private router: Router,\n    private userSession: UserSessionService\n  ) {\n    this.user = userSession.userSession.value;\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.getBuyerById(params.id);\n      } else if (this.user.type === 'preBuyer') {\n        this.getBuyerById(this.user.id);\n      }\n    });\n  }\n\n  ngOnInit() {}\n  getBuyerById(id) {\n    this.isLoad = false;\n    this.preBuyerService.getBuyerById(id).subscribe(b => {\n      this.preBuyer = b;\n      this.isLoad = true;\n    });\n  }\n  formatDates(date): string {\n    return FormatDatesFront(date);\n  }\n  goToBuild(id) {\n    const data: NavigationExtras = { queryParams: { id: id } };\n    this.router.navigate(['detail-prebuild-admin'], data);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propietario\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Constructor'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n    <ng-template #thenTemplate>\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <mat-card-title>Complete los campos</mat-card-title>\\n            <div class=\\\"flex-container\\\">\\n              <!-- name -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Nombre</mat-label>\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"maker.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n                <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\n              </mat-form-field>\\n              <!-- lastname -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Apellido</mat-label>\\n                <input matInput [(ngModel)]=\\\"maker.lastName\\\" #lastName=\\\"ngModel\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" required>\\n                <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\">Anotar Apellido</mat-error>\\n              </mat-form-field>\\n              <!-- email -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Correo</mat-label>\\n                <input matInput [(ngModel)]=\\\"maker.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\n              </mat-form-field>\\n              <!-- email -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Teléfono</mat-label>\\n                <input matInput [(ngModel)]=\\\"maker.phone\\\" #phone=\\\"ngModel\\\" id=\\\"phone\\\" name=\\\"phone\\\" required>\\n                <mat-error *ngIf=\\\"phone.dirty || phone.touched\\\">Anotar Teléfono</mat-error>\\n              </mat-form-field>\\n              <!-- city -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Ciudad</mat-label>\\n                <mat-select [(ngModel)]=\\\"maker.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\n                  <mat-option value=\\\"puebla\\\">\\n                    Puebla\\n                  </mat-option>\\n                  <mat-option value=\\\"mexico\\\">\\n                    México\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\n              </mat-form-field>\\n              <!-- pass -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Contraseña</mat-label>\\n                <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"maker.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\"\\n                  name=\\\"password\\\" required>\\n                <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n              </mat-form-field>\\n\\n              <!-- prop -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Obras del Constructor</mat-label>\\n                <mat-select (selectionChange)=\\\"flag = true\\\" [(ngModel)]=\\\"maker.build\\\" #property=\\\"ngModel\\\" id=\\\"property\\\"\\n                  name=\\\"property\\\">\\n                  <mat-option *ngFor=\\\"let prop of buildings$ | async\\\" [value]=\\\"prop._id\\\">\\n                    {{prop.name}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"property.dirty || property.touched\\\">Anotar Obra</mat-error>\\n              </mat-form-field>\\n            </div>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin-right: 2%\\\">\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                  <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\n                    (click)=\\\"editCustomer()\\\">Editar</button>\\n                </span>\\n              </div>\\n\\n\\n            </mat-card-actions>\\n\\n          </mat-card>\\n        </form>\\n\\n      </div>\\n    </ng-template>\\n    <ng-template #elseTemplate>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n\\n\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IMaker } from '../../../models/maker.model';\nimport { IBuild } from '../../../models/build.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { BuildService } from '../../../services/build.service';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SellerService } from '../../../services/seller.service';\nimport { NavController } from '@ionic/angular';\nimport { MakerService } from '../../../services/maker.service';\nimport { INotification } from '../../../models/notification.model';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\n\n@Component({\n  selector: 'app-new-edit-maker',\n  templateUrl: './new-edit-maker.component.html',\n  styleUrls: ['./new-edit-maker.component.scss'],\n})\nexport class NewEditMakerComponent implements OnInit {\n  isLoad = false;\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  maker: IMaker = {};\n  buildings$: Observable<IBuild[]>;\n  oldBuild;\n  flag = false;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private navCtr: NavController,\n    private buildService: BuildService,\n    private makerService: MakerService,\n    private userSessionService: UserSessionService,\n    private oneSignalService: OnesignalService,\n  ) {}\n\n  ngOnInit() {\n    this.isLoad = false;\n    this.getBuild();\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.makerService.getMakerById(params['id']).subscribe(m => {\n          this.maker = m;\n          if (m.build) {\n            this.oldBuild = m.build._id;\n            this.maker.build = this.oldBuild;\n          } else {\n          }\n          console.log(m);\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n  getBuild() {\n    this.buildings$ = this.buildService.getBuildAll();\n  }\n  newCustomer() {\n    this.makerService.newMaker(this.maker).subscribe(s => {\n      if (s.build !== undefined) {\n        this.buildService\n          .getBuildById(<any>this.maker.build)\n          .subscribe(build => {\n            const findIndex = build.maker.findIndex(\n              m => m._id === this.maker._id,\n            );\n            if (findIndex === -1) {\n              build.maker.push(s);\n              this.buildService.putBuild(build).subscribe(() => {\n                this.notification(\n                  'Nueva Obra',\n                  `Se le ha asignado: ${build.name}`,\n                  'verde',\n                  'build',\n                  undefined,\n                  [this.maker._id],\n                );\n                console.log('add');\n                const toast: NavigationExtras = {\n                  queryParams: { res: 'Nuevo Cosntructor Agregado' },\n                };\n                // this.router.navigate(['list-seller-admin'], toast);\n                this.router\n                  .navigateByUrl('/RefrshComponent', {\n                    skipLocationChange: true,\n                  })\n                  .then(() =>\n                    this.router.navigate(['list-maker-admin'], toast),\n                  );\n              });\n            }\n          });\n      } else {\n        const toast: NavigationExtras = {\n          queryParams: { res: 'Nuevo Cosntructor Agregado' },\n        };\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-maker-admin'], toast));\n      }\n      // add\n    });\n  }\n  editCustomer() {\n    console.log(this.oldBuild);\n    console.log(this.maker.build);\n    if (this.oldBuild && this.oldBuild !== this.maker.build) {\n      console.log('a');\n      // add\n      this.buildService.getBuildById(<any>this.maker.build).subscribe(build => {\n        const findIndex = build.maker.findIndex(m => m._id === this.maker._id);\n        if (findIndex === -1) {\n          build.maker.push(this.maker);\n          this.buildService.putBuild(build).subscribe(() => {\n            this.notification(\n              'Nueva Obra',\n              `Se le ha asignado: ${build.name}`,\n              'verde',\n              'build',\n              undefined,\n              [this.maker._id],\n            );\n            console.log('add');\n          });\n        }\n      });\n      // remove\n      this.buildService.getBuildById(this.oldBuild).subscribe(build => {\n        const findIndex = build.maker.findIndex(m => m._id === this.maker._id);\n        build.maker.splice(findIndex, 1);\n        this.buildService.putBuild(build).subscribe(() => {\n          console.log('remove');\n          this.putMaker();\n        });\n      });\n    } else {\n      //\n      this.notification(\n        'Nueva Obra',\n        `Se le ha asignado nueva obra`,\n        'verde',\n        'build',\n        undefined,\n        [this.maker._id],\n      );\n      this.putMaker();\n    }\n  }\n  private putMaker() {\n    this.makerService.putMaker(this.maker).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Constructor Editado' },\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-maker-admin'], toast));\n    });\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n\n/* this.buildService.putBuild(this.oldBuild).subscribe(() => {\n          console.log('remove');\n          resolve(true);\n        }); */\n\n/* this.buildService.getBuildById(builId).subscribe(build => {\n          const findIndex = build.maker.findIndex(m => m._id === makerId);\n          if (findIndex === -1) {\n            build.maker.push(makerId);\n            this.buildService.putBuild(build).subscribe(() => {\n              resolve(true);\n            });\n          }\n        }); */\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Oficinista\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'back'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Gerencia'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ng-container\\n    *ngIf=\\\"isLoad; then: thenTemplate; else: elseTemplate\\\"\\n  ></ng-container>\\n  <ng-template #thenTemplate>\\n    <ion-grid fixed>\\n      <h1>Gerencia</h1>\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <mat-card-title>Complete los campos</mat-card-title>\\n            <div class=\\\"flex-container\\\">\\n              <!-- name -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Nombre</mat-label>\\n                <input\\n                  matInput\\n                  placeholder=\\\"\\\"\\n                  [(ngModel)]=\\\"manager.name\\\"\\n                  #name=\\\"ngModel\\\"\\n                  id=\\\"name\\\"\\n                  name=\\\"name\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"name.dirty || name.touched\\\"\\n                  >Anotar Nombre</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- Apellido -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Apellido</mat-label>\\n                <input\\n                  matInput\\n                  placeholder=\\\"\\\"\\n                  [(ngModel)]=\\\"manager.lastname\\\"\\n                  #lastname=\\\"ngModel\\\"\\n                  id=\\\"lastname\\\"\\n                  name=\\\"lastname\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"lastname.dirty || lastname.touched\\\"\\n                  >Anotar Apellido</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- Teléfono -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Teléfono</mat-label>\\n                <input\\n                  matInput\\n                  type=\\\"number\\\"\\n                  placeholder=\\\"\\\"\\n                  [(ngModel)]=\\\"manager.phone\\\"\\n                  #phone=\\\"ngModel\\\"\\n                  id=\\\"phone\\\"\\n                  name=\\\"phone\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"phone.dirty || phone.touched\\\"\\n                  >Anotar Telefono</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- Correo -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Correo</mat-label>\\n                <input\\n                  matInput\\n                  [(ngModel)]=\\\"manager.email\\\"\\n                  #email=\\\"ngModel\\\"\\n                  id=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\"\\n                  >Anotar Correo</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- pass -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Contraseña</mat-label>\\n                <input\\n                  matInput\\n                  [type]=\\\"hide ? 'password' : 'text'\\\"\\n                  [(ngModel)]=\\\"manager.password\\\"\\n                  #password=\\\"ngModel\\\"\\n                  id=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"password.dirty || password.touched\\\"\\n                  >Anotar Contraseña</mat-error\\n                >\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{\\n                  hide ? 'visibility' : 'visibility_off'\\n                }}</mat-icon>\\n              </mat-form-field>\\n            </div>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin-right: 2%\\\">\\n                <span\\n                  [matTooltip]=\\\"errorToShow\\\"\\n                  [matTooltipClass]=\\\"'tooltip-size'\\\"\\n                  (mouseenter)=\\\"getPopMessage($event)\\\"\\n                >\\n                  <button\\n                    *ngIf=\\\"isNew\\\"\\n                    id=\\\"submitUser\\\"\\n                    mat-raised-button\\n                    color=\\\"primary\\\"\\n                    (click)=\\\"add()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\"\\n                  >\\n                    Crear\\n                  </button>\\n                  <button\\n                    *ngIf=\\\"!isNew\\\"\\n                    id=\\\"submitUser\\\"\\n                    mat-raised-button\\n                    color=\\\"primary\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\"\\n                    (click)=\\\"edit()\\\"\\n                  >\\n                    Editar\\n                  </button>\\n                </span>\\n              </div>\\n            </mat-card-actions>\\n          </mat-card>\\n        </form>\\n      </div>\\n    </ion-grid>\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n</ion-content>\\n\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IManager } from '../../../models/manager.model';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { OfficeService } from '../../../services/office.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { ManagersService } from '../../../services/managers.service';\n\n@Component({\n  selector: 'app-new-edit-manager',\n  templateUrl: './new-edit-manager.component.html',\n  styleUrls: ['./new-edit-manager.component.scss']\n})\nexport class NewEditManagerComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  manager: IManager = {};\n  isLoad: boolean;\n  user: IUserSession;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userSession: UserSessionService,\n    private managerService: ManagersService\n  ) {\n    this.user = userSession.userSession.value;\n    this.isLoad = false;\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.managerService.getManagerById(params['id']).subscribe(m => {\n          console.log(m);\n          this.manager = m;\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else if (this.user && this.user.type === 'office') {\n        this.managerService.getManagerById(this.user.id).subscribe(office => {\n          this.manager = office;\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n  edit() {\n    this.managerService.putManager(this.manager).subscribe(m => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Gerente Editado' }\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-manager-admin'], toast));\n    });\n  }\n  add() {\n    this.managerService.newManager(this.manager).subscribe(o => {\n      // this.navCtr.navigateRoot('list-ofert-admin', true);\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Gerente Creado' }\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-manager-admin'], toast));\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Notificaciones\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'menu'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Notificaciones'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n\\n<ion-content\\n  (ionScroll)=\\\"onScroll($event)\\\"\\n  [scrollEvents]=\\\"true\\\"\\n  (sectionChange)=\\\"onSectionChange($event)\\\"\\n>\\n  <div class=\\\"user-select-contenet\\\">\\n    <ng-container\\n      *ngIf=\\\"isLoad; then: thenTemplate; else: elseTemplate\\\"\\n    ></ng-container>\\n    <ng-template #thenTemplate>\\n      <!--\\n        <h3 *ngIf=\\\"notificationsNew.length > 0\\\">\\n          Nuevas\\n        </h3>\\n      -->\\n      <div\\n        *ngIf=\\\"notificationsNew.length > 0\\\"\\n        style=\\\"text-align: center\\\"\\n        id=\\\"Nuevas\\\"\\n      >\\n        <ion-chip class=\\\"chips-detail\\\" color=\\\"secondary\\\">\\n          <ion-label>Nuevas</ion-label>\\n        </ion-chip>\\n      </div>\\n      <span *ngFor=\\\"let notification of notificationsNew\\\">\\n        <!-- card -->\\n        <ion-card>\\n          <div class=\\\"card-noti-flex\\\">\\n            <div\\n              [class.mat-elevation-z3]=\\\"true\\\"\\n              class=\\\"card-icon-flex \\\"\\n              [ngClass]=\\\"{\\n                'background-verde': notification.status === 'verde',\\n                'background-amarillo': notification.status === 'amarillo',\\n                'background-rojo': notification.status === 'rojo',\\n                'background-gris': notification.status === 'gris',\\n                'background-azul': notification.status === 'azul'\\n              }\\\"\\n            >\\n              <div class=\\\"card-icon \\\">\\n                <mat-icon class=\\\"icon-size\\\">{{\\n                  trasforIcon(notification.type)\\n                }}</mat-icon>\\n              </div>\\n            </div>\\n\\n            <div\\n              style=\\\"width: 100%;\\\"\\n              [ngClass]=\\\"{\\n                'background-verde-light': notification.status === 'verde',\\n                'background-amarillo-light': notification.status === 'amarillo',\\n                'background-rojo-light': notification.status === 'rojo',\\n                'background-gris-light': notification.status === 'gris',\\n                'background-azul-light': notification.status === 'azul'\\n              }\\\"\\n            >\\n              <ion-card-header>\\n                <ion-card-subtitle>{{\\n                  formatDates(notification.timestamp)\\n                }}</ion-card-subtitle>\\n                <ion-card-title text-wrap>{{\\n                  notification.title\\n                }}</ion-card-title>\\n              </ion-card-header>\\n              <ion-card-content> {{ notification.message }} </ion-card-content>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-button\\n                  (click)=\\\"goToDetails(notification)\\\"\\n                  color=\\\"secondary\\\"\\n                  slot=\\\"end\\\"\\n                >\\n                  Detalles\\n                </ion-button>\\n              </ion-item>\\n            </div>\\n          </div>\\n        </ion-card>\\n        <!-- / card -->\\n      </span>\\n      <!--\\n        <h3 *ngIf=\\\"notificationsOld.length > 0\\\">\\n          Leidas\\n        </h3>\\n      -->\\n      <div\\n        *ngIf=\\\"notificationsOld.length > 0\\\"\\n        style=\\\"text-align: center\\\"\\n        appScrollTitle\\n        id=\\\"Leidas\\\"\\n        #algo\\n      >\\n        <ion-chip class=\\\"chips-detail \\\" color=\\\"secondary\\\">\\n          <ion-label>Leidas</ion-label>\\n        </ion-chip>\\n      </div>\\n      <span *ngFor=\\\"let notification of notificationsOld\\\">\\n        <!-- card -->\\n        <ion-card>\\n          <div class=\\\"card-noti-flex\\\">\\n            <div\\n              class=\\\"card-icon-flex \\\"\\n              [ngClass]=\\\"{\\n                'state-verde': notification.status === 'verde',\\n                'state-amarillo': notification.status === 'amarillo',\\n                'state-rojo': notification.status === 'rojo',\\n                'state-gris': notification.status === 'gris',\\n                'state-azul': notification.status === 'azul'\\n              }\\\"\\n            >\\n              <div class=\\\"card-icon \\\">\\n                <mat-icon class=\\\"icon-size\\\">{{\\n                  trasforIcon(notification.type)\\n                }}</mat-icon>\\n              </div>\\n            </div>\\n\\n            <div style=\\\"width: 100%;\\\">\\n              <ion-card-header>\\n                <ion-card-subtitle\\n                  >Fecha:\\n                  {{ formatDates(notification.timestamp) }}</ion-card-subtitle\\n                >\\n                <ion-card-title text-wrap>{{\\n                  notification.title\\n                }}</ion-card-title>\\n              </ion-card-header>\\n              <ion-card-content> {{ notification.message }} </ion-card-content>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-button\\n                  (click)=\\\"goToDetails(notification)\\\"\\n                  color=\\\"secondary\\\"\\n                  slot=\\\"end\\\"\\n                >\\n                  Detalles\\n                </ion-button>\\n              </ion-item>\\n            </div>\\n          </div>\\n        </ion-card>\\n        <!-- / card -->\\n      </span>\\n      <div style=\\\"text-align: center;\\\">\\n        <ion-button\\n          *ngIf=\\\"user.type !== 'buyer'\\\"\\n          (click)=\\\"loadMore(); demoTabBar.activateTab(0)\\\"\\n          shape=\\\"round\\\"\\n        >\\n          <ion-spinner\\n            *ngIf=\\\"isSpinner\\\"\\n            style=\\\"color: white\\\"\\n            name=\\\"bubbles\\\"\\n          ></ion-spinner\\n          >Cargar más\\n        </ion-button>\\n        <ion-button\\n          *ngIf=\\\"user.type === 'buyer'\\\"\\n          (click)=\\\"loadMore(); demoTabBar2.activateTab(0)\\\"\\n          shape=\\\"round\\\"\\n        >\\n          <ion-spinner\\n            *ngIf=\\\"isSpinner\\\"\\n            style=\\\"color: white\\\"\\n            name=\\\"bubbles\\\"\\n          ></ion-spinner\\n          >Cargar más\\n        </ion-button>\\n      </div>\\n    </ng-template>\\n    <ng-template #elseTemplate>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n  </div>\\n  <!-- /10 iniciales -->\\n</ion-content>\\n\\n<!--\\n  tab notification\\n  || user.type === 'preBuyer' || user.type === 'maker'\\n  || user.type === 'preBuyer' || user.type === 'maker'\\n-->\\n\\n<ion-footer class=\\\"back-tab\\\" [hidden]=\\\"user.type === 'buyer'\\\">\\n  <mdc-tab-bar #demoTabBar (activated)=\\\"logTab($event)\\\" stacked>\\n    <mdc-tab-scroller *ngIf=\\\"user.type !== 'preBuyer' && user.type !== 'maker'\\\">\\n      <mdc-tab\\n        class=\\\"tabs-color\\\"\\n        label=\\\"Todos\\\"\\n        icon=\\\"assignment_active\\\"\\n      ></mdc-tab>\\n      <mdc-tab class=\\\"tabs-color\\\" label=\\\"Clientes\\\" icon=\\\"people\\\"></mdc-tab>\\n      <mdc-tab\\n        class=\\\"tabs-color\\\"\\n        label=\\\"Eventos\\\"\\n        icon=\\\"calendar_today\\\"\\n      ></mdc-tab>\\n      <mdc-tab\\n        class=\\\"tabs-color\\\"\\n        label=\\\"Asesores\\\"\\n        icon=\\\"supervised_user_circle\\\"\\n      ></mdc-tab>\\n      <mdc-tab class=\\\"tabs-color\\\" label=\\\"Propiedades\\\" icon=\\\"business\\\"></mdc-tab>\\n    </mdc-tab-scroller>\\n  </mdc-tab-bar>\\n</ion-footer>\\n<!-- buyer -->\\n<ion-footer class=\\\"back-tab\\\" [hidden]=\\\"user.type !== 'buyer'\\\">\\n  <mdc-tab-bar #demoTabBar2 (activated)=\\\"logTab2($event)\\\" stacked>\\n    <mdc-tab-scroller>\\n      <mdc-tab\\n        class=\\\"tabs-color\\\"\\n        label=\\\"Todos\\\"\\n        icon=\\\"assignment_active\\\"\\n      ></mdc-tab>\\n      <mdc-tab\\n        class=\\\"tabs-color\\\"\\n        label=\\\"Ofertas\\\"\\n        icon=\\\"monetization_on\\\"\\n      ></mdc-tab>\\n      <mdc-tab class=\\\"tabs-color\\\" label=\\\"Créditos\\\" icon=\\\"payment\\\"></mdc-tab>\\n      <mdc-tab\\n        class=\\\"tabs-color\\\"\\n        label=\\\"Eventos\\\"\\n        icon=\\\"calendar_today\\\"\\n      ></mdc-tab>\\n    </mdc-tab-scroller>\\n  </mdc-tab-bar>\\n</ion-footer>\\n\"","module.exports = \".back-tab {\\n  background-color: var(--ion-color-light); }\\n\\n.user-select-contenet {\\n  margin: 3% 20% 2% 20%; }\\n\\n.card-noti-flex {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.card-icon {\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  margin-left: 10%;\\n  margin-right: 3%; }\\n\\n.card-icon-flex {\\n  display: flex;\\n  width: 50px; }\\n\\n.icon-size {\\n  font-size: 2.8em; }\\n\\n.detail-button {\\n  align-self: flex-end;\\n  margin-left: 25%; }\\n\\n.chips-detail {\\n  padding: 15px;\\n  font-size: 1.3em; }\\n\\n.title-sticky {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 100000; }\\n\\n@media (max-width: 900px) {\\n  .user-select-contenet {\\n    margin: 1% 1% 1% 1%; }\\n  .card-icon {\\n    -ms-grid-row-align: center;\\n        align-self: center;\\n    margin-left: 0%;\\n    margin-right: 0%; } }\\n\"","import { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { Platform } from '@ionic/angular';\nimport { MdcTabActivatedEvent } from '@angular-mdc/web';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { INotification } from '../../../models/notification.model';\nimport { FormatDatesFront } from '../../../_config/_helpers';\nimport { Router } from '@angular/router';\nimport { SocketIoService } from '../../../services/socket-io.service';\nimport { DialogGeneralComponent } from '../../general/dialog-general/dialog-general.component';\nimport { MatDialog } from '@angular/material';\nimport { END_POINT } from '../../../_config/api.end-points';\n\n@Component({\n  selector: 'app-list-notification',\n  templateUrl: './list-notification.component.html',\n  styleUrls: ['./list-notification.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListNotificationComponent implements OnInit, OnDestroy {\n  section = 0;\n  isDesktop = false;\n  user: IUserSession;\n  notifications: INotification[] = [];\n  notificationsNew: INotification[] = [];\n  notificationsNewBack: INotification[] = [];\n  notificationsOld: INotification[] = [];\n  notificationsOldBack: INotification[] = [];\n  pageNumber = 1;\n  isNew = true;\n  Title;\n  isLoad: boolean;\n  isSpinner = false;\n  currentSection: string;\n\n  constructor(\n    private userSessionService: UserSessionService,\n    private platform: Platform,\n    private oneSignalService: OnesignalService,\n    private socketIOService: SocketIoService,\n    private router: Router,\n    public dialog: MatDialog\n  ) {\n    this.isLoad = false;\n    this.isDesktop = platform.is('desktop');\n    this.user = userSessionService.userSession.value;\n    this.getNotification(this.user, this.pageNumber);\n    this.getNotificationRealTime();\n  }\n\n  ngOnInit() {}\n  logTab(event: MdcTabActivatedEvent): void {\n    this.notificationsNew = this.notificationsNewBack;\n    this.notificationsOld = this.notificationsOldBack;\n    const numTab = event.index;\n    if (numTab === 1) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n =>\n          n.type === 'buyer' ||\n          n.type === 'like' ||\n          n.type === 'credit' ||\n          n.type === 'ofert'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n =>\n          n.type === 'buyer' ||\n          n.type === 'like' ||\n          n.type === 'credit' ||\n          n.type === 'ofert'\n      );\n    } else if (numTab === 2) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n => n.type === 'schedule'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n => n.type === 'schedule'\n      );\n    } else if (numTab === 3) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n => n.type === 'celebrate' || n.type === 'goal'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n => n.type === 'celebrate' || n.type === 'goal'\n      );\n    } else if (numTab === 4) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n => n.type === 'build' || n.type === 'property'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n => n.type === 'build' || n.type === 'property'\n      );\n    }\n  }\n  logTab2(event: MdcTabActivatedEvent): void {\n    this.notificationsNew = this.notificationsNewBack;\n    this.notificationsOld = this.notificationsOldBack;\n    const numTab = event.index;\n    if (numTab === 1) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n => n.type === 'ofert'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n => n.type === 'ofert'\n      );\n    } else if (numTab === 2) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n => n.type === 'credit'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n => n.type === 'credit'\n      );\n    } else if (numTab === 3) {\n      this.notificationsNew = this.notificationsNew.filter(\n        n => n.type === 'schedule'\n      );\n      this.notificationsOld = this.notificationsOld.filter(\n        n => n.type === 'schedule'\n      );\n    }\n  }\n  getNotification(user: IUserSession, pageNumber) {\n    this.oneSignalService\n      .search(user.id, user.type, pageNumber, 10)\n      .subscribe(nts => {\n        if (pageNumber === 1) {\n          this.notificationsNew = nts.filter(n => this.isNewTitle(n.readBy));\n          this.notificationsOld = nts.filter(n => !this.isNewTitle(n.readBy));\n          this.notificationsNewBack = this.notificationsNew;\n          this.notificationsOldBack = this.notificationsOld;\n        } else {\n          this.notificationsNew = [\n            ...this.notificationsNew,\n            ...nts.filter(n => this.isNewTitle(n.readBy))\n          ];\n          this.notificationsOld = [\n            ...this.notificationsOld,\n            ...nts.filter(n => !this.isNewTitle(n.readBy))\n          ];\n          this.notificationsNewBack = this.notificationsNew;\n          this.notificationsOldBack = this.notificationsOld;\n        }\n        const isCelebrate = this.notificationsNew.filter(\n          n => n.type === 'celebrate' || n.title === 'Propiedad Adquirida'\n        );\n        console.log('cele', isCelebrate);\n        if (isCelebrate.length > 0) {\n          isCelebrate.forEach(n => {\n            this.dialogCelebrate(n);\n          });\n        }\n        this.isSpinner = false;\n        this.isLoad = true;\n      });\n  }\n  loadMore() {\n    this.isSpinner = true;\n    this.notificationsNew = this.notificationsNewBack;\n    this.notificationsOld = this.notificationsOldBack;\n    this.pageNumber++;\n    this.getNotification(this.user, this.pageNumber);\n  }\n  ngOnDestroy() {\n    this.socketIOService.resetNum();\n    this.notificationsNew.forEach(n => {\n      n.readBy.push({\n        readAt: new Date(),\n        readerId: this.user.id\n      });\n      this.oneSignalService.putNotification(n).subscribe();\n    });\n  }\n  private markAsRead(noti: INotification) {\n    noti.readBy.push({\n      readAt: new Date(),\n      readerId: this.user.id\n    });\n    this.oneSignalService.putNotification(noti).subscribe(() => {\n      this.socketIOService.minusOne();\n      const indexFind = this.notificationsNew.findIndex(\n        n => n._id === noti._id\n      );\n      if (indexFind !== -1) {\n        this.notificationsNew.splice(indexFind, 1);\n        this.notificationsNewBack = this.notificationsNew;\n        this.notificationsOld.push(noti);\n        this.notificationsOldBack = this.notificationsOld;\n      }\n    });\n  }\n\n  goToDetails(n: INotification) {\n    this.markAsRead(n);\n    if (this.user.type === 'preBuyer') {\n      this.router.navigate(['login-select-user']);\n    } else if (this.user.type === 'maker') {\n      this.router.navigate(['detail-build-admin']);\n    } else {\n      if (n.type === 'build') {\n        this.router.navigate(['list-build-admin']);\n      } else if (n.type === 'buyer') {\n        this.router.navigate(['list-buyer-admin']);\n      } else if (n.type === 'celebrate' || n.type === 'goal') {\n        this.router.navigate(['list-goals-admin']);\n      } else if (n.type === 'property') {\n        if (this.user.type === 'buyer') {\n          this.router.navigate(['inter-prop-buyer']);\n        } else {\n          this.router.navigate(['list-prop-admin']);\n        }\n      } else if (n.type === 'schedule') {\n        if (this.user.type === 'buyer') {\n          this.router.navigate(['calendar-buyer']);\n        } else {\n          this.router.navigate(['list-schedule-admin']);\n        }\n      } else if (n.type === 'ofert') {\n        if (this.user.type === 'buyer') {\n          this.router.navigate(['ofert-buyer']);\n        } else {\n          this.router.navigate(['list-ofert-admin']);\n        }\n      } else if (n.type === 'credit') {\n        if (this.user.type === 'buyer') {\n          this.router.navigate(['inter-prop-buyer']);\n        } else {\n          this.router.navigate(['list-credit-admin']);\n        }\n      } else if (n.type === 'like') {\n        if (this.user.type === 'buyer') {\n          this.router.navigate(['inter-prop-buyer']);\n        } else {\n          this.router.navigate(['list-buyer-admin']);\n        }\n      } else if (n.type === 'msg') {\n        this.router.navigate(['chat']);\n      }\n    }\n  }\n  getNotificationRealTime() {\n    this.socketIOService.onNewPost().subscribe(ntf => {\n      this.notificationsNew.push(ntf);\n      this.notificationsNewBack = this.notificationsNew;\n    });\n  }\n  // dialog\n  private async dialogCelebrate(n: INotification) {\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\n      /*  maxWidth: '50%',\n      minWidth: '20%', */\n      data: {\n        header: 'Felicidades',\n        subHeader: n.message,\n        body: `<img src=\"${END_POINT.IP}celebrate.png\">`,\n        isform: false,\n        hideButtonCancel: true,\n        okButton: 'Gracias'\n      }\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      this.markAsRead(n);\n    });\n  }\n  // helpers\n  formatDates(date) {\n    return FormatDatesFront(date);\n  }\n  isNewTitle(readby: any[]) {\n    const id = readby.find(r => r.readerId === this.user.id);\n    if (id !== undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  trasforIcon(\n    str:\n      | 'like'\n      | 'credit'\n      | 'schedule'\n      | 'ofert'\n      | 'property'\n      | 'build'\n      | 'buyer'\n      | 'goal'\n      | 'celebrate'\n      | 'msg'\n  ) {\n    if (str === 'like') {\n      return 'thumb_up';\n    } else if (str === 'credit') {\n      return 'payment';\n    } else if (str === 'schedule') {\n      return 'event';\n    } else if (str === 'ofert') {\n      return 'monetization_on';\n    } else if (str === 'property') {\n      return 'domain';\n    } else if (str === 'build') {\n      return 'build';\n    } else if (str === 'buyer') {\n      return 'account_circle';\n    } else if (str === 'goal') {\n      return 'insert_chart';\n    } else if (str === 'celebrate') {\n      return 'check_circle_outline';\n    } else if (str === 'msg') {\n      return 'chat';\n    }\n  }\n  onSectionChange(sectionId: string) {\n    console.log('sectionId', sectionId);\n    this.currentSection = sectionId;\n  }\n\n  scrollTo(section) {\n    document.querySelector('#' + section).scrollIntoView();\n  }\n  onScroll(e) {\n    // console.log(e);\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Oferta\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Oferta'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n    <ion-grid fixed>\\n      <h1>Oferta</h1>\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <mat-card-title>Complete los campos</mat-card-title>\\n            <div class=\\\"flex-container\\\">\\n              <!-- buyer -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Consumidor</mat-label>\\n                <mat-select [disabled]=\\\"!isNew\\\" (selectionChange)=\\\"getProp(bu.value)\\\" [(ngModel)]=\\\"ofert.buyer\\\" #bu=\\\"ngModel\\\"\\n                  id=\\\"bu\\\" name=\\\"bu\\\" required>\\n                  <mat-option *ngFor=\\\"let buyer of buyers\\\" [value]=\\\"buyer._id\\\">\\n                    {{buyer.name}} {{buyer.fatherLastName}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"bu.dirty || bu.touched\\\">Selecciona</mat-error>\\n              </mat-form-field>\\n              <div>\\n                <button [disabled]=\\\"!isNew\\\" style=\\\"margin-bottom: 2%;\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"searchBuyers()\\\">\\n                  <ion-spinner *ngIf=\\\"isSpinner\\\" style=\\\"color: white\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                  <ion-icon name=\\\"search\\\"></ion-icon>\\n                  Buscar Clientes\\n                </button>\\n              </div>\\n              <!-- prop -->\\n              <mat-form-field *ngIf=\\\"bu.value && !isEmpty\\\" appearance=\\\"outline\\\">\\n                <mat-label>Propiedad de Interés</mat-label>\\n                <mat-select [disabled]=\\\"!isNew\\\" [(ngModel)]=\\\"ofert.property\\\" #p=\\\"ngModel\\\" id=\\\"p\\\" name=\\\"p\\\" required>\\n                  <mat-option *ngFor=\\\"let prop of properties\\\" [value]=\\\"prop._id\\\">\\n                    {{prop.name}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"p.dirty || p.touched\\\">Selecciona</mat-error>\\n              </mat-form-field>\\n              <ion-button *ngIf=\\\"isEmpty\\\" color=\\\"danger\\\" fill=\\\"outline\\\" shape=\\\"round\\\">Usuarion sin propiedades\\n                interesadas</ion-button>\\n              <!-- files -->\\n              <ion-label text-wrap>Anota los documentos para el crédito separado por comas\\n                (documento1,documento2,etc...)</ion-label>\\n              <mdc-textarea [(ngModel)]=\\\"files\\\" #f=\\\"ngModel\\\" id=\\\"f\\\" name=\\\"f\\\" label=\\\"Ducumentos\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\n              <!-- notas -->\\n              <mdc-textarea [(ngModel)]=\\\"ofert.notes\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Notas\\\" rows=\\\"8\\\" cols=\\\"40\\\"\\n                required></mdc-textarea>\\n              <!-- waytobuy -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Forma de Compra</mat-label>\\n                <mat-select [(ngModel)]=\\\"ofert.wayToBuy\\\" #way=\\\"ngModel\\\" id=\\\"way\\\" name=\\\"way\\\" required>\\n                  <mat-option value=\\\"FOVISSTE\\\">FOVISSTE </mat-option>\\n                  <mat-option value=\\\"IMSS\\\">IMSS </mat-option>\\n                  <mat-option value=\\\"contado\\\">contado </mat-option>\\n                  <mat-option value=\\\"PEMEX\\\">PEMEX </mat-option>\\n                  <mat-option value=\\\"Infonavit\\\">Infonavit </mat-option>\\n                  <mat-option value=\\\"otros\\\">otros </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"bu.dirty || bu.touched\\\">Selecciona</mat-error>\\n              </mat-form-field>\\n              <!-- precios-->\\n              <div class=\\\"cost\\\">\\n                <mat-form-field appearance=\\\"outline\\\">\\n                  <mat-label>Precio Apartado</mat-label>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"ofert.apartOfert\\\" #apartOfert=\\\"ngModel\\\" id=\\\"apartOfert\\\"\\n                    name=\\\"apartOfert\\\">\\n                  <mat-error *ngIf=\\\"apartOfert.dirty || apartOfert.touched\\\">Anotar</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"outline\\\">\\n                  <mat-label>Precio Real </mat-label>\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"ofert.ofertPrice\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"\\n                    required>\\n                  <mat-error *ngIf=\\\"space.dirty || space.touched\\\">Anotar Costo</mat-error>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin-right: 2%\\\">\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                  <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newOfert()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid || isEmpty\\\">Crear</button>\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\n                    (click)=\\\"editOfert()\\\">Editar</button>\\n                </span>\\n              </div>\\n\\n\\n\\n            </mat-card-actions>\\n\\n          </mat-card>\\n        </form>\\n\\n      </div>\\n    </ion-grid>\\n\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.cost {\\n  display: flex;\\n  justify-content: space-around;\\n  width: 50% !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IOfert } from '../../../models/ofert.model';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { CreditService } from '../../../services/credit.service';\nimport { NavController } from '@ionic/angular';\nimport { PropertyService } from '../../../services/property.service';\nimport { StatusBuyerPropertyService } from '../../../services/status-buyer-property.service';\nimport { ICredit } from '../../../models/credit.model';\nimport { OfertService } from '../../../services/ofert.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { IProperty } from '../../../models/property.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SearchSelectComponent,\n  SearchDialog\n} from '../../general/search-select/search-select.component';\n\n@Component({\n  selector: 'app-new-edit-ofert',\n  templateUrl: './new-edit-ofert.component.html',\n  styleUrls: ['./new-edit-ofert.component.scss']\n})\nexport class NewEditOfertComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  ofert: IOfert = {};\n  files: string;\n  isLoad: boolean;\n  buyer = '';\n  property = '';\n  properties: IProperty[];\n  buyers;\n  isEmpty: boolean;\n  OfertsBuyer: string[];\n  ofertForNot;\n  isSpinner: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private ofertService: OfertService,\n    private navCtr: NavController,\n    private propertyService: PropertyService,\n    private buyerService: BuyerService,\n    private statusBuyerPropertyService: StatusBuyerPropertyService,\n    private oneSignalService: OnesignalService,\n    private userSession: UserSessionService,\n    public dialog: MatDialog\n  ) {\n    this.isLoad = false;\n    buyerService.getBuyerAll().subscribe(buyers => {\n      this.buyers = buyers;\n    });\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.ofertService.getOfertById(params['id']).subscribe(ofert => {\n          console.log(ofert);\n          this.ofert = <any>ofert;\n          this.buyer = ofert.buyer._id;\n          this.property = ofert.property._id;\n          this.files = '';\n          this.ofert.files.forEach((f, i) => {\n            if (this.ofert.files.length === i + 1) {\n              this.files += f;\n            } else {\n              this.files += f + ',';\n            }\n          });\n          this.ofert.buyer = <any>this.buyer;\n          this.ofert.property = <any>this.property;\n          this.getProp(this.buyer);\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n  async getPropName(id) {\n    return await this.propertyService.getPropertyById(id).toPromise();\n  }\n  async editOfert() {\n    this.update('amarillo', this.ofert.buyer, this.ofert.property);\n    this.ofert.status = 'amarillo';\n    this.ofert.files = this.files.split(',');\n    const prop = await this.getPropName(this.ofert.property);\n    this.notification(\n      'Actualización de Oferta',\n      `Se ha actualizado la oferta para ${prop.name}`,\n      'amarillo',\n      'ofert',\n      <any>this.ofert.buyer\n    );\n    this.ofertService.putOfert(this.ofert).subscribe(s => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Oferta Editada' }\n      };\n      // this.router.navigate(['list-credit-admin'], toast);\n      // this.navCtr.navigateRoot('list-ofert-admin', true, toast);\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-ofert-admin'], toast));\n    });\n  }\n  async newOfert() {\n    this.ofert.files = this.files.split(',');\n    this.ofert.status = 'amarillo';\n    const prop = await this.getPropName(this.ofert.property);\n    this.notification(\n      'Nueva Oferta',\n      `Se ha creado oferta para ${prop.name}`,\n      'amarillo',\n      'ofert',\n      <any>this.ofert.buyer\n    );\n    this.ofertService.newOfert(this.ofert).subscribe(o => {\n      this.update('amarillo', this.ofert.buyer, this.ofert.property);\n      this.OfertsBuyer.push(o._id);\n      const buyer: any = {\n        _id: this.ofert.buyer,\n        ofert: this.OfertsBuyer\n      };\n      this.buyerService.putBuyer(buyer).subscribe(() => {\n        // this.navCtr.navigateRoot('list-ofert-admin', true);\n        const toast: NavigationExtras = {\n          queryParams: { res: 'Oferta Creada' }\n        };\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-ofert-admin'], toast));\n      });\n    });\n  }\n  private update(status: string, buyer, prop) {\n    this.statusBuyerPropertyService\n      .searchSpecial(buyer, prop)\n      .subscribe(sbp => {\n        console.log(sbp);\n        this.statusBuyerPropertyService\n          .upgradeStatus(sbp._id, status)\n          .subscribe(c => console.log(c));\n      });\n  }\n  getProp(item) {\n    this.buyerService.getBuyerById(item).subscribe(buyer => {\n      this.OfertsBuyer = buyer.ofert.map(o => o._id);\n      if (buyer.statusBuyerProperty && buyer.statusBuyerProperty.length > 0) {\n        this.properties = buyer.statusBuyerProperty.map(sbp => sbp.property);\n        this.isEmpty = false;\n      } else {\n        this.isEmpty = true;\n      }\n    });\n  }\n  // noti\n  public notification(title, message, status, type, receiversId: string) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      receiversId: [receiversId],\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, undefined, [receiversId])\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  // dialog\n  public async searchBuyers() {\n    this.isSpinner = true;\n    const buyers = await this.buyerService.getBuyerAll().toPromise();\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n          minWidth: '20%', */\n      data: <SearchDialog>{\n        header:\n          'Buscar clientes para asignar un asesor, seleccione uno o varios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: false,\n        filtersDetail: true,\n        itemsIdDisable:\n          this.ofert.buyer === undefined ? undefined : [this.ofert.buyer._id],\n        rows: buyers,\n        typeFilter: 'filter-buyer',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal'\n          },\n          {\n            name: 'Apellido',\n            prop: 'fatherLastName',\n            type: 'normal'\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date'\n          },\n          {\n            name: 'Estado',\n            prop: 'statusBuyerProperty',\n            type: 'statusBuyerProperty'\n          }\n        ]\n      }\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      console.log(res);\n      if (res.options) {\n        this.ofert.buyer = res.arrSelect[0]._id;\n        this.buyer = res.arrSelect[0]._id;\n        this.getProp(this.buyer);\n      }\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Oficinista\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Oficinista'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ng-container *ngIf=\\\"isLoad; then thenTemplate; else elseTemplate\\\"></ng-container>\\n  <ng-template #thenTemplate>\\n    <ion-grid fixed>\\n      <h1>Oficinista</h1>\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <mat-card-title>Complete los campos</mat-card-title>\\n            <div class=\\\"flex-container\\\">\\n              <!-- name -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Nombre</mat-label>\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"office.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n                <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\n              </mat-form-field>\\n              <!-- Apellido -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Apellido</mat-label>\\n                <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"office.lastname\\\" #lastname=\\\"ngModel\\\" id=\\\"lastname\\\" name=\\\"lastname\\\"\\n                  required>\\n                <mat-error *ngIf=\\\"lastname.dirty || lastname.touched\\\">Anotar Apellido</mat-error>\\n              </mat-form-field>\\n              <!-- Teléfono -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Teléfono</mat-label>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"office.phone\\\" #phone=\\\"ngModel\\\" id=\\\"phone\\\"\\n                  name=\\\"phone\\\" required>\\n                <mat-error *ngIf=\\\"phone.dirty || phone.touched\\\">Anotar Telefono</mat-error>\\n              </mat-form-field>\\n              <!-- Correo-->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Correo</mat-label>\\n                <input matInput [(ngModel)]=\\\"office.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\n              </mat-form-field>\\n              <!-- pass -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Contraseña</mat-label>\\n                <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"office.password\\\" #password=\\\"ngModel\\\"\\n                  id=\\\"password\\\" name=\\\"password\\\" required>\\n                <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n              </mat-form-field>\\n\\n            </div>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin-right: 2%\\\">\\n                <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                  <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newOfert()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                  <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\n                    (click)=\\\"editOfert()\\\">Editar</button>\\n                </span>\\n              </div>\\n\\n\\n\\n            </mat-card-actions>\\n\\n          </mat-card>\\n        </form>\\n\\n      </div>\\n    </ion-grid>\\n\\n  </ng-template>\\n  <ng-template #elseTemplate>\\n    <app-general-skeleton></app-general-skeleton>\\n  </ng-template>\\n\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IOffice } from '../../../models/office.model';\nimport { OfficeService } from '../../../services/office.service';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\n\n@Component({\n  selector: 'app-new-edit-office',\n  templateUrl: './new-edit-office.component.html',\n  styleUrls: ['./new-edit-office.component.scss']\n})\nexport class NewEditOfficeComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  office: IOffice = {};\n  files: string;\n  isLoad: boolean;\n  user: IUserSession;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private officeService: OfficeService,\n    private userSession: UserSessionService\n  ) {\n    this.user = userSession.userSession.value;\n    this.isLoad = false;\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.officeService.getOfficeById(params['id']).subscribe(office => {\n          this.office = office;\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else if (this.user && this.user.type === 'office') {\n        this.officeService.getOfficeById(this.user.id).subscribe(office => {\n          if (office === null) {\n            const q: NavigationExtras = {\n              queryParams: { id: params['id'] }\n            };\n            this.router.navigate(['new-edit-manager'], q);\n          } else {\n            this.office = office;\n            this.isLoad = true;\n          }\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n  editOfert() {\n    this.officeService.putOffice(this.office).subscribe(office => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Oficinista Editado' }\n      };\n      // this.router.navigate(['list-credit-admin'], toast);\n      // this.navCtr.navigateRoot('list-ofert-admin', true, toast);\n      /**\n       * Es para recargar el componente previo\n       */\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-office-admin'], toast));\n    });\n  }\n  newOfert() {\n    this.officeService.newOffice(this.office).subscribe(o => {\n      // this.navCtr.navigateRoot('list-ofert-admin', true);\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Oficinista Creado' }\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-office-admin'], toast));\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Obra\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'back'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Obra'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <h1 *ngIf=\\\"isNew\\\">Nueva Preventa</h1>\\n    <h1 *ngIf=\\\"!isNew\\\">Editar Preventa</h1>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n            <!-- makers -->\\n            <div>\\n              <mat-form-field style=\\\"width: 100%\\\" appearance=\\\"outline\\\">\\n                <mat-label>Precompradores</mat-label>\\n                <mat-select\\n                  [(value)]=\\\"pre\\\"\\n                  [(ngModel)]=\\\"pre\\\"\\n                  #property=\\\"ngModel\\\"\\n                  id=\\\"property\\\"\\n                  name=\\\"property\\\"\\n                  multiple\\n                >\\n                  <mat-option\\n                    *ngFor=\\\"let prop of preBuyerForSelect\\\"\\n                    [value]=\\\"prop._id\\\"\\n                  >\\n                    {{ prop.name }}\\n                    <small *ngIf=\\\"prop.preBuild\\\"\\n                      >tiene: {{ prop.preBuild.length }} preventas\\n                    </small>\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"property.dirty || property.touched\\\"\\n                  >Selcciona</mat-error\\n                >\\n              </mat-form-field>\\n              <!--\\n                <div>\\n                  <button\\n                    mat-raised-button\\n                    color=\\\"primary\\\"\\n                    (click)=\\\"searchBuyers()\\\"\\n                  >\\n                    <ion-spinner\\n                      *ngIf=\\\"isSpinner\\\"\\n                      style=\\\"color: white\\\"\\n                      name=\\\"bubbles\\\"\\n                    ></ion-spinner>\\n                    Buscar Precompradores\\n                  </button>\\n                </div>\\n              -->\\n            </div>\\n\\n            <!-- name -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Nombre</mat-label>\\n              <input\\n                matInput\\n                placeholder=\\\"\\\"\\n                [(ngModel)]=\\\"preBuild.name\\\"\\n                #name=\\\"ngModel\\\"\\n                id=\\\"name\\\"\\n                name=\\\"name\\\"\\n                required\\n              />\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\"\\n                >Anotar Nombre</mat-error\\n              >\\n            </mat-form-field>\\n            <!-- city -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Ciudad</mat-label>\\n              <mat-select\\n                [(ngModel)]=\\\"preBuild.city\\\"\\n                #city=\\\"ngModel\\\"\\n                id=\\\"city\\\"\\n                name=\\\"city\\\"\\n                required\\n              >\\n                <mat-option value=\\\"puebla\\\"> Puebla </mat-option>\\n                <mat-option value=\\\"mexico\\\"> México </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\"\\n                >Anotar Ciudad</mat-error\\n              >\\n            </mat-form-field>\\n            <!-- notas -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Notas</mat-label>\\n              <textarea\\n                matInput\\n                [(ngModel)]=\\\"preBuild.notes\\\"\\n                #notes=\\\"ngModel\\\"\\n                id=\\\"notes\\\"\\n                name=\\\"notes\\\"\\n              ></textarea>\\n            </mat-form-field>\\n          </div>\\n          <!-- faeses List -->\\n          <app-form-str-list\\n            [forms]=\\\"forms\\\"\\n            nameTitle=\\\"Fases de la Preventa\\\"\\n            nameItems=\\\"Fase\\\"\\n            nameItems2=\\\"Notas\\\"\\n            (arrOutput)=\\\"getPhases($event)\\\"\\n            [arrStr]=\\\"arrStr\\\"\\n            [arrStr2]=\\\"arrStr2\\\"\\n            [arrDate]=\\\"arrDate\\\"\\n            [arrDate2]=\\\"arrDate2\\\"\\n            [numOfItems]=\\\"isNew ? 2 : arrStr.length\\\"\\n            [isDesktop]=\\\"isDesktop\\\"\\n          ></app-form-str-list>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span\\n                [matTooltip]=\\\"errorToShow\\\"\\n                [matTooltipClass]=\\\"'tooltip-size'\\\"\\n                (mouseenter)=\\\"getPopMessage($event)\\\"\\n              >\\n                <button\\n                  *ngIf=\\\"isNew\\\"\\n                  id=\\\"submitUser\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  (click)=\\\"newCustomer()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid || !isPhasesValid\\\"\\n                >\\n                  Crear\\n                </button>\\n                <button\\n                  *ngIf=\\\"!isNew\\\"\\n                  id=\\\"submitUser\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid\\\"\\n                  (click)=\\\"editCustomer()\\\"\\n                >\\n                  Editar\\n                </button>\\n              </span>\\n            </div>\\n          </mat-card-actions>\\n        </mat-card>\\n      </form>\\n    </div>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \".flex-container {\\n  /* display: flex;\\n    flex-direction: column;\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IPreBuild } from '../../../models/preBuild';\nimport { IPreBuyer } from '../../../models/preBuyer';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { Platform } from '@ionic/angular';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { MatDialog } from '@angular/material';\nimport { FormStr } from '../../general/form-str-list/form-str-list.component';\nimport { map } from 'rxjs/operators';\nimport {\n  SearchSelectComponent,\n  SearchDialog\n} from '../../general/search-select/search-select.component';\nimport { INotification } from '../../../models/notification.model';\nimport { FormatDatesFront } from '../../../_config/_helpers';\nimport { PreBuyerService } from '../../../services/pre-buyer.service';\nimport { PreBuildService } from '../../../services/pre-build.service';\n\n@Component({\n  selector: 'app-new-edit-pre-build',\n  templateUrl: './new-edit-pre-build.component.html',\n  styleUrls: ['./new-edit-pre-build.component.scss']\n})\nexport class NewEditPreBuildComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  preBuild: IPreBuild = {};\n  preBuyer: IPreBuyer[];\n  forms = {\n    arrStr: true,\n    arrStr2: true,\n    arrDate: true,\n    arrDate2: true\n  };\n  arrStr = [];\n  arrStr2 = [];\n  arrDate = [];\n  arrDate2 = [];\n  isDesktop: any;\n  isPhasesValid = false;\n  isSpinner: boolean;\n  pre: string[];\n  preBuyerForSelect: IPreBuyer[];\n  oldPreBuyers: IPreBuyer[];\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private platform: Platform,\n    private userSessionService: UserSessionService,\n    private oneSignalService: OnesignalService,\n    public dialog: MatDialog,\n    private preBuyerService: PreBuyerService,\n    private preBuildService: PreBuildService\n  ) {\n    this.isDesktop = platform.is('desktop');\n  }\n\n  ngOnInit() {\n    this.getPreBuyers();\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.preBuildService.getBuildById(params['id']).subscribe(build => {\n          this.pre = build.preBuyer.map(m => m._id);\n          this.preBuild = build;\n          this.oldPreBuyers = build.preBuyer;\n          console.log(build);\n          // generar arr inputs\n          // arrStr\n          this.arrStr = build.timeLine.map(tl => tl.namePhase);\n          this.arrStr2 = build.timeLine.map(tl => tl.notes);\n          this.arrDate = build.timeLine.map(\n            tl => new Date(tl.yearToStart, tl.monthToStart, tl.dayToStart)\n          );\n          this.arrDate2 = build.timeLine.map(\n            tl => new Date(tl.yearToEnd, tl.monthToEnd, tl.dayToEnd)\n          );\n        });\n        this.isNew = false;\n      } else {\n        this.preBuild.timeLine = [{}];\n        this.isNew = true;\n      }\n    });\n  }\n  getPreBuyers() {\n    this.preBuyerService.getAll().subscribe(m => {\n      console.log(m);\n      this.preBuyerForSelect = m;\n    });\n  }\n  getPhases(phases: FormStr) {\n    this.isPhasesValid = phases.isValid;\n    phases.arrStr.forEach((str, i) => {\n      const phaseObj = {\n        namePhase: str,\n        notes: phases.arrStr2[i],\n        dayToStart: phases.arrDate[i] ? phases.arrDate[i].getDate() : undefined,\n        monthToStart: phases.arrDate[i]\n          ? phases.arrDate[i].getMonth()\n          : undefined,\n        yearToStart: phases.arrDate[i]\n          ? phases.arrDate[i].getFullYear()\n          : undefined,\n        dayToEnd: phases.arrDate2[i] ? phases.arrDate2[i].getDate() : undefined,\n        monthToEnd: phases.arrDate2[i]\n          ? phases.arrDate2[i].getMonth()\n          : undefined,\n        yearToEnd: phases.arrDate2[i]\n          ? phases.arrDate2[i].getFullYear()\n          : undefined\n      };\n      if (\n        this.preBuild &&\n        this.preBuild.timeLine &&\n        this.preBuild.timeLine[i]\n      ) {\n        this.preBuild.timeLine[i] = phaseObj;\n      } else {\n        this.preBuild.timeLine.push(phaseObj);\n      }\n    });\n  }\n  newCustomer() {\n    this.preBuild.preBuyer = <any>this.pre;\n    this.preBuildService.newBuild(this.preBuild).subscribe(b => {\n      if (b.preBuyer.length > 0) {\n        this.notification(\n          'Nueva Preventa',\n          `Se le ha asignado: ${this.preBuild.name}`,\n          'verde',\n          'build',\n          undefined,\n          <any>b.preBuyer.map(pb => pb._id)\n        );\n        if (b.preBuyer.length > 0) {\n          b.preBuyer.forEach(async buyer => {\n            this.addPrebuildToByer(await this.getPreBuyerId(buyer), b._id);\n          });\n        }\n      }\n\n      /* b.timeLine.forEach(tm => {\n        this.notificationBySchedule(tm, b.name, b);\n      }); */\n\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Nuevo Obra Agregada' }\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-prebuild-admin'], toast));\n    });\n  }\n  editCustomer() {\n    // this.preBuild.notificationOneSignal = this.deleteOneSignal(this.preBuild);\n    this.oldPreBuyers\n      .filter(op => !this.pre.some(id => id === op._id))\n      .forEach(buyer => this.deleteBuyers(buyer));\n    this.pre\n      .filter(id => !this.oldPreBuyers.some(ob => ob._id === id))\n      .forEach(async id => {\n        this.addPrebuildToByer(await this.getPreBuyerId(id), this.preBuild._id);\n      });\n\n    this.preBuild.preBuyer = <any>this.pre;\n    this.preBuildService.putBuild(this.preBuild).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Obra Editada' }\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-prebuild-admin'], toast));\n    });\n  }\n  addPrebuildToByer(buyer: IPreBuyer, prebuildid: string) {\n    console.log(buyer);\n    const index = buyer.preBuild.findIndex(pb => pb._id === prebuildid);\n    if (index === -1) {\n      buyer.preBuild.push(<any>prebuildid);\n      this.preBuyerService.putBuyer(buyer).subscribe();\n    }\n  }\n  async getPreBuyerId(id) {\n    return await this.preBuyerService.getBuyerById(id).toPromise();\n  }\n  private deleteBuyers(buyer: IPreBuyer) {\n    const index = buyer.preBuild.findIndex(p => p._id === this.preBuild._id);\n    if (index !== -1) {\n      buyer.preBuild.splice(index, 1);\n      this.preBuyerService.putBuyer(buyer).subscribe();\n    }\n  }\n  // dialog\n  public async searchBuyers() {\n    this.isSpinner = true;\n    const makers: IPreBuyer[] = await this.preBuyerService\n      .getAll()\n      /*  .pipe(\n        map(arr =>\n          arr.map((maker: any) => {\n            if (maker.build) {\n              maker.buildName = <any>maker.build.name;\n            } else {\n              maker.buildName = <any>'';\n            }\n            return maker;\n          })\n        )\n      ) */\n      .toPromise();\n    console.log(makers);\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      data: <SearchDialog>{\n        header: 'Buscar Usuarios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: true,\n        filtersDetail: false,\n        rows: makers,\n        selectedItems: makers.map(b => b._id),\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal'\n          },\n          {\n            name: 'Apellido',\n            prop: 'lastName',\n            type: 'normal'\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date'\n          },\n          {\n            name: 'Obra',\n            prop: 'buildName',\n            type: 'normal'\n          }\n        ]\n      }\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      console.log(res);\n      if (res.options) {\n        this.pre = res.arrSelect.map(r => r._id);\n      }\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  /*   private notificationBySchedule(timeLine, buildName, build: IPreBuild) {\n    const date = this.getDate(\n      timeLine.dayToEnd,\n      timeLine.monthToEnd,\n      timeLine.yearToEnd\n    );\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de Fase',\n        `La fase \"${\n          timeLine.namePhase\n        }\" de la obra ${buildName} llegó a la fecha límite: ${date}`,\n        new Date(\n          timeLine.yearToEnd,\n          timeLine.monthToEnd,\n          timeLine.dayToEnd,\n          10,\n          40\n        ),\n        ['office', 'administrator'],\n        build.maker === undefined ? undefined : build.maker.map(m => m._id)\n      )\n      .subscribe(data => {\n        if (!build.notificationOneSignal) {\n          build.notificationOneSignal = [];\n        }\n        build.notificationOneSignal.push(data.id);\n        this.buildService.putBuild(build).subscribe();\n      });\n  } */\n  private deleteOneSignal(build: IPreBuild) {\n    /* const schedule = await this.scheduleService\n      .getScheduleById(scheduleId)\n      .toPromise(); */\n    if (build.notificationOneSignal && build.notificationOneSignal.length > 0) {\n      build.notificationOneSignal.forEach((idN, i) => {\n        this.oneSignalService.deleteOneSignalSchedule(idN).subscribe();\n      });\n      return (build.notificationOneSignal = []);\n    }\n  }\n  getDate(day, month, year) {\n    return FormatDatesFront(new Date(year, month, day));\n  }\n}\n","module.exports = \"<!--\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Propietario\\n      </ion-title>\\n\\n    </ion-toolbar>\\n  </ion-header>\\n-->\\n<ion-header>\\n  <app-menu-general\\n    [isMenuButton]=\\\"'back'\\\"\\n    [colorMenuButton]=\\\"'white'\\\"\\n    [titleMenu]=\\\"'Usuario'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"\\n  ></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ng-container\\n      *ngIf=\\\"isLoad; then: thenTemplate; else: elseTemplate\\\"\\n    ></ng-container>\\n    <ng-template #thenTemplate>\\n      <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n        <form #newUserForm=\\\"ngForm\\\">\\n          <mat-card>\\n            <mat-card-title>Complete los campos</mat-card-title>\\n            <div class=\\\"flex-container\\\">\\n              <!-- name -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Nombre</mat-label>\\n                <input\\n                  matInput\\n                  placeholder=\\\"\\\"\\n                  [(ngModel)]=\\\"preBuyer.name\\\"\\n                  #name=\\\"ngModel\\\"\\n                  id=\\\"name\\\"\\n                  name=\\\"name\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"name.dirty || name.touched\\\"\\n                  >Anotar Nombre</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- lastname -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Apellido</mat-label>\\n                <input\\n                  matInput\\n                  [(ngModel)]=\\\"preBuyer.lastName\\\"\\n                  #lastName=\\\"ngModel\\\"\\n                  id=\\\"lastName\\\"\\n                  name=\\\"lastName\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\"\\n                  >Anotar Apellido</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- email -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Correo</mat-label>\\n                <input\\n                  matInput\\n                  [(ngModel)]=\\\"preBuyer.email\\\"\\n                  #email=\\\"ngModel\\\"\\n                  id=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"email.dirty || email.touched\\\"\\n                  >Anotar Correo</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- phone -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Teléfono</mat-label>\\n                <input\\n                  matInput\\n                  [(ngModel)]=\\\"preBuyer.phone\\\"\\n                  #phone=\\\"ngModel\\\"\\n                  id=\\\"phone\\\"\\n                  name=\\\"phone\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"phone.dirty || phone.touched\\\"\\n                  >Anotar Teléfono</mat-error\\n                >\\n              </mat-form-field>\\n              <!-- pass -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Contraseña</mat-label>\\n                <input\\n                  matInput\\n                  [type]=\\\"hide ? 'password' : 'text'\\\"\\n                  [(ngModel)]=\\\"preBuyer.password\\\"\\n                  #password=\\\"ngModel\\\"\\n                  id=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  required\\n                />\\n                <mat-error *ngIf=\\\"password.dirty || password.touched\\\"\\n                  >Anotar Contraseña</mat-error\\n                >\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{\\n                  hide ? 'visibility' : 'visibility_off'\\n                }}</mat-icon>\\n              </mat-form-field>\\n\\n              <!-- prop -->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Preventa</mat-label>\\n                <mat-select\\n                  [(value)]=\\\"pre\\\"\\n                  (selectionChange)=\\\"flag = true\\\"\\n                  [(ngModel)]=\\\"pre\\\"\\n                  #property=\\\"ngModel\\\"\\n                  id=\\\"property\\\"\\n                  name=\\\"property\\\"\\n                  multiple\\n                >\\n                  <mat-option *ngFor=\\\"let prop of buildings\\\" [value]=\\\"prop._id\\\">\\n                    {{ prop.name }}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"property.dirty || property.touched\\\"\\n                  >Anotar Preventa</mat-error\\n                >\\n              </mat-form-field>\\n            </div>\\n            <mat-card-actions align=\\\"end\\\">\\n              <div style=\\\"margin-right: 2%\\\">\\n                <span\\n                  [matTooltip]=\\\"errorToShow\\\"\\n                  [matTooltipClass]=\\\"'tooltip-size'\\\"\\n                  (mouseenter)=\\\"getPopMessage($event)\\\"\\n                >\\n                  <button\\n                    *ngIf=\\\"isNew\\\"\\n                    id=\\\"submitUser\\\"\\n                    mat-raised-button\\n                    color=\\\"primary\\\"\\n                    (click)=\\\"newCustomer()\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\"\\n                  >\\n                    Crear\\n                  </button>\\n                  <button\\n                    *ngIf=\\\"!isNew\\\"\\n                    id=\\\"submitUser\\\"\\n                    mat-raised-button\\n                    color=\\\"primary\\\"\\n                    [disabled]=\\\"!newUserForm.form.valid\\\"\\n                    (click)=\\\"editCustomer()\\\"\\n                  >\\n                    Editar\\n                  </button>\\n                </span>\\n              </div>\\n            </mat-card-actions>\\n          </mat-card>\\n        </form>\\n      </div>\\n    </ng-template>\\n    <ng-template #elseTemplate>\\n      <app-general-skeleton></app-general-skeleton>\\n    </ng-template>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IPreBuyer } from '../../models/preBuyer';\nimport { IPreBuild } from '../../models/preBuild';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { UserSessionService } from '../../services/user-session.service';\nimport { OnesignalService } from '../../services/onesignal.service';\nimport { INotification } from '../../models/notification.model';\nimport { PreBuyerService } from '../../services/pre-buyer.service';\nimport { PreBuildService } from '../../services/pre-build.service';\n\n@Component({\n  selector: 'app-pre-buyer',\n  templateUrl: './pre-buyer.component.html',\n  styleUrls: ['./pre-buyer.component.scss']\n})\nexport class PreBuyerComponent implements OnInit {\n  isLoad = false;\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  preBuyer: IPreBuyer = {};\n  buildings: IPreBuild[];\n  oldBuild: IPreBuild[] = [];\n  flag = false;\n  pre: string[] = [];\n  a;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userSessionService: UserSessionService,\n    private oneSignalService: OnesignalService,\n    private prebuyerService: PreBuyerService,\n    private prebuildrService: PreBuildService\n  ) {}\n\n  ngOnInit() {\n    this.isLoad = false;\n    this.getBuild();\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.prebuyerService.getBuyerById(params['id']).subscribe(b => {\n          this.preBuyer = b;\n          this.oldBuild = b.preBuild;\n          this.pre = b.preBuild.map(p => p._id);\n          console.log(this.pre);\n          if (b.preBuild) {\n          } else {\n          }\n          console.log(b);\n          this.isLoad = true;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n        this.isLoad = true;\n      }\n    });\n  }\n  getBuild() {\n    this.prebuildrService.getAll().subscribe(b => {\n      console.log(b);\n      this.buildings = b;\n    });\n  }\n  newCustomer() {\n    this.preBuyer.preBuild = <any>this.pre;\n    this.prebuyerService.newBuyer(this.preBuyer).subscribe(b => {\n      if (b.preBuild.length > 0) {\n        b.preBuild.forEach(build => {\n          this.prebuildrService.getBuildById(<any>build).subscribe(prebuild => {\n            const findIndex = prebuild.preBuyer.findIndex(\n              m => m._id === this.preBuyer._id\n            );\n            if (findIndex === -1) {\n              prebuild.preBuyer.push(b);\n              this.prebuildrService.putBuild(prebuild).subscribe(() => {\n                this.notification(\n                  'Nueva Preventa',\n                  `Se le ha asignado: ${prebuild.name}`,\n                  'verde',\n                  'build',\n                  undefined,\n                  [this.preBuyer._id]\n                );\n              });\n            }\n          });\n        });\n        const toast: NavigationExtras = {\n          queryParams: { res: 'Nuevo Usuario Agregado' }\n        };\n\n        this.router\n          .navigateByUrl('/RefrshComponent', {\n            skipLocationChange: true\n          })\n          .then(() => this.router.navigate(['list-prebuyer-admin'], toast));\n      } else {\n        const toast: NavigationExtras = {\n          queryParams: { res: 'Nuevo Usuario Agregado' }\n        };\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-prebuyer-admin'], toast));\n      }\n    });\n  }\n  editCustomer() {\n    if (this.flag) {\n      // borrar\n      this.oldBuild\n        .filter(ob => !this.pre.some(id => id === ob._id))\n        .forEach(build => this.deleteBuilds(build));\n      // agregar\n      this.pre\n        .filter(id => !this.oldBuild.some(ob => ob._id === id))\n        .forEach(async id => {\n          console.log(id);\n          // buscar ids\n          this.addBuilds(await this.getPreBuildById(id));\n          this.notification(\n            'Nueva Usuario',\n            `Se le ha asignado nueva obra`,\n            'verde',\n            'build',\n            undefined,\n            [this.preBuyer._id]\n          );\n        });\n    }\n    this.putMaker();\n  }\n  private putMaker() {\n    this.preBuyer.preBuild = <any>this.pre;\n    this.prebuyerService.putBuyer(this.preBuyer).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Usuario Editado' }\n      };\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-prebuyer-admin'], toast));\n    });\n  }\n  private deleteBuilds(build: IPreBuild) {\n    const index = build.preBuyer.findIndex(p => p === this.preBuyer._id);\n    if (index !== -1) {\n      build.preBuyer.splice(index, 1);\n      this.prebuildrService.putBuild(build).subscribe();\n    }\n  }\n  private async getPreBuildById(id: string) {\n    return await this.prebuildrService.getBuildById(id).toPromise();\n  }\n  private addBuilds(build: IPreBuild) {\n    console.log(build);\n\n    const index = build.preBuyer.findIndex(p => p._id === this.preBuyer._id);\n    if (index === -1) {\n      build.preBuyer.push(this.preBuyer);\n    }\n    this.prebuildrService.putBuild(build).subscribe();\n  }\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[]\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSessionService.userSession.value.id,\n      status: status,\n      type: type\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propiedad\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"isNew ? 'Nueva Propiedad': 'Editar Propiedad'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n            <!-- name -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Nombre</mat-label>\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"property.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\n            </mat-form-field>\\n            <!-- isRent  -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Venta o Renta</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.isRent\\\" #isRent=\\\"ngModel\\\" id=\\\"isRent\\\" name=\\\"isRent\\\" required>\\n                <mat-option [value]=true>\\n                  Renta\\n                </mat-option>\\n                <mat-option [value]=false>\\n                  Venta\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"isRent.dirty || isRent.touched\\\">Selecciona una</mat-error>\\n            </mat-form-field>\\n            <!-- typeOfProperty -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Tipo de Vivienda</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.typeOfProperty\\\" #typeOfProperty=\\\"ngModel\\\" id=\\\"typeOfProperty\\\" name=\\\"typeOfProperty\\\"\\n                required>\\n                <mat-option value=\\\"casa\\\">Casa\\n                </mat-option>\\n                <mat-option value=\\\"departamento\\\">Departamento\\n                </mat-option>\\n                <mat-option value=\\\"nave industrial\\\">Nave Industrial\\n                </mat-option>\\n                <mat-option value=\\\"terreno\\\">Terreno\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"typeOfProperty.dirty || typeOfProperty.touched\\\">Anotar Correo</mat-error>\\n            </mat-form-field>\\n            <!-- space-->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Espacio</mat-label>\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"property.space\\\" #space=\\\"ngModel\\\" id=\\\"space\\\" name=\\\"space\\\"\\n                required>\\n              <mat-error *ngIf=\\\"space.dirty || space.touched\\\">Anotar Espacio</mat-error>\\n            </mat-form-field>\\n            <!-- dateToBuy -->\\n            <!-- Fecha a comprar -->\\n            <div>\\n              <ion-label text-wrap>Anota la posible fecha de compra o renta</ion-label>\\n              <!-- day -->\\n              <mdc-text-field label=\\\"Dia\\\" type=\\\"number\\\" [(ngModel)]=\\\"daySelect\\\" #d=\\\"ngModel\\\" id=\\\"d\\\" name=\\\"d\\\" required\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n                <span *ngIf=\\\"d.dirty || d.touched\\\">Anota Dia</span>\\n              </mdc-text-field-helper-text>\\n            </div>\\n\\n            <!-- mm -->\\n            <ion-item lines=\\\"none\\\" class=\\\"margin-field\\\">\\n              <ion-label>Mes</ion-label>\\n              <ion-select [(ngModel)]=\\\"monthSelect\\\" #me=\\\"ngModel\\\" id=\\\"me\\\" name=\\\"me\\\" required placeholder=\\\"Selecciona\\\">\\n                <ion-select-option *ngFor=\\\"let m of months; let i = index\\\" [value]=\\\"i + 1\\\">{{m}}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <!-- aa -->\\n            <div>\\n              <mdc-text-field label=\\\"Año\\\" type=\\\"number\\\" [(ngModel)]=\\\"yearSelect\\\" #y=\\\"ngModel\\\" id=\\\"y\\\" name=\\\"y\\\" required\\n                [box]=\\\"true\\\" [required]=\\\"true\\\" [helperText]=\\\"weightHelper\\\"></mdc-text-field>\\n              <mdc-text-field-helper-text #weightHelper=\\\"mdcHelperText\\\" [validation]=\\\"true\\\">\\n                <span *ngIf=\\\"y.dirty || y.touched\\\">Anota Año</span>\\n              </mdc-text-field-helper-text>\\n            </div>\\n\\n            <!-- zone -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Zona</mat-label>\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"property.zone\\\" #zone=\\\"ngModel\\\" id=\\\"zone\\\" name=\\\"zone\\\" required>\\n              <mat-error *ngIf=\\\"zone.dirty || zone.touched\\\">Anotar Zona</mat-error>\\n            </mat-form-field>\\n            <!-- minPrice -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Precio Minimo</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.minPrice\\\" #minPrice=\\\"ngModel\\\" id=\\\"minPrice\\\"\\n                name=\\\"minPrice\\\" required>\\n              <mat-error *ngIf=\\\"minPrice.dirty || minPrice.touched\\\">Anotar Numero</mat-error>\\n            </mat-form-field>\\n            <!-- max -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Precio Maximo</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.maxPrice\\\" #maxPrice=\\\"ngModel\\\" id=\\\"maxPrice\\\"\\n                name=\\\"maxPrice\\\" required>\\n              <mat-error *ngIf=\\\"maxPrice.dirty || maxPrice.touched\\\">Anotar Numero</mat-error>\\n            </mat-form-field>\\n            <!-- numRooms -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Numero de Cuartos</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numRooms\\\" #numRooms=\\\"ngModel\\\" id=\\\"numRooms\\\"\\n                name=\\\"numRooms\\\" required>\\n              <mat-error *ngIf=\\\"numRooms.dirty || numRooms.touched\\\">Anotar Numero</mat-error>\\n            </mat-form-field>\\n            <!-- numBathrooms -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Numero de Baños</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numBathrooms\\\" #numBathrooms=\\\"ngModel\\\"\\n                id=\\\"numBathrooms\\\" name=\\\"numBathrooms\\\" required>\\n              <mat-error *ngIf=\\\"numBathrooms.dirty || numBathrooms.touched\\\">Anotar Numero</mat-error>\\n            </mat-form-field>\\n            <!-- numCars -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Lugares Estacionamiento</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"property.numCars\\\" #numCars=\\\"ngModel\\\" id=\\\"numCars\\\"\\n                name=\\\"numCars\\\" required>\\n              <mat-error *ngIf=\\\"numCars.dirty || numCars.touched\\\">Anotar Numero</mat-error>\\n            </mat-form-field>\\n            <!-- isOld -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Estado</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.isOld\\\" #isOld=\\\"ngModel\\\" id=\\\"isOld\\\" name=\\\"isOld\\\" required>\\n                <mat-option [value]=false>Nuevo\\n                </mat-option>\\n                <mat-option [value]=true>Usado\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"isOld.dirty || isOld.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field>\\n            <!-- isClose -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Tipo Fraccionamiento</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.isClose\\\" #isClose=\\\"ngModel\\\" id=\\\"isClose\\\" name=\\\"isClose\\\" required>\\n                <mat-option [value]=false>Abierto\\n                </mat-option>\\n                <mat-option [value]=true>Cerrado\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"isClose.dirty || isClose.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field>\\n            <!-- hasGarden -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Con Jardin</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.hasGarden\\\" #hasGarden=\\\"ngModel\\\" id=\\\"hasGarden\\\" name=\\\"hasGarden\\\"\\n                required>\\n                <mat-option [value]=true>Sí\\n                </mat-option>\\n                <mat-option [value]=false>No\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"hasGarden.dirty || hasGarden.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field>\\n            <!-- isLowLevel -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Planta Baja</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.isLowLevel\\\" #isLowLevel=\\\"ngModel\\\" id=\\\"isLowLevel\\\" name=\\\"isLowLevel\\\"\\n                required>\\n                <mat-option [value]=true>Sí\\n                </mat-option>\\n                <mat-option [value]=false>No\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"isLowLevel.dirty || isLowLevel.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field>\\n            <!-- hasElevator -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Con Elevador</mat-label>\\n              <mat-select [(ngModel)]=\\\"property.hasElevator\\\" #hasElevator=\\\"ngModel\\\" id=\\\"hasElevator\\\" name=\\\"hasElevator\\\"\\n                required>\\n                <mat-option [value]=true>Sí\\n                </mat-option>\\n                <mat-option [value]=false>No\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"hasElevator.dirty || hasElevator.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field>\\n            <!-- allServices -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Todos los Servicios </mat-label>\\n              <mat-select [(ngModel)]=\\\"property.allServices\\\" #allServices=\\\"ngModel\\\" id=\\\"allServices\\\" name=\\\"allServices\\\"\\n                required>\\n                <mat-option [value]=true>Sí\\n                </mat-option>\\n                <mat-option [value]=false>No\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"allServices.dirty || allServices.touched\\\">Selecciona uno</mat-error>\\n            </mat-form-field>\\n            <!-- wayToBuy FOVISSTE, IMSS, contado, PEMEX, Infonavit, aliados, otros -->\\n\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Forma de Venta/Renta </mat-label>\\n              <mat-select [(ngModel)]=\\\"property.wayToBuy\\\" #wayToBuy=\\\"ngModel\\\" id=\\\"wayToBuy\\\" name=\\\"wayToBuy\\\" required\\n                placeholder=\\\"Selecciona\\\">\\n                <mat-option value=\\\"FOVISSTE\\\">FOVISSTE</mat-option>\\n                <mat-option value=\\\"IMSS\\\">IMSS</mat-option>\\n                <mat-option value=\\\"contado\\\">contado</mat-option>\\n                <mat-option value=\\\"PEMEX\\\">Pemex</mat-option>\\n                <mat-option value=\\\"infonavit\\\">Infonavit</mat-option>\\n                <mat-option value=\\\"infonavit\\\">Aliados</mat-option>\\n                <mat-option value=\\\"otros\\\">Otros</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <!-- tag -->\\n            <div>\\n              <ion-label text-wrap>Anota palabras clave separadas por comas para una mejor búsqueda (ej: casa,\\n                departamento,\\n                mascotas)</ion-label>\\n              <mdc-textarea [(ngModel)]=\\\"words\\\" #w=\\\"ngModel\\\" id=\\\"w\\\" name=\\\"w\\\" label=\\\"Palabras\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\n            </div>\\n\\n            <!-- files -->\\n            <div>\\n              <ion-label text-wrap>Anota nombre de los archivos separado por comas (ej: documento1,\\n                documento2, documento3, etc...)</ion-label>\\n              <mdc-textarea [(ngModel)]=\\\"files\\\" #f=\\\"ngModel\\\" id=\\\"f\\\" name=\\\"f\\\" label=\\\"Documentos:\\\" rows=\\\"8\\\" cols=\\\"40\\\"></mdc-textarea>\\n            </div>\\n\\n\\n          </div>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editCustomer()\\\">Editar</button>\\n              </span>\\n            </div>\\n\\n\\n          </mat-card-actions>\\n\\n        </mat-card>\\n      </form>\\n\\n    </div>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  /* display: flex;\\n    flex-direction: column;\\n    padding: 5%; */\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 50%;\\n  padding: 1%; }\\n\\n@media (max-width: 900px) {\\n  .flex-container > * {\\n    width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../models/property.model';\nimport { PropertyService } from '../../../services/property.service';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-new-edit-prop',\n  templateUrl: './new-edit-prop.component.html',\n  styleUrls: ['./new-edit-prop.component.scss'],\n})\nexport class NewEditPropComponent implements OnInit {\n  months = [\n    'Enero',\n    'Febrero',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  property: IProperty = {};\n  words: string;\n  files: string;\n  daySelect: any;\n  monthSelect: any;\n  yearSelect: any;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private propertyService: PropertyService,\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.propertyService.getPropertyById(params['id']).subscribe(prop => {\n          console.log(prop);\n          this.property = prop;\n          this.words = '';\n          this.property.tag.forEach((word, i) => {\n            if (this.property.tag.length === i + 1) {\n              this.words += word;\n            } else {\n              this.words += word + ',';\n            }\n          });\n          this.files = '';\n          this.property.files.forEach((f, i) => {\n            if (this.property.files.length === i + 1) {\n              this.files += f;\n            } else {\n              this.files += f + ',';\n            }\n          });\n          const date = this.property.dateToBuy.split('/');\n          this.daySelect = +date[0];\n          this.monthSelect = +date[1];\n          this.yearSelect = +date[2];\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n      }\n    });\n  }\n  newCustomer() {\n    console.log(this.property);\n    console.log(this.words.split(','));\n    console.log(this.files.split(','));\n    if (this.words) {\n      this.property.tag = this.words.split(',');\n    }\n    if (this.files) {\n      this.property.files = this.files.split(',');\n    }\n    this.property.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\n      this.yearSelect\n    }`;\n    console.log(this.property);\n    this.propertyService.newProperty(this.property).subscribe(prop => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Nuevo Propiedad Agregada' },\n      };\n      // this.router.navigate(['list-prop-admin'], toast);\n      /**\n       * Es para recargar el componente previo\n       */\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-prop-admin'], toast));\n    });\n  }\n  editCustomer() {\n    if (this.words) {\n      this.property.tag = this.words.split(',');\n    }\n    if (this.files) {\n      this.property.files = this.files.split(',');\n    }\n    this.property.dateToBuy = `${this.daySelect}/${this.monthSelect}/${\n      this.yearSelect\n    }`;\n    this.propertyService.putProperty(this.property).subscribe(prop => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Propiedad Editada' },\n      };\n      // this.router.navigate(['list-prop-admin'], toast);\n      /**\n       * Es para recargar el componente previo\n       */\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-prop-admin'], toast));\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Evento\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"'Evento'\\\" [buttonNotification]=\\\"'notifications'\\\"\\n    [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <ion-button style=\\\"margin-bottom: 2%\\\" shape=\\\"round\\\" color=\\\"secondary\\\" [routerLink]=\\\"['/personal-schedule']\\\">Crear\\n        Evento Personal</ion-button>\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n            <!-- title -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Titulo del evento</mat-label>\\n              <input matInput [(ngModel)]=\\\"schedule.title\\\" #title=\\\"ngModel\\\" id=\\\"title\\\" name=\\\"title\\\" required>\\n              <mat-error *ngIf=\\\"title.dirty || title.touched\\\">Anotar Titulo</mat-error>\\n\\n            </mat-form-field>\\n            <!-- note -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Notas</mat-label>\\n              <textarea matInput [(ngModel)]=\\\"schedule.note\\\" #note=\\\"ngModel\\\" id=\\\"note\\\" name=\\\"note\\\"></textarea>\\n            </mat-form-field>\\n            <!-- buyer -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Cliente</mat-label>\\n              <mat-select [disabled]=\\\"!isNew\\\" (selectionChange)=\\\"getAdvByBuyer()\\\" [(ngModel)]=\\\"schedule.buyer\\\" #b=\\\"ngModel\\\"\\n                id=\\\"b\\\" name=\\\"b\\\" required>\\n                <mat-option *ngFor=\\\"let buyer of buyers$ | async\\\" [value]=\\\"buyer._id\\\">\\n                  {{buyer.name}} {{buyer.fatherLastName}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"b.dirty || b.touched\\\">Anotar Comprador</mat-error>\\n            </mat-form-field>\\n            <div>\\n              <button [disabled]=\\\"!isNew\\\" mat-stroked-button color=\\\"accent\\\" (click)=\\\"searchBuyers()\\\">\\n                <ion-spinner *ngIf=\\\"isSpinner\\\" color=\\\"secondary\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                Buscar Clientes\\n              </button>\\n            </div>\\n            <!-- lista de asesores -->\\n            <div *ngIf=\\\"b.value && (user.type !== 'adviser' && user.type !== 'seller') && (schedule && !schedule.seller )\\\">\\n              <mat-radio-group style=\\\"margin-bottom: 2%;\\\" (change)=\\\"getAdvAll(ad.value)\\\" class=\\\"example-radio-group\\\"\\n                [(ngModel)]=\\\"item\\\" #ad=\\\"ngModel\\\" id=\\\"ad\\\" name=\\\"ad\\\" required>\\n                <span class=\\\"example-radio-group\\\" *ngIf=\\\"(buyerSelect$ | async)?.adviser && (buyerSelect$ | async)?.adviser.length > 0\\\">\\n                  <mat-radio-button [checked]=\\\"schedule.adviser === adv._id\\\" class=\\\"example-radio-button\\\" *ngFor=\\\"let adv of (buyerSelect$ | async)?.adviser\\\"\\n                    [value]=\\\"adv._id\\\">\\n                    {{adv.name}} {{adv.lastName}}\\n                    <small> Disponible de {{adv.hourStart}} a {{adv.hourEnd}}</small>\\n                  </mat-radio-button>\\n                </span>\\n\\n                <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"other\\\">\\n                  Asignar nuevo Asesor\\n                </mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n\\n            <!-- new adv to buyer -->\\n            <mat-label style=\\\"margin: 3%;\\\" *ngIf=\\\" item === 'other'\\\">Se agregará un nuevo asesor al cliente:</mat-label>\\n            <mat-form-field *ngIf=\\\" item === 'other'\\\" appearance=\\\"outline\\\">\\n              <mat-label>Asesores</mat-label>\\n              <mat-select [(ngModel)]=\\\"schedule.adviser\\\" #ad2=\\\"ngModel\\\" id=\\\"ad2\\\" name=\\\"ad2\\\">\\n                <mat-option *ngFor=\\\"let adviser of advisers$ | async\\\" [value]=\\\"adviser._id\\\">\\n                  {{adviser.name}} {{adviser.lastName}} <small> Disponible de {{adviser.hourStart}} a\\n                    {{adviser.hourEnd}}</small>\\n                </mat-option>\\n              </mat-select>\\n              <button mat-button *ngIf=\\\"ad2.value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"schedule.adviser=undefined\\\">\\n                <mat-icon>close</mat-icon>\\n              </button>\\n              <mat-error *ngIf=\\\"ad2.dirty || ad2.touched\\\">Anotar Asesor</mat-error>\\n            </mat-form-field>\\n            <div>\\n              <button *ngIf=\\\" item === 'other'\\\" mat-stroked-button color=\\\"accent\\\" (click)=\\\"searchAdv()\\\">\\n                <ion-spinner *ngIf=\\\"isSpinner\\\" color=\\\"secondary\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                Buscar Asesor\\n              </button>\\n            </div>\\n\\n            <!-- prop -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Propiedad a visitar</mat-label>\\n              <mat-select [disabled]=\\\"user.type !== 'seller' && schedule.seller\\\" (selectionChange)=\\\"getAddress(property.value)\\\"\\n                [(ngModel)]=\\\"schedule.property\\\" #property=\\\"ngModel\\\" id=\\\"property\\\" name=\\\"property\\\" required>\\n                <mat-option *ngFor=\\\"let prop of properties$ | async\\\" [value]=\\\"prop._id\\\">\\n                  {{prop.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"property.dirty \\\">Anotar Propiedad</mat-error>\\n            </mat-form-field>\\n            <div>\\n              <button [disabled]=\\\"user.type !== 'seller' && schedule.seller\\\" mat-stroked-button color=\\\"accent\\\" (click)=\\\"searchProp()\\\">\\n                <ion-spinner *ngIf=\\\"isSpinner\\\" color=\\\"secondary\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                Buscar Propiedad\\n              </button>\\n            </div>\\n\\n            <!-- address -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Dirección</mat-label>\\n              <textarea matInput [(ngModel)]=\\\"schedule.address\\\" #address=\\\"ngModel\\\" id=\\\"address\\\" name=\\\"address\\\" required></textarea>\\n              <mat-error *ngIf=\\\"address.dirty || address.touched\\\">Anotar Dirección</mat-error>\\n            </mat-form-field>\\n            <!-- Fecha -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" [value]=\\\"getDate(schedule.day, schedule.month, schedule.year)\\\"\\n                matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Selecciona Fecha\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n            <!-- hora -->\\n            <mat-label style=\\\"margin-bottom: 2%;\\\">Anote Hora </mat-label>\\n            <div>\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input max=24 min=0 type=\\\"number\\\" style=\\\"text-align: right;\\\" matInput [(ngModel)]=\\\"schedule.hour\\\" #hour=\\\"ngModel\\\"\\n                  id=\\\"hour\\\" name=\\\"hour\\\" required>\\n\\n              </mat-form-field>\\n              :\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"schedule.minute\\\" #minute=\\\"ngModel\\\" id=\\\"minute\\\" name=\\\"minute\\\"\\n                  required>\\n              </mat-form-field>\\n              <!-- pm/am -->\\n              <mat-form-field style=\\\"width: 71px;\\n              margin-left: 1%;\\\" appearance=\\\"outline\\\">\\n                <mat-select (selectionChange)=\\\"hourFormat(ampm.value)\\\" #ampm>\\n                  <mat-option value=\\\"pm\\\">\\n                    PM\\n                  </mat-option>\\n                  <mat-option value=\\\"am\\\">\\n                    AM\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n\\n          </div>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n\\n              <!-- no seller -->\\n\\n              <button *ngIf=\\\"isNew && user.type !== 'seller'\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"dialogs(true,'new','admin')\\\"\\n                [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n\\n              <button *ngIf=\\\"!isNew && (user.type !== 'seller' && !schedule.seller)\\\" id=\\\"submitUser\\\" mat-raised-button\\n                color=\\\"primary\\\" (click)=\\\"dialogs(true,'edit','admin')\\\">Editar</button>\\n              <!-- seller -->\\n              <button *ngIf=\\\"isNew && (user.type === 'seller')\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\"\\n                (click)=\\\"dialogs(false,'new','seller')\\\" [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n              <button *ngIf=\\\"!isNew && (user.type === 'seller' || schedule.seller )\\\" mat-raised-button color=\\\"accent\\\"\\n                (click)=\\\"dialogs(false,'edit','seller')\\\">Editar</button>\\n            </div>\\n\\n\\n          </mat-card-actions>\\n\\n        </mat-card>\\n      </form>\\n\\n    </div>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.alert-schedule {\\n  background-color: #ffcdcd;\\n  border-left: 5px solid red;\\n  color: black;\\n  width: 50% !important;\\n  padding: 5px; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  ISchedule,\n  IScheduleGet,\n  CheckSchedule,\n} from '../../../models/schedule.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IProperty } from '../../../models/property.model';\nimport {\n  ActivatedRoute,\n  Router,\n  NavigationExtras,\n  NavigationEnd,\n} from '@angular/router';\nimport { SellerService } from '../../../services/seller.service';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { PropertyService } from '../../../services/property.service';\nimport { IBuyer } from '../../../models/buyer.model';\nimport { BuyerService } from '../../../services/buyer.service';\nimport { IAdviser } from '../../../models/adviser.model';\nimport { map } from 'rxjs/operators';\nimport { AdviserService } from '../../../services/adviser.service';\nimport { Moment } from 'moment';\nimport { ScheduleService } from '../../../services/schedule.service';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { DialogGeneralComponent } from '../../general/dialog-general/dialog-general.component';\nimport { INotification } from '../../../models/notification.model';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { FormatDatesFront, FormatHoursFront } from '../../../_config/_helpers';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SearchSelectComponent,\n  SearchDialog,\n} from '../../general/search-select/search-select.component';\n\n@Component({\n  selector: 'app-new-edit-schedule',\n  templateUrl: './new-edit-schedule.component.html',\n  styleUrls: ['./new-edit-schedule.component.scss'],\n})\nexport class NewEditScheduleComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  schedule: IScheduleGet = {};\n  properties$: Observable<IProperty[]>;\n  buyers$: Observable<IBuyer[]>;\n  buyerSelect$: Observable<IBuyer>;\n  advisers$: Observable<IAdviser[]>;\n  item;\n  adviserBefore: string;\n  user: IUserSession;\n  isSpinner: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private scheduleService: ScheduleService,\n    private navCtr: NavController,\n    private propertyService: PropertyService,\n    private buyerService: BuyerService,\n    private adviserService: AdviserService,\n    public alertController: AlertController,\n    private userSession: UserSessionService,\n    private sellerService: SellerService,\n    public dialog: MatDialog,\n    private oneSignalService: OnesignalService,\n  ) {\n    this.user = userSession.userSession.value;\n  }\n\n  ngOnInit() {\n    this.getProperties();\n    this.getBuyers();\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.scheduleService.getScheduleById(params['id']).subscribe(s => {\n          console.log(s);\n          this.schedule = <IScheduleGet>s;\n          if (s.buyer) {\n            this.schedule.buyer = <any>s.buyer._id;\n            this.getAdvByBuyer();\n          }\n          if (s.adviser) {\n            this.schedule.adviser = <any>s.adviser._id;\n            console.log(this.schedule.adviser);\n            this.adviserBefore = this.schedule.adviser;\n          }\n          this.schedule.property = <any>s.property._id;\n          if (this.schedule.property) {\n            this.getAddress(this.schedule.property);\n          }\n        });\n        this.isNew = false;\n      } else {\n        if (params['year']) {\n          this.schedule.day = +params.day;\n          this.schedule.month = +params.month;\n          this.schedule.year = +params.year;\n          this.schedule.hour = +params.hour;\n        }\n        if (this.user.type === 'adviser') {\n          this.schedule.adviser = this.user.id;\n        }\n        this.isNew = true;\n      }\n    });\n  }\n  getProperties() {\n    if (this.user.type === 'seller') {\n      this.properties$ = new Observable<IProperty[]>(ob => {\n        this.propertyService.getAll().subscribe(prop => {\n          this.sellerService.getSellerById(this.user.id).subscribe(seller => {\n            ob.next(\n              prop.filter(p => {\n                return !!seller.property.find(ps => ps._id === p._id);\n              }),\n            );\n          });\n        });\n        ob.next();\n      });\n    } else {\n      this.properties$ = this.propertyService.getAll();\n    }\n  }\n  getBuyers() {\n    if (this.user.type === 'adviser') {\n      this.buyers$ = new Observable<IBuyer[]>(ob => {\n        this.buyerService.getBuyerAll().subscribe(data => {\n          ob.next(\n            data.filter(b => {\n              return !!b.adviser.find(adv => adv._id === this.user.id);\n            }),\n          );\n        });\n      });\n    } else if (this.user.type === 'seller') {\n      this.buyers$ = new Observable<IBuyer[]>(ob => {\n        this.buyerService.getBuyerAll().subscribe(buyers => {\n          this.sellerService.getSellerById(this.user.id).subscribe(seller => {\n            ob.next(\n              buyers.filter(b => {\n                return !!b.statusBuyerProperty.find(sbp => {\n                  return !!seller.property.find(\n                    p => p._id === sbp.property._id,\n                  );\n                });\n              }),\n            );\n          });\n        });\n      });\n    } else {\n      this.buyers$ = this.buyerService.getBuyerAll();\n    }\n  }\n  getAdvByBuyer() {\n    this.buyerSelect$ = this.buyerService.getBuyerById(<string>(\n      this.schedule.buyer\n    ));\n    this.buyerSelect$.subscribe(c => console.log(c));\n  }\n  getAddress(propId) {\n    this.propertyService.getPropertyById(propId).subscribe(prop => {\n      this.schedule.address = prop.zone;\n    });\n  }\n  dateSelect(event) {\n    if (event) {\n      this.schedule.day = event.value._i.date;\n      this.schedule.month = event.value._i.month;\n      this.schedule.year = event.value._i.year;\n    }\n  }\n  hourFormat(pmAm) {\n    if (pmAm === 'pm' && this.schedule.hour && this.schedule.hour < 12) {\n      this.schedule.hour = this.schedule.hour + 12;\n    }\n    if (pmAm === 'am' && this.schedule.hour && this.schedule.hour > 12) {\n      this.schedule.hour = this.schedule.hour - 12;\n    }\n  }\n  getAdvAll(item) {\n    this.item = item;\n    console.log(item);\n    if (item === 'other') {\n      this.advisers$ = this.adviserService.getAdviserAll();\n      this.advisers$.subscribe(a => console.log(a));\n    } else {\n      this.schedule.adviser = item;\n    }\n  }\n  async getPropById(id) {\n    return await this.propertyService.getPropertyById(id).toPromise();\n  }\n  async newScheduleSeller() {\n    const date = this.getDate2(\n      this.schedule.day,\n      this.schedule.month,\n      this.schedule.year,\n    );\n    const hours = this.formatHour(this.schedule.hour, this.schedule.minute);\n    const prop = await this.getPropById(this.schedule.property);\n    this.schedule.status = 'verde';\n    this.schedule.seller = <any>this.user.id;\n    console.log(this.schedule);\n    this.scheduleService.newSchedule(<ISchedule>this.schedule).subscribe(s => {\n      this.buyerSelect$.subscribe(buyer => {\n        buyer.schedule.push(<ISchedule>s._id);\n        this.buyerService.putBuyer(buyer).subscribe(() => {\n          this.sellerService.getSellerById(this.user.id).subscribe(seller => {\n            seller.schedule.push(<ISchedule>s._id);\n            this.sellerService.putSeller(seller).subscribe(() => {\n              this.notification(\n                'Nuevo Evento',\n                `Se ha agendado una propuesta de evento con el vendedor ${\n                  seller.name\n                } en propiedad: ${\n                  prop.name\n                }  con fecha: ${date} y hora: ${hours} `,\n                'amarillo',\n                'schedule',\n                undefined,\n                [this.schedule.buyer],\n              );\n              const toast: NavigationExtras = {\n                queryParams: { res: 'Evento de Vendedor Creado' },\n              };\n              // this.navCtr.navigateRoot('list-schedule-admin');\n              this.router\n                .navigateByUrl('/RefrshComponent', {\n                  skipLocationChange: true,\n                })\n                .then(() =>\n                  this.router.navigate(['list-schedule-admin'], toast),\n                );\n            });\n          });\n        });\n      });\n    });\n  }\n  // start get by id\n  async getSchedulebyId(id) {\n    return await this.scheduleService.getScheduleById(id).toPromise();\n  }\n  //\n  newSchedule() {\n    const date = this.getDate2(\n      this.schedule.day,\n      this.schedule.month,\n      this.schedule.year,\n    );\n    const hours = this.formatHour(this.schedule.hour, this.schedule.minute);\n    this.schedule.status = 'verde';\n    console.log(this.schedule);\n    this.scheduleService.newSchedule(<ISchedule>this.schedule).subscribe(s => {\n      this.buyerSelect$.subscribe(buyer => {\n        buyer.schedule.push(<ISchedule>s._id);\n        if (this.item === 'other') {\n          buyer.adviser.push(<any>this.schedule.adviser);\n        }\n        this.buyerService.putBuyer(buyer).subscribe(() => {\n          this.adviserService\n            .getAdviserById(<string>this.schedule.adviser)\n            .subscribe(adv => {\n              if (this.item === 'other') {\n                adv.buyer.push(<any>this.schedule.buyer);\n              }\n              adv.schedule.push(<ISchedule>s._id);\n              this.adviserService.putAdviser(adv).subscribe(async () => {\n                const schedule = await this.getSchedulebyId(s._id);\n                // noti\n                this.notification(\n                  'Nuevo Evento',\n                  `Se ha generado una propuesta de evento en ${\n                    schedule.property.name\n                  } con fecha: ${date} y hora: ${hours} `,\n                  'verde',\n                  'schedule',\n                  undefined,\n                  [schedule.adviser._id, schedule.buyer._id],\n                );\n                const toast: NavigationExtras = {\n                  queryParams: { res: ' Evento Creado' },\n                };\n                // this.navCtr.navigateRoot('list-schedule-admin');\n                this.router\n                  .navigateByUrl('/RefrshComponent', {\n                    skipLocationChange: true,\n                  })\n                  .then(() =>\n                    this.router.navigate(['list-schedule-admin'], toast),\n                  );\n              });\n            });\n        });\n      });\n    });\n    console.log('%c nuevo', 'color: #f5811e;');\n  }\n  editCustomerSeller() {\n    if (this.schedule.status === 'amarillo') {\n      this.schedule.notificationOneSignal = this.deleteOneSignal(this.schedule);\n    }\n    this.schedule.status = 'verde';\n    this.scheduleService\n      .putSchedule(<ISchedule>this.schedule)\n      .subscribe(async () => {\n        const prop = await this.getPropById(this.schedule.property);\n        const toast: NavigationExtras = {\n          queryParams: { res: ' Evento Editado' },\n        };\n        this.notification(\n          'Evento Editado',\n          `Actualización de propuesta de evento en propiedad ${prop.name}`,\n          'amarillo',\n          'schedule',\n          undefined,\n          [this.schedule.buyer],\n        );\n        // this.router.navigate(['list-schedule-admin'], toast);\n        // this.navCtr.navigateRoot('list-schedule-admin');\n        const p = await this.router.navigateByUrl('/RefrshComponent', {\n          skipLocationChange: true,\n        });\n        if (p) {\n          this.router.navigate(['list-schedule-admin'], toast);\n        }\n      });\n  }\n  editCustomer() {\n    if (this.schedule.status === 'amarillo') {\n      this.schedule.notificationOneSignal = this.deleteOneSignal(this.schedule);\n    }\n    this.schedule.status = 'verde';\n    if (this.adviserBefore === undefined) {\n      this.buyerSelect$.subscribe(buyer => {\n        if (this.item === 'other') {\n          buyer.adviser.push(<any>this.schedule.adviser);\n        }\n        this.buyerService.putBuyer(buyer).subscribe(() => {\n          this.adviserService\n            .getAdviserById(<string>this.schedule.adviser)\n            .subscribe(adv => {\n              if (this.item === 'other') {\n                adv.buyer.push(<any>this.schedule.buyer);\n              }\n              adv.schedule.push(<ISchedule>this.schedule._id);\n              this.adviserService.putAdviser(adv).subscribe(() => {});\n            });\n        });\n      });\n    } else {\n      if (this.adviserBefore !== this.schedule.adviser) {\n        this.adviserService\n          .getAdviserById(this.adviserBefore)\n          .subscribe(advBefore => {\n            const indexFinded = advBefore.schedule.findIndex(\n              s => s._id === this.schedule._id,\n            );\n            advBefore.schedule.splice(indexFinded, 1);\n            this.adviserService.putAdviser(advBefore).subscribe(() => {\n              this.adviserService\n                .getAdviserById(this.schedule.adviser)\n                .subscribe(adv => {\n                  adv.schedule.push(<ISchedule>this.schedule._id);\n                  this.adviserService.putAdviser(adv).subscribe(() => {});\n                });\n            });\n          });\n      }\n    }\n\n    this.scheduleService\n      .putSchedule(<ISchedule>this.schedule)\n      .subscribe(async () => {\n        const schedule = await this.getSchedulebyId(this.schedule._id);\n        // noti\n        this.notification(\n          'Nuevo Evento',\n          `Se ha generado una propuesta de evento en ${\n            schedule.property.name\n          }, en espera de respuesta del Cliente: ${schedule.buyer.name}`,\n          'verde',\n          'schedule',\n          undefined,\n          [schedule.buyer._id, schedule.adviser._id],\n        );\n        const toast: NavigationExtras = {\n          queryParams: { res: ' Evento Editado' },\n        };\n        // this.router.navigate(['list-schedule-admin'], toast);\n        // this.navCtr.navigateRoot('list-schedule-admin');\n        /**\n         * Es para recargar el componente previo\n         */\n        /*  this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-schedule-admin'], toast)); */\n        const p = await this.router.navigate(['RefrshComponent'], {\n          skipLocationChange: true,\n        });\n        if (p) {\n          this.router.navigate(['list-schedule-admin'], toast);\n        }\n      });\n  }\n  // START VER errores de horarios\n  // checa adv horario\n  async checkHoursAdviser(): Promise<boolean> {\n    const adv = await this.advData();\n    const promise = new Promise<boolean>((resolve, reject) => {\n      try {\n        if (\n          this.schedule.hour < adv.hourStart ||\n          this.schedule.hour > adv.hourEnd\n        ) {\n          // no puede a esa hora\n          resolve(true);\n        } else {\n          // si puede\n          resolve(false);\n        }\n        console.log(this.schedule);\n      } catch (error) {\n        // error\n      }\n    });\n    const result = await promise;\n    return result;\n  }\n  private async advData() {\n    return await this.adviserService\n      .getAdviserById(this.schedule.adviser)\n      .toPromise();\n  }\n\n  //  ve errores de calendario\n  async checkSchedule(): Promise<CheckSchedule> {\n    return await this.scheduleService.checkSchedule(this.schedule).toPromise();\n  }\n  // END VER\n\n  // START dialog\n  async dialogs(checkAdv: boolean, type: 'edit' | 'new', user) {\n    // checa adv\n    let presentDialogAdv = false;\n    let checkSchedule = true;\n    let result = false;\n    if (checkAdv) {\n      presentDialogAdv = await this.checkHoursAdviser();\n    }\n    if (presentDialogAdv) {\n      checkSchedule = await this.dialogAdv();\n    }\n    if (checkSchedule) {\n      const check = await this.checkSchedule();\n      const isOk = check.adviserCan && check.buyerCan && check.propertyCan;\n      if (!isOk) {\n        result = await this.dialogSchedule(check);\n      } else {\n        result = true;\n      }\n    }\n    if (result) {\n      if (type === 'new' && user === 'seller') {\n        this.newScheduleSeller();\n      } else if (type === 'edit' && user === 'seller') {\n        this.editCustomerSeller();\n      } else if (type === 'new' && user !== 'seller') {\n        this.newSchedule();\n      } else if (type === 'edit' && user !== 'seller') {\n        this.editCustomer();\n      }\n    }\n  }\n  private async dialogSchedule(check): Promise<boolean> {\n    let message;\n    console.log(check);\n    if (!check.propertyCan) {\n      message = 'La propiedad elegida esta ocupada a esa hora';\n    } else if (!check.buyerCan) {\n      message = `El Cliente elegido esta ocupado a esa hora`;\n    } else if (!check.adviserCan) {\n      message = `El Asesor elegido esta ocupado a esa hora`;\n    }\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\n      maxWidth: '50%',\n      minWidth: '20%',\n      data: {\n        header: 'Advertencia',\n        subHeader: 'Se empalman horarios',\n        body: message,\n        isform: false,\n      },\n    });\n    const promise = new Promise<boolean>((resolve, reject) => {\n      try {\n        const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n          resolve(res);\n        });\n      } catch (error) {}\n    });\n    console.log(await promise);\n    const result = await promise;\n    return result;\n  }\n\n  async dialogAdv(): Promise<boolean> {\n    const adv = await this.advData();\n    const dialogRef = this.dialog.open(DialogGeneralComponent, {\n      maxWidth: '50%',\n      minWidth: '20%',\n      data: {\n        header: 'Advertencia',\n        subHeader: 'El horario no coincide con el asesor',\n        body: `El asesor <b>${adv.name}</b> tiene un horario de <b>${\n          adv.hourStart\n        }</b> a <b>${adv.hourEnd}</b>`,\n        isform: false,\n      },\n    });\n    const promise = new Promise<boolean>((resolve, reject) => {\n      try {\n        const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n          resolve(res);\n        });\n      } catch (error) {}\n    });\n    console.log(await promise);\n    const result = await promise;\n    return result;\n  }\n  // END dialog\n\n  getDate(day, month, year) {\n    return new Date(year, month, day);\n  }\n  // noti\n  private notification(\n    title,\n    message,\n    status,\n    type,\n    tags,\n    receiversId: string[],\n  ) {\n    // notificacion\n    const notification: INotification = {\n      title: title,\n      message: message,\n      tags: tags,\n      receiversId: receiversId,\n      senderId: this.userSession.userSession.value.id,\n      status: status,\n      type: type,\n    };\n    // onesignal\n    this.oneSignalService\n      .postOneSignalByTag(notification.title, message, tags, receiversId)\n      .subscribe(() => {\n        // guardar noti\n        this.oneSignalService.newNotification(notification).subscribe();\n      });\n  }\n  private notificationBySchedule(schedule: ISchedule) {\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(\n        'Recordatorio de evento',\n        `Tienes un evento con direccion ${schedule.address} en propiedad: ${\n          schedule.property.name\n        } a las ${schedule.hour}hrs`,\n        new Date(\n          schedule.year,\n          schedule.month,\n          schedule.day,\n          schedule.hour,\n          schedule.minute,\n        ),\n        undefined,\n        [schedule.buyer._id, schedule.adviser._id],\n      )\n      .subscribe(() => {});\n  }\n  private deleteOneSignal(schedule) {\n    /* const schedule = await this.scheduleService\n      .getScheduleById(scheduleId)\n      .toPromise(); */\n    if (\n      schedule.notificationOneSignal &&\n      schedule.notificationOneSignal.length > 0\n    ) {\n      schedule.notificationOneSignal.forEach((idN, i) => {\n        this.oneSignalService.deleteOneSignalSchedule(idN).subscribe();\n      });\n      return (schedule.notificationOneSignal = []);\n    }\n  }\n  // _helpers\n  getDate2(day, month, year) {\n    const d = new Date(year, month, day);\n    return FormatDatesFront(d);\n  }\n  formatHour(h, m) {\n    return FormatHoursFront(h, m);\n  }\n  // dialog\n  public async searchBuyers() {\n    this.isSpinner = true;\n    const buyers = await this.buyerService.getBuyerAll().toPromise();\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n      minWidth: '20%', */\n      data: <SearchDialog>{\n        header: 'Buscar clientes para cita, seleccione uno o varios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: false,\n        filtersDetail: true,\n        rows: buyers,\n        typeFilter: 'filter-buyer',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Apellido',\n            prop: 'fatherLastName',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n          {\n            name: 'Estado',\n            prop: 'statusBuyerProperty',\n            type: 'statusBuyerProperty',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      if (res.options) {\n        this.schedule.buyer = res.arrSelect[0]._id;\n        this.getAdvByBuyer();\n      }\n    });\n  }\n  // dialog\n  public async searchAdv() {\n    this.isSpinner = true;\n    const adv = await this.adviserService\n      .getAdviserAll()\n      .pipe(\n        map(arr =>\n          arr.map((adviser: any) => {\n            adviser.numOfBuyer = `Número de Clientes: ${adviser.buyer.length}`;\n            adviser.range = `Disponible de ${adviser.hourStart} a ${\n              adviser.hourEnd\n            }`;\n            return adviser;\n          }),\n        ),\n      )\n      .toPromise();\n    this.isSpinner = false;\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n      minWidth: '20%', */\n      data: <SearchDialog>{\n        header: 'Buscar asesor para cita, seleccione uno o varios',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: false,\n        filtersDetail: true,\n        rows: adv,\n        typeFilter: 'filter-adv',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Apellido',\n            prop: 'fatherLastName',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n          {\n            name: '# De Consumidores',\n            prop: 'numOfBuyer',\n            type: 'normal',\n          },\n          {\n            name: 'Disponibilidad',\n            prop: 'range',\n            type: 'normal',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      if (res.options) {\n        this.schedule.adviser = res.arrSelect[0]._id;\n      }\n    });\n  }\n  public async searchProp() {\n    this.isSpinner = true;\n    const prop = await this.propertyService.getAll().toPromise();\n    this.isSpinner = false;\n    console.log(prop);\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n        minWidth: '20%', */\n      data: <SearchDialog>{\n        header: 'Buscar Propiedades para Cita',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: false,\n        rows: prop,\n        typeFilter: 'filter-prop2',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      if (res.options) {\n        this.schedule.property = res.arrSelect[0]._id;\n        this.getAddress(res.arrSelect[0]._id);\n      }\n    });\n  }\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Evento Personal\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n\\n\\n            <!-- address -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Dirección</mat-label>\\n              <textarea matInput [(ngModel)]=\\\"schedule.address\\\" #address=\\\"ngModel\\\" id=\\\"address\\\" name=\\\"address\\\" required></textarea>\\n              <mat-error *ngIf=\\\"address.dirty || address.touched\\\">Anotar Dirección</mat-error>\\n            </mat-form-field>\\n            <!-- Fecha -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <input (dateChange)=\\\"dateSelect($event)\\\" (focus)=\\\"picker.open()\\\" [value]=\\\"getDate(schedule.day, schedule.month, schedule.year)\\\"\\n                matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Selecciona Fecha\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n            <!-- hora -->\\n            <mat-label style=\\\"margin-bottom: 2%;\\\">Anote Hora </mat-label>\\n            <div>\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input max=24 min=0 type=\\\"number\\\" style=\\\"text-align: right;\\\" matInput [(ngModel)]=\\\"schedule.hour\\\" #hour=\\\"ngModel\\\"\\n                  id=\\\"hour\\\" name=\\\"hour\\\" required>\\n\\n              </mat-form-field>\\n              :\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input max=59 min=0 type=\\\"number\\\" matInput [(ngModel)]=\\\"schedule.minute\\\" #minute=\\\"ngModel\\\" id=\\\"minute\\\"\\n                  name=\\\"minute\\\" required>\\n              </mat-form-field>\\n              <!-- pm/am -->\\n              <mat-form-field style=\\\"width: 71px;\\n                margin-left: 1%;\\\" appearance=\\\"outline\\\">\\n                <mat-select (selectionChange)=\\\"hourFormat(ampm.value)\\\" #ampm>\\n                  <mat-option value=\\\"pm\\\">\\n                    PM\\n                  </mat-option>\\n                  <mat-option value=\\\"am\\\">\\n                    AM\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <!-- Fecha Recordatorio -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Fecha para mandar recordatorio</mat-label>\\n              <input (dateChange)=\\\"dateSelect2($event)\\\" (focus)=\\\"picker2.open()\\\" matInput [matDatepicker]=\\\"picker2\\\"\\n                placeholder=\\\"Selecciona Fecha\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker2></mat-datepicker>\\n            </mat-form-field>\\n            <!-- hora -->\\n            <mat-label style=\\\"margin-bottom: 2%;\\\">Anote Hora de Recordatorio </mat-label>\\n            <div>\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input type=\\\"number\\\" style=\\\"text-align: right;\\\" matInput [(ngModel)]=\\\"hourNoti\\\" #hour2=\\\"ngModel\\\" id=\\\"hour2\\\"\\n                  name=\\\"hour2\\\" required>\\n\\n              </mat-form-field>\\n              :\\n              <mat-form-field style=\\\"width: 70px;\\\" appearance=\\\"outline\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"minuteNoti\\\" #minute2=\\\"ngModel\\\" id=\\\"minute2\\\" name=\\\"minute2\\\"\\n                  required>\\n              </mat-form-field>\\n              <!-- pm/am -->\\n              <mat-form-field style=\\\"width: 71px;\\n                margin-left: 1%;\\\" appearance=\\\"outline\\\">\\n                <mat-select value='am' (selectionChange)=\\\"hourFormat2(ampm2.value)\\\" #ampm2>\\n                  <mat-option value=\\\"pm\\\">\\n                    PM\\n                  </mat-option>\\n                  <mat-option value=\\\"am\\\">\\n                    AM\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <!-- title -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Titulo del evento</mat-label>\\n              <input matInput [(ngModel)]=\\\"schedule.title\\\" #title=\\\"ngModel\\\" id=\\\"title\\\" name=\\\"title\\\" required>\\n              <mat-error *ngIf=\\\"title.dirty || title.touched\\\">Anotar Titulo</mat-error>\\n\\n            </mat-form-field>\\n            <!-- note -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Notas</mat-label>\\n              <textarea matInput [(ngModel)]=\\\"schedule.note\\\" #note=\\\"ngModel\\\" id=\\\"note\\\" name=\\\"note\\\"></textarea>\\n            </mat-form-field>\\n            <!-- <div class=\\\"alert-schedule\\\">\\n                El Asesor seleccionado tiene una disponibilidad de 8 a 6 hrs\\n              </div> -->\\n\\n          </div>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newSchedule()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editSchedule()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Editar</button>\\n              </span>\\n            </div>\\n\\n\\n          </mat-card-actions>\\n\\n        </mat-card>\\n      </form>\\n\\n    </div>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\\n.example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.alert-schedule {\\n  background-color: #ffcdcd;\\n  border-left: 5px solid red;\\n  color: black;\\n  width: 50% !important;\\n  padding: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IScheduleGet, ISchedule } from '../../../models/schedule.model';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { ScheduleService } from '../../../services/schedule.service';\nimport { OnesignalService } from '../../../services/onesignal.service';\nimport { FormatDatesFront, FormatHoursFront } from '../../../_config/_helpers';\n\n@Component({\n  selector: 'app-personal-schedule',\n  templateUrl: './personal-schedule.component.html',\n  styleUrls: ['./personal-schedule.component.scss'],\n})\nexport class PersonalScheduleComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  schedule: IScheduleGet = {};\n  item;\n  // noti\n  yearNoti: number;\n  monthNoti: number;\n  dayNoti: number;\n  hourNoti: number;\n  minuteNoti: number;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private scheduleService: ScheduleService,\n    private userSessionService: UserSessionService,\n    private oneSignalService: OnesignalService,\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.scheduleService.getScheduleById(params.id).subscribe(s => {\n          this.schedule = <any>s;\n          this.isNew = false;\n        });\n      } else {\n        this.isNew = true;\n      }\n    });\n\n    this.getUsuerType();\n  }\n  /**\n   * asignar persona\n   */\n  getUsuerType() {\n    const user = this.userSessionService.userSession.value;\n    if (user.type === 'administrator') {\n      this.schedule.administrator = user.id;\n    } else {\n      this.schedule.personal = user.id;\n    }\n  }\n\n  dateSelect(event) {\n    if (event) {\n      this.schedule.day = event.value._i.date;\n      this.schedule.month = event.value._i.month;\n      this.schedule.year = event.value._i.year;\n    }\n  }\n  dateSelect2(event) {\n    if (event) {\n      this.dayNoti = event.value._i.date;\n      this.monthNoti = event.value._i.month;\n      this.yearNoti = event.value._i.year;\n    }\n  }\n  hourFormat(pmAm) {\n    if (pmAm === 'pm' && this.schedule.hour && this.schedule.hour < 12) {\n      this.schedule.hour = this.schedule.hour + 12;\n    } else if (pmAm === 'am' && this.schedule.hour && this.schedule.hour > 12) {\n      this.schedule.hour = this.schedule.hour - 12;\n    }\n  }\n  hourFormat2(pmAm) {\n    if (pmAm === 'pm' && this.hourNoti && this.hourNoti < 12) {\n      this.hourNoti = this.hourNoti + 12;\n    } else if (pmAm === 'am' && this.hourNoti && this.hourNoti > 12) {\n      this.hourNoti = this.hourNoti - 12;\n    }\n  }\n  /*   getAdvAll(item) {\n    this.item = item;\n    console.log(item);\n    if (item === 'other') {\n      this.advisers$ = this.adviserService.getAdviserAll();\n      this.advisers$.subscribe(a => console.log(a));\n    } else {\n      this.schedule.adviser = item;\n    }\n  } */\n  newSchedule() {\n    const date = this.getDate2(\n      this.schedule.day,\n      this.schedule.month,\n      this.schedule.year,\n    );\n    const hours = this.formatHour(this.schedule.hour, this.schedule.minute);\n    this.scheduleService.newSchedule(<ISchedule>this.schedule).subscribe(s => {\n      this.notificationBySchedule(\n        'Evento Personal',\n        `Tiene un evento pendiente con fecha: ${date} a las ${hours}`,\n        undefined,\n        [this.userSessionService.userSession.value.id],\n        new Date(\n          this.yearNoti,\n          this.monthNoti,\n          this.dayNoti,\n          this.hourNoti,\n          this.minuteNoti,\n        ),\n        s,\n      );\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Evento Creado' },\n      };\n      // this.navCtr.navigateRoot('list-schedule-admin');\n      this.router\n        .navigateByUrl('/RefrshComponent', {\n          skipLocationChange: true,\n        })\n        .then(() => this.router.navigate(['list-schedule-admin'], toast));\n    });\n  }\n  editSchedule() {\n    const date = this.getDate2(\n      this.schedule.day,\n      this.schedule.month,\n      this.schedule.year,\n    );\n    const hours = this.formatHour(this.schedule.hour, this.schedule.minute);\n    this.schedule.notificationOneSignal = this.deleteOneSignal(this.schedule);\n    this.scheduleService.putSchedule(<ISchedule>this.schedule).subscribe(() => {\n      this.notificationBySchedule(\n        'Evento Personal',\n        `Tiene un evento pendiente con fecha: ${date} a las ${hours}`,\n        undefined,\n        [this.userSessionService.userSession.value.id],\n        new Date(\n          this.yearNoti,\n          this.monthNoti,\n          this.dayNoti,\n          this.hourNoti,\n          this.minuteNoti,\n        ),\n        <any>this.schedule,\n      );\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Evento Editado' },\n      };\n      // this.navCtr.navigateRoot('list-schedule-admin');\n      this.router\n        .navigateByUrl('/RefrshComponent', {\n          skipLocationChange: true,\n        })\n        .then(() => this.router.navigate(['list-schedule-admin'], toast));\n    });\n  }\n\n  getDate(day, month, year) {\n    return new Date(year, month, day);\n  }\n  getDate2(day, month, year) {\n    const d = new Date(year, month, day);\n    return FormatDatesFront(d);\n  }\n  formatHour(h, m) {\n    return FormatHoursFront(h, m);\n  }\n  private notificationBySchedule(\n    title,\n    message,\n    tags: string[],\n    reciversId: string[],\n    date: Date,\n    schedule: ISchedule,\n  ) {\n    // onesignal\n    this.oneSignalService\n      .postOneSignalBySchedule(title, message, date, tags, reciversId, 0)\n      .subscribe(data => {\n        if (!schedule.notificationOneSignal) {\n          schedule.notificationOneSignal = [];\n        }\n        schedule.notificationOneSignal.push(data.id);\n        this.scheduleService.putSchedule(schedule).subscribe();\n      });\n  }\n  private deleteOneSignal(schedule) {\n    /* const schedule = await this.scheduleService\n      .getScheduleById(scheduleId)\n      .toPromise(); */\n    console.log(schedule);\n    if (\n      schedule.notificationOneSignal &&\n      schedule.notificationOneSignal.length > 0\n    ) {\n      schedule.notificationOneSignal.forEach((idN, i) => {\n        this.oneSignalService.deleteOneSignalSchedule(idN).subscribe();\n      });\n      return (schedule.notificationOneSignal = []);\n    }\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white !important\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Propietario\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header>\\n  <app-menu-general [isMenuButton]=\\\"'back'\\\" [colorMenuButton]=\\\"'white'\\\" [titleMenu]=\\\"isNew ? 'Nuevo Propietario': 'Editar Propietario'\\\"\\n    [buttonNotification]=\\\"'notifications'\\\" [buttonUser]=\\\"'person'\\\"></app-menu-general>\\n</ion-header>\\n<ion-content>\\n  <ion-grid fixed>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%\\\">\\n      <form #newUserForm=\\\"ngForm\\\">\\n        <mat-card>\\n          <mat-card-title>Complete los campos</mat-card-title>\\n          <div class=\\\"flex-container\\\">\\n            <!-- name -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Nombre</mat-label>\\n              <input matInput placeholder=\\\"\\\" [(ngModel)]=\\\"seller.name\\\" #name=\\\"ngModel\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n              <mat-error *ngIf=\\\"name.dirty || name.touched\\\">Anotar Nombre</mat-error>\\n            </mat-form-field>\\n            <!-- lastname -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Dirección</mat-label>\\n              <input matInput [(ngModel)]=\\\"seller.lastName\\\" #lastName=\\\"ngModel\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" required>\\n              <mat-error *ngIf=\\\"lastName.dirty || lastName.touched\\\">Anotar Apellido</mat-error>\\n            </mat-form-field>\\n            <!-- email -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Correo</mat-label>\\n              <input matInput [(ngModel)]=\\\"seller.email\\\" #email=\\\"ngModel\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"email.dirty || email.touched\\\">Anotar Correo</mat-error>\\n            </mat-form-field>\\n            <!-- city -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Ciudad</mat-label>\\n              <mat-select [(ngModel)]=\\\"seller.city\\\" #city=\\\"ngModel\\\" id=\\\"city\\\" name=\\\"city\\\" required>\\n                <mat-option value=\\\"puebla\\\">\\n                  Puebla\\n                </mat-option>\\n                <mat-option value=\\\"mexico\\\">\\n                  México\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"city.dirty || city.touched\\\">Anotar Ciudad</mat-error>\\n            </mat-form-field>\\n            <!-- isRenter -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Vende o Renta</mat-label>\\n              <mat-select [(ngModel)]=\\\"seller.isRenter\\\" #isRenter=\\\"ngModel\\\" id=\\\"isRenter\\\" name=\\\"isRenter\\\" required>\\n                <mat-option value=\\\"false\\\">\\n                  Vende\\n                </mat-option>\\n                <mat-option value=\\\"true\\\">\\n                  Renta\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"isRenter.dirty || isRenter.touched\\\">Anotar Tipo</mat-error>\\n            </mat-form-field>\\n            <!-- pass -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Contraseña</mat-label>\\n              <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"seller.password\\\" #password=\\\"ngModel\\\" id=\\\"password\\\"\\n                name=\\\"password\\\" required>\\n              <mat-error *ngIf=\\\"password.dirty || password.touched\\\">Anotar Contraseña</mat-error>\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n            </mat-form-field>\\n\\n            <!-- prop -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Propiedades del Vendedor</mat-label>\\n              <mat-select [disabled]=\\\"user.type === 'seller'\\\" [(ngModel)]=\\\"seller.property\\\" #property=\\\"ngModel\\\" id=\\\"property\\\"\\n                name=\\\"property\\\" multiple>\\n                <mat-option [disabled]=\\\"prop.isBuy\\\" *ngFor=\\\"let prop of properties$ | async\\\" [value]=\\\"prop._id\\\">\\n                  {{prop.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"property.dirty || property.touched\\\">Anotar Tipo</mat-error>\\n            </mat-form-field>\\n            <!-- notas -->\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Notas</mat-label>\\n              <input matInput [(ngModel)]=\\\"seller.notes\\\" #notes=\\\"ngModel\\\" id=\\\"notes\\\" name=\\\"notes\\\">\\n            </mat-form-field>\\n\\n            <div>\\n              <button [disabled]=\\\"user.type === 'seller'\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"searchProp()\\\">\\n                <ion-spinner *ngIf=\\\"isSpinner\\\" style=\\\"color: white\\\" name=\\\"bubbles\\\"></ion-spinner>\\n                Buscar Propiedades\\n              </button>\\n            </div>\\n          </div>\\n          <mat-card-actions align=\\\"end\\\">\\n            <div style=\\\"margin-right: 2%\\\">\\n              <span [matTooltip]=errorToShow [matTooltipClass]=\\\"'tooltip-size'\\\" (mouseenter)=\\\"getPopMessage($event)\\\">\\n                <button *ngIf=\\\"isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"newCustomer()\\\"\\n                  [disabled]=\\\"!newUserForm.form.valid\\\">Crear</button>\\n                <button *ngIf=\\\"!isNew\\\" id=\\\"submitUser\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!newUserForm.form.valid\\\"\\n                  (click)=\\\"editCustomer()\\\">Editar</button>\\n              </span>\\n            </div>\\n\\n\\n          </mat-card-actions>\\n\\n        </mat-card>\\n      </form>\\n\\n    </div>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \".flex-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 5%; }\\n\\n.flex-container > * {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ISeller } from '../../../models/seller.model';\nimport { NavigationExtras, ActivatedRoute, Router } from '@angular/router';\nimport { SellerService } from '../../../services/seller.service';\nimport { NavController } from '@ionic/angular';\nimport { PropertyService } from '../../../services/property.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IProperty } from '../../../models/property.model';\nimport { UserSessionService } from '../../../services/user-session.service';\nimport { IUserSession } from '../../../models/userSession.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SearchSelectComponent,\n  SearchDialog,\n} from '../../general/search-select/search-select.component';\n\n@Component({\n  selector: 'app-new-edit-seller',\n  templateUrl: './new-edit-seller.component.html',\n  styleUrls: ['./new-edit-seller.component.scss'],\n})\nexport class NewEditSellerComponent implements OnInit {\n  hide = true;\n  companyId: string;\n  isNew = true;\n  errorToShow = '';\n  errorToShowMat = 'Dato obligatorio';\n  seller: ISeller = {};\n  properties$: Observable<IProperty[]>;\n  user: IUserSession;\n  isSpinner: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private sellerService: SellerService,\n    private navCtr: NavController,\n    private propertyService: PropertyService,\n    private userSession: UserSessionService,\n    public dialog: MatDialog,\n  ) {\n    this.user = userSession.userSession.value;\n  }\n\n  ngOnInit() {\n    this.getProperties();\n    this.route.queryParams.subscribe(params => {\n      let arr = [];\n      if (params['id']) {\n        this.sellerService.getSellerById(params['id']).subscribe(s => {\n          Object.keys(s).forEach(key => {\n            if (s[key] === false) {\n              s[key] = 'false';\n            } else if (s[key] === true) {\n              s[key] = 'true';\n            }\n          });\n          if (s.property && s.property.length > 0) {\n            arr = <any>s.property.map(p => p._id);\n          }\n          delete s.property;\n          this.seller = s;\n          this.seller.property = arr;\n        });\n        this.isNew = false;\n      } else if (this.user.type === 'seller') {\n        this.sellerService.getSellerById(this.user.id).subscribe(s => {\n          Object.keys(s).forEach(key => {\n            if (s[key] === false) {\n              s[key] = 'false';\n            } else if (s[key] === true) {\n              s[key] = 'true';\n            }\n          });\n          if (s.property && s.property.length > 0) {\n            arr = <any>s.property.map(p => p._id);\n          }\n          delete s.property;\n          this.seller = s;\n          this.seller.property = arr;\n        });\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n      }\n    });\n  }\n  getProperties() {\n    this.properties$ = this.propertyService.getAllSpecial();\n  }\n  newCustomer() {\n    this.sellerService.newSeller(this.seller).subscribe(s => {\n      const toast: NavigationExtras = {\n        queryParams: { res: 'Nuevo Propietario Agregado' },\n      };\n      // this.router.navigate(['list-seller-admin'], toast);\n      this.router\n        .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n        .then(() => this.router.navigate(['list-seller-admin'], toast));\n    });\n  }\n  editCustomer() {\n    this.sellerService.putSeller(this.seller).subscribe(() => {\n      const toast: NavigationExtras = {\n        queryParams: { res: ' Propietario Editado' },\n      };\n      if (this.user.type === 'seller') {\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-buyer-admin'], toast));\n      } else {\n        this.router\n          .navigateByUrl('/RefrshComponent', { skipLocationChange: true })\n          .then(() => this.router.navigate(['list-seller-admin'], toast));\n      }\n    });\n  }\n  // dialog\n  public async searchProp() {\n    this.isSpinner = true;\n    const prop = await this.propertyService.getAllSpecial().toPromise();\n    this.isSpinner = false;\n    console.log(prop);\n    const dialogRef = this.dialog.open(SearchSelectComponent, {\n      /*  maxWidth: '50%',\n        minWidth: '20%', */\n      data: <SearchDialog>{\n        header: 'Buscar Propiedades del Vendedor',\n        hideButtonCancel: true,\n        okButton: 'OK',\n        isMultiple: true,\n        itemsIdDisable:\n          this.seller.property !== undefined\n            ? [\n                ...this.seller.property,\n                ...prop.filter(p => p.isBuy === true).map(p => p._id),\n              ]\n            : prop.filter(p => p.isBuy === true).map(p => p._id),\n        rows: prop,\n        typeFilter: 'filter-prop',\n        columns: [\n          {\n            name: 'Nombre',\n            prop: 'name',\n            type: 'normal',\n          },\n          {\n            name: 'Fecha Alta',\n            prop: 'timestamp',\n            type: 'date',\n          },\n        ],\n      },\n    });\n    const sub = dialogRef.componentInstance.buttons.subscribe(res => {\n      console.log(res);\n      if (res.options) {\n        this.seller.property = res.arrSelect;\n        console.log(this.seller);\n      }\n    });\n  }\n  getPopMessage(event) {\n    const isDisabled = (<HTMLInputElement>document.getElementById('submitUser'))\n      .disabled;\n    if (isDisabled) {\n      this.errorToShow = 'Verificar datos ingresados';\n    } else {\n      this.errorToShow = '';\n    }\n  }\n  getMatError($event) {\n    if ($event.target.validity.valueMissing) {\n      this.errorToShowMat = 'Dato obligatorio';\n    }\n    if ($event.target.validity.patternMismatch) {\n      this.errorToShowMat = 'Solo números, letras, guiones y puntos\\n';\n    }\n    if ($event.target.validity.tooShort) {\n      this.errorToShowMat = 'Ingrese al menos 4 caracteres\\n';\n    }\n    if ($event.target.validity.tooLong) {\n      this.errorToShowMat = 'Máximo 255 caracteres\\n';\n    }\n    if ($event.target.validity.rangeUnderflow) {\n      this.errorToShowMat = 'Debe ser mayor a 0\\n';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MdcButtonModule,\n  MdcIconModule,\n  MdcRippleModule,\n  MdcTextFieldModule,\n  MdcThemeModule,\n  MdcTypographyModule,\n  MdcTabBarModule,\n} from '@angular-mdc/web';\n\n@NgModule({\n  exports: [\n    MdcButtonModule,\n    MdcIconModule,\n    MdcRippleModule,\n    MdcTextFieldModule,\n    MdcThemeModule,\n    MdcTypographyModule,\n    MdcTabBarModule,\n  ],\n})\nexport class AppMaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IAdministrator, IEvents } from '../models/administrator.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdministratorService {\n  constructor(private http: HttpClient) {}\n  public getAdminById(id: string): Observable<IAdministrator> {\n    return this.http\n      .get(END_POINT.ADMINISTRATOR + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAdminEvents(\n    pageNumber: number,\n    nPerPage = 15,\n  ): Observable<IEvents[]> {\n    const body = { pageNumber, nPerPage };\n    return this.http\n      .post(END_POINT.ADMINISTRATOR_EVENTS, body)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IAdviser } from '../models/adviser.model';\nimport { HttpClient } from '@angular/common/http';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdviserService {\n  constructor(private http: HttpClient) {}\n  public getAdviserAll(): Observable<IAdviser[]> {\n    return this.http.get(END_POINT.ADVISER).pipe(map((data: any) => data.data));\n  }\n  public newAdviser(adviser: IAdviser): Observable<IAdviser> {\n    return this.http\n      .post(END_POINT.ADVISER, adviser)\n      .pipe(map((data: any) => data.data));\n  }\n  public putAdviser(adviser: IAdviser): Observable<boolean> {\n    return this.http\n      .put(END_POINT.ADVISER + adviser._id, adviser)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAdviserById(id: string): Observable<IAdviser> {\n    return this.http\n      .get(END_POINT.ADVISER_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deletedAdviserById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.ADVISER + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { UserSessionService } from './user-session.service';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private userSession: UserSessionService,\n    private alertCtrl: AlertController,\n  ) {}\n  /**\n   *\n   * @param route contiene la ruta futura que se activará\n   * @param state el stado futuro\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean {\n    const url: string = state.url;\n    const rol: string[] = route.data['rol'];\n    return this.checkLogin(rol);\n  }\n  /**\n   *\n   * @param rol rol viene el user\n   */\n  checkLogin(rol: string[]): boolean {\n    const currentUser = this.userSession.userSession.value;\n    if (currentUser && currentUser.id) {\n      const isRolFind = rol.some(r => r === currentUser.type);\n      if (isRolFind) {\n        return true;\n      } else {\n        this.presentAlert();\n        this.userSession.loggout();\n        return false;\n      }\n    } else {\n      this.presentAlert();\n      this.userSession.loggout();\n      return false;\n    }\n  }\n  async presentAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Error',\n      subHeader: 'Acceso Denegado',\n      message: 'No cuentas con los permisos necesarios.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IBuild } from '../models/build.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BuildService {\n  constructor(private http: HttpClient) {}\n  public newBuild(build: IBuild): Observable<IBuild> {\n    return this.http\n      .post(END_POINT.BUILD, build)\n      .pipe(map((data: any) => data.data));\n  }\n  public putBuild(build: IBuild): Observable<boolean> {\n    return this.http\n      .put(END_POINT.BUILD + build._id, build)\n      .pipe(map((data: any) => data.data));\n  }\n  public getBuildAll(): Observable<IBuild[]> {\n    return this.http.get(END_POINT.BUILD).pipe(map((data: any) => data.data));\n  }\n  public getBuildById(id: string): Observable<IBuild> {\n    return this.http\n      .get(END_POINT.BUILD_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deltedBuildById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.BUILD + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public updateBuildPhase(timeLine, id): Observable<IBuild> {\n    return this.http\n      .put(END_POINT.BUILD_UPDATE_PHASE + id, timeLine)\n      .pipe(map((data: any) => data.data));\n  }\n  public uploadImg(formData: FormData): Observable<string[]> {\n    return this.http\n      .post(END_POINT.BUILD_UPLOAD_IMG, formData)\n      .pipe(map((data: any) => data.data));\n  }\n  /**\n   *\n   * @param imgName ej: imagen.PNG\n   */\n  public deletedImg(imgName: string): Observable<boolean> {\n    return this.http\n      .get(END_POINT.BUILD_DELETE_IMG + imgName)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IBuyer } from '../models/buyer.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BuyerService {\n  constructor(private http: HttpClient) {}\n  public getBuyerById(id: string): Observable<IBuyer> {\n    return this.http\n      .get(END_POINT.BUYER_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getBuyerAll(): Observable<IBuyer[]> {\n    return this.http.get(END_POINT.BUYER).pipe(map((data: any) => data.data));\n  }\n\n  public putBuyer(buyer: IBuyer): Observable<boolean> {\n    return this.http\n      .put(END_POINT.BUYER + buyer._id, buyer)\n      .pipe(map((data: any) => data.data));\n  }\n  public checkBuyer(buyer: IBuyer): Observable<IBuyer> {\n    return this.http\n      .post(END_POINT.BUYER_CHECK, buyer)\n      .pipe(map((data: any) => data.data));\n  }\n  public newBuyer(buyer: IBuyer): Observable<IBuyer> {\n    return this.http\n      .post(END_POINT.BUYER, buyer)\n      .pipe(map((data: any) => data.data));\n  }\n  public deletedBuyer(buyer: IBuyer): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.BUYER + buyer._id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ICredit } from '../models/credit.model';\nimport { HttpClient } from '@angular/common/http';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreditService {\n  constructor(private http: HttpClient) {}\n  public newCredit(credit: ICredit): Observable<ICredit> {\n    return this.http\n      .post(END_POINT.CREDIT, credit)\n      .pipe(map((data: any) => data.data));\n  }\n  public putCredit(credit: ICredit): Observable<boolean> {\n    return this.http\n      .put(END_POINT.CREDIT + credit._id, credit)\n      .pipe(map((data: any) => data.data));\n  }\n  public getCredit(): Observable<ICredit[]> {\n    return this.http.get(END_POINT.CREDIT).pipe(map((data: any) => data.data));\n  }\n  public getCreditById(id: string): Observable<ICredit> {\n    return this.http\n      .get(END_POINT.CREDIT_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deleteCredit(id: string): Observable<ICredit> {\n    return this.http\n      .delete(END_POINT.CREDIT + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IGoal } from '../models/goal.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoalService {\n  constructor(private http: HttpClient) {}\n  public newGoal(goal: IGoal): Observable<IGoal> {\n    return this.http\n      .post(END_POINT.GOAL, goal)\n      .pipe(map((data: any) => data.data));\n  }\n  public getGoal(): Observable<IGoal[]> {\n    return this.http.get(END_POINT.GOAL).pipe(map((data: any) => data.data));\n  }\n  public getGoaltById(id: string): Observable<IGoal> {\n    return this.http\n      .get(END_POINT.GOAL_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public putGoal(goal: IGoal): Observable<boolean> {\n    return this.http\n      .put(END_POINT.GOAL + goal._id, goal)\n      .pipe(map((data: any) => data.data));\n  }\n\n  public deleteGoal(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.GOAL + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n  constructor(private http: HttpClient) {}\n  public addEmail(email: string): Observable<boolean> {\n    return this.http\n      .post(END_POINT.EMAIL_ADD, { email })\n      .pipe(map((data: any) => data.data));\n  }\n  public findEmail(email: string, token: string): Observable<boolean> {\n    return this.http\n      .post(END_POINT.EMAIL_FIND, { email, token })\n      .pipe(map((data: any) => data.data));\n  }\n  /**\n   * enviar archivos\n   */\n  public sendFiles(formData: FormData): Observable<boolean> {\n    return this.http\n      .post(END_POINT.EMAIL_FILES, formData)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IMaker } from '../models/maker.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MakerService {\n  constructor(private http: HttpClient) {}\n  public newMaker(maker: IMaker): Observable<IMaker> {\n    return this.http\n      .post(END_POINT.MAKER, maker)\n      .pipe(map((data: any) => data.data));\n  }\n  public putMaker(maker: IMaker): Observable<boolean> {\n    return this.http\n      .put(END_POINT.MAKER + maker._id, maker)\n      .pipe(map((data: any) => data.data));\n  }\n  public getMakerAll(): Observable<IMaker[]> {\n    return this.http.get(END_POINT.MAKER).pipe(map((data: any) => data.data));\n  }\n  public getMakerById(id: string): Observable<IMaker> {\n    return this.http\n      .get(END_POINT.MAKER_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deltedMakerById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.MAKER + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IManager } from '../models/manager.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagersService {\n  constructor(private http: HttpClient) {}\n\n  public newManager(manager: IManager): Observable<IManager> {\n    return this.http\n      .post(END_POINT.MANAGER, manager)\n      .pipe(map((data: any) => data.data));\n  }\n  public putManager(manager: IManager): Observable<IManager> {\n    return this.http\n      .put(END_POINT.MANAGER + manager._id, manager)\n      .pipe(map((data: any) => data.data));\n  }\n  public getManagerAll(): Observable<IManager[]> {\n    return this.http.get(END_POINT.MANAGER).pipe(map((data: any) => data.data));\n  }\n  public getManagerById(id: string): Observable<IManager> {\n    return this.http\n      .get(END_POINT.MANAGER_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deleteManagerById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.MANAGER + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IOfert } from '../models/ofert.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfertService {\n  constructor(private http: HttpClient) {}\n  public newOfert(ofert: IOfert): Observable<IOfert> {\n    return this.http\n      .post(END_POINT.OFERT, ofert)\n      .pipe(map((data: any) => data.data));\n  }\n  public putOfert(ofert: IOfert): Observable<boolean> {\n    return this.http\n      .put(END_POINT.OFERT + ofert._id, ofert)\n      .pipe(map((data: any) => data.data));\n  }\n  public getOfert(): Observable<IOfert[]> {\n    return this.http.get(END_POINT.OFERT).pipe(map((data: any) => data.data));\n  }\n  public getOfertById(id: string): Observable<IOfert> {\n    return this.http\n      .get(END_POINT.OFERT_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deleteOfertById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.OFERT + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IOffice } from '../models/office.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfficeService {\n  constructor(private http: HttpClient) {}\n\n  public newOffice(office: IOffice): Observable<IOffice> {\n    return this.http\n      .post(END_POINT.OFFICE, office)\n      .pipe(map((data: any) => data.data));\n  }\n  public putOffice(office: IOffice): Observable<boolean> {\n    return this.http\n      .put(END_POINT.OFFICE + office._id, office)\n      .pipe(map((data: any) => data.data));\n  }\n  public getOffice(): Observable<IOffice[]> {\n    return this.http.get(END_POINT.OFFICE).pipe(map((data: any) => data.data));\n  }\n  public getOfficeById(id: string): Observable<IOffice> {\n    return this.http\n      .get(END_POINT.OFFICE_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deleteOfficeById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.OFFICE + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport { END_POINT } from '../_config/api.end-points';\nimport { INotification } from '../models/notification.model';\nimport { CONST_GENERAL } from '../_config/_const-general';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnesignalService {\n  constructor(private http: HttpClient) {}\n  public search(\n    id?: string,\n    tags?: string,\n    pageNumber = 1,\n    nPerPage = 10,\n  ): Observable<INotification[]> {\n    const body = {\n      id,\n      pageNumber,\n      nPerPage,\n      tags,\n    };\n    return this.http\n      .post(END_POINT.NOTIFICATION_SEARCH, body)\n      .pipe(map((data: any) => data.data));\n  }\n  public notRead(id: string, tags: string): Observable<INotification[]> {\n    const body = {\n      id,\n      tags,\n    };\n    return this.http\n      .post(END_POINT.NOTIFICATION_NOT_READ, body)\n      .pipe(map((data: any) => data.data));\n  }\n  public newNotification(\n    notification: INotification,\n  ): Observable<INotification> {\n    return this.http\n      .post(END_POINT.NOTIFICATION, notification)\n      .pipe(map((data: any) => data.data));\n  }\n  public putNotification(notification: INotification): Observable<boolean> {\n    return this.http\n      .put(END_POINT.NOTIFICATION + notification._id, notification)\n      .pipe(map((data: any) => data.data));\n  }\n  /**\n   *\n   * @param headings Titulo de la notificacion\n   * @param contents contenido\n   * @param tags typo se usuario  | 'administrator' | 'buyer' | 'seller' | 'adviser' | 'management' | 'maker' | 'office'\n   * @param usersId [ids]\n   */\n  public postOneSignalByTag(\n    headings: string,\n    contents: string,\n    tags?: string[],\n    usersId?: string[],\n  ): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Basic ${CONST_GENERAL.REST_API_KEY}`,\n      'Content-Type': 'application/json; charset=utf-8',\n    });\n    const filters = this.filterByTags(tags, usersId);\n    const body = {\n      app_id: CONST_GENERAL.ONESIGNAL_APP_ID,\n      headings: { en: headings },\n      contents: { en: contents },\n      filters: filters,\n    };\n    console.log(body);\n    return this.http.post(END_POINT.ONESIGNAL, body, { headers: headers });\n  }\n  /**\n   * Notif. con fecha\n   * @param headings titulo\n   * @param contents contenido\n   * @param date fecha a mandar\n   * @param tags grupos\n   * @param usersId usuarios id\n   * @param prevTimeSet minutos antes de evento\n   */\n  public postOneSignalBySchedule(\n    headings: string,\n    contents: string,\n    date: Date,\n    tags?: string[],\n    usersId?: string[],\n    prevTimeSet = 30,\n  ): Observable<any> {\n    const prevTime = prevTimeSet * 60000;\n    const schedule = new Date(date).getTime() - prevTime;\n    const headers = new HttpHeaders({\n      Authorization: `Basic ${CONST_GENERAL.REST_API_KEY}`,\n      'Content-Type': 'application/json; charset=utf-8',\n    });\n    const filters = this.filterByTags(tags, usersId);\n    const body = {\n      app_id: CONST_GENERAL.ONESIGNAL_APP_ID,\n      headings: { en: headings },\n      contents: { en: contents },\n      filters: filters,\n      send_after: new Date(schedule).toString(),\n    };\n    console.log(body);\n    return this.http.post(END_POINT.ONESIGNAL, body, { headers: headers });\n  }\n  public deleteOneSignalSchedule(notificationId) {\n    const headers = new HttpHeaders({\n      Authorization: `Basic ${CONST_GENERAL.REST_API_KEY}`,\n      'Content-Type': 'application/json; charset=utf-8',\n    });\n    return this.http.delete(\n      `${END_POINT.ONESIGNAL}/${notificationId}?app_id=${\n        CONST_GENERAL.ONESIGNAL_APP_ID\n      }`,\n      { headers: headers },\n    );\n  }\n  public getAllNotificationOneSignal(): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Basic ${CONST_GENERAL.REST_API_KEY}`,\n      'Content-Type': 'application/json; charset=utf-8',\n    });\n    return this.http.get(\n      `https://onesignal.com/api/v1/notifications?app_id=${\n        CONST_GENERAL.ONESIGNAL_APP_ID\n      }`,\n      { headers: headers },\n    );\n  }\n  // helpers\n  private filterByTags(tags: string[], usersId: string[]) {\n    let filters = [];\n    if (tags && (usersId === undefined || usersId === null)) {\n      filters = this.getFiltersTags(tags);\n    }\n    if (usersId && (tags === undefined || tags === null)) {\n      filters = this.getFiltersIds(usersId);\n    }\n    if (\n      usersId !== undefined &&\n      usersId !== null &&\n      (tags !== undefined && tags !== null)\n    ) {\n      filters = this.getFiltersTags(tags);\n      filters.push({\n        operator: 'OR',\n      });\n      filters = filters.concat(this.getFiltersIds(usersId));\n    }\n\n    return filters;\n  }\n\n  private getFiltersTags(tags: string[]) {\n    const filters = [];\n    tags.forEach((tag, i) => {\n      if (i === 0) {\n        filters.push({\n          field: 'tag',\n          key: 'type',\n          relation: '=',\n          value: tag,\n        });\n      } else {\n        filters.push(\n          {\n            operator: 'OR',\n          },\n          {\n            field: 'tag',\n            key: 'type',\n            relation: '=',\n            value: tag,\n          },\n        );\n      }\n    });\n    return filters;\n  }\n  private getFiltersIds(usersId: string[]) {\n    const ids = [];\n    usersId.forEach((userId, i) => {\n      if (i === 0) {\n        ids.push({\n          field: 'tag',\n          key: '_id',\n          relation: '=',\n          value: userId,\n        });\n      } else {\n        ids.push(\n          {\n            operator: 'OR',\n          },\n          {\n            field: 'tag',\n            key: '_id',\n            relation: '=',\n            value: userId,\n          },\n        );\n      }\n    });\n    return ids;\n  }\n  /* public getPropertyById(id: string): Observable<IProperty> {\n    return this.http\n      .get(END_POINT.PROPERTY_BY_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAll(): Observable<IProperty[]> {\n    return this.http\n      .get(END_POINT.PROPERTY)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAllSpecial(): Observable<IProperty[]> {\n    return this.http\n      .get(END_POINT.PROPERTY_ALL)\n      .pipe(map((data: any) => data.data));\n  }\n  public deletedById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.PROPERTY + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public newProperty(property: IProperty): Observable<IProperty> {\n    return this.http\n      .post(END_POINT.PROPERTY, property)\n      .pipe(map((data: any) => data.data));\n  }\n  public putProperty(property: IProperty): Observable<boolean> {\n    return this.http\n      .put(END_POINT.PROPERTY + property._id, property)\n      .pipe(map((data: any) => data.data));\n  }\n  public getPropertySimulate(\n    property: IProperty,\n    percentage: number,\n  ): Observable<IProperty[]> {\n    const body: any = property;\n    body.percentage = percentage;\n    return this.http\n      .post(END_POINT.PROPERTY_SIMULATE, body)\n      .pipe(map((data: any) => data.data));\n  } */\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/internal/operators/map';\nimport { END_POINT } from '../_config/api.end-points';\nimport { IPreBuild } from '../models/preBuild';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreBuildService {\n  constructor(private http: HttpClient) {}\n  public newBuild(build: IPreBuild): Observable<IPreBuild> {\n    return this.http\n      .post(END_POINT.PRE_BUILD, build)\n      .pipe(map((data: any) => data.data));\n  }\n  public putBuild(build: IPreBuild): Observable<boolean> {\n    return this.http\n      .put(END_POINT.PRE_BUILD + build._id, build)\n      .pipe(map((data: any) => data.data));\n  }\n  public getBuildById(id: string): Observable<IPreBuild> {\n    return this.http\n      .get(END_POINT.PRE_BUILD + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deltedBuildById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.PRE_BUILD + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAll(): Observable<IPreBuild[]> {\n    return this.http\n      .get(END_POINT.PRE_BUILD)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/internal/operators/map';\nimport { IPreBuyer } from '../models/preBuyer';\nimport { END_POINT } from '../_config/api.end-points';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreBuyerService {\n  constructor(private http: HttpClient) {}\n  public newBuyer(buyer: IPreBuyer): Observable<IPreBuyer> {\n    return this.http\n      .post(END_POINT.PRE_BUYER, buyer)\n      .pipe(map((data: any) => data.data));\n  }\n  public putBuyer(buyer: IPreBuyer): Observable<boolean> {\n    return this.http\n      .put(END_POINT.PRE_BUYER + buyer._id, buyer)\n      .pipe(map((data: any) => data.data));\n  }\n  public getBuyerById(id: string): Observable<IPreBuyer> {\n    return this.http\n      .get(END_POINT.PRE_BUYER + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAll(): Observable<IPreBuyer[]> {\n    return this.http\n      .get(END_POINT.PRE_BUYER)\n      .pipe(map((data: any) => data.data));\n  }\n  public deltedBuyerById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.PRE_BUYER + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IProperty } from '../models/property.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PropertyService {\n  constructor(private http: HttpClient) {}\n  public matchSearch(buyerId: string, percentage = 10): Observable<boolean> {\n    const body = { percentage: percentage };\n    return this.http\n      .post(END_POINT.PROPERTY_MATCH_SEARCH + buyerId, body)\n      .pipe(map((data: any) => data.data));\n  }\n  public getPropertyById(id: string): Observable<IProperty> {\n    return this.http\n      .get(END_POINT.PROPERTY_BY_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAll(): Observable<IProperty[]> {\n    return this.http\n      .get(END_POINT.PROPERTY)\n      .pipe(map((data: any) => data.data));\n  }\n  public getAllSpecial(): Observable<IProperty[]> {\n    return this.http\n      .get(END_POINT.PROPERTY_ALL)\n      .pipe(map((data: any) => data.data));\n  }\n  public deletedById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.PROPERTY + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public newProperty(property: IProperty): Observable<IProperty> {\n    return this.http\n      .post(END_POINT.PROPERTY, property)\n      .pipe(map((data: any) => data.data));\n  }\n  public putProperty(property: IProperty): Observable<boolean> {\n    return this.http\n      .put(END_POINT.PROPERTY + property._id, property)\n      .pipe(map((data: any) => data.data));\n  }\n  public getPropertySimulate(\n    property: IProperty,\n    percentage: number,\n  ): Observable<IProperty[]> {\n    const body: any = property;\n    body.percentage = percentage;\n    return this.http\n      .post(END_POINT.PROPERTY_SIMULATE, body)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ISale } from '../models/sale.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SaleService {\n  constructor(private http: HttpClient) {}\n  public newSale(sale: ISale): Observable<ISale> {\n    return this.http\n      .post(END_POINT.SALE, sale)\n      .pipe(map((data: any) => data.data));\n  }\n  public putSale(sale: ISale): Observable<boolean> {\n    return this.http\n      .put(END_POINT.SALE + sale._id, sale)\n      .pipe(map((data: any) => data.data));\n  }\n  public getSale(): Observable<ISale[]> {\n    return this.http.get(END_POINT.SALE).pipe(map((data: any) => data.data));\n  }\n  public getSaleById(id: string): Observable<ISale> {\n    return this.http\n      .get(END_POINT.SALE_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deltedSaleById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.SALE + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public getSaleByIdAdv(adviserId: string): Observable<ISale[]> {\n    return this.http\n      .post(END_POINT.SALE_ADV_ID, { adviser: adviserId })\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  ISchedule,\n  IScheduleGet,\n  CheckSchedule,\n} from '../models/schedule.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScheduleService {\n  constructor(private http: HttpClient) {}\n  public newSchedule(schedule: ISchedule): Observable<ISchedule> {\n    return this.http\n      .post(END_POINT.SCHEDULE, schedule)\n      .pipe(map((data: any) => data.data));\n  }\n  public putSchedule(schedule: ISchedule): Observable<ISchedule> {\n    return this.http\n      .put(END_POINT.SCHEDULE + schedule._id, schedule)\n      .pipe(map((data: any) => data.data));\n  }\n  public getSchedule(): Observable<ISchedule[]> {\n    return this.http\n      .get(END_POINT.SCHEDULE)\n      .pipe(map((data: any) => data.data));\n  }\n  public getSchedulePage(\n    pageNumber: number,\n    nPerPage = 10,\n  ): Observable<ISchedule[]> {\n    return this.http\n      .post(END_POINT.SCHEDULE_PAGE, { pageNumber, nPerPage })\n      .pipe(map((data: any) => data.data));\n  }\n  public getScheduleById(id: string): Observable<ISchedule> {\n    return this.http\n      .get(END_POINT.SCHEDULE_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deltedScheduleById(id: string): Observable<ISchedule> {\n    return this.http\n      .delete(END_POINT.SCHEDULE + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public checkSchedule(schedule: IScheduleGet): Observable<CheckSchedule> {\n    return this.http\n      .post(END_POINT.SCHEDULE_CHECK, schedule)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ISeller } from '../models/seller.model';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SellerService {\n  constructor(private http: HttpClient) {}\n  public getSellerAll(): Observable<ISeller[]> {\n    return this.http.get(END_POINT.SELLER).pipe(map((data: any) => data.data));\n  }\n  public newSeller(seller: ISeller): Observable<ISeller[]> {\n    return this.http\n      .post(END_POINT.SELLER, seller)\n      .pipe(map((data: any) => data.data));\n  }\n  public putSeller(seller: ISeller): Observable<boolean> {\n    return this.http\n      .put(END_POINT.SELLER + seller._id, seller)\n      .pipe(map((data: any) => data.data));\n  }\n  public getSellerById(id: string): Observable<ISeller> {\n    return this.http\n      .get(END_POINT.SELLER_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public deletedSellerById(id: string): Observable<boolean> {\n    return this.http\n      .delete(END_POINT.SELLER + id)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { INotification } from '../models/notification.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport * as io from 'socket.io-client';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { IMessage } from '../models/chat.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketIoService {\n  private socket: SocketIOClient.Socket; // The client instance of socket.io\n  public numOfNewNoti = new BehaviorSubject<number>(0);\n  private cont = 0;\n  constructor() {\n    // start listen\n    this.socket = io(END_POINT.IP);\n  }\n  /**\n   * evento llamado en los post notification\n   */\n  public onNewPost(): Observable<INotification> {\n    return new Observable<INotification>(observer => {\n      this.socket.on('NEW_NOTIFICATION', (newPost: INotification) =>\n        observer.next(newPost),\n      );\n    });\n  }\n  public onNewMsg(): Observable<string> {\n    return new Observable<string>(observer => {\n      this.socket.on('NEW_MESSAGE', chatid => {\n        console.log(chatid);\n        observer.next(chatid._id);\n      });\n    });\n  }\n  public addNum() {\n    this.cont++;\n    this.numOfNewNoti.next(this.cont);\n  }\n  public resetNum() {\n    this.cont = 0;\n    this.numOfNewNoti.next(0);\n  }\n  public minusOne() {\n    this.cont--;\n    this.numOfNewNoti.next(this.cont);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  IStatusBuyerProperty,\n  IStatusBuyerPropertyGet,\n} from '../models/statusBuyerProperty.model';\nimport { HttpClient } from '@angular/common/http';\nimport { END_POINT } from '../_config/api.end-points';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusBuyerPropertyService {\n  public timeToBuy: Date;\n  constructor(private http: HttpClient) {}\n  public newStatusBuyerProperty(\n    sBP: IStatusBuyerProperty,\n  ): Observable<IStatusBuyerProperty> {\n    return this.http\n      .post(END_POINT.STATUS_BP, sBP)\n      .pipe(map((data: any) => data.data));\n  }\n  public deletedStatusBuyerProperty(sBPId: string): Observable<Boolean> {\n    return this.http\n      .delete(END_POINT.STATUS_BP + sBPId)\n      .pipe(map((data: any) => data.data));\n  }\n  public upgradeStatus(sBPId: string, sBPStatus: string): Observable<Boolean> {\n    const body = { status: sBPStatus };\n    return this.http\n      .post(END_POINT.STATUS_UPGRADE + sBPId, body)\n      .pipe(map((data: any) => data.data));\n  }\n  public getStatusBuyerProperty(): Observable<IStatusBuyerProperty[]> {\n    return this.http\n      .get(END_POINT.STATUS_BP)\n      .pipe(map((data: any) => data.data));\n  }\n  public getStatusBuyerPropertyById(\n    id: string,\n  ): Observable<IStatusBuyerProperty> {\n    return this.http\n      .get(END_POINT.STATUS_ID + id)\n      .pipe(map((data: any) => data.data));\n  }\n  public searchSpecial(buyerId, propertyId): Observable<IStatusBuyerProperty> {\n    const body = { buyer: buyerId, property: propertyId };\n    return this.http\n      .post(END_POINT.STATUS_SEARCH, body)\n      .pipe(map((data: any) => data.data));\n  }\n  public findByBuyer(buyerId: string): Observable<IStatusBuyerPropertyGet[]> {\n    const body = { buyer: buyerId };\n    return this.http\n      .post(END_POINT.STATUS_FIND_BY_BUYER, body)\n      .pipe(map((data: any) => data.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { IUserSession } from '../models/userSession.model';\nimport { END_POINT } from '../_config/api.end-points';\nimport { Storage } from '@ionic/storage';\nimport { CONST_GENERAL } from '../_config/_const-general';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSessionService {\n  public userSession = new BehaviorSubject<IUserSession>({});\n  private isInitOne = false;\n  /**\n   * solo para mandar a notificaciones en android y build\n   * list-notification\n   */\n  public activateMenu = new BehaviorSubject<string>('');\n  /**\n   * test\n   */\n  public saveURI;\n  /**\n   * solo para maker\n   */\n  public buildId: string;\n  /**\n   * solo para preBuyer\n   */\n  public preBuild: string;\n  constructor(\n    private http: HttpClient,\n    private storage: Storage,\n    private platform: Platform\n  ) {}\n\n  public logginUserSession(email, password): Observable<any> {\n    const concatSession = btoa(email + ':' + password);\n    return this.http\n      .post(END_POINT.USER_SESSION, { base64: concatSession })\n      .pipe(map((data: any) => data.data));\n  }\n  public setUserSession(name, type, id, password, email: string, token): void {\n    if (type === 'management') {\n      type = 'office';\n    }\n    const currentData: IUserSession = {\n      type: type,\n      name: name,\n      id: id,\n      password: password,\n      email: email,\n      token\n    };\n    this.userSession.next({\n      name: name,\n      type: type,\n      id: id,\n      password: password,\n      email: email,\n      token\n    });\n    // localStorage.setItem('userSession', JSON.stringify(currentData));\n    this.storage.set('userSessionCurrent', currentData);\n    this.saveSession(currentData);\n    // onesignal\n    this.platform.ready().then(c => {\n      if (this.platform.is('cordova')) {\n        this.oneSignalCordova(id, type);\n      } else if (environment.production && !this.isInitOne) {\n        this.oneSignalDesktop(id, type);\n      }\n    });\n  }\n\n  public loggout(): void {\n    this.storage.remove('userSessionCurrent');\n    // this.storage.remove('userSessionSaved');\n    this.storage.remove('alert-adv');\n    // localStorage.removeItem('userSession');\n    this.userSession.next({\n      name: undefined,\n      type: undefined,\n      id: undefined,\n      password: undefined,\n      email: undefined\n    });\n    this.platform.ready().then(c => {\n      console.log(c);\n      if (this.platform.is('cordova')) {\n        this.oneSignalLogoutCordova();\n      } else if (environment.production && this.isInitOne) {\n        this.oneSignalLogoutDesktop();\n      }\n    });\n  }\n  public loggoutWithoutStore(): void {\n    this.storage.remove('alert-adv');\n    // this.storage.remove('userSessionSaved');\n    this.userSession.next({\n      name: undefined,\n      type: undefined,\n      id: undefined,\n      password: undefined,\n      email: undefined\n    });\n    // reset al cambiar user\n    this.activateMenu.next('');\n    this.platform.ready().then(c => {\n      console.log(c);\n      if (this.platform.is('cordova')) {\n        this.oneSignalLogoutCordova();\n      } else if (environment.production && this.isInitOne) {\n        this.oneSignalLogoutDesktop();\n      }\n    });\n  }\n  public async saveSession(newUser: IUserSession) {\n    const keys = await this.storage.keys();\n    const isFind = keys.find(k => k === 'userSessionSaved');\n    if (isFind) {\n      const sessions: IUserSession[] = await this.storage.get(\n        'userSessionSaved'\n      );\n      const indexFinded = sessions.findIndex(s => s.id === newUser.id);\n      if (indexFinded !== -1) {\n        sessions[indexFinded] = newUser;\n      } else {\n        sessions.push(newUser);\n      }\n      this.storage.set('userSessionSaved', sessions);\n    } else {\n      this.storage.set('userSessionSaved', [newUser]);\n    }\n  }\n  public async removeSession(session: IUserSession) {\n    const sessions: IUserSession[] = await this.storage.get('userSessionSaved');\n    const indexFinded = sessions.findIndex(s => s.id === session.id);\n    if (indexFinded !== -1) {\n      sessions.splice(indexFinded, 1);\n      this.storage.set('userSessionSaved', sessions);\n    }\n  }\n  public async getSessionsSaved(): Promise<IUserSession[]> {\n    return await this.storage.get('userSessionSaved');\n  }\n\n  // inicia antes que la app mandando un Promise en cada respuesta environment.production &&\n  checkValidSession(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // ve si hay un usuario en el localstore\n      this.storage.keys().then(keys => {\n        const keyUserSession = keys.find(key => key === 'userSessionCurrent');\n        if (keyUserSession) {\n          this.storage.get('userSessionCurrent').then((val: IUserSession) => {\n            this.logginUserSession(val.email, val.password).subscribe(data => {\n              // data  administrator buyer seller adviser management\n\n              if (data !== 'error') {\n                this.setUserSession(\n                  data.data[0].name,\n                  data.type,\n                  data.data[0]._id,\n                  data.data[0].password,\n                  data.data[0].email,\n                  data.token\n                );\n                return resolve(true);\n                // usuario o contrasena caducada\n              } else {\n                this.loggout();\n                return resolve(true);\n              }\n            });\n          });\n          // no hay nada en local, manda a login en app.component\n        } else {\n          this.loggout();\n          return resolve(true);\n        }\n      });\n    });\n  }\n  //  one signal\n  private oneSignalDesktop(id: any, type: any) {\n    const OneSignalDektop = window['OneSignal'] || [];\n    console.log('Init OneSignal');\n    OneSignalDektop.push(function() {\n      OneSignalDektop.init({\n        appId: CONST_GENERAL.ONESIGNAL_APP_ID,\n        autoRegister: true,\n        notifyButton: {\n          enable: false\n        },\n        promptOptions: {\n          actionMessage:\n            'Nos gustaría notificarle cuando se mande un nuevo programa',\n          acceptButtonText: 'Permitir',\n          cancelButtonText: 'No gracias'\n        }\n      });\n      OneSignalDektop.getUserId(function(userId) {\n        console.log('OneSignal User ID:', userId);\n      });\n      OneSignalDektop.sendTags({\n        _id: id.toString(),\n        type: type\n      });\n      OneSignalDektop.on('subscriptionChange', function(isSubscribed) {\n        console.log('The user subscription state is now:', isSubscribed);\n        OneSignalDektop.sendTags({\n          _id: id.toString(),\n          type: type\n        });\n      });\n      OneSignalDektop.addListenerForNotificationOpened(function(data) {\n        console.log('Received NotificationOpened:');\n        console.log(data);\n      });\n      OneSignalDektop.on('notificationDisplay', function(event) {\n        console.warn('OneSignal notification displayed:', event);\n        /*\n        {\n            \"id\": \"ce31de29-e1b0-4961-99ee-080644677cd7\",\n            \"heading\": \"OneSignal Test Message\",\n            \"content\": \"This is an example notification.\",\n            \"url\": \"https://onesignal.com?_osp=do_not_open\",\n            \"icon\": \"https://onesignal.com/images/notification_logo.png\"\n        }\n        */\n      });\n      OneSignalDektop.setDefaultNotificationUrl(\n        'http://app.inmobiliariacobian.com/list-notification'\n      );\n    });\n    this.isInitOne = true;\n  }\n  private oneSignalCordova(id, type) {\n    const oneSignal = window['plugins'].OneSignal;\n    oneSignal.startInit(\n      CONST_GENERAL.ONESIGNAL_APP_ID,\n      CONST_GENERAL.googleProjectNumber\n    );\n    oneSignal.handleNotificationOpened(() => {\n      this.activateMenu.next('list-notification');\n    });\n    oneSignal.inFocusDisplaying(oneSignal.OSInFocusDisplayOption.None);\n    oneSignal.sendTags({\n      _id: id.toString(),\n      type: type\n    });\n    oneSignal.endInit();\n  }\n  private oneSignalLogoutDesktop() {\n    const OneSignalD = window['OneSignal'] || [];\n    console.log('Delete OneSignal');\n    OneSignalD.push(function() {\n      OneSignalD.deleteTags(['_id', 'type']);\n    });\n    this.isInitOne = false;\n  }\n  private oneSignalLogoutCordova() {\n    window['plugins'].OneSignal.deleteTags(['_id', 'type']);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}